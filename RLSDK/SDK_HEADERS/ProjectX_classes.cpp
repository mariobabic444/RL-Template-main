/*
#############################################################################################
# Rocket League (6/5/2024) SDK
# Generated with the UE3SDKGenerator v2.2.7
# ========================================================================================= #
# File: ProjectX_classes.cpp
# ========================================================================================= #
# Credits: TheFeckless, ItsBranK
# Links: www.github.com/itsbrank/UE3SDKGenerator, www.twitter.com/itsbrank
#############################################################################################
*/
#include "../SdkHeaders.hpp"

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

/*
# ========================================================================================= #
# Functions
# ========================================================================================= #
*/

// Function ProjectX._SharedHelpers.ScoreDeltaFromDefault
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 Object                         (CPF_Parm)

int32_t U_SharedHelpers::ScoreDeltaFromDefault(class UObject* Object)
{
	static UFunction* uFnScoreDeltaFromDefault = nullptr;

	if (!uFnScoreDeltaFromDefault)
	{
		uFnScoreDeltaFromDefault = UFunction::FindFunction("Function ProjectX._SharedHelpers.ScoreDeltaFromDefault");
	}

	U_SharedHelpers_execScoreDeltaFromDefault_Params ScoreDeltaFromDefault_Params;
	memcpy_s(&ScoreDeltaFromDefault_Params.Object, 0x8, &Object, 0x8);

	uFnScoreDeltaFromDefault->FunctionFlags |= ~0x400;

	U_SharedHelpers::StaticClass()->ProcessEvent(uFnScoreDeltaFromDefault, &ScoreDeltaFromDefault_Params, nullptr);

	uFnScoreDeltaFromDefault->FunctionFlags |= 0x400;

	return ScoreDeltaFromDefault_Params.ReturnValue;
};

// Function ProjectX._SharedHelpers.DrawShadowedText
// [0x00826003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UCanvas*                 Canvas                         (CPF_Parm)
// class FString                  Text                           (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)
// int32_t                        ShadowOffsetX                  (CPF_OptionalParm | CPF_Parm)
// int32_t                        ShadowOffsetY                  (CPF_OptionalParm | CPF_Parm)
// int32_t                        ShadowAlpha                    (CPF_OptionalParm | CPF_Parm)

void U_SharedHelpers::DrawShadowedText(class UCanvas* Canvas, class FString Text, int32_t ShadowOffsetX, int32_t ShadowOffsetY, int32_t ShadowAlpha)
{
	static UFunction* uFnDrawShadowedText = nullptr;

	if (!uFnDrawShadowedText)
	{
		uFnDrawShadowedText = UFunction::FindFunction("Function ProjectX._SharedHelpers.DrawShadowedText");
	}

	U_SharedHelpers_execDrawShadowedText_Params DrawShadowedText_Params;
	memcpy_s(&DrawShadowedText_Params.Canvas, 0x8, &Canvas, 0x8);
	memcpy_s(&DrawShadowedText_Params.Text, 0x10, &Text, 0x10);
	memcpy_s(&DrawShadowedText_Params.ShadowOffsetX, 0x4, &ShadowOffsetX, 0x4);
	memcpy_s(&DrawShadowedText_Params.ShadowOffsetY, 0x4, &ShadowOffsetY, 0x4);
	memcpy_s(&DrawShadowedText_Params.ShadowAlpha, 0x4, &ShadowAlpha, 0x4);

	U_SharedHelpers::StaticClass()->ProcessEvent(uFnDrawShadowedText, &DrawShadowedText_Params, nullptr);
};

// Function ProjectX._SharedHelpers.IsInTransientPackage
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 Obj                            (CPF_Parm)

bool U_SharedHelpers::IsInTransientPackage(class UObject* Obj)
{
	static UFunction* uFnIsInTransientPackage = nullptr;

	if (!uFnIsInTransientPackage)
	{
		uFnIsInTransientPackage = UFunction::FindFunction("Function ProjectX._SharedHelpers.IsInTransientPackage");
	}

	U_SharedHelpers_execIsInTransientPackage_Params IsInTransientPackage_Params;
	memcpy_s(&IsInTransientPackage_Params.Obj, 0x8, &Obj, 0x8);

	uFnIsInTransientPackage->FunctionFlags |= ~0x400;

	U_SharedHelpers::StaticClass()->ProcessEvent(uFnIsInTransientPackage, &IsInTransientPackage_Params, nullptr);

	uFnIsInTransientPackage->FunctionFlags |= 0x400;

	return IsInTransientPackage_Params.ReturnValue;
};

// Function ProjectX._SharedHelpers.GetAPlayerController
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  PlayerControllerClass          (CPF_OptionalParm | CPF_Parm)

class APlayerController* U_SharedHelpers::GetAPlayerController(class UClass* PlayerControllerClass)
{
	static UFunction* uFnGetAPlayerController = nullptr;

	if (!uFnGetAPlayerController)
	{
		uFnGetAPlayerController = UFunction::FindFunction("Function ProjectX._SharedHelpers.GetAPlayerController");
	}

	U_SharedHelpers_execGetAPlayerController_Params GetAPlayerController_Params;
	memcpy_s(&GetAPlayerController_Params.PlayerControllerClass, 0x8, &PlayerControllerClass, 0x8);

	uFnGetAPlayerController->FunctionFlags |= ~0x400;

	U_SharedHelpers::StaticClass()->ProcessEvent(uFnGetAPlayerController, &GetAPlayerController_Params, nullptr);

	uFnGetAPlayerController->FunctionFlags |= 0x400;

	return GetAPlayerController_Params.ReturnValue;
};

// Function ProjectX._SharedHelpers.GetDefaultObject
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  ObjClass                       (CPF_Parm)

class UObject* U_SharedHelpers::GetDefaultObject(class UClass* ObjClass)
{
	static UFunction* uFnGetDefaultObject = nullptr;

	if (!uFnGetDefaultObject)
	{
		uFnGetDefaultObject = UFunction::FindFunction("Function ProjectX._SharedHelpers.GetDefaultObject");
	}

	U_SharedHelpers_execGetDefaultObject_Params GetDefaultObject_Params;
	memcpy_s(&GetDefaultObject_Params.ObjClass, 0x8, &ObjClass, 0x8);

	uFnGetDefaultObject->FunctionFlags |= ~0x400;

	U_SharedHelpers::StaticClass()->ProcessEvent(uFnGetDefaultObject, &GetDefaultObject_Params, nullptr);

	uFnGetDefaultObject->FunctionFlags |= 0x400;

	return GetDefaultObject_Params.ReturnValue;
};

// Function ProjectX._SharedHelpers.DumpUnreferencedAnims
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U_SharedHelpers::DumpUnreferencedAnims()
{
	static UFunction* uFnDumpUnreferencedAnims = nullptr;

	if (!uFnDumpUnreferencedAnims)
	{
		uFnDumpUnreferencedAnims = UFunction::FindFunction("Function ProjectX._SharedHelpers.DumpUnreferencedAnims");
	}

	U_SharedHelpers_execDumpUnreferencedAnims_Params DumpUnreferencedAnims_Params;

	uFnDumpUnreferencedAnims->FunctionFlags |= ~0x400;

	U_SharedHelpers::StaticClass()->ProcessEvent(uFnDumpUnreferencedAnims, &DumpUnreferencedAnims_Params, nullptr);

	uFnDumpUnreferencedAnims->FunctionFlags |= 0x400;
};

// Function ProjectX._SharedHelpers.GetLanguageExtension
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString U_SharedHelpers::GetLanguageExtension()
{
	static UFunction* uFnGetLanguageExtension = nullptr;

	if (!uFnGetLanguageExtension)
	{
		uFnGetLanguageExtension = UFunction::FindFunction("Function ProjectX._SharedHelpers.GetLanguageExtension");
	}

	U_SharedHelpers_execGetLanguageExtension_Params GetLanguageExtension_Params;

	uFnGetLanguageExtension->FunctionFlags |= ~0x400;

	U_SharedHelpers::StaticClass()->ProcessEvent(uFnGetLanguageExtension, &GetLanguageExtension_Params, nullptr);

	uFnGetLanguageExtension->FunctionFlags |= 0x400;

	return GetLanguageExtension_Params.ReturnValue;
};

// Function ProjectX._Types_X.RenderProfileRecordSample
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FRenderProfile          Profile                        (CPF_Parm | CPF_OutParm)

void U_Types_X::RenderProfileRecordSample(struct FRenderProfile& Profile)
{
	static UFunction* uFnRenderProfileRecordSample = nullptr;

	if (!uFnRenderProfileRecordSample)
	{
		uFnRenderProfileRecordSample = UFunction::FindFunction("Function ProjectX._Types_X.RenderProfileRecordSample");
	}

	U_Types_X_execRenderProfileRecordSample_Params RenderProfileRecordSample_Params;
	memcpy_s(&RenderProfileRecordSample_Params.Profile, 0x28, &Profile, 0x28);

	uFnRenderProfileRecordSample->FunctionFlags |= ~0x400;

	U_Types_X::StaticClass()->ProcessEvent(uFnRenderProfileRecordSample, &RenderProfileRecordSample_Params, nullptr);

	uFnRenderProfileRecordSample->FunctionFlags |= 0x400;

	memcpy_s(&Profile, 0x28, &RenderProfileRecordSample_Params.Profile, 0x28);
};

// Function ProjectX._Types_X.JoinCredentialsFromString
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Credentials                    (CPF_Parm | CPF_NeedCtorLink)
// class FString                  JoinName                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class FString                  JoinPassword                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void U_Types_X::JoinCredentialsFromString(class FString Credentials, class FString& JoinName, class FString& JoinPassword)
{
	static UFunction* uFnJoinCredentialsFromString = nullptr;

	if (!uFnJoinCredentialsFromString)
	{
		uFnJoinCredentialsFromString = UFunction::FindFunction("Function ProjectX._Types_X.JoinCredentialsFromString");
	}

	U_Types_X_execJoinCredentialsFromString_Params JoinCredentialsFromString_Params;
	memcpy_s(&JoinCredentialsFromString_Params.Credentials, 0x10, &Credentials, 0x10);
	memcpy_s(&JoinCredentialsFromString_Params.JoinName, 0x10, &JoinName, 0x10);
	memcpy_s(&JoinCredentialsFromString_Params.JoinPassword, 0x10, &JoinPassword, 0x10);

	U_Types_X::StaticClass()->ProcessEvent(uFnJoinCredentialsFromString, &JoinCredentialsFromString_Params, nullptr);

	memcpy_s(&JoinName, 0x10, &JoinCredentialsFromString_Params.JoinName, 0x10);
	memcpy_s(&JoinPassword, 0x10, &JoinCredentialsFromString_Params.JoinPassword, 0x10);
};

// Function ProjectX._Types_X.JoinCredentialsToString
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  JoinName                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  JoinPassword                   (CPF_Parm | CPF_NeedCtorLink)

class FString U_Types_X::JoinCredentialsToString(class FString JoinName, class FString JoinPassword)
{
	static UFunction* uFnJoinCredentialsToString = nullptr;

	if (!uFnJoinCredentialsToString)
	{
		uFnJoinCredentialsToString = UFunction::FindFunction("Function ProjectX._Types_X.JoinCredentialsToString");
	}

	U_Types_X_execJoinCredentialsToString_Params JoinCredentialsToString_Params;
	memcpy_s(&JoinCredentialsToString_Params.JoinName, 0x10, &JoinName, 0x10);
	memcpy_s(&JoinCredentialsToString_Params.JoinPassword, 0x10, &JoinPassword, 0x10);

	U_Types_X::StaticClass()->ProcessEvent(uFnJoinCredentialsToString, &JoinCredentialsToString_Params, nullptr);

	return JoinCredentialsToString_Params.ReturnValue;
};

// Function ProjectX._Types_X.GenerateRandomPrivateMatchPassword
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString U_Types_X::GenerateRandomPrivateMatchPassword()
{
	static UFunction* uFnGenerateRandomPrivateMatchPassword = nullptr;

	if (!uFnGenerateRandomPrivateMatchPassword)
	{
		uFnGenerateRandomPrivateMatchPassword = UFunction::FindFunction("Function ProjectX._Types_X.GenerateRandomPrivateMatchPassword");
	}

	U_Types_X_execGenerateRandomPrivateMatchPassword_Params GenerateRandomPrivateMatchPassword_Params;

	U_Types_X::StaticClass()->ProcessEvent(uFnGenerateRandomPrivateMatchPassword, &GenerateRandomPrivateMatchPassword_Params, nullptr);

	return GenerateRandomPrivateMatchPassword_Params.ReturnValue;
};

// Function ProjectX._Types_X.GenerateRandomPrivateMatchName
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString U_Types_X::GenerateRandomPrivateMatchName()
{
	static UFunction* uFnGenerateRandomPrivateMatchName = nullptr;

	if (!uFnGenerateRandomPrivateMatchName)
	{
		uFnGenerateRandomPrivateMatchName = UFunction::FindFunction("Function ProjectX._Types_X.GenerateRandomPrivateMatchName");
	}

	U_Types_X_execGenerateRandomPrivateMatchName_Params GenerateRandomPrivateMatchName_Params;

	U_Types_X::StaticClass()->ProcessEvent(uFnGenerateRandomPrivateMatchName, &GenerateRandomPrivateMatchName_Params, nullptr);

	return GenerateRandomPrivateMatchName_Params.ReturnValue;
};

// Function ProjectX._Types_X.GenerateRandomName
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// int32_t                        Length                         (CPF_Parm)

class FString U_Types_X::GenerateRandomName(int32_t Length)
{
	static UFunction* uFnGenerateRandomName = nullptr;

	if (!uFnGenerateRandomName)
	{
		uFnGenerateRandomName = UFunction::FindFunction("Function ProjectX._Types_X.GenerateRandomName");
	}

	U_Types_X_execGenerateRandomName_Params GenerateRandomName_Params;
	memcpy_s(&GenerateRandomName_Params.Length, 0x4, &Length, 0x4);

	U_Types_X::StaticClass()->ProcessEvent(uFnGenerateRandomName, &GenerateRandomName_Params, nullptr);

	return GenerateRandomName_Params.ReturnValue;
};

// Function ProjectX._Types_X.OnTimer
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void U_Types_X::OnTimer()
{
	static UFunction* uFnOnTimer = nullptr;

	if (!uFnOnTimer)
	{
		uFnOnTimer = UFunction::FindFunction("Function ProjectX._Types_X.OnTimer");
	}

	U_Types_X_execOnTimer_Params OnTimer_Params;

	this->ProcessEvent(uFnOnTimer, &OnTimer_Params, nullptr);
};

// Function ProjectX._Types_X.GetServerReservationData
// [0x00C22003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FCheckReservationResponse Response                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FServerReservationData U_Types_X::GetServerReservationData(struct FCheckReservationResponse& Response)
{
	static UFunction* uFnGetServerReservationData = nullptr;

	if (!uFnGetServerReservationData)
	{
		uFnGetServerReservationData = UFunction::FindFunction("Function ProjectX._Types_X.GetServerReservationData");
	}

	U_Types_X_execGetServerReservationData_Params GetServerReservationData_Params;
	memcpy_s(&GetServerReservationData_Params.Response, 0x80, &Response, 0x80);

	U_Types_X::StaticClass()->ProcessEvent(uFnGetServerReservationData, &GetServerReservationData_Params, nullptr);

	memcpy_s(&Response, 0x80, &GetServerReservationData_Params.Response, 0x80);

	return GetServerReservationData_Params.ReturnValue;
};

// Function ProjectX._Types_X.ServiceExecutionDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  Service                        (CPF_Parm)

void U_Types_X::ServiceExecutionDelegate(class UPsyNetClientService_X* Service)
{
	static UFunction* uFnServiceExecutionDelegate = nullptr;

	if (!uFnServiceExecutionDelegate)
	{
		uFnServiceExecutionDelegate = UFunction::FindFunction("Function ProjectX._Types_X.ServiceExecutionDelegate");
	}

	U_Types_X_execServiceExecutionDelegate_Params ServiceExecutionDelegate_Params;
	memcpy_s(&ServiceExecutionDelegate_Params.Service, 0x8, &Service, 0x8);

	this->ProcessEvent(uFnServiceExecutionDelegate, &ServiceExecutionDelegate_Params, nullptr);
};

// Function ProjectX._Types_X.OnPriviledgeChecked
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       PrivilegeCheck                 (CPF_Parm)

void U_Types_X::OnPriviledgeChecked(class UPrivilegeCheck_X* PrivilegeCheck)
{
	static UFunction* uFnOnPriviledgeChecked = nullptr;

	if (!uFnOnPriviledgeChecked)
	{
		uFnOnPriviledgeChecked = UFunction::FindFunction("Function ProjectX._Types_X.OnPriviledgeChecked");
	}

	U_Types_X_execOnPriviledgeChecked_Params OnPriviledgeChecked_Params;
	memcpy_s(&OnPriviledgeChecked_Params.PrivilegeCheck, 0x8, &PrivilegeCheck, 0x8);

	this->ProcessEvent(uFnOnPriviledgeChecked, &OnPriviledgeChecked_Params, nullptr);
};

// Function ProjectX.ActorComponent_X.Reattach
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UActorComponent_X::Reattach()
{
	static UFunction* uFnReattach = nullptr;

	if (!uFnReattach)
	{
		uFnReattach = UFunction::FindFunction("Function ProjectX.ActorComponent_X.Reattach");
	}

	UActorComponent_X_execReattach_Params Reattach_Params;

	uFnReattach->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnReattach, &Reattach_Params, nullptr);

	uFnReattach->FunctionFlags |= 0x400;
};

// Function ProjectX.ActorComponent_X.Tick
// [0x00080800] (FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UActorComponent_X::eventTick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.ActorComponent_X.Tick");
	}

	UActorComponent_X_eventTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.ActorComponent_X.Detached
// [0x00080800] (FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UActorComponent_X::eventDetached()
{
	static UFunction* uFnDetached = nullptr;

	if (!uFnDetached)
	{
		uFnDetached = UFunction::FindFunction("Function ProjectX.ActorComponent_X.Detached");
	}

	UActorComponent_X_eventDetached_Params Detached_Params;

	this->ProcessEvent(uFnDetached, &Detached_Params, nullptr);
};

// Function ProjectX.ActorComponent_X.Attached
// [0x00080800] (FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UActorComponent_X::eventAttached()
{
	static UFunction* uFnAttached = nullptr;

	if (!uFnAttached)
	{
		uFnAttached = UFunction::FindFunction("Function ProjectX.ActorComponent_X.Attached");
	}

	UActorComponent_X_eventAttached_Params Attached_Params;

	this->ProcessEvent(uFnAttached, &Attached_Params, nullptr);
};

// Function ProjectX.ActorComponent_X.BeginPlay
// [0x00080800] (FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UActorComponent_X::eventBeginPlay()
{
	static UFunction* uFnBeginPlay = nullptr;

	if (!uFnBeginPlay)
	{
		uFnBeginPlay = UFunction::FindFunction("Function ProjectX.ActorComponent_X.BeginPlay");
	}

	UActorComponent_X_eventBeginPlay_Params BeginPlay_Params;

	this->ProcessEvent(uFnBeginPlay, &BeginPlay_Params, nullptr);
};

// Function ProjectX.ExplosionComponent_X.ProcessHit
// [0x00824802] (FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class AActor*                  Victim                         (CPF_Parm)
// struct FVector                 HitLocation                    (CPF_Parm)
// struct FTraceHitInfo           ExtraHitInfo                   (CPF_Parm)
// float                          DamageScale                    (CPF_OptionalParm | CPF_Parm)

void UExplosionComponent_X::eventProcessHit(class AActor* Victim, struct FVector HitLocation, struct FTraceHitInfo ExtraHitInfo, float DamageScale)
{
	static UFunction* uFnProcessHit = nullptr;

	if (!uFnProcessHit)
	{
		uFnProcessHit = UFunction::FindFunction("Function ProjectX.ExplosionComponent_X.ProcessHit");
	}

	UExplosionComponent_X_eventProcessHit_Params ProcessHit_Params;
	memcpy_s(&ProcessHit_Params.Victim, 0x8, &Victim, 0x8);
	memcpy_s(&ProcessHit_Params.HitLocation, 0xC, &HitLocation, 0xC);
	memcpy_s(&ProcessHit_Params.ExtraHitInfo, 0x28, &ExtraHitInfo, 0x28);
	memcpy_s(&ProcessHit_Params.DamageScale, 0x4, &DamageScale, 0x4);

	this->ProcessEvent(uFnProcessHit, &ProcessHit_Params, nullptr);
};

// Function ProjectX.ExplosionComponent_X.Detached
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UExplosionComponent_X::eventDetached()
{
	static UFunction* uFnDetached = nullptr;

	if (!uFnDetached)
	{
		uFnDetached = UFunction::FindFunction("Function ProjectX.ExplosionComponent_X.Detached");
	}

	UExplosionComponent_X_eventDetached_Params Detached_Params;

	this->ProcessEvent(uFnDetached, &Detached_Params, nullptr);
};

// Function ProjectX.ExplosionHitHandler_X.Destroy
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UExplosionHitHandler_X::Destroy()
{
	static UFunction* uFnDestroy = nullptr;

	if (!uFnDestroy)
	{
		uFnDestroy = UFunction::FindFunction("Function ProjectX.ExplosionHitHandler_X.Destroy");
	}

	UExplosionHitHandler_X_execDestroy_Params Destroy_Params;

	this->ProcessEvent(uFnDestroy, &Destroy_Params, nullptr);
};

// Function ProjectX.ExplosionHitHandler_X.Init
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UActorComponent_X*       ExplosionGoal                  (CPF_Parm | CPF_EditInline)

void UExplosionHitHandler_X::Init(class UActorComponent_X* ExplosionGoal)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.ExplosionHitHandler_X.Init");
	}

	UExplosionHitHandler_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.ExplosionGoal, 0x8, &ExplosionGoal, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.ExplosionHitHandler_X.ProcessHit
// [0x00424800] (FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class AActor*                  Victim                         (CPF_Parm)
// struct FVector                 HitLocation                    (CPF_Parm)
// float                          DamageScale                    (CPF_OptionalParm | CPF_Parm)
// struct FContactInformation     ContactInfo                    (CPF_Const | CPF_Parm | CPF_OutParm)

void UExplosionHitHandler_X::eventProcessHit(class AActor* Victim, struct FVector HitLocation, float DamageScale, struct FContactInformation& ContactInfo)
{
	static UFunction* uFnProcessHit = nullptr;

	if (!uFnProcessHit)
	{
		uFnProcessHit = UFunction::FindFunction("Function ProjectX.ExplosionHitHandler_X.ProcessHit");
	}

	UExplosionHitHandler_X_eventProcessHit_Params ProcessHit_Params;
	memcpy_s(&ProcessHit_Params.Victim, 0x8, &Victim, 0x8);
	memcpy_s(&ProcessHit_Params.HitLocation, 0xC, &HitLocation, 0xC);
	memcpy_s(&ProcessHit_Params.DamageScale, 0x4, &DamageScale, 0x4);
	memcpy_s(&ProcessHit_Params.ContactInfo, 0x1C, &ContactInfo, 0x1C);

	this->ProcessEvent(uFnProcessHit, &ProcessHit_Params, nullptr);

	memcpy_s(&ContactInfo, 0x1C, &ProcessHit_Params.ContactInfo, 0x1C);
};

// Function ProjectX.MICParamDispenserComponent_X.__MICParamDispenserComponent_X__Attached_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FFXAttachment           A                              (CPF_Parm | CPF_Component | CPF_NeedCtorLink)

bool UMICParamDispenserComponent_X::__MICParamDispenserComponent_X__Attached_0x1(struct FFXAttachment A)
{
	static UFunction* uFn__MICParamDispenserComponent_X__Attached_0x1 = nullptr;

	if (!uFn__MICParamDispenserComponent_X__Attached_0x1)
	{
		uFn__MICParamDispenserComponent_X__Attached_0x1 = UFunction::FindFunction("Function ProjectX.MICParamDispenserComponent_X.__MICParamDispenserComponent_X__Attached_0x1");
	}

	UMICParamDispenserComponent_X_exec__MICParamDispenserComponent_X__Attached_0x1_Params __MICParamDispenserComponent_X__Attached_0x1_Params;
	memcpy_s(&__MICParamDispenserComponent_X__Attached_0x1_Params.A, 0x130, &A, 0x130);

	this->ProcessEvent(uFn__MICParamDispenserComponent_X__Attached_0x1, &__MICParamDispenserComponent_X__Attached_0x1_Params, nullptr);

	return __MICParamDispenserComponent_X__Attached_0x1_Params.ReturnValue;
};

// Function ProjectX.MICParamDispenserComponent_X.Attached
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UMICParamDispenserComponent_X::eventAttached()
{
	static UFunction* uFnAttached = nullptr;

	if (!uFnAttached)
	{
		uFnAttached = UFunction::FindFunction("Function ProjectX.MICParamDispenserComponent_X.Attached");
	}

	UMICParamDispenserComponent_X_eventAttached_Params Attached_Params;

	this->ProcessEvent(uFnAttached, &Attached_Params, nullptr);
};

// Function ProjectX.MICParamDispenserComponent_X.SetActorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// class AActor*                  Value                          (CPF_Parm)

void UMICParamDispenserComponent_X::SetActorParameter(struct FName Key, class AActor* Value)
{
	static UFunction* uFnSetActorParameter = nullptr;

	if (!uFnSetActorParameter)
	{
		uFnSetActorParameter = UFunction::FindFunction("Function ProjectX.MICParamDispenserComponent_X.SetActorParameter");
	}

	UMICParamDispenserComponent_X_execSetActorParameter_Params SetActorParameter_Params;
	memcpy_s(&SetActorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetActorParameter_Params.Value, 0x8, &Value, 0x8);

	uFnSetActorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetActorParameter, &SetActorParameter_Params, nullptr);

	uFnSetActorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.MICParamDispenserComponent_X.SetLinearColorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FLinearColor            Value                          (CPF_Parm)

void UMICParamDispenserComponent_X::SetLinearColorParameter(struct FName Key, struct FLinearColor Value)
{
	static UFunction* uFnSetLinearColorParameter = nullptr;

	if (!uFnSetLinearColorParameter)
	{
		uFnSetLinearColorParameter = UFunction::FindFunction("Function ProjectX.MICParamDispenserComponent_X.SetLinearColorParameter");
	}

	UMICParamDispenserComponent_X_execSetLinearColorParameter_Params SetLinearColorParameter_Params;
	memcpy_s(&SetLinearColorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetLinearColorParameter_Params.Value, 0x10, &Value, 0x10);

	uFnSetLinearColorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetLinearColorParameter, &SetLinearColorParameter_Params, nullptr);

	uFnSetLinearColorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.MICParamDispenserComponent_X.SetVectorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FVector                 Value                          (CPF_Parm)

void UMICParamDispenserComponent_X::SetVectorParameter(struct FName Key, struct FVector Value)
{
	static UFunction* uFnSetVectorParameter = nullptr;

	if (!uFnSetVectorParameter)
	{
		uFnSetVectorParameter = UFunction::FindFunction("Function ProjectX.MICParamDispenserComponent_X.SetVectorParameter");
	}

	UMICParamDispenserComponent_X_execSetVectorParameter_Params SetVectorParameter_Params;
	memcpy_s(&SetVectorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetVectorParameter_Params.Value, 0xC, &Value, 0xC);

	uFnSetVectorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetVectorParameter, &SetVectorParameter_Params, nullptr);

	uFnSetVectorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.MICParamDispenserComponent_X.SetFloatParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// float                          Value                          (CPF_Parm)

void UMICParamDispenserComponent_X::SetFloatParameter(struct FName Key, float Value)
{
	static UFunction* uFnSetFloatParameter = nullptr;

	if (!uFnSetFloatParameter)
	{
		uFnSetFloatParameter = UFunction::FindFunction("Function ProjectX.MICParamDispenserComponent_X.SetFloatParameter");
	}

	UMICParamDispenserComponent_X_execSetFloatParameter_Params SetFloatParameter_Params;
	memcpy_s(&SetFloatParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetFloatParameter_Params.Value, 0x4, &Value, 0x4);

	uFnSetFloatParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetFloatParameter, &SetFloatParameter_Params, nullptr);

	uFnSetFloatParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.MICParamDispenserComponent_X.SetNameParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FName                   Value                          (CPF_Parm)

void UMICParamDispenserComponent_X::SetNameParameter(struct FName Key, struct FName Value)
{
	static UFunction* uFnSetNameParameter = nullptr;

	if (!uFnSetNameParameter)
	{
		uFnSetNameParameter = UFunction::FindFunction("Function ProjectX.MICParamDispenserComponent_X.SetNameParameter");
	}

	UMICParamDispenserComponent_X_execSetNameParameter_Params SetNameParameter_Params;
	memcpy_s(&SetNameParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetNameParameter_Params.Value, 0x8, &Value, 0x8);

	uFnSetNameParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetNameParameter, &SetNameParameter_Params, nullptr);

	uFnSetNameParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ShakeComponent_X.GetColorParameter
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   InName                         (CPF_Const | CPF_Parm)
// struct FColor                  OutColor                       (CPF_Parm | CPF_OutParm)

bool UShakeComponent_X::GetColorParameter(struct FName InName, struct FColor& OutColor)
{
	static UFunction* uFnGetColorParameter = nullptr;

	if (!uFnGetColorParameter)
	{
		uFnGetColorParameter = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.GetColorParameter");
	}

	UShakeComponent_X_execGetColorParameter_Params GetColorParameter_Params;
	memcpy_s(&GetColorParameter_Params.InName, 0x8, &InName, 0x8);
	memcpy_s(&GetColorParameter_Params.OutColor, 0x4, &OutColor, 0x4);

	uFnGetColorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetColorParameter, &GetColorParameter_Params, nullptr);

	uFnGetColorParameter->FunctionFlags |= 0x400;

	memcpy_s(&OutColor, 0x4, &GetColorParameter_Params.OutColor, 0x4);

	return GetColorParameter_Params.ReturnValue;
};

// Function ProjectX.ShakeComponent_X.GetVectorParameter
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   InName                         (CPF_Const | CPF_Parm)
// struct FVector                 OutVector                      (CPF_Parm | CPF_OutParm)

bool UShakeComponent_X::GetVectorParameter(struct FName InName, struct FVector& OutVector)
{
	static UFunction* uFnGetVectorParameter = nullptr;

	if (!uFnGetVectorParameter)
	{
		uFnGetVectorParameter = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.GetVectorParameter");
	}

	UShakeComponent_X_execGetVectorParameter_Params GetVectorParameter_Params;
	memcpy_s(&GetVectorParameter_Params.InName, 0x8, &InName, 0x8);
	memcpy_s(&GetVectorParameter_Params.OutVector, 0xC, &OutVector, 0xC);

	uFnGetVectorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetVectorParameter, &GetVectorParameter_Params, nullptr);

	uFnGetVectorParameter->FunctionFlags |= 0x400;

	memcpy_s(&OutVector, 0xC, &GetVectorParameter_Params.OutVector, 0xC);

	return GetVectorParameter_Params.ReturnValue;
};

// Function ProjectX.ShakeComponent_X.GetFloatParameter
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   InName                         (CPF_Const | CPF_Parm)
// float                          OutFloat                       (CPF_Parm | CPF_OutParm)

bool UShakeComponent_X::GetFloatParameter(struct FName InName, float& OutFloat)
{
	static UFunction* uFnGetFloatParameter = nullptr;

	if (!uFnGetFloatParameter)
	{
		uFnGetFloatParameter = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.GetFloatParameter");
	}

	UShakeComponent_X_execGetFloatParameter_Params GetFloatParameter_Params;
	memcpy_s(&GetFloatParameter_Params.InName, 0x8, &InName, 0x8);
	memcpy_s(&GetFloatParameter_Params.OutFloat, 0x4, &OutFloat, 0x4);

	uFnGetFloatParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetFloatParameter, &GetFloatParameter_Params, nullptr);

	uFnGetFloatParameter->FunctionFlags |= 0x400;

	memcpy_s(&OutFloat, 0x4, &GetFloatParameter_Params.OutFloat, 0x4);

	return GetFloatParameter_Params.ReturnValue;
};

// Function ProjectX.ShakeComponent_X.SetColorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ParameterName                  (CPF_Parm)
// struct FColor                  Param                          (CPF_Parm)

void UShakeComponent_X::SetColorParameter(struct FName ParameterName, struct FColor Param)
{
	static UFunction* uFnSetColorParameter = nullptr;

	if (!uFnSetColorParameter)
	{
		uFnSetColorParameter = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.SetColorParameter");
	}

	UShakeComponent_X_execSetColorParameter_Params SetColorParameter_Params;
	memcpy_s(&SetColorParameter_Params.ParameterName, 0x8, &ParameterName, 0x8);
	memcpy_s(&SetColorParameter_Params.Param, 0x4, &Param, 0x4);

	uFnSetColorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetColorParameter, &SetColorParameter_Params, nullptr);

	uFnSetColorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ShakeComponent_X.SetVectorRandParameter
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FName                   ParameterName                  (CPF_Parm)
// struct FVector                 Param                          (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FVector                 ParamLow                       (CPF_Const | CPF_Parm | CPF_OutParm)

void UShakeComponent_X::SetVectorRandParameter(struct FName ParameterName, struct FVector& Param, struct FVector& ParamLow)
{
	static UFunction* uFnSetVectorRandParameter = nullptr;

	if (!uFnSetVectorRandParameter)
	{
		uFnSetVectorRandParameter = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.SetVectorRandParameter");
	}

	UShakeComponent_X_execSetVectorRandParameter_Params SetVectorRandParameter_Params;
	memcpy_s(&SetVectorRandParameter_Params.ParameterName, 0x8, &ParameterName, 0x8);
	memcpy_s(&SetVectorRandParameter_Params.Param, 0xC, &Param, 0xC);
	memcpy_s(&SetVectorRandParameter_Params.ParamLow, 0xC, &ParamLow, 0xC);

	uFnSetVectorRandParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetVectorRandParameter, &SetVectorRandParameter_Params, nullptr);

	uFnSetVectorRandParameter->FunctionFlags |= 0x400;

	memcpy_s(&Param, 0xC, &SetVectorRandParameter_Params.Param, 0xC);
	memcpy_s(&ParamLow, 0xC, &SetVectorRandParameter_Params.ParamLow, 0xC);
};

// Function ProjectX.ShakeComponent_X.SetVectorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ParameterName                  (CPF_Parm)
// struct FVector                 Param                          (CPF_Parm)

void UShakeComponent_X::SetVectorParameter(struct FName ParameterName, struct FVector Param)
{
	static UFunction* uFnSetVectorParameter = nullptr;

	if (!uFnSetVectorParameter)
	{
		uFnSetVectorParameter = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.SetVectorParameter");
	}

	UShakeComponent_X_execSetVectorParameter_Params SetVectorParameter_Params;
	memcpy_s(&SetVectorParameter_Params.ParameterName, 0x8, &ParameterName, 0x8);
	memcpy_s(&SetVectorParameter_Params.Param, 0xC, &Param, 0xC);

	uFnSetVectorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetVectorParameter, &SetVectorParameter_Params, nullptr);

	uFnSetVectorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ShakeComponent_X.SetFloatRandParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ParameterName                  (CPF_Parm)
// float                          Param                          (CPF_Parm)
// float                          ParamLow                       (CPF_Parm)

void UShakeComponent_X::SetFloatRandParameter(struct FName ParameterName, float Param, float ParamLow)
{
	static UFunction* uFnSetFloatRandParameter = nullptr;

	if (!uFnSetFloatRandParameter)
	{
		uFnSetFloatRandParameter = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.SetFloatRandParameter");
	}

	UShakeComponent_X_execSetFloatRandParameter_Params SetFloatRandParameter_Params;
	memcpy_s(&SetFloatRandParameter_Params.ParameterName, 0x8, &ParameterName, 0x8);
	memcpy_s(&SetFloatRandParameter_Params.Param, 0x4, &Param, 0x4);
	memcpy_s(&SetFloatRandParameter_Params.ParamLow, 0x4, &ParamLow, 0x4);

	uFnSetFloatRandParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetFloatRandParameter, &SetFloatRandParameter_Params, nullptr);

	uFnSetFloatRandParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ShakeComponent_X.SetFloatParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ParameterName                  (CPF_Parm)
// float                          Param                          (CPF_Parm)

void UShakeComponent_X::SetFloatParameter(struct FName ParameterName, float Param)
{
	static UFunction* uFnSetFloatParameter = nullptr;

	if (!uFnSetFloatParameter)
	{
		uFnSetFloatParameter = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.SetFloatParameter");
	}

	UShakeComponent_X_execSetFloatParameter_Params SetFloatParameter_Params;
	memcpy_s(&SetFloatParameter_Params.ParameterName, 0x8, &ParameterName, 0x8);
	memcpy_s(&SetFloatParameter_Params.Param, 0x4, &Param, 0x4);

	uFnSetFloatParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetFloatParameter, &SetFloatParameter_Params, nullptr);

	uFnSetFloatParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ShakeComponent_X.IsPlaying
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UShakeComponent_X::IsPlaying()
{
	static UFunction* uFnIsPlaying = nullptr;

	if (!uFnIsPlaying)
	{
		uFnIsPlaying = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.IsPlaying");
	}

	UShakeComponent_X_execIsPlaying_Params IsPlaying_Params;

	this->ProcessEvent(uFnIsPlaying, &IsPlaying_Params, nullptr);

	return IsPlaying_Params.ReturnValue;
};

// Function ProjectX.ShakeComponent_X.StopShake
// [0x00024803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          InBlendOutTime                 (CPF_OptionalParm | CPF_Parm)

void UShakeComponent_X::eventStopShake(float InBlendOutTime)
{
	static UFunction* uFnStopShake = nullptr;

	if (!uFnStopShake)
	{
		uFnStopShake = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.StopShake");
	}

	UShakeComponent_X_eventStopShake_Params StopShake_Params;
	memcpy_s(&StopShake_Params.InBlendOutTime, 0x4, &InBlendOutTime, 0x4);

	this->ProcessEvent(uFnStopShake, &StopShake_Params, nullptr);
};

// Function ProjectX.ShakeComponent_X.InitParams
// [0x00080401] (FUNC_Final | FUNC_Native | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UShakeComponent_X::InitParams()
{
	static UFunction* uFnInitParams = nullptr;

	if (!uFnInitParams)
	{
		uFnInitParams = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.InitParams");
	}

	UShakeComponent_X_execInitParams_Params InitParams_Params;

	uFnInitParams->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitParams, &InitParams_Params, nullptr);

	uFnInitParams->FunctionFlags |= 0x400;
};

// Function ProjectX.ShakeComponent_X.PlayShake
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UShakeComponent_X::eventPlayShake()
{
	static UFunction* uFnPlayShake = nullptr;

	if (!uFnPlayShake)
	{
		uFnPlayShake = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.PlayShake");
	}

	UShakeComponent_X_eventPlayShake_Params PlayShake_Params;

	this->ProcessEvent(uFnPlayShake, &PlayShake_Params, nullptr);
};

// Function ProjectX.ShakeComponent_X.Detached
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UShakeComponent_X::eventDetached()
{
	static UFunction* uFnDetached = nullptr;

	if (!uFnDetached)
	{
		uFnDetached = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.Detached");
	}

	UShakeComponent_X_eventDetached_Params Detached_Params;

	this->ProcessEvent(uFnDetached, &Detached_Params, nullptr);
};

// Function ProjectX.ShakeComponent_X.Attached
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UShakeComponent_X::eventAttached()
{
	static UFunction* uFnAttached = nullptr;

	if (!uFnAttached)
	{
		uFnAttached = UFunction::FindFunction("Function ProjectX.ShakeComponent_X.Attached");
	}

	UShakeComponent_X_eventAttached_Params Attached_Params;

	this->ProcessEvent(uFnAttached, &Attached_Params, nullptr);
};

// Function ProjectX.AdHocBeacon_X.GetNodeCountMax
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UAdHocBeacon_X::GetNodeCountMax()
{
	static UFunction* uFnGetNodeCountMax = nullptr;

	if (!uFnGetNodeCountMax)
	{
		uFnGetNodeCountMax = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.GetNodeCountMax");
	}

	UAdHocBeacon_X_execGetNodeCountMax_Params GetNodeCountMax_Params;

	uFnGetNodeCountMax->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetNodeCountMax, &GetNodeCountMax_Params, nullptr);

	uFnGetNodeCountMax->FunctionFlags |= 0x400;

	return GetNodeCountMax_Params.ReturnValue;
};

// Function ProjectX.AdHocBeacon_X.AdHocJoinMatch
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::AdHocJoinMatch()
{
	static UFunction* uFnAdHocJoinMatch = nullptr;

	if (!uFnAdHocJoinMatch)
	{
		uFnAdHocJoinMatch = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocJoinMatch");
	}

	UAdHocBeacon_X_execAdHocJoinMatch_Params AdHocJoinMatch_Params;

	uFnAdHocJoinMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocJoinMatch, &AdHocJoinMatch_Params, nullptr);

	uFnAdHocJoinMatch->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocCreateMatch
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::AdHocCreateMatch()
{
	static UFunction* uFnAdHocCreateMatch = nullptr;

	if (!uFnAdHocCreateMatch)
	{
		uFnAdHocCreateMatch = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocCreateMatch");
	}

	UAdHocBeacon_X_execAdHocCreateMatch_Params AdHocCreateMatch_Params;

	uFnAdHocCreateMatch->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocCreateMatch, &AdHocCreateMatch_Params, nullptr);

	uFnAdHocCreateMatch->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocIsActive
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAdHocBeacon_X::AdHocIsActive()
{
	static UFunction* uFnAdHocIsActive = nullptr;

	if (!uFnAdHocIsActive)
	{
		uFnAdHocIsActive = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocIsActive");
	}

	UAdHocBeacon_X_execAdHocIsActive_Params AdHocIsActive_Params;

	uFnAdHocIsActive->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocIsActive, &AdHocIsActive_Params, nullptr);

	uFnAdHocIsActive->FunctionFlags |= 0x400;

	return AdHocIsActive_Params.ReturnValue;
};

// Function ProjectX.AdHocBeacon_X.AdHocDisconnectFromAccessPoint
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::AdHocDisconnectFromAccessPoint()
{
	static UFunction* uFnAdHocDisconnectFromAccessPoint = nullptr;

	if (!uFnAdHocDisconnectFromAccessPoint)
	{
		uFnAdHocDisconnectFromAccessPoint = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocDisconnectFromAccessPoint");
	}

	UAdHocBeacon_X_execAdHocDisconnectFromAccessPoint_Params AdHocDisconnectFromAccessPoint_Params;

	uFnAdHocDisconnectFromAccessPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocDisconnectFromAccessPoint, &AdHocDisconnectFromAccessPoint_Params, nullptr);

	uFnAdHocDisconnectFromAccessPoint->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocConnectToAccessPoint
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ScanResultIndex                (CPF_Parm)

void UAdHocBeacon_X::AdHocConnectToAccessPoint(int32_t ScanResultIndex)
{
	static UFunction* uFnAdHocConnectToAccessPoint = nullptr;

	if (!uFnAdHocConnectToAccessPoint)
	{
		uFnAdHocConnectToAccessPoint = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocConnectToAccessPoint");
	}

	UAdHocBeacon_X_execAdHocConnectToAccessPoint_Params AdHocConnectToAccessPoint_Params;
	memcpy_s(&AdHocConnectToAccessPoint_Params.ScanResultIndex, 0x4, &ScanResultIndex, 0x4);

	uFnAdHocConnectToAccessPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocConnectToAccessPoint, &AdHocConnectToAccessPoint_Params, nullptr);

	uFnAdHocConnectToAccessPoint->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocScanForAccessPoints
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::AdHocScanForAccessPoints()
{
	static UFunction* uFnAdHocScanForAccessPoints = nullptr;

	if (!uFnAdHocScanForAccessPoints)
	{
		uFnAdHocScanForAccessPoints = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocScanForAccessPoints");
	}

	UAdHocBeacon_X_execAdHocScanForAccessPoints_Params AdHocScanForAccessPoints_Params;

	uFnAdHocScanForAccessPoints->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocScanForAccessPoints, &AdHocScanForAccessPoints_Params, nullptr);

	uFnAdHocScanForAccessPoints->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocBecomeStation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::AdHocBecomeStation()
{
	static UFunction* uFnAdHocBecomeStation = nullptr;

	if (!uFnAdHocBecomeStation)
	{
		uFnAdHocBecomeStation = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocBecomeStation");
	}

	UAdHocBeacon_X_execAdHocBecomeStation_Params AdHocBecomeStation_Params;

	uFnAdHocBecomeStation->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocBecomeStation, &AdHocBecomeStation_Params, nullptr);

	uFnAdHocBecomeStation->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocRejectStation
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        NetworkNodeIndex               (CPF_Parm)

void UAdHocBeacon_X::AdHocRejectStation(int32_t NetworkNodeIndex)
{
	static UFunction* uFnAdHocRejectStation = nullptr;

	if (!uFnAdHocRejectStation)
	{
		uFnAdHocRejectStation = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocRejectStation");
	}

	UAdHocBeacon_X_execAdHocRejectStation_Params AdHocRejectStation_Params;
	memcpy_s(&AdHocRejectStation_Params.NetworkNodeIndex, 0x4, &NetworkNodeIndex, 0x4);

	uFnAdHocRejectStation->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocRejectStation, &AdHocRejectStation_Params, nullptr);

	uFnAdHocRejectStation->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocBecomeAccessPoint
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::AdHocBecomeAccessPoint()
{
	static UFunction* uFnAdHocBecomeAccessPoint = nullptr;

	if (!uFnAdHocBecomeAccessPoint)
	{
		uFnAdHocBecomeAccessPoint = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocBecomeAccessPoint");
	}

	UAdHocBeacon_X_execAdHocBecomeAccessPoint_Params AdHocBecomeAccessPoint_Params;

	uFnAdHocBecomeAccessPoint->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocBecomeAccessPoint, &AdHocBecomeAccessPoint_Params, nullptr);

	uFnAdHocBecomeAccessPoint->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocSetAdvertiseData
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  AdvertiseData                  (CPF_Parm | CPF_NeedCtorLink)

void UAdHocBeacon_X::AdHocSetAdvertiseData(class FString AdvertiseData)
{
	static UFunction* uFnAdHocSetAdvertiseData = nullptr;

	if (!uFnAdHocSetAdvertiseData)
	{
		uFnAdHocSetAdvertiseData = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocSetAdvertiseData");
	}

	UAdHocBeacon_X_execAdHocSetAdvertiseData_Params AdHocSetAdvertiseData_Params;
	memcpy_s(&AdHocSetAdvertiseData_Params.AdvertiseData, 0x10, &AdvertiseData, 0x10);

	uFnAdHocSetAdvertiseData->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocSetAdvertiseData, &AdHocSetAdvertiseData_Params, nullptr);

	uFnAdHocSetAdvertiseData->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocDestroy
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::AdHocDestroy()
{
	static UFunction* uFnAdHocDestroy = nullptr;

	if (!uFnAdHocDestroy)
	{
		uFnAdHocDestroy = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocDestroy");
	}

	UAdHocBeacon_X_execAdHocDestroy_Params AdHocDestroy_Params;

	uFnAdHocDestroy->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocDestroy, &AdHocDestroy_Params, nullptr);

	uFnAdHocDestroy->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocCreate
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::AdHocCreate()
{
	static UFunction* uFnAdHocCreate = nullptr;

	if (!uFnAdHocCreate)
	{
		uFnAdHocCreate = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocCreate");
	}

	UAdHocBeacon_X_execAdHocCreate_Params AdHocCreate_Params;

	uFnAdHocCreate->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocCreate, &AdHocCreate_Params, nullptr);

	uFnAdHocCreate->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.AdHocCreateWithUsername
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Username                       (CPF_Parm | CPF_NeedCtorLink)

void UAdHocBeacon_X::AdHocCreateWithUsername(class FString Username)
{
	static UFunction* uFnAdHocCreateWithUsername = nullptr;

	if (!uFnAdHocCreateWithUsername)
	{
		uFnAdHocCreateWithUsername = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.AdHocCreateWithUsername");
	}

	UAdHocBeacon_X_execAdHocCreateWithUsername_Params AdHocCreateWithUsername_Params;
	memcpy_s(&AdHocCreateWithUsername_Params.Username, 0x10, &Username, 0x10);

	uFnAdHocCreateWithUsername->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAdHocCreateWithUsername, &AdHocCreateWithUsername_Params, nullptr);

	uFnAdHocCreateWithUsername->FunctionFlags |= 0x400;
};

// Function ProjectX.AdHocBeacon_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UAdHocBeacon_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.AdHocBeacon_X.Construct");
	}

	UAdHocBeacon_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.FXActor_X.__FXActor_X__PrintDebugInfo_0x1
// [0x40040103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UFXActorEvent_X*         State                          (CPF_Parm)

struct FName AFXActor_X::__FXActor_X__PrintDebugInfo_0x1(class UFXActorEvent_X* State)
{
	static UFunction* uFn__FXActor_X__PrintDebugInfo_0x1 = nullptr;

	if (!uFn__FXActor_X__PrintDebugInfo_0x1)
	{
		uFn__FXActor_X__PrintDebugInfo_0x1 = UFunction::FindFunction("Function ProjectX.FXActor_X.__FXActor_X__PrintDebugInfo_0x1");
	}

	AFXActor_X_exec__FXActor_X__PrintDebugInfo_0x1_Params __FXActor_X__PrintDebugInfo_0x1_Params;
	memcpy_s(&__FXActor_X__PrintDebugInfo_0x1_Params.State, 0x8, &State, 0x8);

	this->ProcessEvent(uFn__FXActor_X__PrintDebugInfo_0x1, &__FXActor_X__PrintDebugInfo_0x1_Params, nullptr);

	return __FXActor_X__PrintDebugInfo_0x1_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void AFXActor_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.FXActor_X.PrintDebugInfo");
	}

	AFXActor_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.FXActor_X.DumpDebugInfo
// [0x00820803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::eventDumpDebugInfo()
{
	static UFunction* uFnDumpDebugInfo = nullptr;

	if (!uFnDumpDebugInfo)
	{
		uFnDumpDebugInfo = UFunction::FindFunction("Function ProjectX.FXActor_X.DumpDebugInfo");
	}

	AFXActor_X_eventDumpDebugInfo_Params DumpDebugInfo_Params;

	this->ProcessEvent(uFnDumpDebugInfo, &DumpDebugInfo_Params, nullptr);
};

// Function ProjectX.FXActor_X.GetTrait
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFXAttachmentTraitBase_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  TraitClass                     (CPF_Parm)
// int32_t                        AttachmentIdx                  (CPF_Parm)

class UFXAttachmentTraitBase_X* AFXActor_X::GetTrait(class UClass* TraitClass, int32_t AttachmentIdx)
{
	static UFunction* uFnGetTrait = nullptr;

	if (!uFnGetTrait)
	{
		uFnGetTrait = UFunction::FindFunction("Function ProjectX.FXActor_X.GetTrait");
	}

	AFXActor_X_execGetTrait_Params GetTrait_Params;
	memcpy_s(&GetTrait_Params.TraitClass, 0x8, &TraitClass, 0x8);
	memcpy_s(&GetTrait_Params.AttachmentIdx, 0x4, &AttachmentIdx, 0x4);

	uFnGetTrait->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetTrait, &GetTrait_Params, nullptr);

	uFnGetTrait->FunctionFlags |= 0x400;

	return GetTrait_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.OnAnimEnd
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAnimNodeSequence*       SeqNode                        (CPF_Parm)
// float                          PlayedTime                     (CPF_Parm)
// float                          ExcessTime                     (CPF_Parm)

void AFXActor_X::eventOnAnimEnd(class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime)
{
	static UFunction* uFnOnAnimEnd = nullptr;

	if (!uFnOnAnimEnd)
	{
		uFnOnAnimEnd = UFunction::FindFunction("Function ProjectX.FXActor_X.OnAnimEnd");
	}

	AFXActor_X_eventOnAnimEnd_Params OnAnimEnd_Params;
	memcpy_s(&OnAnimEnd_Params.SeqNode, 0x8, &SeqNode, 0x8);
	memcpy_s(&OnAnimEnd_Params.PlayedTime, 0x4, &PlayedTime, 0x4);
	memcpy_s(&OnAnimEnd_Params.ExcessTime, 0x4, &ExcessTime, 0x4);

	this->ProcessEvent(uFnOnAnimEnd, &OnAnimEnd_Params, nullptr);
};

// Function ProjectX.FXActor_X.OnAnimPlay
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAnimNodeSequence*       SeqNode                        (CPF_Parm)

void AFXActor_X::eventOnAnimPlay(class UAnimNodeSequence* SeqNode)
{
	static UFunction* uFnOnAnimPlay = nullptr;

	if (!uFnOnAnimPlay)
	{
		uFnOnAnimPlay = UFunction::FindFunction("Function ProjectX.FXActor_X.OnAnimPlay");
	}

	AFXActor_X_eventOnAnimPlay_Params OnAnimPlay_Params;
	memcpy_s(&OnAnimPlay_Params.SeqNode, 0x8, &SeqNode, 0x8);

	this->ProcessEvent(uFnOnAnimPlay, &OnAnimPlay_Params, nullptr);
};

// Function ProjectX.FXActor_X.Destroyed
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function ProjectX.FXActor_X.Destroyed");
	}

	AFXActor_X_eventDestroyed_Params Destroyed_Params;

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function ProjectX.FXActor_X.SubscribeState
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFXActorEvent_X*         FXEvent                        (CPF_Parm)
// struct FScriptDelegate         OnPushed                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnPopped                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void AFXActor_X::SubscribeState(class UFXActorEvent_X* FXEvent, struct FScriptDelegate OnPushed, struct FScriptDelegate OnPopped)
{
	static UFunction* uFnSubscribeState = nullptr;

	if (!uFnSubscribeState)
	{
		uFnSubscribeState = UFunction::FindFunction("Function ProjectX.FXActor_X.SubscribeState");
	}

	AFXActor_X_execSubscribeState_Params SubscribeState_Params;
	memcpy_s(&SubscribeState_Params.FXEvent, 0x8, &FXEvent, 0x8);
	memcpy_s(&SubscribeState_Params.OnPushed, 0x18, &OnPushed, 0x18);
	memcpy_s(&SubscribeState_Params.OnPopped, 0x18, &OnPopped, 0x18);

	uFnSubscribeState->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSubscribeState, &SubscribeState_Params, nullptr);

	uFnSubscribeState->FunctionFlags |= 0x400;
};

// Function ProjectX.FXActor_X.SetStateEnabled
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFXActorEvent_X*         State                          (CPF_Parm)
// unsigned long                  bEnable                        (CPF_Parm)

void AFXActor_X::SetStateEnabled(class UFXActorEvent_X* State, unsigned long bEnable)
{
	static UFunction* uFnSetStateEnabled = nullptr;

	if (!uFnSetStateEnabled)
	{
		uFnSetStateEnabled = UFunction::FindFunction("Function ProjectX.FXActor_X.SetStateEnabled");
	}

	AFXActor_X_execSetStateEnabled_Params SetStateEnabled_Params;
	memcpy_s(&SetStateEnabled_Params.State, 0x8, &State, 0x8);
	SetStateEnabled_Params.bEnable = bEnable;

	this->ProcessEvent(uFnSetStateEnabled, &SetStateEnabled_Params, nullptr);
};

// Function ProjectX.FXActor_X.OnToggle
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class USeqAct_Toggle*          Action                         (CPF_Parm)

void AFXActor_X::OnToggle(class USeqAct_Toggle* Action)
{
	static UFunction* uFnOnToggle = nullptr;

	if (!uFnOnToggle)
	{
		uFnOnToggle = UFunction::FindFunction("Function ProjectX.FXActor_X.OnToggle");
	}

	AFXActor_X_execOnToggle_Params OnToggle_Params;
	memcpy_s(&OnToggle_Params.Action, 0x8, &Action, 0x8);

	this->ProcessEvent(uFnOnToggle, &OnToggle_Params, nullptr);
};

// Function ProjectX.FXActor_X.OnTriggerFXActor_X
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class USeqAct_TriggerFXActor_X* SeqAct                         (CPF_Parm)

void AFXActor_X::OnTriggerFXActor_X(class USeqAct_TriggerFXActor_X* SeqAct)
{
	static UFunction* uFnOnTriggerFXActor_X = nullptr;

	if (!uFnOnTriggerFXActor_X)
	{
		uFnOnTriggerFXActor_X = UFunction::FindFunction("Function ProjectX.FXActor_X.OnTriggerFXActor_X");
	}

	AFXActor_X_execOnTriggerFXActor_X_Params OnTriggerFXActor_X_Params;
	memcpy_s(&OnTriggerFXActor_X_Params.SeqAct, 0x8, &SeqAct, 0x8);

	this->ProcessEvent(uFnOnTriggerFXActor_X, &OnTriggerFXActor_X_Params, nullptr);
};

// Function ProjectX.FXActor_X.Inherit
// [0x00880102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class AFXActor_X*              Other                          (CPF_Parm)

void AFXActor_X::Inherit(class AFXActor_X* Other)
{
	static UFunction* uFnInherit = nullptr;

	if (!uFnInherit)
	{
		uFnInherit = UFunction::FindFunction("Function ProjectX.FXActor_X.Inherit");
	}

	AFXActor_X_execInherit_Params Inherit_Params;
	memcpy_s(&Inherit_Params.Other, 0x8, &Other, 0x8);

	this->ProcessEvent(uFnInherit, &Inherit_Params, nullptr);
};

// Function ProjectX.FXActor_X.ResetParticles
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::ResetParticles()
{
	static UFunction* uFnResetParticles = nullptr;

	if (!uFnResetParticles)
	{
		uFnResetParticles = UFunction::FindFunction("Function ProjectX.FXActor_X.ResetParticles");
	}

	AFXActor_X_execResetParticles_Params ResetParticles_Params;

	this->ProcessEvent(uFnResetParticles, &ResetParticles_Params, nullptr);
};

// Function ProjectX.FXActor_X.StopAllEffects
// [0x00080102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::StopAllEffects()
{
	static UFunction* uFnStopAllEffects = nullptr;

	if (!uFnStopAllEffects)
	{
		uFnStopAllEffects = UFunction::FindFunction("Function ProjectX.FXActor_X.StopAllEffects");
	}

	AFXActor_X_execStopAllEffects_Params StopAllEffects_Params;

	this->ProcessEvent(uFnStopAllEffects, &StopAllEffects_Params, nullptr);
};

// Function ProjectX.FXActor_X.DeactivateAndDestroy
// [0x00020903] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::eventDeactivateAndDestroy()
{
	static UFunction* uFnDeactivateAndDestroy = nullptr;

	if (!uFnDeactivateAndDestroy)
	{
		uFnDeactivateAndDestroy = UFunction::FindFunction("Function ProjectX.FXActor_X.DeactivateAndDestroy");
	}

	AFXActor_X_eventDeactivateAndDestroy_Params DeactivateAndDestroy_Params;

	this->ProcessEvent(uFnDeactivateAndDestroy, &DeactivateAndDestroy_Params, nullptr);
};

// Function ProjectX.FXActor_X.OnDetached
// [0x00080903] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UActorComponent*         AC                             (CPF_Parm | CPF_EditInline)

void AFXActor_X::eventOnDetached(class UActorComponent* AC)
{
	static UFunction* uFnOnDetached = nullptr;

	if (!uFnOnDetached)
	{
		uFnOnDetached = UFunction::FindFunction("Function ProjectX.FXActor_X.OnDetached");
	}

	AFXActor_X_eventOnDetached_Params OnDetached_Params;
	memcpy_s(&OnDetached_Params.AC, 0x8, &AC, 0x8);

	this->ProcessEvent(uFnOnDetached, &OnDetached_Params, nullptr);
};

// Function ProjectX.FXActor_X.DeactivateFXComponent
// [0x00020903] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UActorComponent*         AC                             (CPF_Parm | CPF_EditInline)

void AFXActor_X::eventDeactivateFXComponent(class UActorComponent* AC)
{
	static UFunction* uFnDeactivateFXComponent = nullptr;

	if (!uFnDeactivateFXComponent)
	{
		uFnDeactivateFXComponent = UFunction::FindFunction("Function ProjectX.FXActor_X.DeactivateFXComponent");
	}

	AFXActor_X_eventDeactivateFXComponent_Params DeactivateFXComponent_Params;
	memcpy_s(&DeactivateFXComponent_Params.AC, 0x8, &AC, 0x8);

	this->ProcessEvent(uFnDeactivateFXComponent, &DeactivateFXComponent_Params, nullptr);
};

// Function ProjectX.FXActor_X.ActivateFXComponent
// [0x00080903] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UActorComponent*         AC                             (CPF_Parm | CPF_EditInline)

void AFXActor_X::eventActivateFXComponent(class UActorComponent* AC)
{
	static UFunction* uFnActivateFXComponent = nullptr;

	if (!uFnActivateFXComponent)
	{
		uFnActivateFXComponent = UFunction::FindFunction("Function ProjectX.FXActor_X.ActivateFXComponent");
	}

	AFXActor_X_eventActivateFXComponent_Params ActivateFXComponent_Params;
	memcpy_s(&ActivateFXComponent_Params.AC, 0x8, &AC, 0x8);

	this->ProcessEvent(uFnActivateFXComponent, &ActivateFXComponent_Params, nullptr);
};

// Function ProjectX.FXActor_X.OnAttached
// [0x00080903] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UActorComponent*         AC                             (CPF_Parm | CPF_EditInline)

void AFXActor_X::eventOnAttached(class UActorComponent* AC)
{
	static UFunction* uFnOnAttached = nullptr;

	if (!uFnOnAttached)
	{
		uFnOnAttached = UFunction::FindFunction("Function ProjectX.FXActor_X.OnAttached");
	}

	AFXActor_X_eventOnAttached_Params OnAttached_Params;
	memcpy_s(&OnAttached_Params.AC, 0x8, &AC, 0x8);

	this->ProcessEvent(uFnOnAttached, &OnAttached_Params, nullptr);
};

// Function ProjectX.FXActor_X.GetComponentsAttachmentIndex
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UActorComponent*         ComponentToFind                (CPF_Parm | CPF_EditInline)

int32_t AFXActor_X::GetComponentsAttachmentIndex(class UActorComponent* ComponentToFind)
{
	static UFunction* uFnGetComponentsAttachmentIndex = nullptr;

	if (!uFnGetComponentsAttachmentIndex)
	{
		uFnGetComponentsAttachmentIndex = UFunction::FindFunction("Function ProjectX.FXActor_X.GetComponentsAttachmentIndex");
	}

	AFXActor_X_execGetComponentsAttachmentIndex_Params GetComponentsAttachmentIndex_Params;
	memcpy_s(&GetComponentsAttachmentIndex_Params.ComponentToFind, 0x8, &ComponentToFind, 0x8);

	this->ProcessEvent(uFnGetComponentsAttachmentIndex, &GetComponentsAttachmentIndex_Params, nullptr);

	return GetComponentsAttachmentIndex_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.UpdateFXStates
// [0x00080501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::UpdateFXStates()
{
	static UFunction* uFnUpdateFXStates = nullptr;

	if (!uFnUpdateFXStates)
	{
		uFnUpdateFXStates = UFunction::FindFunction("Function ProjectX.FXActor_X.UpdateFXStates");
	}

	AFXActor_X_execUpdateFXStates_Params UpdateFXStates_Params;

	uFnUpdateFXStates->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUpdateFXStates, &UpdateFXStates_Params, nullptr);

	uFnUpdateFXStates->FunctionFlags |= 0x400;
};

// Function ProjectX.FXActor_X.IsLocallyControlled
// [0x00080501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AFXActor_X::IsLocallyControlled()
{
	static UFunction* uFnIsLocallyControlled = nullptr;

	if (!uFnIsLocallyControlled)
	{
		uFnIsLocallyControlled = UFunction::FindFunction("Function ProjectX.FXActor_X.IsLocallyControlled");
	}

	AFXActor_X_execIsLocallyControlled_Params IsLocallyControlled_Params;

	uFnIsLocallyControlled->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsLocallyControlled, &IsLocallyControlled_Params, nullptr);

	uFnIsLocallyControlled->FunctionFlags |= 0x400;

	return IsLocallyControlled_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.GetControllerOwner
// [0x00080501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class AController*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AController* AFXActor_X::GetControllerOwner()
{
	static UFunction* uFnGetControllerOwner = nullptr;

	if (!uFnGetControllerOwner)
	{
		uFnGetControllerOwner = UFunction::FindFunction("Function ProjectX.FXActor_X.GetControllerOwner");
	}

	AFXActor_X_execGetControllerOwner_Params GetControllerOwner_Params;

	uFnGetControllerOwner->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetControllerOwner, &GetControllerOwner_Params, nullptr);

	uFnGetControllerOwner->FunctionFlags |= 0x400;

	return GetControllerOwner_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.ToggleState
// [0x00020501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFXActorEvent_X*         NewState                       (CPF_Parm)

void AFXActor_X::ToggleState(class UFXActorEvent_X* NewState)
{
	static UFunction* uFnToggleState = nullptr;

	if (!uFnToggleState)
	{
		uFnToggleState = UFunction::FindFunction("Function ProjectX.FXActor_X.ToggleState");
	}

	AFXActor_X_execToggleState_Params ToggleState_Params;
	memcpy_s(&ToggleState_Params.NewState, 0x8, &NewState, 0x8);

	uFnToggleState->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnToggleState, &ToggleState_Params, nullptr);

	uFnToggleState->FunctionFlags |= 0x400;
};

// Function ProjectX.FXActor_X.RemoveStateForceUpdate
// [0x00020501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UFXActorEvent_X*         OldState                       (CPF_Parm)

bool AFXActor_X::RemoveStateForceUpdate(class UFXActorEvent_X* OldState)
{
	static UFunction* uFnRemoveStateForceUpdate = nullptr;

	if (!uFnRemoveStateForceUpdate)
	{
		uFnRemoveStateForceUpdate = UFunction::FindFunction("Function ProjectX.FXActor_X.RemoveStateForceUpdate");
	}

	AFXActor_X_execRemoveStateForceUpdate_Params RemoveStateForceUpdate_Params;
	memcpy_s(&RemoveStateForceUpdate_Params.OldState, 0x8, &OldState, 0x8);

	uFnRemoveStateForceUpdate->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveStateForceUpdate, &RemoveStateForceUpdate_Params, nullptr);

	uFnRemoveStateForceUpdate->FunctionFlags |= 0x400;

	return RemoveStateForceUpdate_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.RemoveEvent
// [0x00020501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UFXActorEvent_X*         OldEvent                       (CPF_Parm)

bool AFXActor_X::RemoveEvent(class UFXActorEvent_X* OldEvent)
{
	static UFunction* uFnRemoveEvent = nullptr;

	if (!uFnRemoveEvent)
	{
		uFnRemoveEvent = UFunction::FindFunction("Function ProjectX.FXActor_X.RemoveEvent");
	}

	AFXActor_X_execRemoveEvent_Params RemoveEvent_Params;
	memcpy_s(&RemoveEvent_Params.OldEvent, 0x8, &OldEvent, 0x8);

	uFnRemoveEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveEvent, &RemoveEvent_Params, nullptr);

	uFnRemoveEvent->FunctionFlags |= 0x400;

	return RemoveEvent_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.RemoveState
// [0x00020501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UFXActorEvent_X*         OldState                       (CPF_Parm)

bool AFXActor_X::RemoveState(class UFXActorEvent_X* OldState)
{
	static UFunction* uFnRemoveState = nullptr;

	if (!uFnRemoveState)
	{
		uFnRemoveState = UFunction::FindFunction("Function ProjectX.FXActor_X.RemoveState");
	}

	AFXActor_X_execRemoveState_Params RemoveState_Params;
	memcpy_s(&RemoveState_Params.OldState, 0x8, &OldState, 0x8);

	uFnRemoveState->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveState, &RemoveState_Params, nullptr);

	uFnRemoveState->FunctionFlags |= 0x400;

	return RemoveState_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.AddEvent
// [0x00020501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFXActorEvent_X*         NewEvent                       (CPF_Parm)

void AFXActor_X::AddEvent(class UFXActorEvent_X* NewEvent)
{
	static UFunction* uFnAddEvent = nullptr;

	if (!uFnAddEvent)
	{
		uFnAddEvent = UFunction::FindFunction("Function ProjectX.FXActor_X.AddEvent");
	}

	AFXActor_X_execAddEvent_Params AddEvent_Params;
	memcpy_s(&AddEvent_Params.NewEvent, 0x8, &NewEvent, 0x8);

	uFnAddEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddEvent, &AddEvent_Params, nullptr);

	uFnAddEvent->FunctionFlags |= 0x400;
};

// Function ProjectX.FXActor_X.AddState
// [0x00020501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFXActorEvent_X*         NewState                       (CPF_Parm)

void AFXActor_X::AddState(class UFXActorEvent_X* NewState)
{
	static UFunction* uFnAddState = nullptr;

	if (!uFnAddState)
	{
		uFnAddState = UFunction::FindFunction("Function ProjectX.FXActor_X.AddState");
	}

	AFXActor_X_execAddState_Params AddState_Params;
	memcpy_s(&AddState_Params.NewState, 0x8, &NewState, 0x8);

	uFnAddState->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddState, &AddState_Params, nullptr);

	uFnAddState->FunctionFlags |= 0x400;
};

// Function ProjectX.FXActor_X.CanRemoveEvent
// [0x00420501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FFXActorEventCheck      InEvent                        (CPF_Parm | CPF_OutParm)

bool AFXActor_X::CanRemoveEvent(struct FFXActorEventCheck& InEvent)
{
	static UFunction* uFnCanRemoveEvent = nullptr;

	if (!uFnCanRemoveEvent)
	{
		uFnCanRemoveEvent = UFunction::FindFunction("Function ProjectX.FXActor_X.CanRemoveEvent");
	}

	AFXActor_X_execCanRemoveEvent_Params CanRemoveEvent_Params;
	memcpy_s(&CanRemoveEvent_Params.InEvent, 0x10, &InEvent, 0x10);

	uFnCanRemoveEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCanRemoveEvent, &CanRemoveEvent_Params, nullptr);

	uFnCanRemoveEvent->FunctionFlags |= 0x400;

	memcpy_s(&InEvent, 0x10, &CanRemoveEvent_Params.InEvent, 0x10);

	return CanRemoveEvent_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.IsStateActive
// [0x00020501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UFXActorEvent_X*         InState                        (CPF_Parm)

bool AFXActor_X::IsStateActive(class UFXActorEvent_X* InState)
{
	static UFunction* uFnIsStateActive = nullptr;

	if (!uFnIsStateActive)
	{
		uFnIsStateActive = UFunction::FindFunction("Function ProjectX.FXActor_X.IsStateActive");
	}

	AFXActor_X_execIsStateActive_Params IsStateActive_Params;
	memcpy_s(&IsStateActive_Params.InState, 0x8, &InState, 0x8);

	uFnIsStateActive->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsStateActive, &IsStateActive_Params, nullptr);

	uFnIsStateActive->FunctionFlags |= 0x400;

	return IsStateActive_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.Deactivate
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::Deactivate()
{
	static UFunction* uFnDeactivate = nullptr;

	if (!uFnDeactivate)
	{
		uFnDeactivate = UFunction::FindFunction("Function ProjectX.FXActor_X.Deactivate");
	}

	AFXActor_X_execDeactivate_Params Deactivate_Params;

	uFnDeactivate->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDeactivate, &Deactivate_Params, nullptr);

	uFnDeactivate->FunctionFlags |= 0x400;
};

// Function ProjectX.FXActor_X.Activate
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::Activate()
{
	static UFunction* uFnActivate = nullptr;

	if (!uFnActivate)
	{
		uFnActivate = UFunction::FindFunction("Function ProjectX.FXActor_X.Activate");
	}

	AFXActor_X_execActivate_Params Activate_Params;

	uFnActivate->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnActivate, &Activate_Params, nullptr);

	uFnActivate->FunctionFlags |= 0x400;
};

// Function ProjectX.FXActor_X.HandleParentStatePopped
// [0x00040103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class AFXActor_X*              P                              (CPF_Parm)
// class UFXActorEvent_X*         Event                          (CPF_Parm)

void AFXActor_X::HandleParentStatePopped(class AFXActor_X* P, class UFXActorEvent_X* Event)
{
	static UFunction* uFnHandleParentStatePopped = nullptr;

	if (!uFnHandleParentStatePopped)
	{
		uFnHandleParentStatePopped = UFunction::FindFunction("Function ProjectX.FXActor_X.HandleParentStatePopped");
	}

	AFXActor_X_execHandleParentStatePopped_Params HandleParentStatePopped_Params;
	memcpy_s(&HandleParentStatePopped_Params.P, 0x8, &P, 0x8);
	memcpy_s(&HandleParentStatePopped_Params.Event, 0x8, &Event, 0x8);

	this->ProcessEvent(uFnHandleParentStatePopped, &HandleParentStatePopped_Params, nullptr);
};

// Function ProjectX.FXActor_X.HandleParentStatePushed
// [0x00040103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class AFXActor_X*              P                              (CPF_Parm)
// class UFXActorEvent_X*         Event                          (CPF_Parm)

void AFXActor_X::HandleParentStatePushed(class AFXActor_X* P, class UFXActorEvent_X* Event)
{
	static UFunction* uFnHandleParentStatePushed = nullptr;

	if (!uFnHandleParentStatePushed)
	{
		uFnHandleParentStatePushed = UFunction::FindFunction("Function ProjectX.FXActor_X.HandleParentStatePushed");
	}

	AFXActor_X_execHandleParentStatePushed_Params HandleParentStatePushed_Params;
	memcpy_s(&HandleParentStatePushed_Params.P, 0x8, &P, 0x8);
	memcpy_s(&HandleParentStatePushed_Params.Event, 0x8, &Event, 0x8);

	this->ProcessEvent(uFnHandleParentStatePushed, &HandleParentStatePushed_Params, nullptr);
};

// Function ProjectX.FXActor_X.BindTo
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AFXActor_X*              ParentFXActor                  (CPF_Parm)

void AFXActor_X::BindTo(class AFXActor_X* ParentFXActor)
{
	static UFunction* uFnBindTo = nullptr;

	if (!uFnBindTo)
	{
		uFnBindTo = UFunction::FindFunction("Function ProjectX.FXActor_X.BindTo");
	}

	AFXActor_X_execBindTo_Params BindTo_Params;
	memcpy_s(&BindTo_Params.ParentFXActor, 0x8, &ParentFXActor, 0x8);

	this->ProcessEvent(uFnBindTo, &BindTo_Params, nullptr);
};

// Function ProjectX.FXActor_X.SetAttachmentActor
// [0x00020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  AttachToActor                  (CPF_Parm)

void AFXActor_X::SetAttachmentActor(class AActor* AttachToActor)
{
	static UFunction* uFnSetAttachmentActor = nullptr;

	if (!uFnSetAttachmentActor)
	{
		uFnSetAttachmentActor = UFunction::FindFunction("Function ProjectX.FXActor_X.SetAttachmentActor");
	}

	AFXActor_X_execSetAttachmentActor_Params SetAttachmentActor_Params;
	memcpy_s(&SetAttachmentActor_Params.AttachToActor, 0x8, &AttachToActor, 0x8);

	this->ProcessEvent(uFnSetAttachmentActor, &SetAttachmentActor_Params, nullptr);
};

// Function ProjectX.FXActor_X.PostBeginPlay
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AFXActor_X::PostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function ProjectX.FXActor_X.PostBeginPlay");
	}

	AFXActor_X_execPostBeginPlay_Params PostBeginPlay_Params;

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function ProjectX.FXActor_X.AllAttachments
// [0x00424505] (FUNC_Final | FUNC_BlueprintAuthorityOnly | FUNC_NetRequest | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ComponentClass                 (CPF_Parm)
// class UActorComponent*         OutComponent                   (CPF_Parm | CPF_OutParm | CPF_EditInline)
// int32_t                        OutAttachmentIdx               (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

void AFXActor_X::AllAttachments(class UClass* ComponentClass, class UActorComponent*& OutComponent, int32_t& OutAttachmentIdx)
{
	static UFunction* uFnAllAttachments = nullptr;

	if (!uFnAllAttachments)
	{
		uFnAllAttachments = UFunction::FindFunction("Function ProjectX.FXActor_X.AllAttachments");
	}

	AFXActor_X_execAllAttachments_Params AllAttachments_Params;
	memcpy_s(&AllAttachments_Params.ComponentClass, 0x8, &ComponentClass, 0x8);
	memcpy_s(&AllAttachments_Params.OutComponent, 0x8, &OutComponent, 0x8);
	memcpy_s(&AllAttachments_Params.OutAttachmentIdx, 0x4, &OutAttachmentIdx, 0x4);

	uFnAllAttachments->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAllAttachments, &AllAttachments_Params, nullptr);

	uFnAllAttachments->FunctionFlags |= 0x400;

	memcpy_s(&OutComponent, 0x8, &AllAttachments_Params.OutComponent, 0x8);
	memcpy_s(&OutAttachmentIdx, 0x4, &AllAttachments_Params.OutAttachmentIdx, 0x4);
};

// Function ProjectX.FXActor_X.GetComponentByName
// [0x00020501] (FUNC_Final | FUNC_NetRequest | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UActorComponent*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm | CPF_EditInline)
// class UClass*                  ComponentClass                 (CPF_Parm)
// struct FName                   ComponentName                  (CPF_Parm)

class UActorComponent* AFXActor_X::GetComponentByName(class UClass* ComponentClass, struct FName ComponentName)
{
	static UFunction* uFnGetComponentByName = nullptr;

	if (!uFnGetComponentByName)
	{
		uFnGetComponentByName = UFunction::FindFunction("Function ProjectX.FXActor_X.GetComponentByName");
	}

	AFXActor_X_execGetComponentByName_Params GetComponentByName_Params;
	memcpy_s(&GetComponentByName_Params.ComponentClass, 0x8, &ComponentClass, 0x8);
	memcpy_s(&GetComponentByName_Params.ComponentName, 0x8, &ComponentName, 0x8);

	uFnGetComponentByName->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetComponentByName, &GetComponentByName_Params, nullptr);

	uFnGetComponentByName->FunctionFlags |= 0x400;

	return GetComponentByName_Params.ReturnValue;
};

// Function ProjectX.FXActor_X.EventFXStatePopped
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AFXActor_X*              FXActor                        (CPF_Parm)
// class UFXActorEvent_X*         Event                          (CPF_Parm)

void AFXActor_X::EventFXStatePopped(class AFXActor_X* FXActor, class UFXActorEvent_X* Event)
{
	static UFunction* uFnEventFXStatePopped = nullptr;

	if (!uFnEventFXStatePopped)
	{
		uFnEventFXStatePopped = UFunction::FindFunction("Function ProjectX.FXActor_X.EventFXStatePopped");
	}

	AFXActor_X_execEventFXStatePopped_Params EventFXStatePopped_Params;
	memcpy_s(&EventFXStatePopped_Params.FXActor, 0x8, &FXActor, 0x8);
	memcpy_s(&EventFXStatePopped_Params.Event, 0x8, &Event, 0x8);

	this->ProcessEvent(uFnEventFXStatePopped, &EventFXStatePopped_Params, nullptr);
};

// Function ProjectX.FXActor_X.EventFXStatePushed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AFXActor_X*              FXActor                        (CPF_Parm)
// class UFXActorEvent_X*         Event                          (CPF_Parm)

void AFXActor_X::EventFXStatePushed(class AFXActor_X* FXActor, class UFXActorEvent_X* Event)
{
	static UFunction* uFnEventFXStatePushed = nullptr;

	if (!uFnEventFXStatePushed)
	{
		uFnEventFXStatePushed = UFunction::FindFunction("Function ProjectX.FXActor_X.EventFXStatePushed");
	}

	AFXActor_X_execEventFXStatePushed_Params EventFXStatePushed_Params;
	memcpy_s(&EventFXStatePushed_Params.FXActor, 0x8, &FXActor, 0x8);
	memcpy_s(&EventFXStatePushed_Params.Event, 0x8, &Event, 0x8);

	this->ProcessEvent(uFnEventFXStatePushed, &EventFXStatePushed_Params, nullptr);
};

// Function ProjectX.ArchetypeSpawnPoint_X.OnSpawned
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class AActor*                  Spawned                        (CPF_Parm)

void AArchetypeSpawnPoint_X::OnSpawned(class AActor* Spawned)
{
	static UFunction* uFnOnSpawned = nullptr;

	if (!uFnOnSpawned)
	{
		uFnOnSpawned = UFunction::FindFunction("Function ProjectX.ArchetypeSpawnPoint_X.OnSpawned");
	}

	AArchetypeSpawnPoint_X_execOnSpawned_Params OnSpawned_Params;
	memcpy_s(&OnSpawned_Params.Spawned, 0x8, &Spawned, 0x8);

	this->ProcessEvent(uFnOnSpawned, &OnSpawned_Params, nullptr);
};

// Function ProjectX.ArchetypeSpawnPoint_X.DoSpawn
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* AArchetypeSpawnPoint_X::DoSpawn()
{
	static UFunction* uFnDoSpawn = nullptr;

	if (!uFnDoSpawn)
	{
		uFnDoSpawn = UFunction::FindFunction("Function ProjectX.ArchetypeSpawnPoint_X.DoSpawn");
	}

	AArchetypeSpawnPoint_X_execDoSpawn_Params DoSpawn_Params;

	this->ProcessEvent(uFnDoSpawn, &DoSpawn_Params, nullptr);

	return DoSpawn_Params.ReturnValue;
};

// Function ProjectX.ArchetypeSpawnPoint_X.OnToggle
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class USeqAct_Toggle*          Action                         (CPF_Parm)

void AArchetypeSpawnPoint_X::OnToggle(class USeqAct_Toggle* Action)
{
	static UFunction* uFnOnToggle = nullptr;

	if (!uFnOnToggle)
	{
		uFnOnToggle = UFunction::FindFunction("Function ProjectX.ArchetypeSpawnPoint_X.OnToggle");
	}

	AArchetypeSpawnPoint_X_execOnToggle_Params OnToggle_Params;
	memcpy_s(&OnToggle_Params.Action, 0x8, &Action, 0x8);

	this->ProcessEvent(uFnOnToggle, &OnToggle_Params, nullptr);
};

// Function ProjectX.ArchetypeSpawnPoint_X.OnDestroy
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class USeqAct_Destroy*         Action                         (CPF_Parm)

void AArchetypeSpawnPoint_X::OnDestroy(class USeqAct_Destroy* Action)
{
	static UFunction* uFnOnDestroy = nullptr;

	if (!uFnOnDestroy)
	{
		uFnOnDestroy = UFunction::FindFunction("Function ProjectX.ArchetypeSpawnPoint_X.OnDestroy");
	}

	AArchetypeSpawnPoint_X_execOnDestroy_Params OnDestroy_Params;
	memcpy_s(&OnDestroy_Params.Action, 0x8, &Action, 0x8);

	this->ProcessEvent(uFnOnDestroy, &OnDestroy_Params, nullptr);
};

// Function ProjectX.ArchetypeSpawnPoint_X.PostBeginPlay
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AArchetypeSpawnPoint_X::eventPostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function ProjectX.ArchetypeSpawnPoint_X.PostBeginPlay");
	}

	AArchetypeSpawnPoint_X_eventPostBeginPlay_Params PostBeginPlay_Params;

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function ProjectX.ArchetypeSpawnPoint_X.EventSpawned
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AArchetypeSpawnPoint_X*  SpawnPoint                     (CPF_Parm)
// class AActor*                  Spawned                        (CPF_Parm)

void AArchetypeSpawnPoint_X::EventSpawned(class AArchetypeSpawnPoint_X* SpawnPoint, class AActor* Spawned)
{
	static UFunction* uFnEventSpawned = nullptr;

	if (!uFnEventSpawned)
	{
		uFnEventSpawned = UFunction::FindFunction("Function ProjectX.ArchetypeSpawnPoint_X.EventSpawned");
	}

	AArchetypeSpawnPoint_X_execEventSpawned_Params EventSpawned_Params;
	memcpy_s(&EventSpawned_Params.SpawnPoint, 0x8, &SpawnPoint, 0x8);
	memcpy_s(&EventSpawned_Params.Spawned, 0x8, &Spawned, 0x8);

	this->ProcessEvent(uFnEventSpawned, &EventSpawned_Params, nullptr);
};

// Function ProjectX.Aws4Signature_X.SignRequest
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UHttpRequestInterface*   HTTPRequest                    (CPF_Parm)

void UAws4Signature_X::SignRequest(class UHttpRequestInterface* HTTPRequest)
{
	static UFunction* uFnSignRequest = nullptr;

	if (!uFnSignRequest)
	{
		uFnSignRequest = UFunction::FindFunction("Function ProjectX.Aws4Signature_X.SignRequest");
	}

	UAws4Signature_X_execSignRequest_Params SignRequest_Params;
	memcpy_s(&SignRequest_Params.HTTPRequest, 0x8, &HTTPRequest, 0x8);

	uFnSignRequest->FunctionFlags |= ~0x400;

	UAws4Signature_X::StaticClass()->ProcessEvent(uFnSignRequest, &SignRequest_Params, nullptr);

	uFnSignRequest->FunctionFlags |= 0x400;
};

// Function ProjectX.ReservationBeacon_X.__ReservationBeacon_X__Construct_0x4
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UReservationBeacon_X::__ReservationBeacon_X__Construct_0x4()
{
	static UFunction* uFn__ReservationBeacon_X__Construct_0x4 = nullptr;

	if (!uFn__ReservationBeacon_X__Construct_0x4)
	{
		uFn__ReservationBeacon_X__Construct_0x4 = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.__ReservationBeacon_X__Construct_0x4");
	}

	UReservationBeacon_X_exec__ReservationBeacon_X__Construct_0x4_Params __ReservationBeacon_X__Construct_0x4_Params;

	this->ProcessEvent(uFn__ReservationBeacon_X__Construct_0x4, &__ReservationBeacon_X__Construct_0x4_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.__ReservationBeacon_X__Construct_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UReservationBeacon_X::__ReservationBeacon_X__Construct_0x3(class UPsyNetBeaconConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFn__ReservationBeacon_X__Construct_0x3 = nullptr;

	if (!uFn__ReservationBeacon_X__Construct_0x3)
	{
		uFn__ReservationBeacon_X__Construct_0x3 = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.__ReservationBeacon_X__Construct_0x3");
	}

	UReservationBeacon_X_exec__ReservationBeacon_X__Construct_0x3_Params __ReservationBeacon_X__Construct_0x3_Params;
	memcpy_s(&__ReservationBeacon_X__Construct_0x3_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&__ReservationBeacon_X__Construct_0x3_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFn__ReservationBeacon_X__Construct_0x3, &__ReservationBeacon_X__Construct_0x3_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.__ReservationBeacon_X__Construct_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeacon_X*         _                              (CPF_Parm | CPF_EditInline)
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)

void UReservationBeacon_X::__ReservationBeacon_X__Construct_0x2(class UPsyNetBeacon_X* _, class UPsyNetBeaconConnection_X* Connection)
{
	static UFunction* uFn__ReservationBeacon_X__Construct_0x2 = nullptr;

	if (!uFn__ReservationBeacon_X__Construct_0x2)
	{
		uFn__ReservationBeacon_X__Construct_0x2 = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.__ReservationBeacon_X__Construct_0x2");
	}

	UReservationBeacon_X_exec__ReservationBeacon_X__Construct_0x2_Params __ReservationBeacon_X__Construct_0x2_Params;
	memcpy_s(&__ReservationBeacon_X__Construct_0x2_Params._, 0x8, &_, 0x8);
	memcpy_s(&__ReservationBeacon_X__Construct_0x2_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFn__ReservationBeacon_X__Construct_0x2, &__ReservationBeacon_X__Construct_0x2_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.__ReservationBeacon_X__Construct_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeacon_X*         _                              (CPF_Parm | CPF_EditInline)
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)

void UReservationBeacon_X::__ReservationBeacon_X__Construct_0x1(class UPsyNetBeacon_X* _, class UPsyNetBeaconConnection_X* Connection)
{
	static UFunction* uFn__ReservationBeacon_X__Construct_0x1 = nullptr;

	if (!uFn__ReservationBeacon_X__Construct_0x1)
	{
		uFn__ReservationBeacon_X__Construct_0x1 = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.__ReservationBeacon_X__Construct_0x1");
	}

	UReservationBeacon_X_exec__ReservationBeacon_X__Construct_0x1_Params __ReservationBeacon_X__Construct_0x1_Params;
	memcpy_s(&__ReservationBeacon_X__Construct_0x1_Params._, 0x8, &_, 0x8);
	memcpy_s(&__ReservationBeacon_X__Construct_0x1_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFn__ReservationBeacon_X__Construct_0x1, &__ReservationBeacon_X__Construct_0x1_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.ServerReserveConnection
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ReservationID                  (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// float                          ConnectionTimeoutSeconds       (CPF_OptionalParm | CPF_Parm)

class UIReservationConnection_X* UReservationBeacon_X::ServerReserveConnection(class FString ReservationID, struct FUniqueNetId PlayerID, float ConnectionTimeoutSeconds)
{
	static UFunction* uFnServerReserveConnection = nullptr;

	if (!uFnServerReserveConnection)
	{
		uFnServerReserveConnection = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.ServerReserveConnection");
	}

	UReservationBeacon_X_execServerReserveConnection_Params ServerReserveConnection_Params;
	memcpy_s(&ServerReserveConnection_Params.ReservationID, 0x10, &ReservationID, 0x10);
	memcpy_s(&ServerReserveConnection_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&ServerReserveConnection_Params.ConnectionTimeoutSeconds, 0x4, &ConnectionTimeoutSeconds, 0x4);

	this->ProcessEvent(uFnServerReserveConnection, &ServerReserveConnection_Params, nullptr);

	return ServerReserveConnection_Params.ReturnValue;
};

// Function ProjectX.ReservationBeacon_X.BeginPsyNetConnect
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ReservationID                  (CPF_Parm | CPF_NeedCtorLink)
// class FString                  DSRToken                       (CPF_Parm | CPF_NeedCtorLink)

class UIReservationConnection_X* UReservationBeacon_X::BeginPsyNetConnect(class FString ReservationID, class FString DSRToken)
{
	static UFunction* uFnBeginPsyNetConnect = nullptr;

	if (!uFnBeginPsyNetConnect)
	{
		uFnBeginPsyNetConnect = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.BeginPsyNetConnect");
	}

	UReservationBeacon_X_execBeginPsyNetConnect_Params BeginPsyNetConnect_Params;
	memcpy_s(&BeginPsyNetConnect_Params.ReservationID, 0x10, &ReservationID, 0x10);
	memcpy_s(&BeginPsyNetConnect_Params.DSRToken, 0x10, &DSRToken, 0x10);

	this->ProcessEvent(uFnBeginPsyNetConnect, &BeginPsyNetConnect_Params, nullptr);

	return BeginPsyNetConnect_Params.ReturnValue;
};

// Function ProjectX.ReservationBeacon_X.BeginConnect
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)

class UIReservationConnection_X* UReservationBeacon_X::BeginConnect(struct FServerReservationData Reservation)
{
	static UFunction* uFnBeginConnect = nullptr;

	if (!uFnBeginConnect)
	{
		uFnBeginConnect = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.BeginConnect");
	}

	UReservationBeacon_X_execBeginConnect_Params BeginConnect_Params;
	memcpy_s(&BeginConnect_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnBeginConnect, &BeginConnect_Params, nullptr);

	return BeginConnect_Params.ReturnValue;
};

// Function ProjectX.ReservationBeacon_X.Close
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationBeacon_X::Close()
{
	static UFunction* uFnClose = nullptr;

	if (!uFnClose)
	{
		uFnClose = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.Close");
	}

	UReservationBeacon_X_execClose_Params Close_Params;

	this->ProcessEvent(uFnClose, &Close_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.CloseConnection
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)

void UReservationBeacon_X::CloseConnection(class UIReservationConnection_X* Connection)
{
	static UFunction* uFnCloseConnection = nullptr;

	if (!uFnCloseConnection)
	{
		uFnCloseConnection = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.CloseConnection");
	}

	UReservationBeacon_X_execCloseConnection_Params CloseConnection_Params;
	memcpy_s(&CloseConnection_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnCloseConnection, &CloseConnection_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.BroadcastMessage
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Message                        (CPF_Parm)

void UReservationBeacon_X::eventBroadcastMessage(class UObject* Message)
{
	static UFunction* uFnBroadcastMessage = nullptr;

	if (!uFnBroadcastMessage)
	{
		uFnBroadcastMessage = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.BroadcastMessage");
	}

	UReservationBeacon_X_eventBroadcastMessage_Params BroadcastMessage_Params;
	memcpy_s(&BroadcastMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnBroadcastMessage, &BroadcastMessage_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.SendReservationMessage
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Message                        (CPF_Parm)
// struct FServerReservationData  Reservation                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UReservationBeacon_X::SendReservationMessage(class UObject* Message, struct FServerReservationData& Reservation)
{
	static UFunction* uFnSendReservationMessage = nullptr;

	if (!uFnSendReservationMessage)
	{
		uFnSendReservationMessage = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.SendReservationMessage");
	}

	UReservationBeacon_X_execSendReservationMessage_Params SendReservationMessage_Params;
	memcpy_s(&SendReservationMessage_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&SendReservationMessage_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnSendReservationMessage, &SendReservationMessage_Params, nullptr);

	memcpy_s(&Reservation, 0x70, &SendReservationMessage_Params.Reservation, 0x70);
};

// Function ProjectX.ReservationBeacon_X.SendMessage
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UReservationBeacon_X::eventSendMessageW(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnSendMessageW = nullptr;

	if (!uFnSendMessageW)
	{
		uFnSendMessageW = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.SendMessage");
	}

	UReservationBeacon_X_eventSendMessageW_Params SendMessageW_Params;
	memcpy_s(&SendMessageW_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&SendMessageW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageW, &SendMessageW_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.CreateMessage
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UBeaconMessage_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  MessageClass                   (CPF_Parm)

class UBeaconMessage_X* UReservationBeacon_X::CreateMessage(class UClass* MessageClass)
{
	static UFunction* uFnCreateMessage = nullptr;

	if (!uFnCreateMessage)
	{
		uFnCreateMessage = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.CreateMessage");
	}

	UReservationBeacon_X_execCreateMessage_Params CreateMessage_Params;
	memcpy_s(&CreateMessage_Params.MessageClass, 0x8, &MessageClass, 0x8);

	uFnCreateMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCreateMessage, &CreateMessage_Params, nullptr);

	uFnCreateMessage->FunctionFlags |= 0x400;

	return CreateMessage_Params.ReturnValue;
};

// Function ProjectX.ReservationBeacon_X.ReceiveMessage
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UReservationBeacon_X::ReceiveMessage(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnReceiveMessage = nullptr;

	if (!uFnReceiveMessage)
	{
		uFnReceiveMessage = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.ReceiveMessage");
	}

	UReservationBeacon_X_execReceiveMessage_Params ReceiveMessage_Params;
	memcpy_s(&ReceiveMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&ReceiveMessage_Params.Message, 0x8, &Message, 0x8);

	uFnReceiveMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnReceiveMessage, &ReceiveMessage_Params, nullptr);

	uFnReceiveMessage->FunctionFlags |= 0x400;
};

// Function ProjectX.ReservationBeacon_X.RemoveMessageHandler
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UReservationBeacon_X::RemoveMessageHandler(struct FScriptDelegate Callback)
{
	static UFunction* uFnRemoveMessageHandler = nullptr;

	if (!uFnRemoveMessageHandler)
	{
		uFnRemoveMessageHandler = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.RemoveMessageHandler");
	}

	UReservationBeacon_X_execRemoveMessageHandler_Params RemoveMessageHandler_Params;
	memcpy_s(&RemoveMessageHandler_Params.Callback, 0x18, &Callback, 0x18);

	uFnRemoveMessageHandler->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveMessageHandler, &RemoveMessageHandler_Params, nullptr);

	uFnRemoveMessageHandler->FunctionFlags |= 0x400;
};

// Function ProjectX.ReservationBeacon_X.AddMessageHandler
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClass*                  MessageClass                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UReservationBeacon_X::AddMessageHandler(class UClass* MessageClass, struct FScriptDelegate Callback)
{
	static UFunction* uFnAddMessageHandler = nullptr;

	if (!uFnAddMessageHandler)
	{
		uFnAddMessageHandler = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.AddMessageHandler");
	}

	UReservationBeacon_X_execAddMessageHandler_Params AddMessageHandler_Params;
	memcpy_s(&AddMessageHandler_Params.MessageClass, 0x8, &MessageClass, 0x8);
	memcpy_s(&AddMessageHandler_Params.Callback, 0x18, &Callback, 0x18);

	uFnAddMessageHandler->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddMessageHandler, &AddMessageHandler_Params, nullptr);

	uFnAddMessageHandler->FunctionFlags |= 0x400;
};

// Function ProjectX.ReservationBeacon_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UReservationBeacon_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.Construct");
	}

	UReservationBeacon_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.EventDisconnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UReservationBeacon_X*    Beacon                         (CPF_Parm | CPF_EditInline)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

void UReservationBeacon_X::EventDisconnected(class UReservationBeacon_X* Beacon, class UIReservationConnection_X* Connection)
{
	static UFunction* uFnEventDisconnected = nullptr;

	if (!uFnEventDisconnected)
	{
		uFnEventDisconnected = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.EventDisconnected");
	}

	UReservationBeacon_X_execEventDisconnected_Params EventDisconnected_Params;
	memcpy_s(&EventDisconnected_Params.Beacon, 0x8, &Beacon, 0x8);
	memcpy_s(&EventDisconnected_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnEventDisconnected, &EventDisconnected_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.EventConnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UReservationBeacon_X*    Beacon                         (CPF_Parm | CPF_EditInline)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

void UReservationBeacon_X::EventConnected(class UReservationBeacon_X* Beacon, class UIReservationConnection_X* Connection)
{
	static UFunction* uFnEventConnected = nullptr;

	if (!uFnEventConnected)
	{
		uFnEventConnected = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.EventConnected");
	}

	UReservationBeacon_X_execEventConnected_Params EventConnected_Params;
	memcpy_s(&EventConnected_Params.Beacon, 0x8, &Beacon, 0x8);
	memcpy_s(&EventConnected_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnEventConnected, &EventConnected_Params, nullptr);
};

// Function ProjectX.ReservationBeacon_X.MessageReceivedDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UReservationBeacon_X::MessageReceivedDelegate(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnMessageReceivedDelegate = nullptr;

	if (!uFnMessageReceivedDelegate)
	{
		uFnMessageReceivedDelegate = UFunction::FindFunction("Function ProjectX.ReservationBeacon_X.MessageReceivedDelegate");
	}

	UReservationBeacon_X_execMessageReceivedDelegate_Params MessageReceivedDelegate_Params;
	memcpy_s(&MessageReceivedDelegate_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&MessageReceivedDelegate_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnMessageReceivedDelegate, &MessageReceivedDelegate_Params, nullptr);
};

// Function ProjectX.BeaconMessage_X.Broadcast
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UBeaconMessage_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UBeaconMessage_X* UBeaconMessage_X::Broadcast()
{
	static UFunction* uFnBroadcast = nullptr;

	if (!uFnBroadcast)
	{
		uFnBroadcast = UFunction::FindFunction("Function ProjectX.BeaconMessage_X.Broadcast");
	}

	UBeaconMessage_X_execBroadcast_Params Broadcast_Params;

	uFnBroadcast->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnBroadcast, &Broadcast_Params, nullptr);

	uFnBroadcast->FunctionFlags |= 0x400;

	return Broadcast_Params.ReturnValue;
};

// Function ProjectX.BeaconMessage_X.Send
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UBeaconMessage_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

class UBeaconMessage_X* UBeaconMessage_X::Send(class UIReservationConnection_X* Connection)
{
	static UFunction* uFnSend = nullptr;

	if (!uFnSend)
	{
		uFnSend = UFunction::FindFunction("Function ProjectX.BeaconMessage_X.Send");
	}

	UBeaconMessage_X_execSend_Params Send_Params;
	memcpy_s(&Send_Params.Connection, 0x10, &Connection, 0x10);

	uFnSend->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSend, &Send_Params, nullptr);

	uFnSend->FunctionFlags |= 0x400;

	return Send_Params.ReturnValue;
};

// Function ProjectX.BreadcrumbBroadcaster_X.PollCrumbs
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UBreadcrumbBroadcaster_X::PollCrumbs()
{
	static UFunction* uFnPollCrumbs = nullptr;

	if (!uFnPollCrumbs)
	{
		uFnPollCrumbs = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.PollCrumbs");
	}

	UBreadcrumbBroadcaster_X_execPollCrumbs_Params PollCrumbs_Params;

	uFnPollCrumbs->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnPollCrumbs, &PollCrumbs_Params, nullptr);

	uFnPollCrumbs->FunctionFlags |= 0x400;
};

// Function ProjectX.BreadcrumbBroadcaster_X.Unsubscribe
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Subscriber                     (CPF_Parm)

void UBreadcrumbBroadcaster_X::Unsubscribe(class UObject* Subscriber)
{
	static UFunction* uFnUnsubscribe = nullptr;

	if (!uFnUnsubscribe)
	{
		uFnUnsubscribe = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.Unsubscribe");
	}

	UBreadcrumbBroadcaster_X_execUnsubscribe_Params Unsubscribe_Params;
	memcpy_s(&Unsubscribe_Params.Subscriber, 0x8, &Subscriber, 0x8);

	uFnUnsubscribe->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUnsubscribe, &Unsubscribe_Params, nullptr);

	uFnUnsubscribe->FunctionFlags |= 0x400;
};

// Function ProjectX.BreadcrumbBroadcaster_X.Subscribe
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UBreadcrumbBroadcaster_X::Subscribe(struct FScriptDelegate Callback)
{
	static UFunction* uFnSubscribe = nullptr;

	if (!uFnSubscribe)
	{
		uFnSubscribe = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.Subscribe");
	}

	UBreadcrumbBroadcaster_X_execSubscribe_Params Subscribe_Params;
	memcpy_s(&Subscribe_Params.Callback, 0x18, &Callback, 0x18);

	uFnSubscribe->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSubscribe, &Subscribe_Params, nullptr);

	uFnSubscribe->FunctionFlags |= 0x400;
};

// Function ProjectX.BreadcrumbBroadcaster_X.HandleConfigChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UBreadcrumbConfig_X*     Config                         (CPF_Parm)

void UBreadcrumbBroadcaster_X::HandleConfigChanged(class UBreadcrumbConfig_X* Config)
{
	static UFunction* uFnHandleConfigChanged = nullptr;

	if (!uFnHandleConfigChanged)
	{
		uFnHandleConfigChanged = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.HandleConfigChanged");
	}

	UBreadcrumbBroadcaster_X_execHandleConfigChanged_Params HandleConfigChanged_Params;
	memcpy_s(&HandleConfigChanged_Params.Config, 0x8, &Config, 0x8);

	this->ProcessEvent(uFnHandleConfigChanged, &HandleConfigChanged_Params, nullptr);
};

// Function ProjectX.BreadcrumbBroadcaster_X.SetPollTimer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        IntervalSeconds                (CPF_Parm)

void UBreadcrumbBroadcaster_X::SetPollTimer(int32_t IntervalSeconds)
{
	static UFunction* uFnSetPollTimer = nullptr;

	if (!uFnSetPollTimer)
	{
		uFnSetPollTimer = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.SetPollTimer");
	}

	UBreadcrumbBroadcaster_X_execSetPollTimer_Params SetPollTimer_Params;
	memcpy_s(&SetPollTimer_Params.IntervalSeconds, 0x4, &IntervalSeconds, 0x4);

	this->ProcessEvent(uFnSetPollTimer, &SetPollTimer_Params, nullptr);
};

// Function ProjectX.BreadcrumbBroadcaster_X.OnInit
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UBreadcrumbBroadcaster_X::eventOnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.OnInit");
	}

	UBreadcrumbBroadcaster_X_eventOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.BreadcrumbBroadcaster_X.InitGlobalInstance_Native
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UBreadcrumbBroadcaster_X::InitGlobalInstance_Native()
{
	static UFunction* uFnInitGlobalInstance_Native = nullptr;

	if (!uFnInitGlobalInstance_Native)
	{
		uFnInitGlobalInstance_Native = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.InitGlobalInstance_Native");
	}

	UBreadcrumbBroadcaster_X_execInitGlobalInstance_Native_Params InitGlobalInstance_Native_Params;

	uFnInitGlobalInstance_Native->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitGlobalInstance_Native, &InitGlobalInstance_Native_Params, nullptr);

	uFnInitGlobalInstance_Native->FunctionFlags |= 0x400;
};

// Function ProjectX.BreadcrumbBroadcaster_X.InitGlobalInstance
// [0x100022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UGameEngine*             Engine                         (CPF_Parm)

void UBreadcrumbBroadcaster_X::InitGlobalInstance(class UGameEngine* Engine)
{
	static UFunction* uFnInitGlobalInstance = nullptr;

	if (!uFnInitGlobalInstance)
	{
		uFnInitGlobalInstance = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.InitGlobalInstance");
	}

	UBreadcrumbBroadcaster_X_execInitGlobalInstance_Params InitGlobalInstance_Params;
	memcpy_s(&InitGlobalInstance_Params.Engine, 0x8, &Engine, 0x8);

	UBreadcrumbBroadcaster_X::StaticClass()->ProcessEvent(uFnInitGlobalInstance, &InitGlobalInstance_Params, nullptr);
};

// Function ProjectX.BreadcrumbBroadcaster_X.OnCrumbAddedDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  Category                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

void UBreadcrumbBroadcaster_X::OnCrumbAddedDelegate(class FString Category, class FString Value)
{
	static UFunction* uFnOnCrumbAddedDelegate = nullptr;

	if (!uFnOnCrumbAddedDelegate)
	{
		uFnOnCrumbAddedDelegate = UFunction::FindFunction("Function ProjectX.BreadcrumbBroadcaster_X.OnCrumbAddedDelegate");
	}

	UBreadcrumbBroadcaster_X_execOnCrumbAddedDelegate_Params OnCrumbAddedDelegate_Params;
	memcpy_s(&OnCrumbAddedDelegate_Params.Category, 0x10, &Category, 0x10);
	memcpy_s(&OnCrumbAddedDelegate_Params.Value, 0x10, &Value, 0x10);

	this->ProcessEvent(uFnOnCrumbAddedDelegate, &OnCrumbAddedDelegate_Params, nullptr);
};

// Function ProjectX.CachedWebData_X.GetText
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UCachedWebData_X::GetText()
{
	static UFunction* uFnGetText = nullptr;

	if (!uFnGetText)
	{
		uFnGetText = UFunction::FindFunction("Function ProjectX.CachedWebData_X.GetText");
	}

	UCachedWebData_X_execGetText_Params GetText_Params;

	uFnGetText->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetText, &GetText_Params, nullptr);

	uFnGetText->FunctionFlags |= 0x400;

	return GetText_Params.ReturnValue;
};

// Function ProjectX.CachedWebData_X.SetData
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<uint8_t>                NewData                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  NewETag                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  NewContentType                 (CPF_Parm | CPF_NeedCtorLink)
// class FString                  NewSignature                   (CPF_Parm | CPF_NeedCtorLink)

void UCachedWebData_X::SetData(TArray<uint8_t> NewData, class FString NewETag, class FString NewContentType, class FString NewSignature)
{
	static UFunction* uFnSetData = nullptr;

	if (!uFnSetData)
	{
		uFnSetData = UFunction::FindFunction("Function ProjectX.CachedWebData_X.SetData");
	}

	UCachedWebData_X_execSetData_Params SetData_Params;
	memcpy_s(&SetData_Params.NewData, 0x10, &NewData, 0x10);
	memcpy_s(&SetData_Params.NewETag, 0x10, &NewETag, 0x10);
	memcpy_s(&SetData_Params.NewContentType, 0x10, &NewContentType, 0x10);
	memcpy_s(&SetData_Params.NewSignature, 0x10, &NewSignature, 0x10);

	uFnSetData->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetData, &SetData_Params, nullptr);

	uFnSetData->FunctionFlags |= 0x400;
};

// Function ProjectX.Camera_X.__Camera_X__Destroyed_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UCameraState_X*          S                              (CPF_Parm)

void ACamera_X::__Camera_X__Destroyed_0x1(class UCameraState_X* S)
{
	static UFunction* uFn__Camera_X__Destroyed_0x1 = nullptr;

	if (!uFn__Camera_X__Destroyed_0x1)
	{
		uFn__Camera_X__Destroyed_0x1 = UFunction::FindFunction("Function ProjectX.Camera_X.__Camera_X__Destroyed_0x1");
	}

	ACamera_X_exec__Camera_X__Destroyed_0x1_Params __Camera_X__Destroyed_0x1_Params;
	memcpy_s(&__Camera_X__Destroyed_0x1_Params.S, 0x8, &S, 0x8);

	this->ProcessEvent(uFn__Camera_X__Destroyed_0x1, &__Camera_X__Destroyed_0x1_Params, nullptr);
};

// Function ProjectX.Camera_X.Destroyed
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void ACamera_X::Destroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function ProjectX.Camera_X.Destroyed");
	}

	ACamera_X_execDestroyed_Params Destroyed_Params;

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function ProjectX.Camera_X.OnViewTargetChanged
// [0x00080800] (FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void ACamera_X::eventOnViewTargetChanged()
{
	static UFunction* uFnOnViewTargetChanged = nullptr;

	if (!uFnOnViewTargetChanged)
	{
		uFnOnViewTargetChanged = UFunction::FindFunction("Function ProjectX.Camera_X.OnViewTargetChanged");
	}

	ACamera_X_eventOnViewTargetChanged_Params OnViewTargetChanged_Params;

	this->ProcessEvent(uFnOnViewTargetChanged, &OnViewTargetChanged_Params, nullptr);
};

// Function ProjectX.Camera_X.SetViewTarget
// [0x400024400] (FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AActor*                  NewViewTarget                  (CPF_Parm)
// struct FViewTargetTransitionParams TransitionParams               (CPF_OptionalParm | CPF_Parm)

void ACamera_X::SetViewTarget(class AActor* NewViewTarget, struct FViewTargetTransitionParams TransitionParams)
{
	static UFunction* uFnSetViewTarget = nullptr;

	if (!uFnSetViewTarget)
	{
		uFnSetViewTarget = UFunction::FindFunction("Function ProjectX.Camera_X.SetViewTarget");
	}

	ACamera_X_execSetViewTarget_Params SetViewTarget_Params;
	memcpy_s(&SetViewTarget_Params.NewViewTarget, 0x8, &NewViewTarget, 0x8);
	memcpy_s(&SetViewTarget_Params.TransitionParams, 0x10, &TransitionParams, 0x10);

	uFnSetViewTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetViewTarget, &SetViewTarget_Params, nullptr);

	uFnSetViewTarget->FunctionFlags |= 0x400;
};

// Function ProjectX.Camera_X.IsTransitioning
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool ACamera_X::IsTransitioning()
{
	static UFunction* uFnIsTransitioning = nullptr;

	if (!uFnIsTransitioning)
	{
		uFnIsTransitioning = UFunction::FindFunction("Function ProjectX.Camera_X.IsTransitioning");
	}

	ACamera_X_execIsTransitioning_Params IsTransitioning_Params;

	this->ProcessEvent(uFnIsTransitioning, &IsTransitioning_Params, nullptr);

	return IsTransitioning_Params.ReturnValue;
};

// Function ProjectX.Camera_X.HandleBlenderStateChanged
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCameraStateBlender_X*   CameraBlender                  (CPF_Parm | CPF_EditInline)

void ACamera_X::HandleBlenderStateChanged(class UCameraStateBlender_X* CameraBlender)
{
	static UFunction* uFnHandleBlenderStateChanged = nullptr;

	if (!uFnHandleBlenderStateChanged)
	{
		uFnHandleBlenderStateChanged = UFunction::FindFunction("Function ProjectX.Camera_X.HandleBlenderStateChanged");
	}

	ACamera_X_execHandleBlenderStateChanged_Params HandleBlenderStateChanged_Params;
	memcpy_s(&HandleBlenderStateChanged_Params.CameraBlender, 0x8, &CameraBlender, 0x8);

	this->ProcessEvent(uFnHandleBlenderStateChanged, &HandleBlenderStateChanged_Params, nullptr);
};

// Function ProjectX.Camera_X.SnapTransition
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void ACamera_X::SnapTransition()
{
	static UFunction* uFnSnapTransition = nullptr;

	if (!uFnSnapTransition)
	{
		uFnSnapTransition = UFunction::FindFunction("Function ProjectX.Camera_X.SnapTransition");
	}

	ACamera_X_execSnapTransition_Params SnapTransition_Params;

	this->ProcessEvent(uFnSnapTransition, &SnapTransition_Params, nullptr);
};

// Function ProjectX.Camera_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void ACamera_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.Camera_X.PrintDebugInfo");
	}

	ACamera_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.Camera_X.ApplyCameraModifiers
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FTPOV                   OutPOV                         (CPF_Parm | CPF_OutParm)

void ACamera_X::ApplyCameraModifiers(float DeltaTime, struct FTPOV& OutPOV)
{
	static UFunction* uFnApplyCameraModifiers = nullptr;

	if (!uFnApplyCameraModifiers)
	{
		uFnApplyCameraModifiers = UFunction::FindFunction("Function ProjectX.Camera_X.ApplyCameraModifiers");
	}

	ACamera_X_execApplyCameraModifiers_Params ApplyCameraModifiers_Params;
	memcpy_s(&ApplyCameraModifiers_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&ApplyCameraModifiers_Params.OutPOV, 0x1C, &OutPOV, 0x1C);

	uFnApplyCameraModifiers->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnApplyCameraModifiers, &ApplyCameraModifiers_Params, nullptr);

	uFnApplyCameraModifiers->FunctionFlags |= 0x400;

	memcpy_s(&OutPOV, 0x1C, &ApplyCameraModifiers_Params.OutPOV, 0x1C);
};

// Function ProjectX.Camera_X.CameraTrace
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 End                            (CPF_Parm)
// struct FVector                 Start                          (CPF_Parm)
// struct FVector                 Extent                         (CPF_Parm)
// struct FVector                 HitLoc                         (CPF_OptionalParm | CPF_Parm | CPF_OutParm)
// class AActor*                  HitActor                       (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool ACamera_X::CameraTrace(struct FVector End, struct FVector Start, struct FVector Extent, struct FVector& HitLoc, class AActor*& HitActor)
{
	static UFunction* uFnCameraTrace = nullptr;

	if (!uFnCameraTrace)
	{
		uFnCameraTrace = UFunction::FindFunction("Function ProjectX.Camera_X.CameraTrace");
	}

	ACamera_X_execCameraTrace_Params CameraTrace_Params;
	memcpy_s(&CameraTrace_Params.End, 0xC, &End, 0xC);
	memcpy_s(&CameraTrace_Params.Start, 0xC, &Start, 0xC);
	memcpy_s(&CameraTrace_Params.Extent, 0xC, &Extent, 0xC);
	memcpy_s(&CameraTrace_Params.HitLoc, 0xC, &HitLoc, 0xC);
	memcpy_s(&CameraTrace_Params.HitActor, 0x8, &HitActor, 0x8);

	uFnCameraTrace->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCameraTrace, &CameraTrace_Params, nullptr);

	uFnCameraTrace->FunctionFlags |= 0x400;

	memcpy_s(&HitLoc, 0xC, &CameraTrace_Params.HitLoc, 0xC);
	memcpy_s(&HitActor, 0x8, &CameraTrace_Params.HitActor, 0x8);

	return CameraTrace_Params.ReturnValue;
};

// Function ProjectX.Camera_X.InstanceCameraState
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCameraState_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCameraState_X*          Archetype                      (CPF_Parm)

class UCameraState_X* ACamera_X::InstanceCameraState(class UCameraState_X* Archetype)
{
	static UFunction* uFnInstanceCameraState = nullptr;

	if (!uFnInstanceCameraState)
	{
		uFnInstanceCameraState = UFunction::FindFunction("Function ProjectX.Camera_X.InstanceCameraState");
	}

	ACamera_X_execInstanceCameraState_Params InstanceCameraState_Params;
	memcpy_s(&InstanceCameraState_Params.Archetype, 0x8, &Archetype, 0x8);

	this->ProcessEvent(uFnInstanceCameraState, &InstanceCameraState_Params, nullptr);

	return InstanceCameraState_Params.ReturnValue;
};

// Function ProjectX.Camera_X.ModifyPostProcessSettings
// [0x00420803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FPostProcessSettings    PP                             (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void ACamera_X::eventModifyPostProcessSettings(struct FPostProcessSettings& PP)
{
	static UFunction* uFnModifyPostProcessSettings = nullptr;

	if (!uFnModifyPostProcessSettings)
	{
		uFnModifyPostProcessSettings = UFunction::FindFunction("Function ProjectX.Camera_X.ModifyPostProcessSettings");
	}

	ACamera_X_eventModifyPostProcessSettings_Params ModifyPostProcessSettings_Params;
	memcpy_s(&ModifyPostProcessSettings_Params.PP, 0x168, &PP, 0x168);

	this->ProcessEvent(uFnModifyPostProcessSettings, &ModifyPostProcessSettings_Params, nullptr);

	memcpy_s(&PP, 0x168, &ModifyPostProcessSettings_Params.PP, 0x168);
};

// Function ProjectX.Camera_X.ProcessViewRotation
// [0x400420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FRotator                OutViewRotation                (CPF_Parm | CPF_OutParm)
// struct FRotator                OutDeltaRot                    (CPF_Parm | CPF_OutParm)

void ACamera_X::ProcessViewRotation(float DeltaTime, struct FRotator& OutViewRotation, struct FRotator& OutDeltaRot)
{
	static UFunction* uFnProcessViewRotation = nullptr;

	if (!uFnProcessViewRotation)
	{
		uFnProcessViewRotation = UFunction::FindFunction("Function ProjectX.Camera_X.ProcessViewRotation");
	}

	ACamera_X_execProcessViewRotation_Params ProcessViewRotation_Params;
	memcpy_s(&ProcessViewRotation_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&ProcessViewRotation_Params.OutViewRotation, 0xC, &OutViewRotation, 0xC);
	memcpy_s(&ProcessViewRotation_Params.OutDeltaRot, 0xC, &OutDeltaRot, 0xC);

	this->ProcessEvent(uFnProcessViewRotation, &ProcessViewRotation_Params, nullptr);

	memcpy_s(&OutViewRotation, 0xC, &ProcessViewRotation_Params.OutViewRotation, 0xC);
	memcpy_s(&OutDeltaRot, 0xC, &ProcessViewRotation_Params.OutDeltaRot, 0xC);
};

// Function ProjectX.Camera_X.PostProcessCameraState
// [0x00480002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void ACamera_X::PostProcessCameraState(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnPostProcessCameraState = nullptr;

	if (!uFnPostProcessCameraState)
	{
		uFnPostProcessCameraState = UFunction::FindFunction("Function ProjectX.Camera_X.PostProcessCameraState");
	}

	ACamera_X_execPostProcessCameraState_Params PostProcessCameraState_Params;
	memcpy_s(&PostProcessCameraState_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&PostProcessCameraState_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnPostProcessCameraState, &PostProcessCameraState_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &PostProcessCameraState_Params.OutPOV, 0x2C);
};

// Function ProjectX.Camera_X.ProcessCameraState
// [0x00480002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void ACamera_X::ProcessCameraState(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnProcessCameraState = nullptr;

	if (!uFnProcessCameraState)
	{
		uFnProcessCameraState = UFunction::FindFunction("Function ProjectX.Camera_X.ProcessCameraState");
	}

	ACamera_X_execProcessCameraState_Params ProcessCameraState_Params;
	memcpy_s(&ProcessCameraState_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&ProcessCameraState_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnProcessCameraState, &ProcessCameraState_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &ProcessCameraState_Params.OutPOV, 0x2C);
};

// Function ProjectX.Camera_X.CheckViewTarget
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FTViewTarget            VT                             (CPF_Parm | CPF_OutParm)

void ACamera_X::CheckViewTarget(struct FTViewTarget& VT)
{
	static UFunction* uFnCheckViewTarget = nullptr;

	if (!uFnCheckViewTarget)
	{
		uFnCheckViewTarget = UFunction::FindFunction("Function ProjectX.Camera_X.CheckViewTarget");
	}

	ACamera_X_execCheckViewTarget_Params CheckViewTarget_Params;
	memcpy_s(&CheckViewTarget_Params.VT, 0x38, &VT, 0x38);

	uFnCheckViewTarget->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCheckViewTarget, &CheckViewTarget_Params, nullptr);

	uFnCheckViewTarget->FunctionFlags |= 0x400;

	memcpy_s(&VT, 0x38, &CheckViewTarget_Params.VT, 0x38);
};

// Function ProjectX.Camera_X.CopyFade
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ACamera_X*               Other                          (CPF_Parm)

void ACamera_X::CopyFade(class ACamera_X* Other)
{
	static UFunction* uFnCopyFade = nullptr;

	if (!uFnCopyFade)
	{
		uFnCopyFade = UFunction::FindFunction("Function ProjectX.Camera_X.CopyFade");
	}

	ACamera_X_execCopyFade_Params CopyFade_Params;
	memcpy_s(&CopyFade_Params.Other, 0x8, &Other, 0x8);

	this->ProcessEvent(uFnCopyFade, &CopyFade_Params, nullptr);
};

// Function ProjectX.Camera_X.SetCameraFade
// [0x400024002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bNewEnableFading               (CPF_Parm)
// struct FColor                  NewFadeColor                   (CPF_OptionalParm | CPF_Parm)
// struct FVector2D               NewFadeAlpha                   (CPF_OptionalParm | CPF_Parm)
// float                          NewFadeTime                    (CPF_OptionalParm | CPF_Parm)
// unsigned long                  bNewFadeAudio                  (CPF_OptionalParm | CPF_Parm)

void ACamera_X::SetCameraFade(unsigned long bNewEnableFading, struct FColor NewFadeColor, struct FVector2D NewFadeAlpha, float NewFadeTime, unsigned long bNewFadeAudio)
{
	static UFunction* uFnSetCameraFade = nullptr;

	if (!uFnSetCameraFade)
	{
		uFnSetCameraFade = UFunction::FindFunction("Function ProjectX.Camera_X.SetCameraFade");
	}

	ACamera_X_execSetCameraFade_Params SetCameraFade_Params;
	SetCameraFade_Params.bNewEnableFading = bNewEnableFading;
	memcpy_s(&SetCameraFade_Params.NewFadeColor, 0x4, &NewFadeColor, 0x4);
	memcpy_s(&SetCameraFade_Params.NewFadeAlpha, 0x8, &NewFadeAlpha, 0x8);
	memcpy_s(&SetCameraFade_Params.NewFadeTime, 0x4, &NewFadeTime, 0x4);
	SetCameraFade_Params.bNewFadeAudio = bNewFadeAudio;

	this->ProcessEvent(uFnSetCameraFade, &SetCameraFade_Params, nullptr);
};

// Function ProjectX.Camera_X.UpdateFade
// [0x400080102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void ACamera_X::UpdateFade(float DeltaTime)
{
	static UFunction* uFnUpdateFade = nullptr;

	if (!uFnUpdateFade)
	{
		uFnUpdateFade = UFunction::FindFunction("Function ProjectX.Camera_X.UpdateFade");
	}

	ACamera_X_execUpdateFade_Params UpdateFade_Params;
	memcpy_s(&UpdateFade_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnUpdateFade, &UpdateFade_Params, nullptr);
};

// Function ProjectX.Camera_X.UpdateCamera
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void ACamera_X::eventUpdateCamera(float DeltaTime)
{
	static UFunction* uFnUpdateCamera = nullptr;

	if (!uFnUpdateCamera)
	{
		uFnUpdateCamera = UFunction::FindFunction("Function ProjectX.Camera_X.UpdateCamera");
	}

	ACamera_X_eventUpdateCamera_Params UpdateCamera_Params;
	memcpy_s(&UpdateCamera_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnUpdateCamera, &UpdateCamera_Params, nullptr);
};

// Function ProjectX.Camera_X.ClampPOV
// [0x00480101] (FUNC_Final | FUNC_NetRequest | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void ACamera_X::ClampPOV(struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnClampPOV = nullptr;

	if (!uFnClampPOV)
	{
		uFnClampPOV = UFunction::FindFunction("Function ProjectX.Camera_X.ClampPOV");
	}

	ACamera_X_execClampPOV_Params ClampPOV_Params;
	memcpy_s(&ClampPOV_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnClampPOV, &ClampPOV_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &ClampPOV_Params.OutPOV, 0x2C);
};

// Function ProjectX.Camera_X.RemoveRoll
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FRotator                InRot                          (CPF_Parm)

struct FRotator ACamera_X::RemoveRoll(struct FRotator InRot)
{
	static UFunction* uFnRemoveRoll = nullptr;

	if (!uFnRemoveRoll)
	{
		uFnRemoveRoll = UFunction::FindFunction("Function ProjectX.Camera_X.RemoveRoll");
	}

	ACamera_X_execRemoveRoll_Params RemoveRoll_Params;
	memcpy_s(&RemoveRoll_Params.InRot, 0xC, &InRot, 0xC);

	this->ProcessEvent(uFnRemoveRoll, &RemoveRoll_Params, nullptr);

	return RemoveRoll_Params.ReturnValue;
};

// Function ProjectX.Camera_X.GetCameraState
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCameraState_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UCameraState_X* ACamera_X::GetCameraState()
{
	static UFunction* uFnGetCameraState = nullptr;

	if (!uFnGetCameraState)
	{
		uFnGetCameraState = UFunction::FindFunction("Function ProjectX.Camera_X.GetCameraState");
	}

	ACamera_X_execGetCameraState_Params GetCameraState_Params;

	this->ProcessEvent(uFnGetCameraState, &GetCameraState_Params, nullptr);

	return GetCameraState_Params.ReturnValue;
};

// Function ProjectX.Camera_X.SelectCameraState
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UCameraState_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UCameraState_X* ACamera_X::SelectCameraState()
{
	static UFunction* uFnSelectCameraState = nullptr;

	if (!uFnSelectCameraState)
	{
		uFnSelectCameraState = UFunction::FindFunction("Function ProjectX.Camera_X.SelectCameraState");
	}

	ACamera_X_execSelectCameraState_Params SelectCameraState_Params;

	this->ProcessEvent(uFnSelectCameraState, &SelectCameraState_Params, nullptr);

	return SelectCameraState_Params.ReturnValue;
};

// Function ProjectX.Camera_X.UpdateCameraState
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void ACamera_X::UpdateCameraState()
{
	static UFunction* uFnUpdateCameraState = nullptr;

	if (!uFnUpdateCameraState)
	{
		uFnUpdateCameraState = UFunction::FindFunction("Function ProjectX.Camera_X.UpdateCameraState");
	}

	ACamera_X_execUpdateCameraState_Params UpdateCameraState_Params;

	this->ProcessEvent(uFnUpdateCameraState, &UpdateCameraState_Params, nullptr);
};

// Function ProjectX.Camera_X.UpdateCameraKnocks
// [0x00C80003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void ACamera_X::UpdateCameraKnocks(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnUpdateCameraKnocks = nullptr;

	if (!uFnUpdateCameraKnocks)
	{
		uFnUpdateCameraKnocks = UFunction::FindFunction("Function ProjectX.Camera_X.UpdateCameraKnocks");
	}

	ACamera_X_execUpdateCameraKnocks_Params UpdateCameraKnocks_Params;
	memcpy_s(&UpdateCameraKnocks_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&UpdateCameraKnocks_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnUpdateCameraKnocks, &UpdateCameraKnocks_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &UpdateCameraKnocks_Params.OutPOV, 0x2C);
};

// Function ProjectX.Camera_X.AddRotationKnock
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FRotationCameraKnock    Knock                          (CPF_Parm)
// float                          Scale                          (CPF_OptionalParm | CPF_Parm)

void ACamera_X::AddRotationKnock(struct FRotationCameraKnock Knock, float Scale)
{
	static UFunction* uFnAddRotationKnock = nullptr;

	if (!uFnAddRotationKnock)
	{
		uFnAddRotationKnock = UFunction::FindFunction("Function ProjectX.Camera_X.AddRotationKnock");
	}

	ACamera_X_execAddRotationKnock_Params AddRotationKnock_Params;
	memcpy_s(&AddRotationKnock_Params.Knock, 0x1C, &Knock, 0x1C);
	memcpy_s(&AddRotationKnock_Params.Scale, 0x4, &Scale, 0x4);

	this->ProcessEvent(uFnAddRotationKnock, &AddRotationKnock_Params, nullptr);
};

// Function ProjectX.Camera_X.AddLocationKnock
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FLocationCameraKnock    Knock                          (CPF_Parm)
// float                          Scale                          (CPF_OptionalParm | CPF_Parm)
// struct FRotator                Transform                      (CPF_OptionalParm | CPF_Parm)

void ACamera_X::AddLocationKnock(struct FLocationCameraKnock Knock, float Scale, struct FRotator Transform)
{
	static UFunction* uFnAddLocationKnock = nullptr;

	if (!uFnAddLocationKnock)
	{
		uFnAddLocationKnock = UFunction::FindFunction("Function ProjectX.Camera_X.AddLocationKnock");
	}

	ACamera_X_execAddLocationKnock_Params AddLocationKnock_Params;
	memcpy_s(&AddLocationKnock_Params.Knock, 0x1C, &Knock, 0x1C);
	memcpy_s(&AddLocationKnock_Params.Scale, 0x4, &Scale, 0x4);
	memcpy_s(&AddLocationKnock_Params.Transform, 0xC, &Transform, 0xC);

	this->ProcessEvent(uFnAddLocationKnock, &AddLocationKnock_Params, nullptr);
};

// Function ProjectX.Camera_X.InstanceCameraStates
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void ACamera_X::InstanceCameraStates()
{
	static UFunction* uFnInstanceCameraStates = nullptr;

	if (!uFnInstanceCameraStates)
	{
		uFnInstanceCameraStates = UFunction::FindFunction("Function ProjectX.Camera_X.InstanceCameraStates");
	}

	ACamera_X_execInstanceCameraStates_Params InstanceCameraStates_Params;

	this->ProcessEvent(uFnInstanceCameraStates, &InstanceCameraStates_Params, nullptr);
};

// Function ProjectX.Camera_X.InitializeFor
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       PC                             (CPF_Parm)

void ACamera_X::InitializeFor(class APlayerController* PC)
{
	static UFunction* uFnInitializeFor = nullptr;

	if (!uFnInitializeFor)
	{
		uFnInitializeFor = UFunction::FindFunction("Function ProjectX.Camera_X.InitializeFor");
	}

	ACamera_X_execInitializeFor_Params InitializeFor_Params;
	memcpy_s(&InitializeFor_Params.PC, 0x8, &PC, 0x8);

	this->ProcessEvent(uFnInitializeFor, &InitializeFor_Params, nullptr);
};

// Function ProjectX.Camera_X.ModifyCameraShakeScale
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCameraShake*            Shake                          (CPF_Parm)
// float                          NewScale                       (CPF_Parm)

void ACamera_X::ModifyCameraShakeScale(class UCameraShake* Shake, float NewScale)
{
	static UFunction* uFnModifyCameraShakeScale = nullptr;

	if (!uFnModifyCameraShakeScale)
	{
		uFnModifyCameraShakeScale = UFunction::FindFunction("Function ProjectX.Camera_X.ModifyCameraShakeScale");
	}

	ACamera_X_execModifyCameraShakeScale_Params ModifyCameraShakeScale_Params;
	memcpy_s(&ModifyCameraShakeScale_Params.Shake, 0x8, &Shake, 0x8);
	memcpy_s(&ModifyCameraShakeScale_Params.NewScale, 0x4, &NewScale, 0x4);

	this->ProcessEvent(uFnModifyCameraShakeScale, &ModifyCameraShakeScale_Params, nullptr);
};

// Function ProjectX.Camera_X.OnLoadingMovieClosesd
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void ACamera_X::OnLoadingMovieClosesd()
{
	static UFunction* uFnOnLoadingMovieClosesd = nullptr;

	if (!uFnOnLoadingMovieClosesd)
	{
		uFnOnLoadingMovieClosesd = UFunction::FindFunction("Function ProjectX.Camera_X.OnLoadingMovieClosesd");
	}

	ACamera_X_execOnLoadingMovieClosesd_Params OnLoadingMovieClosesd_Params;

	this->ProcessEvent(uFnOnLoadingMovieClosesd, &OnLoadingMovieClosesd_Params, nullptr);
};

// Function ProjectX.Camera_X.PostBeginPlay
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void ACamera_X::eventPostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function ProjectX.Camera_X.PostBeginPlay");
	}

	ACamera_X_eventPostBeginPlay_Params PostBeginPlay_Params;

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function ProjectX.Camera_X.InterpVector
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 OldValue                       (CPF_Parm)
// struct FVector                 NewValue                       (CPF_Parm)
// struct FVectorInterpRate       Rate                           (CPF_Parm)
// struct FRotator                Orientation                    (CPF_Parm)
// float                          DeltaTime                      (CPF_Parm)

struct FVector ACamera_X::InterpVector(struct FVector OldValue, struct FVector NewValue, struct FVectorInterpRate Rate, struct FRotator Orientation, float DeltaTime)
{
	static UFunction* uFnInterpVector = nullptr;

	if (!uFnInterpVector)
	{
		uFnInterpVector = UFunction::FindFunction("Function ProjectX.Camera_X.InterpVector");
	}

	ACamera_X_execInterpVector_Params InterpVector_Params;
	memcpy_s(&InterpVector_Params.OldValue, 0xC, &OldValue, 0xC);
	memcpy_s(&InterpVector_Params.NewValue, 0xC, &NewValue, 0xC);
	memcpy_s(&InterpVector_Params.Rate, 0x18, &Rate, 0x18);
	memcpy_s(&InterpVector_Params.Orientation, 0xC, &Orientation, 0xC);
	memcpy_s(&InterpVector_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	ACamera_X::StaticClass()->ProcessEvent(uFnInterpVector, &InterpVector_Params, nullptr);

	return InterpVector_Params.ReturnValue;
};

// Function ProjectX.Camera_X.FinalizeOrientation
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void ACamera_X::FinalizeOrientation(struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnFinalizeOrientation = nullptr;

	if (!uFnFinalizeOrientation)
	{
		uFnFinalizeOrientation = UFunction::FindFunction("Function ProjectX.Camera_X.FinalizeOrientation");
	}

	ACamera_X_execFinalizeOrientation_Params FinalizeOrientation_Params;
	memcpy_s(&FinalizeOrientation_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	ACamera_X::StaticClass()->ProcessEvent(uFnFinalizeOrientation, &FinalizeOrientation_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &FinalizeOrientation_Params.OutPOV, 0x2C);
};

// Function ProjectX.Camera_X.BlendCameraOrientations
// [0x00C22003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FCameraOrientation      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Alpha                          (CPF_Parm)
// struct FCameraOrientation      A                              (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FCameraOrientation      B                              (CPF_Const | CPF_Parm | CPF_OutParm)

struct FCameraOrientation ACamera_X::BlendCameraOrientations(float Alpha, struct FCameraOrientation& A, struct FCameraOrientation& B)
{
	static UFunction* uFnBlendCameraOrientations = nullptr;

	if (!uFnBlendCameraOrientations)
	{
		uFnBlendCameraOrientations = UFunction::FindFunction("Function ProjectX.Camera_X.BlendCameraOrientations");
	}

	ACamera_X_execBlendCameraOrientations_Params BlendCameraOrientations_Params;
	memcpy_s(&BlendCameraOrientations_Params.Alpha, 0x4, &Alpha, 0x4);
	memcpy_s(&BlendCameraOrientations_Params.A, 0x2C, &A, 0x2C);
	memcpy_s(&BlendCameraOrientations_Params.B, 0x2C, &B, 0x2C);

	ACamera_X::StaticClass()->ProcessEvent(uFnBlendCameraOrientations, &BlendCameraOrientations_Params, nullptr);

	memcpy_s(&A, 0x2C, &BlendCameraOrientations_Params.A, 0x2C);
	memcpy_s(&B, 0x2C, &BlendCameraOrientations_Params.B, 0x2C);

	return BlendCameraOrientations_Params.ReturnValue;
};

// Function ProjectX.Camera_X.EventCameraStateChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class ACamera_X*               Camera                         (CPF_Parm)
// class UCameraState_X*          CameraState                    (CPF_Parm)

void ACamera_X::EventCameraStateChanged(class ACamera_X* Camera, class UCameraState_X* CameraState)
{
	static UFunction* uFnEventCameraStateChanged = nullptr;

	if (!uFnEventCameraStateChanged)
	{
		uFnEventCameraStateChanged = UFunction::FindFunction("Function ProjectX.Camera_X.EventCameraStateChanged");
	}

	ACamera_X_execEventCameraStateChanged_Params EventCameraStateChanged_Params;
	memcpy_s(&EventCameraStateChanged_Params.Camera, 0x8, &Camera, 0x8);
	memcpy_s(&EventCameraStateChanged_Params.CameraState, 0x8, &CameraState, 0x8);

	this->ProcessEvent(uFnEventCameraStateChanged, &EventCameraStateChanged_Params, nullptr);
};

// Function ProjectX.CanvasTexture_X.Draw
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UCanvas*                 C                              (CPF_Parm)

void UCanvasTexture_X::Draw(class UCanvas* C)
{
	static UFunction* uFnDraw = nullptr;

	if (!uFnDraw)
	{
		uFnDraw = UFunction::FindFunction("Function ProjectX.CanvasTexture_X.Draw");
	}

	UCanvasTexture_X_execDraw_Params Draw_Params;
	memcpy_s(&Draw_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnDraw, &Draw_Params, nullptr);
};

// Function ProjectX.CanvasTextureComponent_X.OnDraw
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCanvas*                 C                              (CPF_Parm)

void UCanvasTextureComponent_X::OnDraw(class UCanvas* C)
{
	static UFunction* uFnOnDraw = nullptr;

	if (!uFnOnDraw)
	{
		uFnOnDraw = UFunction::FindFunction("Function ProjectX.CanvasTextureComponent_X.OnDraw");
	}

	UCanvasTextureComponent_X_execOnDraw_Params OnDraw_Params;
	memcpy_s(&OnDraw_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnOnDraw, &OnDraw_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ToggleDebugCamera
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::ToggleDebugCamera()
{
	static UFunction* uFnToggleDebugCamera = nullptr;

	if (!uFnToggleDebugCamera)
	{
		uFnToggleDebugCamera = UFunction::FindFunction("Function ProjectX.PlayerController_X.ToggleDebugCamera");
	}

	APlayerController_X_execToggleDebugCamera_Params ToggleDebugCamera_Params;

	this->ProcessEvent(uFnToggleDebugCamera, &ToggleDebugCamera_Params, nullptr);
};

// Function ProjectX.PlayerController_X.DebugCrosshair
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::DebugCrosshair()
{
	static UFunction* uFnDebugCrosshair = nullptr;

	if (!uFnDebugCrosshair)
	{
		uFnDebugCrosshair = UFunction::FindFunction("Function ProjectX.PlayerController_X.DebugCrosshair");
	}

	APlayerController_X_execDebugCrosshair_Params DebugCrosshair_Params;

	this->ProcessEvent(uFnDebugCrosshair, &DebugCrosshair_Params, nullptr);
};

// Function ProjectX.PlayerController_X.DebugKill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::DebugKill()
{
	static UFunction* uFnDebugKill = nullptr;

	if (!uFnDebugKill)
	{
		uFnDebugKill = UFunction::FindFunction("Function ProjectX.PlayerController_X.DebugKill");
	}

	APlayerController_X_execDebugKill_Params DebugKill_Params;

	this->ProcessEvent(uFnDebugKill, &DebugKill_Params, nullptr);
};

// Function ProjectX.PlayerController_X.DebugKillAllExcept
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::DebugKillAllExcept()
{
	static UFunction* uFnDebugKillAllExcept = nullptr;

	if (!uFnDebugKillAllExcept)
	{
		uFnDebugKillAllExcept = UFunction::FindFunction("Function ProjectX.PlayerController_X.DebugKillAllExcept");
	}

	APlayerController_X_execDebugKillAllExcept_Params DebugKillAllExcept_Params;

	this->ProcessEvent(uFnDebugKillAllExcept, &DebugKillAllExcept_Params, nullptr);
};

// Function ProjectX.PlayerController_X.GetAutoAimTarget
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AActor*                  HitActor                       (CPF_Parm | CPF_OutParm)
// struct FVector                 HitLoc                         (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool APlayerController_X::GetAutoAimTarget(class AActor*& HitActor, struct FVector& HitLoc)
{
	static UFunction* uFnGetAutoAimTarget = nullptr;

	if (!uFnGetAutoAimTarget)
	{
		uFnGetAutoAimTarget = UFunction::FindFunction("Function ProjectX.PlayerController_X.GetAutoAimTarget");
	}

	APlayerController_X_execGetAutoAimTarget_Params GetAutoAimTarget_Params;
	memcpy_s(&GetAutoAimTarget_Params.HitActor, 0x8, &HitActor, 0x8);
	memcpy_s(&GetAutoAimTarget_Params.HitLoc, 0xC, &HitLoc, 0xC);

	this->ProcessEvent(uFnGetAutoAimTarget, &GetAutoAimTarget_Params, nullptr);

	memcpy_s(&HitActor, 0x8, &GetAutoAimTarget_Params.HitActor, 0x8);
	memcpy_s(&HitLoc, 0xC, &GetAutoAimTarget_Params.HitLoc, 0xC);

	return GetAutoAimTarget_Params.ReturnValue;
};

// Function ProjectX.PlayerController_X.__PlayerController_X__ReceivedPlayer_0x1
// [0x40040103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UObject*                 _                              (CPF_Parm)

void APlayerController_X::__PlayerController_X__ReceivedPlayer_0x1(class UObject* _)
{
	static UFunction* uFn__PlayerController_X__ReceivedPlayer_0x1 = nullptr;

	if (!uFn__PlayerController_X__ReceivedPlayer_0x1)
	{
		uFn__PlayerController_X__ReceivedPlayer_0x1 = UFunction::FindFunction("Function ProjectX.PlayerController_X.__PlayerController_X__ReceivedPlayer_0x1");
	}

	APlayerController_X_exec__PlayerController_X__ReceivedPlayer_0x1_Params __PlayerController_X__ReceivedPlayer_0x1_Params;
	memcpy_s(&__PlayerController_X__ReceivedPlayer_0x1_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__PlayerController_X__ReceivedPlayer_0x1, &__PlayerController_X__ReceivedPlayer_0x1_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ClientSetSeasonReward
// [0x010201C3] (FUNC_Final | FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_NetRequest | FUNC_Public | FUNC_NetClient | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSeasonRewardProgress Reward                         (CPF_Parm | CPF_NeedCtorLink)

void APlayerController_X::ClientSetSeasonReward(struct FPlayerSeasonRewardProgress Reward)
{
	static UFunction* uFnClientSetSeasonReward = nullptr;

	if (!uFnClientSetSeasonReward)
	{
		uFnClientSetSeasonReward = UFunction::FindFunction("Function ProjectX.PlayerController_X.ClientSetSeasonReward");
	}

	APlayerController_X_execClientSetSeasonReward_Params ClientSetSeasonReward_Params;
	memcpy_s(&ClientSetSeasonReward_Params.Reward, 0x50, &Reward, 0x50);

	this->ProcessEvent(uFnClientSetSeasonReward, &ClientSetSeasonReward_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ServerUpdateCustomMatchSettings
// [0x002200C2] (FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_Public | FUNC_NetServer | FUNC_AllFlags)
// Parameter info:
// struct FCustomMatchSettings    Settings                       (CPF_Parm | CPF_NeedCtorLink)

void APlayerController_X::ServerUpdateCustomMatchSettings(struct FCustomMatchSettings Settings)
{
	static UFunction* uFnServerUpdateCustomMatchSettings = nullptr;

	if (!uFnServerUpdateCustomMatchSettings)
	{
		uFnServerUpdateCustomMatchSettings = UFunction::FindFunction("Function ProjectX.PlayerController_X.ServerUpdateCustomMatchSettings");
	}

	APlayerController_X_execServerUpdateCustomMatchSettings_Params ServerUpdateCustomMatchSettings_Params;
	memcpy_s(&ServerUpdateCustomMatchSettings_Params.Settings, 0x90, &Settings, 0x90);

	this->ProcessEvent(uFnServerUpdateCustomMatchSettings, &ServerUpdateCustomMatchSettings_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ServerSetParty
// [0x002200C3] (FUNC_Final | FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_Public | FUNC_NetServer | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            NewPartyID                     (CPF_Parm | CPF_NeedCtorLink)

void APlayerController_X::ServerSetParty(struct FUniqueNetId MemberId, struct FUniqueNetId NewPartyID)
{
	static UFunction* uFnServerSetParty = nullptr;

	if (!uFnServerSetParty)
	{
		uFnServerSetParty = UFunction::FindFunction("Function ProjectX.PlayerController_X.ServerSetParty");
	}

	APlayerController_X_execServerSetParty_Params ServerSetParty_Params;
	memcpy_s(&ServerSetParty_Params.MemberId, 0x48, &MemberId, 0x48);
	memcpy_s(&ServerSetParty_Params.NewPartyID, 0x48, &NewPartyID, 0x48);

	this->ProcessEvent(uFnServerSetParty, &ServerSetParty_Params, nullptr);
};

// Function ProjectX.PlayerController_X.DisconnectSplitScreenPlayer
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPlayer*                 P                              (CPF_Parm)

void APlayerController_X::DisconnectSplitScreenPlayer(class UPlayer* P)
{
	static UFunction* uFnDisconnectSplitScreenPlayer = nullptr;

	if (!uFnDisconnectSplitScreenPlayer)
	{
		uFnDisconnectSplitScreenPlayer = UFunction::FindFunction("Function ProjectX.PlayerController_X.DisconnectSplitScreenPlayer");
	}

	APlayerController_X_execDisconnectSplitScreenPlayer_Params DisconnectSplitScreenPlayer_Params;
	memcpy_s(&DisconnectSplitScreenPlayer_Params.P, 0x8, &P, 0x8);

	uFnDisconnectSplitScreenPlayer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDisconnectSplitScreenPlayer, &DisconnectSplitScreenPlayer_Params, nullptr);

	uFnDisconnectSplitScreenPlayer->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerController_X.ServerDestroy
// [0x002200C3] (FUNC_Final | FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_Public | FUNC_NetServer | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::ServerDestroy()
{
	static UFunction* uFnServerDestroy = nullptr;

	if (!uFnServerDestroy)
	{
		uFnServerDestroy = UFunction::FindFunction("Function ProjectX.PlayerController_X.ServerDestroy");
	}

	APlayerController_X_execServerDestroy_Params ServerDestroy_Params;

	this->ProcessEvent(uFnServerDestroy, &ServerDestroy_Params, nullptr);
};

// Function ProjectX.PlayerController_X.KickPlayerForReason
// [0x010241C3] (FUNC_Final | FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_NetRequest | FUNC_NetMulticast | FUNC_Public | FUNC_NetClient | FUNC_AllFlags)
// Parameter info:
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Title                          (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void APlayerController_X::KickPlayerForReason(class FString Reason, class FString Title)
{
	static UFunction* uFnKickPlayerForReason = nullptr;

	if (!uFnKickPlayerForReason)
	{
		uFnKickPlayerForReason = UFunction::FindFunction("Function ProjectX.PlayerController_X.KickPlayerForReason");
	}

	APlayerController_X_execKickPlayerForReason_Params KickPlayerForReason_Params;
	memcpy_s(&KickPlayerForReason_Params.Reason, 0x10, &Reason, 0x10);
	memcpy_s(&KickPlayerForReason_Params.Title, 0x10, &Title, 0x10);

	this->ProcessEvent(uFnKickPlayerForReason, &KickPlayerForReason_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ClientNetLag
// [0x010201C1] (FUNC_Final | FUNC_Net | FUNC_NetReliable | FUNC_NetRequest | FUNC_Public | FUNC_NetClient | FUNC_AllFlags)
// Parameter info:
// float                          PktLag                         (CPF_Parm)
// float                          PktVariance                    (CPF_Parm)
// float                          PktLoss                        (CPF_Parm)
// float                          PktDup                         (CPF_Parm)
// float                          PktSpike                       (CPF_Parm)

void APlayerController_X::ClientNetLag(float PktLag, float PktVariance, float PktLoss, float PktDup, float PktSpike)
{
	static UFunction* uFnClientNetLag = nullptr;

	if (!uFnClientNetLag)
	{
		uFnClientNetLag = UFunction::FindFunction("Function ProjectX.PlayerController_X.ClientNetLag");
	}

	APlayerController_X_execClientNetLag_Params ClientNetLag_Params;
	memcpy_s(&ClientNetLag_Params.PktLag, 0x4, &PktLag, 0x4);
	memcpy_s(&ClientNetLag_Params.PktVariance, 0x4, &PktVariance, 0x4);
	memcpy_s(&ClientNetLag_Params.PktLoss, 0x4, &PktLoss, 0x4);
	memcpy_s(&ClientNetLag_Params.PktDup, 0x4, &PktDup, 0x4);
	memcpy_s(&ClientNetLag_Params.PktSpike, 0x4, &PktSpike, 0x4);

	this->ProcessEvent(uFnClientNetLag, &ClientNetLag_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ServerNetLag
// [0x002200C1] (FUNC_Final | FUNC_Net | FUNC_NetReliable | FUNC_Public | FUNC_NetServer | FUNC_AllFlags)
// Parameter info:
// float                          PktLag                         (CPF_Parm)
// float                          PktVariance                    (CPF_Parm)
// float                          PktLoss                        (CPF_Parm)
// float                          PktDup                         (CPF_Parm)
// float                          PktSpike                       (CPF_Parm)

void APlayerController_X::ServerNetLag(float PktLag, float PktVariance, float PktLoss, float PktDup, float PktSpike)
{
	static UFunction* uFnServerNetLag = nullptr;

	if (!uFnServerNetLag)
	{
		uFnServerNetLag = UFunction::FindFunction("Function ProjectX.PlayerController_X.ServerNetLag");
	}

	APlayerController_X_execServerNetLag_Params ServerNetLag_Params;
	memcpy_s(&ServerNetLag_Params.PktLag, 0x4, &PktLag, 0x4);
	memcpy_s(&ServerNetLag_Params.PktVariance, 0x4, &PktVariance, 0x4);
	memcpy_s(&ServerNetLag_Params.PktLoss, 0x4, &PktLoss, 0x4);
	memcpy_s(&ServerNetLag_Params.PktDup, 0x4, &PktDup, 0x4);
	memcpy_s(&ServerNetLag_Params.PktSpike, 0x4, &PktSpike, 0x4);

	this->ProcessEvent(uFnServerNetLag, &ServerNetLag_Params, nullptr);
};

// Function ProjectX.PlayerController_X.Pause
// [0x400020202] (FUNC_RequiredAPI | FUNC_Exec | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::Pause()
{
	static UFunction* uFnPause = nullptr;

	if (!uFnPause)
	{
		uFnPause = UFunction::FindFunction("Function ProjectX.PlayerController_X.Pause");
	}

	APlayerController_X_execPause_Params Pause_Params;

	this->ProcessEvent(uFnPause, &Pause_Params, nullptr);
};

// Function ProjectX.PlayerController_X.GetConnectionTimeSinceLastReceived
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float APlayerController_X::GetConnectionTimeSinceLastReceived()
{
	static UFunction* uFnGetConnectionTimeSinceLastReceived = nullptr;

	if (!uFnGetConnectionTimeSinceLastReceived)
	{
		uFnGetConnectionTimeSinceLastReceived = UFunction::FindFunction("Function ProjectX.PlayerController_X.GetConnectionTimeSinceLastReceived");
	}

	APlayerController_X_execGetConnectionTimeSinceLastReceived_Params GetConnectionTimeSinceLastReceived_Params;

	uFnGetConnectionTimeSinceLastReceived->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetConnectionTimeSinceLastReceived, &GetConnectionTimeSinceLastReceived_Params, nullptr);

	uFnGetConnectionTimeSinceLastReceived->FunctionFlags |= 0x400;

	return GetConnectionTimeSinceLastReceived_Params.ReturnValue;
};

// Function ProjectX.PlayerController_X.RemoveOptionFromLastURL
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  OptName                        (CPF_Parm | CPF_NeedCtorLink)

void APlayerController_X::RemoveOptionFromLastURL(class FString OptName)
{
	static UFunction* uFnRemoveOptionFromLastURL = nullptr;

	if (!uFnRemoveOptionFromLastURL)
	{
		uFnRemoveOptionFromLastURL = UFunction::FindFunction("Function ProjectX.PlayerController_X.RemoveOptionFromLastURL");
	}

	APlayerController_X_execRemoveOptionFromLastURL_Params RemoveOptionFromLastURL_Params;
	memcpy_s(&RemoveOptionFromLastURL_Params.OptName, 0x10, &OptName, 0x10);

	uFnRemoveOptionFromLastURL->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveOptionFromLastURL, &RemoveOptionFromLastURL_Params, nullptr);

	uFnRemoveOptionFromLastURL->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerController_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void APlayerController_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.PlayerController_X.PrintDebugInfo");
	}

	APlayerController_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ClearOnlineDelegates
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::eventClearOnlineDelegates()
{
	static UFunction* uFnClearOnlineDelegates = nullptr;

	if (!uFnClearOnlineDelegates)
	{
		uFnClearOnlineDelegates = UFunction::FindFunction("Function ProjectX.PlayerController_X.ClearOnlineDelegates");
	}

	APlayerController_X_eventClearOnlineDelegates_Params ClearOnlineDelegates_Params;

	this->ProcessEvent(uFnClearOnlineDelegates, &ClearOnlineDelegates_Params, nullptr);
};

// Function ProjectX.PlayerController_X.RegisterOnlineDelegates
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::RegisterOnlineDelegates()
{
	static UFunction* uFnRegisterOnlineDelegates = nullptr;

	if (!uFnRegisterOnlineDelegates)
	{
		uFnRegisterOnlineDelegates = UFunction::FindFunction("Function ProjectX.PlayerController_X.RegisterOnlineDelegates");
	}

	APlayerController_X_execRegisterOnlineDelegates_Params RegisterOnlineDelegates_Params;

	this->ProcessEvent(uFnRegisterOnlineDelegates, &RegisterOnlineDelegates_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ClientPlayForceFeedbackWaveform
// [0x4010249C2] (FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_NetRequest | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_NetClient | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UForceFeedbackWaveform*  FFWaveform                     (CPF_Parm)
// class AActor*                  FFWaveformInstigator           (CPF_OptionalParm | CPF_Parm)

void APlayerController_X::eventClientPlayForceFeedbackWaveform(class UForceFeedbackWaveform* FFWaveform, class AActor* FFWaveformInstigator)
{
	static UFunction* uFnClientPlayForceFeedbackWaveform = nullptr;

	if (!uFnClientPlayForceFeedbackWaveform)
	{
		uFnClientPlayForceFeedbackWaveform = UFunction::FindFunction("Function ProjectX.PlayerController_X.ClientPlayForceFeedbackWaveform");
	}

	APlayerController_X_eventClientPlayForceFeedbackWaveform_Params ClientPlayForceFeedbackWaveform_Params;
	memcpy_s(&ClientPlayForceFeedbackWaveform_Params.FFWaveform, 0x8, &FFWaveform, 0x8);
	memcpy_s(&ClientPlayForceFeedbackWaveform_Params.FFWaveformInstigator, 0x8, &FFWaveformInstigator, 0x8);

	this->ProcessEvent(uFnClientPlayForceFeedbackWaveform, &ClientPlayForceFeedbackWaveform_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ClientCommand
// [0x010201C1] (FUNC_Final | FUNC_Net | FUNC_NetReliable | FUNC_NetRequest | FUNC_Public | FUNC_NetClient | FUNC_AllFlags)
// Parameter info:
// class FString                  Command                        (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

void APlayerController_X::ClientCommand(class FString Command)
{
	static UFunction* uFnClientCommand = nullptr;

	if (!uFnClientCommand)
	{
		uFnClientCommand = UFunction::FindFunction("Function ProjectX.PlayerController_X.ClientCommand");
	}

	APlayerController_X_execClientCommand_Params ClientCommand_Params;
	memcpy_s(&ClientCommand_Params.Command, 0x10, &Command, 0x10);

	this->ProcessEvent(uFnClientCommand, &ClientCommand_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ServerCommand
// [0x002200C3] (FUNC_Final | FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_Public | FUNC_NetServer | FUNC_AllFlags)
// Parameter info:
// class FString                  Command                        (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

void APlayerController_X::ServerCommand(class FString Command)
{
	static UFunction* uFnServerCommand = nullptr;

	if (!uFnServerCommand)
	{
		uFnServerCommand = UFunction::FindFunction("Function ProjectX.PlayerController_X.ServerCommand");
	}

	APlayerController_X_execServerCommand_Params ServerCommand_Params;
	memcpy_s(&ServerCommand_Params.Command, 0x10, &Command, 0x10);

	this->ProcessEvent(uFnServerCommand, &ServerCommand_Params, nullptr);
};

// Function ProjectX.PlayerController_X.UnPossess
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::eventUnPossess()
{
	static UFunction* uFnUnPossess = nullptr;

	if (!uFnUnPossess)
	{
		uFnUnPossess = UFunction::FindFunction("Function ProjectX.PlayerController_X.UnPossess");
	}

	APlayerController_X_eventUnPossess_Params UnPossess_Params;

	this->ProcessEvent(uFnUnPossess, &UnPossess_Params, nullptr);
};

// Function ProjectX.PlayerController_X.Possess
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class APawn*                   aPawn                          (CPF_Parm)

void APlayerController_X::eventPossess(class APawn* aPawn)
{
	static UFunction* uFnPossess = nullptr;

	if (!uFnPossess)
	{
		uFnPossess = UFunction::FindFunction("Function ProjectX.PlayerController_X.Possess");
	}

	APlayerController_X_eventPossess_Params Possess_Params;
	memcpy_s(&Possess_Params.aPawn, 0x8, &aPawn, 0x8);

	this->ProcessEvent(uFnPossess, &Possess_Params, nullptr);
};

// Function ProjectX.PlayerController_X.OnPawnChange
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class APawn*                   OldPawn                        (CPF_Parm)
// class APawn*                   NewPawn                        (CPF_Parm)

void APlayerController_X::OnPawnChange(class APawn* OldPawn, class APawn* NewPawn)
{
	static UFunction* uFnOnPawnChange = nullptr;

	if (!uFnOnPawnChange)
	{
		uFnOnPawnChange = UFunction::FindFunction("Function ProjectX.PlayerController_X.OnPawnChange");
	}

	APlayerController_X_execOnPawnChange_Params OnPawnChange_Params;
	memcpy_s(&OnPawnChange_Params.OldPawn, 0x8, &OldPawn, 0x8);
	memcpy_s(&OnPawnChange_Params.NewPawn, 0x8, &NewPawn, 0x8);

	this->ProcessEvent(uFnOnPawnChange, &OnPawnChange_Params, nullptr);
};

// Function ProjectX.PlayerController_X.PawnReferenceUpdated
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::PawnReferenceUpdated()
{
	static UFunction* uFnPawnReferenceUpdated = nullptr;

	if (!uFnPawnReferenceUpdated)
	{
		uFnPawnReferenceUpdated = UFunction::FindFunction("Function ProjectX.PlayerController_X.PawnReferenceUpdated");
	}

	APlayerController_X_execPawnReferenceUpdated_Params PawnReferenceUpdated_Params;

	this->ProcessEvent(uFnPawnReferenceUpdated, &PawnReferenceUpdated_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ClientRestart
// [0x4010201C2] (FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_NetRequest | FUNC_Public | FUNC_NetClient | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class APawn*                   NewPawn                        (CPF_Parm)

void APlayerController_X::ClientRestart(class APawn* NewPawn)
{
	static UFunction* uFnClientRestart = nullptr;

	if (!uFnClientRestart)
	{
		uFnClientRestart = UFunction::FindFunction("Function ProjectX.PlayerController_X.ClientRestart");
	}

	APlayerController_X_execClientRestart_Params ClientRestart_Params;
	memcpy_s(&ClientRestart_Params.NewPawn, 0x8, &NewPawn, 0x8);

	this->ProcessEvent(uFnClientRestart, &ClientRestart_Params, nullptr);
};

// Function ProjectX.PlayerController_X.GivePawn
// [0x4010201C2] (FUNC_RequiredAPI | FUNC_Net | FUNC_NetReliable | FUNC_NetRequest | FUNC_Public | FUNC_NetClient | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class APawn*                   NewPawn                        (CPF_Parm)

void APlayerController_X::GivePawn(class APawn* NewPawn)
{
	static UFunction* uFnGivePawn = nullptr;

	if (!uFnGivePawn)
	{
		uFnGivePawn = UFunction::FindFunction("Function ProjectX.PlayerController_X.GivePawn");
	}

	APlayerController_X_execGivePawn_Params GivePawn_Params;
	memcpy_s(&GivePawn_Params.NewPawn, 0x8, &NewPawn, 0x8);

	this->ProcessEvent(uFnGivePawn, &GivePawn_Params, nullptr);
};

// Function ProjectX.PlayerController_X.InitInputSystem
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::eventInitInputSystem()
{
	static UFunction* uFnInitInputSystem = nullptr;

	if (!uFnInitInputSystem)
	{
		uFnInitInputSystem = UFunction::FindFunction("Function ProjectX.PlayerController_X.InitInputSystem");
	}

	APlayerController_X_eventInitInputSystem_Params InitInputSystem_Params;

	this->ProcessEvent(uFnInitInputSystem, &InitInputSystem_Params, nullptr);
};

// Function ProjectX.PlayerController_X.GetCameraArchetype
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ACamera*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class ACamera* APlayerController_X::GetCameraArchetype()
{
	static UFunction* uFnGetCameraArchetype = nullptr;

	if (!uFnGetCameraArchetype)
	{
		uFnGetCameraArchetype = UFunction::FindFunction("Function ProjectX.PlayerController_X.GetCameraArchetype");
	}

	APlayerController_X_execGetCameraArchetype_Params GetCameraArchetype_Params;

	this->ProcessEvent(uFnGetCameraArchetype, &GetCameraArchetype_Params, nullptr);

	return GetCameraArchetype_Params.ReturnValue;
};

// Function ProjectX.PlayerController_X.SpawnPlayerCamera
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::eventSpawnPlayerCamera()
{
	static UFunction* uFnSpawnPlayerCamera = nullptr;

	if (!uFnSpawnPlayerCamera)
	{
		uFnSpawnPlayerCamera = UFunction::FindFunction("Function ProjectX.PlayerController_X.SpawnPlayerCamera");
	}

	APlayerController_X_eventSpawnPlayerCamera_Params SpawnPlayerCamera_Params;

	this->ProcessEvent(uFnSpawnPlayerCamera, &SpawnPlayerCamera_Params, nullptr);
};

// Function ProjectX.PlayerController_X.SetPlayerCamera
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class ACamera*                 NewCamera                      (CPF_Parm)

void APlayerController_X::SetPlayerCamera(class ACamera* NewCamera)
{
	static UFunction* uFnSetPlayerCamera = nullptr;

	if (!uFnSetPlayerCamera)
	{
		uFnSetPlayerCamera = UFunction::FindFunction("Function ProjectX.PlayerController_X.SetPlayerCamera");
	}

	APlayerController_X_execSetPlayerCamera_Params SetPlayerCamera_Params;
	memcpy_s(&SetPlayerCamera_Params.NewCamera, 0x8, &NewCamera, 0x8);

	this->ProcessEvent(uFnSetPlayerCamera, &SetPlayerCamera_Params, nullptr);
};

// Function ProjectX.PlayerController_X.AddCheats
// [0x400024100] (FUNC_NetRequest | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bForce                         (CPF_OptionalParm | CPF_Parm)

void APlayerController_X::AddCheats(unsigned long bForce)
{
	static UFunction* uFnAddCheats = nullptr;

	if (!uFnAddCheats)
	{
		uFnAddCheats = UFunction::FindFunction("Function ProjectX.PlayerController_X.AddCheats");
	}

	APlayerController_X_execAddCheats_Params AddCheats_Params;
	AddCheats_Params.bForce = bForce;

	this->ProcessEvent(uFnAddCheats, &AddCheats_Params, nullptr);
};

// Function ProjectX.PlayerController_X.GetOnlineAccount
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameAccount_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGameAccount_X* APlayerController_X::GetOnlineAccount()
{
	static UFunction* uFnGetOnlineAccount = nullptr;

	if (!uFnGetOnlineAccount)
	{
		uFnGetOnlineAccount = UFunction::FindFunction("Function ProjectX.PlayerController_X.GetOnlineAccount");
	}

	APlayerController_X_execGetOnlineAccount_Params GetOnlineAccount_Params;

	this->ProcessEvent(uFnGetOnlineAccount, &GetOnlineAccount_Params, nullptr);

	return GetOnlineAccount_Params.ReturnValue;
};

// Function ProjectX.PlayerController_X.GetOnlinePlayer
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlinePlayer_X* APlayerController_X::GetOnlinePlayer()
{
	static UFunction* uFnGetOnlinePlayer = nullptr;

	if (!uFnGetOnlinePlayer)
	{
		uFnGetOnlinePlayer = UFunction::FindFunction("Function ProjectX.PlayerController_X.GetOnlinePlayer");
	}

	APlayerController_X_execGetOnlinePlayer_Params GetOnlinePlayer_Params;

	this->ProcessEvent(uFnGetOnlinePlayer, &GetOnlinePlayer_Params, nullptr);

	return GetOnlinePlayer_Params.ReturnValue;
};

// Function ProjectX.PlayerController_X.OnReceivedPlayerAndPRI
// [0x00080102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::OnReceivedPlayerAndPRI()
{
	static UFunction* uFnOnReceivedPlayerAndPRI = nullptr;

	if (!uFnOnReceivedPlayerAndPRI)
	{
		uFnOnReceivedPlayerAndPRI = UFunction::FindFunction("Function ProjectX.PlayerController_X.OnReceivedPlayerAndPRI");
	}

	APlayerController_X_execOnReceivedPlayerAndPRI_Params OnReceivedPlayerAndPRI_Params;

	this->ProcessEvent(uFnOnReceivedPlayerAndPRI, &OnReceivedPlayerAndPRI_Params, nullptr);
};

// Function ProjectX.PlayerController_X.InitPlayerReplicationInfo
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::InitPlayerReplicationInfo()
{
	static UFunction* uFnInitPlayerReplicationInfo = nullptr;

	if (!uFnInitPlayerReplicationInfo)
	{
		uFnInitPlayerReplicationInfo = UFunction::FindFunction("Function ProjectX.PlayerController_X.InitPlayerReplicationInfo");
	}

	APlayerController_X_execInitPlayerReplicationInfo_Params InitPlayerReplicationInfo_Params;

	this->ProcessEvent(uFnInitPlayerReplicationInfo, &InitPlayerReplicationInfo_Params, nullptr);
};

// Function ProjectX.PlayerController_X.Destroyed
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function ProjectX.PlayerController_X.Destroyed");
	}

	APlayerController_X_eventDestroyed_Params Destroyed_Params;

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function ProjectX.PlayerController_X.OnExternalUIChanged
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bIsOpening                     (CPF_Parm)

void APlayerController_X::OnExternalUIChanged(unsigned long bIsOpening)
{
	static UFunction* uFnOnExternalUIChanged = nullptr;

	if (!uFnOnExternalUIChanged)
	{
		uFnOnExternalUIChanged = UFunction::FindFunction("Function ProjectX.PlayerController_X.OnExternalUIChanged");
	}

	APlayerController_X_execOnExternalUIChanged_Params OnExternalUIChanged_Params;
	OnExternalUIChanged_Params.bIsOpening = bIsOpening;

	this->ProcessEvent(uFnOnExternalUIChanged, &OnExternalUIChanged_Params, nullptr);
};

// Function ProjectX.PlayerController_X.SetPaused
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bPaused                        (CPF_Parm)

void APlayerController_X::SetPaused(unsigned long bPaused)
{
	static UFunction* uFnSetPaused = nullptr;

	if (!uFnSetPaused)
	{
		uFnSetPaused = UFunction::FindFunction("Function ProjectX.PlayerController_X.SetPaused");
	}

	APlayerController_X_execSetPaused_Params SetPaused_Params;
	SetPaused_Params.bPaused = bPaused;

	this->ProcessEvent(uFnSetPaused, &SetPaused_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ReceivedPlayer
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::eventReceivedPlayer()
{
	static UFunction* uFnReceivedPlayer = nullptr;

	if (!uFnReceivedPlayer)
	{
		uFnReceivedPlayer = UFunction::FindFunction("Function ProjectX.PlayerController_X.ReceivedPlayer");
	}

	APlayerController_X_eventReceivedPlayer_Params ReceivedPlayer_Params;

	this->ProcessEvent(uFnReceivedPlayer, &ReceivedPlayer_Params, nullptr);
};

// Function ProjectX.PlayerController_X.GetOnlineGame
// [0x00082003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineGame_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGame_X* APlayerController_X::GetOnlineGame()
{
	static UFunction* uFnGetOnlineGame = nullptr;

	if (!uFnGetOnlineGame)
	{
		uFnGetOnlineGame = UFunction::FindFunction("Function ProjectX.PlayerController_X.GetOnlineGame");
	}

	APlayerController_X_execGetOnlineGame_Params GetOnlineGame_Params;

	APlayerController_X::StaticClass()->ProcessEvent(uFnGetOnlineGame, &GetOnlineGame_Params, nullptr);

	return GetOnlineGame_Params.ReturnValue;
};

// Function ProjectX.PlayerController_X.GetOnlineGameHost
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UIOnlineGameHost_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UIOnlineGameHost_X* APlayerController_X::GetOnlineGameHost()
{
	static UFunction* uFnGetOnlineGameHost = nullptr;

	if (!uFnGetOnlineGameHost)
	{
		uFnGetOnlineGameHost = UFunction::FindFunction("Function ProjectX.PlayerController_X.GetOnlineGameHost");
	}

	APlayerController_X_execGetOnlineGameHost_Params GetOnlineGameHost_Params;

	APlayerController_X::StaticClass()->ProcessEvent(uFnGetOnlineGameHost, &GetOnlineGameHost_Params, nullptr);

	return GetOnlineGameHost_Params.ReturnValue;
};

// Function ProjectX.PlayerController_X.GetOnlineGameDedicatedServer
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGameDedicatedServer_X* APlayerController_X::GetOnlineGameDedicatedServer()
{
	static UFunction* uFnGetOnlineGameDedicatedServer = nullptr;

	if (!uFnGetOnlineGameDedicatedServer)
	{
		uFnGetOnlineGameDedicatedServer = UFunction::FindFunction("Function ProjectX.PlayerController_X.GetOnlineGameDedicatedServer");
	}

	APlayerController_X_execGetOnlineGameDedicatedServer_Params GetOnlineGameDedicatedServer_Params;

	APlayerController_X::StaticClass()->ProcessEvent(uFnGetOnlineGameDedicatedServer, &GetOnlineGameDedicatedServer_Params, nullptr);

	return GetOnlineGameDedicatedServer_Params.ReturnValue;
};

// Function ProjectX.PlayerController_X.SpawnDefaultHUD
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APlayerController_X::SpawnDefaultHUD()
{
	static UFunction* uFnSpawnDefaultHUD = nullptr;

	if (!uFnSpawnDefaultHUD)
	{
		uFnSpawnDefaultHUD = UFunction::FindFunction("Function ProjectX.PlayerController_X.SpawnDefaultHUD");
	}

	APlayerController_X_execSpawnDefaultHUD_Params SpawnDefaultHUD_Params;

	this->ProcessEvent(uFnSpawnDefaultHUD, &SpawnDefaultHUD_Params, nullptr);
};

// Function ProjectX.PlayerController_X.SetPRI
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

void APlayerController_X::SetPRI(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnSetPRI = nullptr;

	if (!uFnSetPRI)
	{
		uFnSetPRI = UFunction::FindFunction("Function ProjectX.PlayerController_X.SetPRI");
	}

	APlayerController_X_execSetPRI_Params SetPRI_Params;
	memcpy_s(&SetPRI_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnSetPRI, &SetPRI_Params, nullptr);
};

// Function ProjectX.PlayerController_X.ReplicatedEvent
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FName                   VarName                        (CPF_Parm)

void APlayerController_X::eventReplicatedEvent(struct FName VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function ProjectX.PlayerController_X.ReplicatedEvent");
	}

	APlayerController_X_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memcpy_s(&ReplicatedEvent_Params.VarName, 0x8, &VarName, 0x8);

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function ProjectX.PlayerController_X.EventPlayerCameraChange
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APlayerController_X*     PC                             (CPF_Parm)

void APlayerController_X::EventPlayerCameraChange(class APlayerController_X* PC)
{
	static UFunction* uFnEventPlayerCameraChange = nullptr;

	if (!uFnEventPlayerCameraChange)
	{
		uFnEventPlayerCameraChange = UFunction::FindFunction("Function ProjectX.PlayerController_X.EventPlayerCameraChange");
	}

	APlayerController_X_execEventPlayerCameraChange_Params EventPlayerCameraChange_Params;
	memcpy_s(&EventPlayerCameraChange_Params.PC, 0x8, &PC, 0x8);

	this->ProcessEvent(uFnEventPlayerCameraChange, &EventPlayerCameraChange_Params, nullptr);
};

// Function ProjectX.PlayerController_X.EventDestroyed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APlayerController_X*     PC                             (CPF_Parm)

void APlayerController_X::EventDestroyed(class APlayerController_X* PC)
{
	static UFunction* uFnEventDestroyed = nullptr;

	if (!uFnEventDestroyed)
	{
		uFnEventDestroyed = UFunction::FindFunction("Function ProjectX.PlayerController_X.EventDestroyed");
	}

	APlayerController_X_execEventDestroyed_Params EventDestroyed_Params;
	memcpy_s(&EventDestroyed_Params.PC, 0x8, &PC, 0x8);

	this->ProcessEvent(uFnEventDestroyed, &EventDestroyed_Params, nullptr);
};

// Function ProjectX.PlayerController_X.EventReceivedPlayer
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APlayerController_X*     PC                             (CPF_Parm)

void APlayerController_X::EventReceivedPlayer(class APlayerController_X* PC)
{
	static UFunction* uFnEventReceivedPlayer = nullptr;

	if (!uFnEventReceivedPlayer)
	{
		uFnEventReceivedPlayer = UFunction::FindFunction("Function ProjectX.PlayerController_X.EventReceivedPlayer");
	}

	APlayerController_X_execEventReceivedPlayer_Params EventReceivedPlayer_Params;
	memcpy_s(&EventReceivedPlayer_Params.PC, 0x8, &PC, 0x8);

	this->ProcessEvent(uFnEventReceivedPlayer, &EventReceivedPlayer_Params, nullptr);
};

// Function ProjectX.PlayerController_X.EventPawnChange
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APlayerController_X*     PC                             (CPF_Parm)
// class APawn*                   OldPawn                        (CPF_Parm)
// class APawn*                   NewPawn                        (CPF_Parm)

void APlayerController_X::EventPawnChange(class APlayerController_X* PC, class APawn* OldPawn, class APawn* NewPawn)
{
	static UFunction* uFnEventPawnChange = nullptr;

	if (!uFnEventPawnChange)
	{
		uFnEventPawnChange = UFunction::FindFunction("Function ProjectX.PlayerController_X.EventPawnChange");
	}

	APlayerController_X_execEventPawnChange_Params EventPawnChange_Params;
	memcpy_s(&EventPawnChange_Params.PC, 0x8, &PC, 0x8);
	memcpy_s(&EventPawnChange_Params.OldPawn, 0x8, &OldPawn, 0x8);
	memcpy_s(&EventPawnChange_Params.NewPawn, 0x8, &NewPawn, 0x8);

	this->ProcessEvent(uFnEventPawnChange, &EventPawnChange_Params, nullptr);
};

// Function ProjectX.PlayerController_X.EventReceivedPRI
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APlayerController_X*     PC                             (CPF_Parm)

void APlayerController_X::EventReceivedPRI(class APlayerController_X* PC)
{
	static UFunction* uFnEventReceivedPRI = nullptr;

	if (!uFnEventReceivedPRI)
	{
		uFnEventReceivedPRI = UFunction::FindFunction("Function ProjectX.PlayerController_X.EventReceivedPRI");
	}

	APlayerController_X_execEventReceivedPRI_Params EventReceivedPRI_Params;
	memcpy_s(&EventReceivedPRI_Params.PC, 0x8, &PC, 0x8);

	this->ProcessEvent(uFnEventReceivedPRI, &EventReceivedPRI_Params, nullptr);
};

// Function ProjectX.CheatManager_X.HandleImageDownloaded
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FOnlineImageDownload    Image                          (CPF_Parm | CPF_NeedCtorLink)

void UCheatManager_X::HandleImageDownloaded(struct FOnlineImageDownload Image)
{
	static UFunction* uFnHandleImageDownloaded = nullptr;

	if (!uFnHandleImageDownloaded)
	{
		uFnHandleImageDownloaded = UFunction::FindFunction("Function ProjectX.CheatManager_X.HandleImageDownloaded");
	}

	UCheatManager_X_execHandleImageDownloaded_Params HandleImageDownloaded_Params;
	memcpy_s(&HandleImageDownloaded_Params.Image, 0x40, &Image, 0x40);

	this->ProcessEvent(uFnHandleImageDownloaded, &HandleImageDownloaded_Params, nullptr);
};

// Function ProjectX.CheatManager_X.DownloadImage
// [0x00020203] (FUNC_Final | FUNC_RequiredAPI | FUNC_Exec | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

void UCheatManager_X::DownloadImage(class FString URL)
{
	static UFunction* uFnDownloadImage = nullptr;

	if (!uFnDownloadImage)
	{
		uFnDownloadImage = UFunction::FindFunction("Function ProjectX.CheatManager_X.DownloadImage");
	}

	UCheatManager_X_execDownloadImage_Params DownloadImage_Params;
	memcpy_s(&DownloadImage_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnDownloadImage, &DownloadImage_Params, nullptr);
};

// Function ProjectX.CheatManager_X.RandomSleep
// [0x00020203] (FUNC_Final | FUNC_RequiredAPI | FUNC_Exec | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          MinDelay                       (CPF_Parm)
// float                          MaxDelay                       (CPF_Parm)
// float                          MinSleep                       (CPF_Parm)
// float                          MaxSleep                       (CPF_Parm)

void UCheatManager_X::RandomSleep(float MinDelay, float MaxDelay, float MinSleep, float MaxSleep)
{
	static UFunction* uFnRandomSleep = nullptr;

	if (!uFnRandomSleep)
	{
		uFnRandomSleep = UFunction::FindFunction("Function ProjectX.CheatManager_X.RandomSleep");
	}

	UCheatManager_X_execRandomSleep_Params RandomSleep_Params;
	memcpy_s(&RandomSleep_Params.MinDelay, 0x4, &MinDelay, 0x4);
	memcpy_s(&RandomSleep_Params.MaxDelay, 0x4, &MaxDelay, 0x4);
	memcpy_s(&RandomSleep_Params.MinSleep, 0x4, &MinSleep, 0x4);
	memcpy_s(&RandomSleep_Params.MaxSleep, 0x4, &MaxSleep, 0x4);

	this->ProcessEvent(uFnRandomSleep, &RandomSleep_Params, nullptr);
};

// Function ProjectX.CheatManager_X.Sleep
// [0x00020601] (FUNC_Final | FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          Seconds                        (CPF_Parm)

void UCheatManager_X::Sleep(float Seconds)
{
	static UFunction* uFnSleep = nullptr;

	if (!uFnSleep)
	{
		uFnSleep = UFunction::FindFunction("Function ProjectX.CheatManager_X.Sleep");
	}

	UCheatManager_X_execSleep_Params Sleep_Params;
	memcpy_s(&Sleep_Params.Seconds, 0x4, &Seconds, 0x4);

	uFnSleep->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSleep, &Sleep_Params, nullptr);

	uFnSleep->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.LoadKismetLevel
// [0x00020601] (FUNC_Final | FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   LeveFileName                   (CPF_Parm)

void UCheatManager_X::LoadKismetLevel(struct FName LeveFileName)
{
	static UFunction* uFnLoadKismetLevel = nullptr;

	if (!uFnLoadKismetLevel)
	{
		uFnLoadKismetLevel = UFunction::FindFunction("Function ProjectX.CheatManager_X.LoadKismetLevel");
	}

	UCheatManager_X_execLoadKismetLevel_Params LoadKismetLevel_Params;
	memcpy_s(&LoadKismetLevel_Params.LeveFileName, 0x8, &LeveFileName, 0x8);

	uFnLoadKismetLevel->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnLoadKismetLevel, &LoadKismetLevel_Params, nullptr);

	uFnLoadKismetLevel->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.DrawBulletContacts
// [0x00024601] (FUNC_Final | FUNC_Exec | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          LifeTime                       (CPF_OptionalParm | CPF_Parm)

void UCheatManager_X::DrawBulletContacts(float LifeTime)
{
	static UFunction* uFnDrawBulletContacts = nullptr;

	if (!uFnDrawBulletContacts)
	{
		uFnDrawBulletContacts = UFunction::FindFunction("Function ProjectX.CheatManager_X.DrawBulletContacts");
	}

	UCheatManager_X_execDrawBulletContacts_Params DrawBulletContacts_Params;
	memcpy_s(&DrawBulletContacts_Params.LifeTime, 0x4, &LifeTime, 0x4);

	uFnDrawBulletContacts->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDrawBulletContacts, &DrawBulletContacts_Params, nullptr);

	uFnDrawBulletContacts->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.PrintReproPhysics
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Command                        (CPF_Parm | CPF_NeedCtorLink)
// class AActor*                  A                              (CPF_Parm)

void UCheatManager_X::PrintReproPhysics(class FString Command, class AActor* A)
{
	static UFunction* uFnPrintReproPhysics = nullptr;

	if (!uFnPrintReproPhysics)
	{
		uFnPrintReproPhysics = UFunction::FindFunction("Function ProjectX.CheatManager_X.PrintReproPhysics");
	}

	UCheatManager_X_execPrintReproPhysics_Params PrintReproPhysics_Params;
	memcpy_s(&PrintReproPhysics_Params.Command, 0x10, &Command, 0x10);
	memcpy_s(&PrintReproPhysics_Params.A, 0x8, &A, 0x8);

	uFnPrintReproPhysics->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnPrintReproPhysics, &PrintReproPhysics_Params, nullptr);

	uFnPrintReproPhysics->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.ReproPhysics
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  A                              (CPF_Parm)
// float                          LX                             (CPF_Parm)
// float                          LY                             (CPF_Parm)
// float                          LZ                             (CPF_Parm)
// float                          RX                             (CPF_Parm)
// float                          RY                             (CPF_Parm)
// float                          RZ                             (CPF_Parm)
// float                          RW                             (CPF_Parm)
// float                          VX                             (CPF_Parm)
// float                          VY                             (CPF_Parm)
// float                          VZ                             (CPF_Parm)
// float                          AX                             (CPF_Parm)
// float                          AY                             (CPF_Parm)
// float                          AZ                             (CPF_Parm)

void UCheatManager_X::ReproPhysics(class AActor* A, float LX, float LY, float LZ, float RX, float RY, float RZ, float RW, float VX, float VY, float VZ, float AX, float AY, float AZ)
{
	static UFunction* uFnReproPhysics = nullptr;

	if (!uFnReproPhysics)
	{
		uFnReproPhysics = UFunction::FindFunction("Function ProjectX.CheatManager_X.ReproPhysics");
	}

	UCheatManager_X_execReproPhysics_Params ReproPhysics_Params;
	memcpy_s(&ReproPhysics_Params.A, 0x8, &A, 0x8);
	memcpy_s(&ReproPhysics_Params.LX, 0x4, &LX, 0x4);
	memcpy_s(&ReproPhysics_Params.LY, 0x4, &LY, 0x4);
	memcpy_s(&ReproPhysics_Params.LZ, 0x4, &LZ, 0x4);
	memcpy_s(&ReproPhysics_Params.RX, 0x4, &RX, 0x4);
	memcpy_s(&ReproPhysics_Params.RY, 0x4, &RY, 0x4);
	memcpy_s(&ReproPhysics_Params.RZ, 0x4, &RZ, 0x4);
	memcpy_s(&ReproPhysics_Params.RW, 0x4, &RW, 0x4);
	memcpy_s(&ReproPhysics_Params.VX, 0x4, &VX, 0x4);
	memcpy_s(&ReproPhysics_Params.VY, 0x4, &VY, 0x4);
	memcpy_s(&ReproPhysics_Params.VZ, 0x4, &VZ, 0x4);
	memcpy_s(&ReproPhysics_Params.AX, 0x4, &AX, 0x4);
	memcpy_s(&ReproPhysics_Params.AY, 0x4, &AY, 0x4);
	memcpy_s(&ReproPhysics_Params.AZ, 0x4, &AZ, 0x4);

	uFnReproPhysics->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnReproPhysics, &ReproPhysics_Params, nullptr);

	uFnReproPhysics->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.DisableCCD
// [0x00020601] (FUNC_Final | FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCheatManager_X::DisableCCD()
{
	static UFunction* uFnDisableCCD = nullptr;

	if (!uFnDisableCCD)
	{
		uFnDisableCCD = UFunction::FindFunction("Function ProjectX.CheatManager_X.DisableCCD");
	}

	UCheatManager_X_execDisableCCD_Params DisableCCD_Params;

	uFnDisableCCD->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDisableCCD, &DisableCCD_Params, nullptr);

	uFnDisableCCD->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.SetNetServerMaxTickRate
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          Rate                           (CPF_Parm)

void UCheatManager_X::SetNetServerMaxTickRate(float Rate)
{
	static UFunction* uFnSetNetServerMaxTickRate = nullptr;

	if (!uFnSetNetServerMaxTickRate)
	{
		uFnSetNetServerMaxTickRate = UFunction::FindFunction("Function ProjectX.CheatManager_X.SetNetServerMaxTickRate");
	}

	UCheatManager_X_execSetNetServerMaxTickRate_Params SetNetServerMaxTickRate_Params;
	memcpy_s(&SetNetServerMaxTickRate_Params.Rate, 0x4, &Rate, 0x4);

	uFnSetNetServerMaxTickRate->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetNetServerMaxTickRate, &SetNetServerMaxTickRate_Params, nullptr);

	uFnSetNetServerMaxTickRate->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.ScreenShotDir
// [0x00020601] (FUNC_Final | FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Directory                      (CPF_Parm | CPF_NeedCtorLink)

void UCheatManager_X::ScreenShotDir(class FString Directory)
{
	static UFunction* uFnScreenShotDir = nullptr;

	if (!uFnScreenShotDir)
	{
		uFnScreenShotDir = UFunction::FindFunction("Function ProjectX.CheatManager_X.ScreenShotDir");
	}

	UCheatManager_X_execScreenShotDir_Params ScreenShotDir_Params;
	memcpy_s(&ScreenShotDir_Params.Directory, 0x10, &Directory, 0x10);

	uFnScreenShotDir->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnScreenShotDir, &ScreenShotDir_Params, nullptr);

	uFnScreenShotDir->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.ListVisiblePrimitives
// [0x00020601] (FUNC_Final | FUNC_Exec | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCheatManager_X::ListVisiblePrimitives()
{
	static UFunction* uFnListVisiblePrimitives = nullptr;

	if (!uFnListVisiblePrimitives)
	{
		uFnListVisiblePrimitives = UFunction::FindFunction("Function ProjectX.CheatManager_X.ListVisiblePrimitives");
	}

	UCheatManager_X_execListVisiblePrimitives_Params ListVisiblePrimitives_Params;

	uFnListVisiblePrimitives->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnListVisiblePrimitives, &ListVisiblePrimitives_Params, nullptr);

	uFnListVisiblePrimitives->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.HideVisiblePrimitives
// [0x00024601] (FUNC_Final | FUNC_Exec | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  NameMatch                      (CPF_Parm | CPF_NeedCtorLink)
// class FString                  NameIgnore                     (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UCheatManager_X::HideVisiblePrimitives(class FString NameMatch, class FString NameIgnore)
{
	static UFunction* uFnHideVisiblePrimitives = nullptr;

	if (!uFnHideVisiblePrimitives)
	{
		uFnHideVisiblePrimitives = UFunction::FindFunction("Function ProjectX.CheatManager_X.HideVisiblePrimitives");
	}

	UCheatManager_X_execHideVisiblePrimitives_Params HideVisiblePrimitives_Params;
	memcpy_s(&HideVisiblePrimitives_Params.NameMatch, 0x10, &NameMatch, 0x10);
	memcpy_s(&HideVisiblePrimitives_Params.NameIgnore, 0x10, &NameIgnore, 0x10);

	uFnHideVisiblePrimitives->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHideVisiblePrimitives, &HideVisiblePrimitives_Params, nullptr);

	uFnHideVisiblePrimitives->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.ToggleReplicateVoiceToSelf
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCheatManager_X::ToggleReplicateVoiceToSelf()
{
	static UFunction* uFnToggleReplicateVoiceToSelf = nullptr;

	if (!uFnToggleReplicateVoiceToSelf)
	{
		uFnToggleReplicateVoiceToSelf = UFunction::FindFunction("Function ProjectX.CheatManager_X.ToggleReplicateVoiceToSelf");
	}

	UCheatManager_X_execToggleReplicateVoiceToSelf_Params ToggleReplicateVoiceToSelf_Params;

	uFnToggleReplicateVoiceToSelf->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnToggleReplicateVoiceToSelf, &ToggleReplicateVoiceToSelf_Params, nullptr);

	uFnToggleReplicateVoiceToSelf->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.ToggleReplicateVoiceToSender
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCheatManager_X::ToggleReplicateVoiceToSender()
{
	static UFunction* uFnToggleReplicateVoiceToSender = nullptr;

	if (!uFnToggleReplicateVoiceToSender)
	{
		uFnToggleReplicateVoiceToSender = UFunction::FindFunction("Function ProjectX.CheatManager_X.ToggleReplicateVoiceToSender");
	}

	UCheatManager_X_execToggleReplicateVoiceToSender_Params ToggleReplicateVoiceToSender_Params;

	uFnToggleReplicateVoiceToSender->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnToggleReplicateVoiceToSender, &ToggleReplicateVoiceToSender_Params, nullptr);

	uFnToggleReplicateVoiceToSender->FunctionFlags |= 0x400;
};

// Function ProjectX.CheatManager_X.ShutdownCheatManager
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCheatManager_X::ShutdownCheatManager()
{
	static UFunction* uFnShutdownCheatManager = nullptr;

	if (!uFnShutdownCheatManager)
	{
		uFnShutdownCheatManager = UFunction::FindFunction("Function ProjectX.CheatManager_X.ShutdownCheatManager");
	}

	UCheatManager_X_execShutdownCheatManager_Params ShutdownCheatManager_Params;

	this->ProcessEvent(uFnShutdownCheatManager, &ShutdownCheatManager_Params, nullptr);
};

// Function ProjectX.CheatManager_X.InitCheatManager
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UCheatManager_X::InitCheatManager()
{
	static UFunction* uFnInitCheatManager = nullptr;

	if (!uFnInitCheatManager)
	{
		uFnInitCheatManager = UFunction::FindFunction("Function ProjectX.CheatManager_X.InitCheatManager");
	}

	UCheatManager_X_execInitCheatManager_Params InitCheatManager_Params;

	this->ProcessEvent(uFnInitCheatManager, &InitCheatManager_Params, nullptr);
};

// Function ProjectX.CheatManager_X.EventDelegateTest
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UCheatManager_X::EventDelegateTest()
{
	static UFunction* uFnEventDelegateTest = nullptr;

	if (!uFnEventDelegateTest)
	{
		uFnEventDelegateTest = UFunction::FindFunction("Function ProjectX.CheatManager_X.EventDelegateTest");
	}

	UCheatManager_X_execEventDelegateTest_Params EventDelegateTest_Params;

	this->ProcessEvent(uFnEventDelegateTest, &EventDelegateTest_Params, nullptr);
};

// Function ProjectX.ColorPalette_X.IntColorToID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ColorInt                       (CPF_Parm)

int32_t UColorPalette_X::IntColorToID(int32_t ColorInt)
{
	static UFunction* uFnIntColorToID = nullptr;

	if (!uFnIntColorToID)
	{
		uFnIntColorToID = UFunction::FindFunction("Function ProjectX.ColorPalette_X.IntColorToID");
	}

	UColorPalette_X_execIntColorToID_Params IntColorToID_Params;
	memcpy_s(&IntColorToID_Params.ColorInt, 0x4, &ColorInt, 0x4);

	this->ProcessEvent(uFnIntColorToID, &IntColorToID_Params, nullptr);

	return IntColorToID_Params.ReturnValue;
};

// Function ProjectX.ColorPalette_X.IdToColorInt
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ColorID                        (CPF_Parm)

int32_t UColorPalette_X::IdToColorInt(int32_t ColorID)
{
	static UFunction* uFnIdToColorInt = nullptr;

	if (!uFnIdToColorInt)
	{
		uFnIdToColorInt = UFunction::FindFunction("Function ProjectX.ColorPalette_X.IdToColorInt");
	}

	UColorPalette_X_execIdToColorInt_Params IdToColorInt_Params;
	memcpy_s(&IdToColorInt_Params.ColorID, 0x4, &ColorID, 0x4);

	this->ProcessEvent(uFnIdToColorInt, &IdToColorInt_Params, nullptr);

	return IdToColorInt_Params.ReturnValue;
};

// Function ProjectX.ColorPalette_X.GetColorPosition
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FColorPosition          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ColorID                        (CPF_Parm)

struct FColorPosition UColorPalette_X::GetColorPosition(int32_t ColorID)
{
	static UFunction* uFnGetColorPosition = nullptr;

	if (!uFnGetColorPosition)
	{
		uFnGetColorPosition = UFunction::FindFunction("Function ProjectX.ColorPalette_X.GetColorPosition");
	}

	UColorPalette_X_execGetColorPosition_Params GetColorPosition_Params;
	memcpy_s(&GetColorPosition_Params.ColorID, 0x4, &ColorID, 0x4);

	uFnGetColorPosition->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetColorPosition, &GetColorPosition_Params, nullptr);

	uFnGetColorPosition->FunctionFlags |= 0x400;

	return GetColorPosition_Params.ReturnValue;
};

// Function ProjectX.ColorPalette_X.GetValidColor
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FLinearColor            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FLinearColor            InColor                        (CPF_Parm)

struct FLinearColor UColorPalette_X::GetValidColor(struct FLinearColor InColor)
{
	static UFunction* uFnGetValidColor = nullptr;

	if (!uFnGetValidColor)
	{
		uFnGetValidColor = UFunction::FindFunction("Function ProjectX.ColorPalette_X.GetValidColor");
	}

	UColorPalette_X_execGetValidColor_Params GetValidColor_Params;
	memcpy_s(&GetValidColor_Params.InColor, 0x10, &InColor, 0x10);

	uFnGetValidColor->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetValidColor, &GetValidColor_Params, nullptr);

	uFnGetValidColor->FunctionFlags |= 0x400;

	return GetValidColor_Params.ReturnValue;
};

// Function ProjectX.ColorPalette_X.GetClosestID
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FLinearColor            InColor                        (CPF_Parm)

int32_t UColorPalette_X::GetClosestID(struct FLinearColor InColor)
{
	static UFunction* uFnGetClosestID = nullptr;

	if (!uFnGetClosestID)
	{
		uFnGetClosestID = UFunction::FindFunction("Function ProjectX.ColorPalette_X.GetClosestID");
	}

	UColorPalette_X_execGetClosestID_Params GetClosestID_Params;
	memcpy_s(&GetClosestID_Params.InColor, 0x10, &InColor, 0x10);

	uFnGetClosestID->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetClosestID, &GetClosestID_Params, nullptr);

	uFnGetClosestID->FunctionFlags |= 0x400;

	return GetClosestID_Params.ReturnValue;
};

// Function ProjectX.ColorPalette_X.GetColor
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FLinearColor            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ColorID                        (CPF_Parm)

struct FLinearColor UColorPalette_X::GetColor(int32_t ColorID)
{
	static UFunction* uFnGetColor = nullptr;

	if (!uFnGetColor)
	{
		uFnGetColor = UFunction::FindFunction("Function ProjectX.ColorPalette_X.GetColor");
	}

	UColorPalette_X_execGetColor_Params GetColor_Params;
	memcpy_s(&GetColor_Params.ColorID, 0x4, &ColorID, 0x4);

	uFnGetColor->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetColor, &GetColor_Params, nullptr);

	uFnGetColor->FunctionFlags |= 0x400;

	return GetColor_Params.ReturnValue;
};

// Function ProjectX.Compression_X.Uncompress
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<uint8_t>                Compressed                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<uint8_t>                Uncompressed                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UCompression_X::Uncompress(TArray<uint8_t>& Compressed, TArray<uint8_t>& Uncompressed)
{
	static UFunction* uFnUncompress = nullptr;

	if (!uFnUncompress)
	{
		uFnUncompress = UFunction::FindFunction("Function ProjectX.Compression_X.Uncompress");
	}

	UCompression_X_execUncompress_Params Uncompress_Params;
	memcpy_s(&Uncompress_Params.Compressed, 0x10, &Compressed, 0x10);
	memcpy_s(&Uncompress_Params.Uncompressed, 0x10, &Uncompressed, 0x10);

	uFnUncompress->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUncompress, &Uncompress_Params, nullptr);

	uFnUncompress->FunctionFlags |= 0x400;

	memcpy_s(&Compressed, 0x10, &Uncompress_Params.Compressed, 0x10);
	memcpy_s(&Uncompressed, 0x10, &Uncompress_Params.Uncompressed, 0x10);

	return Uncompress_Params.ReturnValue;
};

// Function ProjectX.Compression_X.Compress
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<uint8_t>                Uncompressed                   (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<uint8_t>                Compressed                     (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UCompression_X::Compress(TArray<uint8_t>& Uncompressed, TArray<uint8_t>& Compressed)
{
	static UFunction* uFnCompress = nullptr;

	if (!uFnCompress)
	{
		uFnCompress = UFunction::FindFunction("Function ProjectX.Compression_X.Compress");
	}

	UCompression_X_execCompress_Params Compress_Params;
	memcpy_s(&Compress_Params.Uncompressed, 0x10, &Uncompressed, 0x10);
	memcpy_s(&Compress_Params.Compressed, 0x10, &Compressed, 0x10);

	uFnCompress->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCompress, &Compress_Params, nullptr);

	uFnCompress->FunctionFlags |= 0x400;

	memcpy_s(&Uncompressed, 0x10, &Compress_Params.Uncompressed, 0x10);
	memcpy_s(&Compressed, 0x10, &Compress_Params.Compressed, 0x10);

	return Compress_Params.ReturnValue;
};

// Function ProjectX.ControlPreset_X.GetGamepadBindings
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FPlayerBinding>  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FPlayerBinding> UControlPreset_X::GetGamepadBindings()
{
	static UFunction* uFnGetGamepadBindings = nullptr;

	if (!uFnGetGamepadBindings)
	{
		uFnGetGamepadBindings = UFunction::FindFunction("Function ProjectX.ControlPreset_X.GetGamepadBindings");
	}

	UControlPreset_X_execGetGamepadBindings_Params GetGamepadBindings_Params;

	uFnGetGamepadBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetGamepadBindings, &GetGamepadBindings_Params, nullptr);

	uFnGetGamepadBindings->FunctionFlags |= 0x400;

	return GetGamepadBindings_Params.ReturnValue;
};

// Function ProjectX.ControlPreset_X.GetPCBindings
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FPlayerBinding>  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FPlayerBinding> UControlPreset_X::GetPCBindings()
{
	static UFunction* uFnGetPCBindings = nullptr;

	if (!uFnGetPCBindings)
	{
		uFnGetPCBindings = UFunction::FindFunction("Function ProjectX.ControlPreset_X.GetPCBindings");
	}

	UControlPreset_X_execGetPCBindings_Params GetPCBindings_Params;

	uFnGetPCBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetPCBindings, &GetPCBindings_Params, nullptr);

	uFnGetPCBindings->FunctionFlags |= 0x400;

	return GetPCBindings_Params.ReturnValue;
};

// Function ProjectX.CrashReport_X.HandleHttpRequestComplete
// [0x00040C01] (FUNC_Final | FUNC_Native | FUNC_Event | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UHttpRequestInterface*   Request                        (CPF_Parm)
// class UHttpResponseInterface*  Response                       (CPF_Parm)
// unsigned long                  bSuccess                       (CPF_Parm)

void UCrashReport_X::eventHandleHttpRequestComplete(class UHttpRequestInterface* Request, class UHttpResponseInterface* Response, unsigned long bSuccess)
{
	static UFunction* uFnHandleHttpRequestComplete = nullptr;

	if (!uFnHandleHttpRequestComplete)
	{
		uFnHandleHttpRequestComplete = UFunction::FindFunction("Function ProjectX.CrashReport_X.HandleHttpRequestComplete");
	}

	UCrashReport_X_eventHandleHttpRequestComplete_Params HandleHttpRequestComplete_Params;
	memcpy_s(&HandleHttpRequestComplete_Params.Request, 0x8, &Request, 0x8);
	memcpy_s(&HandleHttpRequestComplete_Params.Response, 0x8, &Response, 0x8);
	HandleHttpRequestComplete_Params.bSuccess = bSuccess;

	uFnHandleHttpRequestComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleHttpRequestComplete, &HandleHttpRequestComplete_Params, nullptr);

	uFnHandleHttpRequestComplete->FunctionFlags |= 0x400;
};

// Function ProjectX.CRC_X.CrcBytes
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<uint8_t>                Bytes                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UCRC_X::CrcBytes(TArray<uint8_t>& Bytes)
{
	static UFunction* uFnCrcBytes = nullptr;

	if (!uFnCrcBytes)
	{
		uFnCrcBytes = UFunction::FindFunction("Function ProjectX.CRC_X.CrcBytes");
	}

	UCRC_X_execCrcBytes_Params CrcBytes_Params;
	memcpy_s(&CrcBytes_Params.Bytes, 0x10, &Bytes, 0x10);

	uFnCrcBytes->FunctionFlags |= ~0x400;

	UCRC_X::StaticClass()->ProcessEvent(uFnCrcBytes, &CrcBytes_Params, nullptr);

	uFnCrcBytes->FunctionFlags |= 0x400;

	memcpy_s(&Bytes, 0x10, &CrcBytes_Params.Bytes, 0x10);

	return CrcBytes_Params.ReturnValue;
};

// Function ProjectX.CRC_X.CrcString
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Text                           (CPF_Parm | CPF_NeedCtorLink)

int32_t UCRC_X::CrcString(class FString Text)
{
	static UFunction* uFnCrcString = nullptr;

	if (!uFnCrcString)
	{
		uFnCrcString = UFunction::FindFunction("Function ProjectX.CRC_X.CrcString");
	}

	UCRC_X_execCrcString_Params CrcString_Params;
	memcpy_s(&CrcString_Params.Text, 0x10, &Text, 0x10);

	uFnCrcString->FunctionFlags |= ~0x400;

	UCRC_X::StaticClass()->ProcessEvent(uFnCrcString, &CrcString_Params, nullptr);

	uFnCrcString->FunctionFlags |= 0x400;

	return CrcString_Params.ReturnValue;
};

// Function ProjectX.EffectsMap_X.GetEffects
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FEffectsMapping         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPhysicalMaterial*       PhysMat                        (CPF_Parm)

struct FEffectsMapping UEffectsMap_X::GetEffects(class UPhysicalMaterial* PhysMat)
{
	static UFunction* uFnGetEffects = nullptr;

	if (!uFnGetEffects)
	{
		uFnGetEffects = UFunction::FindFunction("Function ProjectX.EffectsMap_X.GetEffects");
	}

	UEffectsMap_X_execGetEffects_Params GetEffects_Params;
	memcpy_s(&GetEffects_Params.PhysMat, 0x8, &PhysMat, 0x8);

	uFnGetEffects->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetEffects, &GetEffects_Params, nullptr);

	uFnGetEffects->FunctionFlags |= 0x400;

	return GetEffects_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.AddDynamicallyLoadedPackages
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FDynamicallyLoadedPackage> OutPackages                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UEngineShare_X::AddDynamicallyLoadedPackages(TArray<struct FDynamicallyLoadedPackage>& OutPackages)
{
	static UFunction* uFnAddDynamicallyLoadedPackages = nullptr;

	if (!uFnAddDynamicallyLoadedPackages)
	{
		uFnAddDynamicallyLoadedPackages = UFunction::FindFunction("Function ProjectX.EngineShare_X.AddDynamicallyLoadedPackages");
	}

	UEngineShare_X_execAddDynamicallyLoadedPackages_Params AddDynamicallyLoadedPackages_Params;
	memcpy_s(&AddDynamicallyLoadedPackages_Params.OutPackages, 0x10, &OutPackages, 0x10);

	uFnAddDynamicallyLoadedPackages->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddDynamicallyLoadedPackages, &AddDynamicallyLoadedPackages_Params, nullptr);

	uFnAddDynamicallyLoadedPackages->FunctionFlags |= 0x400;

	memcpy_s(&OutPackages, 0x10, &AddDynamicallyLoadedPackages_Params.OutPackages, 0x10);
};

// Function ProjectX.EngineShare_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UEngineShare_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.EngineShare_X.PrintDebugInfo");
	}

	UEngineShare_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.EngineShare_X.PreExit
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::eventPreExit()
{
	static UFunction* uFnPreExit = nullptr;

	if (!uFnPreExit)
	{
		uFnPreExit = UFunction::FindFunction("Function ProjectX.EngineShare_X.PreExit");
	}

	UEngineShare_X_eventPreExit_Params PreExit_Params;

	this->ProcessEvent(uFnPreExit, &PreExit_Params, nullptr);
};

// Function ProjectX.EngineShare_X.IsRequestingExit
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEngineShare_X::IsRequestingExit()
{
	static UFunction* uFnIsRequestingExit = nullptr;

	if (!uFnIsRequestingExit)
	{
		uFnIsRequestingExit = UFunction::FindFunction("Function ProjectX.EngineShare_X.IsRequestingExit");
	}

	UEngineShare_X_execIsRequestingExit_Params IsRequestingExit_Params;

	uFnIsRequestingExit->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnIsRequestingExit, &IsRequestingExit_Params, nullptr);

	uFnIsRequestingExit->FunctionFlags |= 0x400;

	return IsRequestingExit_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.GetUserAgentHeader
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UEngineShare_X::GetUserAgentHeader()
{
	static UFunction* uFnGetUserAgentHeader = nullptr;

	if (!uFnGetUserAgentHeader)
	{
		uFnGetUserAgentHeader = UFunction::FindFunction("Function ProjectX.EngineShare_X.GetUserAgentHeader");
	}

	UEngineShare_X_execGetUserAgentHeader_Params GetUserAgentHeader_Params;

	uFnGetUserAgentHeader->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnGetUserAgentHeader, &GetUserAgentHeader_Params, nullptr);

	uFnGetUserAgentHeader->FunctionFlags |= 0x400;

	return GetUserAgentHeader_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.GetRegionString
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UEngineShare_X::GetRegionString()
{
	static UFunction* uFnGetRegionString = nullptr;

	if (!uFnGetRegionString)
	{
		uFnGetRegionString = UFunction::FindFunction("Function ProjectX.EngineShare_X.GetRegionString");
	}

	UEngineShare_X_execGetRegionString_Params GetRegionString_Params;

	uFnGetRegionString->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetRegionString, &GetRegionString_Params, nullptr);

	uFnGetRegionString->FunctionFlags |= 0x400;

	return GetRegionString_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.GetPlatformString
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UEngineShare_X::GetPlatformString()
{
	static UFunction* uFnGetPlatformString = nullptr;

	if (!uFnGetPlatformString)
	{
		uFnGetPlatformString = UFunction::FindFunction("Function ProjectX.EngineShare_X.GetPlatformString");
	}

	UEngineShare_X_execGetPlatformString_Params GetPlatformString_Params;

	uFnGetPlatformString->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetPlatformString, &GetPlatformString_Params, nullptr);

	uFnGetPlatformString->FunctionFlags |= 0x400;

	return GetPlatformString_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.ConfigGetString
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  SectionName                    (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)
// class FString                  KeyName                        (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)
// class FString                  OutValue                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UEngineShare_X::ConfigGetString(class FString SectionName, class FString KeyName, class FString& OutValue)
{
	static UFunction* uFnConfigGetString = nullptr;

	if (!uFnConfigGetString)
	{
		uFnConfigGetString = UFunction::FindFunction("Function ProjectX.EngineShare_X.ConfigGetString");
	}

	UEngineShare_X_execConfigGetString_Params ConfigGetString_Params;
	memcpy_s(&ConfigGetString_Params.SectionName, 0x10, &SectionName, 0x10);
	memcpy_s(&ConfigGetString_Params.KeyName, 0x10, &KeyName, 0x10);
	memcpy_s(&ConfigGetString_Params.OutValue, 0x10, &OutValue, 0x10);

	uFnConfigGetString->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnConfigGetString, &ConfigGetString_Params, nullptr);

	uFnConfigGetString->FunctionFlags |= 0x400;

	memcpy_s(&OutValue, 0x10, &ConfigGetString_Params.OutValue, 0x10);

	return ConfigGetString_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.ParseCommandlineStringArr
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Param                          (CPF_Parm | CPF_NeedCtorLink)
// TArray<class FString>          OutValues                      (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UEngineShare_X::ParseCommandlineStringArr(class FString Param, TArray<class FString>& OutValues)
{
	static UFunction* uFnParseCommandlineStringArr = nullptr;

	if (!uFnParseCommandlineStringArr)
	{
		uFnParseCommandlineStringArr = UFunction::FindFunction("Function ProjectX.EngineShare_X.ParseCommandlineStringArr");
	}

	UEngineShare_X_execParseCommandlineStringArr_Params ParseCommandlineStringArr_Params;
	memcpy_s(&ParseCommandlineStringArr_Params.Param, 0x10, &Param, 0x10);
	memcpy_s(&ParseCommandlineStringArr_Params.OutValues, 0x10, &OutValues, 0x10);

	uFnParseCommandlineStringArr->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnParseCommandlineStringArr, &ParseCommandlineStringArr_Params, nullptr);

	uFnParseCommandlineStringArr->FunctionFlags |= 0x400;

	memcpy_s(&OutValues, 0x10, &ParseCommandlineStringArr_Params.OutValues, 0x10);

	return ParseCommandlineStringArr_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.ParseCommandlineString
// [0x00426401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Param                          (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bShouldStopOnComma             (CPF_OptionalParm | CPF_Parm)
// class FString                  OutValue                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UEngineShare_X::ParseCommandlineString(class FString Param, unsigned long bShouldStopOnComma, class FString& OutValue)
{
	static UFunction* uFnParseCommandlineString = nullptr;

	if (!uFnParseCommandlineString)
	{
		uFnParseCommandlineString = UFunction::FindFunction("Function ProjectX.EngineShare_X.ParseCommandlineString");
	}

	UEngineShare_X_execParseCommandlineString_Params ParseCommandlineString_Params;
	memcpy_s(&ParseCommandlineString_Params.Param, 0x10, &Param, 0x10);
	ParseCommandlineString_Params.bShouldStopOnComma = bShouldStopOnComma;
	memcpy_s(&ParseCommandlineString_Params.OutValue, 0x10, &OutValue, 0x10);

	uFnParseCommandlineString->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnParseCommandlineString, &ParseCommandlineString_Params, nullptr);

	uFnParseCommandlineString->FunctionFlags |= 0x400;

	memcpy_s(&OutValue, 0x10, &ParseCommandlineString_Params.OutValue, 0x10);

	return ParseCommandlineString_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.ParseCommandlineQWORD
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Param                          (CPF_Parm | CPF_NeedCtorLink)
// uint64_t                       OutValue                       (CPF_Parm | CPF_OutParm)

bool UEngineShare_X::ParseCommandlineQWORD(class FString Param, uint64_t& OutValue)
{
	static UFunction* uFnParseCommandlineQWORD = nullptr;

	if (!uFnParseCommandlineQWORD)
	{
		uFnParseCommandlineQWORD = UFunction::FindFunction("Function ProjectX.EngineShare_X.ParseCommandlineQWORD");
	}

	UEngineShare_X_execParseCommandlineQWORD_Params ParseCommandlineQWORD_Params;
	memcpy_s(&ParseCommandlineQWORD_Params.Param, 0x10, &Param, 0x10);
	ParseCommandlineQWORD_Params.OutValue = OutValue;

	uFnParseCommandlineQWORD->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnParseCommandlineQWORD, &ParseCommandlineQWORD_Params, nullptr);

	uFnParseCommandlineQWORD->FunctionFlags |= 0x400;

	OutValue = ParseCommandlineQWORD_Params.OutValue;

	return ParseCommandlineQWORD_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.ParseCommandlineFloat
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Param                          (CPF_Parm | CPF_NeedCtorLink)
// float                          OutValue                       (CPF_Parm | CPF_OutParm)

bool UEngineShare_X::ParseCommandlineFloat(class FString Param, float& OutValue)
{
	static UFunction* uFnParseCommandlineFloat = nullptr;

	if (!uFnParseCommandlineFloat)
	{
		uFnParseCommandlineFloat = UFunction::FindFunction("Function ProjectX.EngineShare_X.ParseCommandlineFloat");
	}

	UEngineShare_X_execParseCommandlineFloat_Params ParseCommandlineFloat_Params;
	memcpy_s(&ParseCommandlineFloat_Params.Param, 0x10, &Param, 0x10);
	memcpy_s(&ParseCommandlineFloat_Params.OutValue, 0x4, &OutValue, 0x4);

	uFnParseCommandlineFloat->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnParseCommandlineFloat, &ParseCommandlineFloat_Params, nullptr);

	uFnParseCommandlineFloat->FunctionFlags |= 0x400;

	memcpy_s(&OutValue, 0x4, &ParseCommandlineFloat_Params.OutValue, 0x4);

	return ParseCommandlineFloat_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.ParseCommandlineInt
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Param                          (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        OutValue                       (CPF_Parm | CPF_OutParm)

bool UEngineShare_X::ParseCommandlineInt(class FString Param, int32_t& OutValue)
{
	static UFunction* uFnParseCommandlineInt = nullptr;

	if (!uFnParseCommandlineInt)
	{
		uFnParseCommandlineInt = UFunction::FindFunction("Function ProjectX.EngineShare_X.ParseCommandlineInt");
	}

	UEngineShare_X_execParseCommandlineInt_Params ParseCommandlineInt_Params;
	memcpy_s(&ParseCommandlineInt_Params.Param, 0x10, &Param, 0x10);
	memcpy_s(&ParseCommandlineInt_Params.OutValue, 0x4, &OutValue, 0x4);

	uFnParseCommandlineInt->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnParseCommandlineInt, &ParseCommandlineInt_Params, nullptr);

	uFnParseCommandlineInt->FunctionFlags |= 0x400;

	memcpy_s(&OutValue, 0x4, &ParseCommandlineInt_Params.OutValue, 0x4);

	return ParseCommandlineInt_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.ParseCommandlineParam
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Param                          (CPF_Parm | CPF_NeedCtorLink)

bool UEngineShare_X::ParseCommandlineParam(class FString Param)
{
	static UFunction* uFnParseCommandlineParam = nullptr;

	if (!uFnParseCommandlineParam)
	{
		uFnParseCommandlineParam = UFunction::FindFunction("Function ProjectX.EngineShare_X.ParseCommandlineParam");
	}

	UEngineShare_X_execParseCommandlineParam_Params ParseCommandlineParam_Params;
	memcpy_s(&ParseCommandlineParam_Params.Param, 0x10, &Param, 0x10);

	uFnParseCommandlineParam->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnParseCommandlineParam, &ParseCommandlineParam_Params, nullptr);

	uFnParseCommandlineParam->FunctionFlags |= 0x400;

	return ParseCommandlineParam_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.InitOnlineGame
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineSubsystem*        NewOnlineSubsystem             (CPF_Parm)

void UEngineShare_X::InitOnlineGame(class UOnlineSubsystem* NewOnlineSubsystem)
{
	static UFunction* uFnInitOnlineGame = nullptr;

	if (!uFnInitOnlineGame)
	{
		uFnInitOnlineGame = UFunction::FindFunction("Function ProjectX.EngineShare_X.InitOnlineGame");
	}

	UEngineShare_X_execInitOnlineGame_Params InitOnlineGame_Params;
	memcpy_s(&InitOnlineGame_Params.NewOnlineSubsystem, 0x8, &NewOnlineSubsystem, 0x8);

	this->ProcessEvent(uFnInitOnlineGame, &InitOnlineGame_Params, nullptr);
};

// Function ProjectX.EngineShare_X.IsUsingNullRHI
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEngineShare_X::IsUsingNullRHI()
{
	static UFunction* uFnIsUsingNullRHI = nullptr;

	if (!uFnIsUsingNullRHI)
	{
		uFnIsUsingNullRHI = UFunction::FindFunction("Function ProjectX.EngineShare_X.IsUsingNullRHI");
	}

	UEngineShare_X_execIsUsingNullRHI_Params IsUsingNullRHI_Params;

	uFnIsUsingNullRHI->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnIsUsingNullRHI, &IsUsingNullRHI_Params, nullptr);

	uFnIsUsingNullRHI->FunctionFlags |= 0x400;

	return IsUsingNullRHI_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.IsAuthoritative
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEngineShare_X::IsAuthoritative()
{
	static UFunction* uFnIsAuthoritative = nullptr;

	if (!uFnIsAuthoritative)
	{
		uFnIsAuthoritative = UFunction::FindFunction("Function ProjectX.EngineShare_X.IsAuthoritative");
	}

	UEngineShare_X_execIsAuthoritative_Params IsAuthoritative_Params;

	uFnIsAuthoritative->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnIsAuthoritative, &IsAuthoritative_Params, nullptr);

	uFnIsAuthoritative->FunctionFlags |= 0x400;

	return IsAuthoritative_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.IsNetServer
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEngineShare_X::IsNetServer()
{
	static UFunction* uFnIsNetServer = nullptr;

	if (!uFnIsNetServer)
	{
		uFnIsNetServer = UFunction::FindFunction("Function ProjectX.EngineShare_X.IsNetServer");
	}

	UEngineShare_X_execIsNetServer_Params IsNetServer_Params;

	uFnIsNetServer->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnIsNetServer, &IsNetServer_Params, nullptr);

	uFnIsNetServer->FunctionFlags |= 0x400;

	return IsNetServer_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.IsNetClient
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEngineShare_X::IsNetClient()
{
	static UFunction* uFnIsNetClient = nullptr;

	if (!uFnIsNetClient)
	{
		uFnIsNetClient = UFunction::FindFunction("Function ProjectX.EngineShare_X.IsNetClient");
	}

	UEngineShare_X_execIsNetClient_Params IsNetClient_Params;

	uFnIsNetClient->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnIsNetClient, &IsNetClient_Params, nullptr);

	uFnIsNetClient->FunctionFlags |= 0x400;

	return IsNetClient_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.IsHeadlessGameClient
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEngineShare_X::IsHeadlessGameClient()
{
	static UFunction* uFnIsHeadlessGameClient = nullptr;

	if (!uFnIsHeadlessGameClient)
	{
		uFnIsHeadlessGameClient = UFunction::FindFunction("Function ProjectX.EngineShare_X.IsHeadlessGameClient");
	}

	UEngineShare_X_execIsHeadlessGameClient_Params IsHeadlessGameClient_Params;

	uFnIsHeadlessGameClient->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnIsHeadlessGameClient, &IsHeadlessGameClient_Params, nullptr);

	uFnIsHeadlessGameClient->FunctionFlags |= 0x400;

	return IsHeadlessGameClient_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.IsGameClient
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEngineShare_X::IsGameClient()
{
	static UFunction* uFnIsGameClient = nullptr;

	if (!uFnIsGameClient)
	{
		uFnIsGameClient = UFunction::FindFunction("Function ProjectX.EngineShare_X.IsGameClient");
	}

	UEngineShare_X_execIsGameClient_Params IsGameClient_Params;

	uFnIsGameClient->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnIsGameClient, &IsGameClient_Params, nullptr);

	uFnIsGameClient->FunctionFlags |= 0x400;

	return IsGameClient_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.IsDedicatedServer
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEngineShare_X::IsDedicatedServer()
{
	static UFunction* uFnIsDedicatedServer = nullptr;

	if (!uFnIsDedicatedServer)
	{
		uFnIsDedicatedServer = UFunction::FindFunction("Function ProjectX.EngineShare_X.IsDedicatedServer");
	}

	UEngineShare_X_execIsDedicatedServer_Params IsDedicatedServer_Params;

	uFnIsDedicatedServer->FunctionFlags |= ~0x400;

	UEngineShare_X::StaticClass()->ProcessEvent(uFnIsDedicatedServer, &IsDedicatedServer_Params, nullptr);

	uFnIsDedicatedServer->FunctionFlags |= 0x400;

	return IsDedicatedServer_Params.ReturnValue;
};

// Function ProjectX.EngineShare_X.EventUndockedChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::EventUndockedChanged()
{
	static UFunction* uFnEventUndockedChanged = nullptr;

	if (!uFnEventUndockedChanged)
	{
		uFnEventUndockedChanged = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventUndockedChanged");
	}

	UEngineShare_X_execEventUndockedChanged_Params EventUndockedChanged_Params;

	this->ProcessEvent(uFnEventUndockedChanged, &EventUndockedChanged_Params, nullptr);
};

// Function ProjectX.EngineShare_X.EventCrashed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::EventCrashed()
{
	static UFunction* uFnEventCrashed = nullptr;

	if (!uFnEventCrashed)
	{
		uFnEventCrashed = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventCrashed");
	}

	UEngineShare_X_execEventCrashed_Params EventCrashed_Params;

	this->ProcessEvent(uFnEventCrashed, &EventCrashed_Params, nullptr);
};

// Function ProjectX.EngineShare_X.EventPostLoadMap
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::EventPostLoadMap()
{
	static UFunction* uFnEventPostLoadMap = nullptr;

	if (!uFnEventPostLoadMap)
	{
		uFnEventPostLoadMap = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventPostLoadMap");
	}

	UEngineShare_X_execEventPostLoadMap_Params EventPostLoadMap_Params;

	this->ProcessEvent(uFnEventPostLoadMap, &EventPostLoadMap_Params, nullptr);
};

// Function ProjectX.EngineShare_X.EventPreLoadMap
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  MapName                        (CPF_Parm | CPF_NeedCtorLink)

void UEngineShare_X::EventPreLoadMap(class FString MapName)
{
	static UFunction* uFnEventPreLoadMap = nullptr;

	if (!uFnEventPreLoadMap)
	{
		uFnEventPreLoadMap = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventPreLoadMap");
	}

	UEngineShare_X_execEventPreLoadMap_Params EventPreLoadMap_Params;
	memcpy_s(&EventPreLoadMap_Params.MapName, 0x10, &MapName, 0x10);

	this->ProcessEvent(uFnEventPreLoadMap, &EventPreLoadMap_Params, nullptr);
};

// Function ProjectX.EngineShare_X.EventOnlineGameInitialized
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::EventOnlineGameInitialized()
{
	static UFunction* uFnEventOnlineGameInitialized = nullptr;

	if (!uFnEventOnlineGameInitialized)
	{
		uFnEventOnlineGameInitialized = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventOnlineGameInitialized");
	}

	UEngineShare_X_execEventOnlineGameInitialized_Params EventOnlineGameInitialized_Params;

	this->ProcessEvent(uFnEventOnlineGameInitialized, &EventOnlineGameInitialized_Params, nullptr);
};

// Function ProjectX.EngineShare_X.EventPostScriptsReloaded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::EventPostScriptsReloaded()
{
	static UFunction* uFnEventPostScriptsReloaded = nullptr;

	if (!uFnEventPostScriptsReloaded)
	{
		uFnEventPostScriptsReloaded = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventPostScriptsReloaded");
	}

	UEngineShare_X_execEventPostScriptsReloaded_Params EventPostScriptsReloaded_Params;

	this->ProcessEvent(uFnEventPostScriptsReloaded, &EventPostScriptsReloaded_Params, nullptr);
};

// Function ProjectX.EngineShare_X.EventPreScriptsReloaded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::EventPreScriptsReloaded()
{
	static UFunction* uFnEventPreScriptsReloaded = nullptr;

	if (!uFnEventPreScriptsReloaded)
	{
		uFnEventPreScriptsReloaded = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventPreScriptsReloaded");
	}

	UEngineShare_X_execEventPreScriptsReloaded_Params EventPreScriptsReloaded_Params;

	this->ProcessEvent(uFnEventPreScriptsReloaded, &EventPreScriptsReloaded_Params, nullptr);
};

// Function ProjectX.EngineShare_X.EventLoadingMovieClosed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::EventLoadingMovieClosed()
{
	static UFunction* uFnEventLoadingMovieClosed = nullptr;

	if (!uFnEventLoadingMovieClosed)
	{
		uFnEventLoadingMovieClosed = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventLoadingMovieClosed");
	}

	UEngineShare_X_execEventLoadingMovieClosed_Params EventLoadingMovieClosed_Params;

	this->ProcessEvent(uFnEventLoadingMovieClosed, &EventLoadingMovieClosed_Params, nullptr);
};

// Function ProjectX.EngineShare_X.EventPreExit
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEngineShare_X::EventPreExit()
{
	static UFunction* uFnEventPreExit = nullptr;

	if (!uFnEventPreExit)
	{
		uFnEventPreExit = UFunction::FindFunction("Function ProjectX.EngineShare_X.EventPreExit");
	}

	UEngineShare_X_execEventPreExit_Params EventPreExit_Params;

	this->ProcessEvent(uFnEventPreExit, &EventPreExit_Params, nullptr);
};

// Function ProjectX.EOSMetrics_X.__EOSMetrics_X__Init_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UEOSMetrics_X::__EOSMetrics_X__Init_0x1()
{
	static UFunction* uFn__EOSMetrics_X__Init_0x1 = nullptr;

	if (!uFn__EOSMetrics_X__Init_0x1)
	{
		uFn__EOSMetrics_X__Init_0x1 = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.__EOSMetrics_X__Init_0x1");
	}

	UEOSMetrics_X_exec__EOSMetrics_X__Init_0x1_Params __EOSMetrics_X__Init_0x1_Params;

	this->ProcessEvent(uFn__EOSMetrics_X__Init_0x1, &__EOSMetrics_X__Init_0x1_Params, nullptr);
};

// Function ProjectX.EOSMetrics_X.__EOSMetrics_X__Init_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UEOSMetricsConfig_X*     EpicMetric                     (CPF_Parm)

void UEOSMetrics_X::__EOSMetrics_X__Init_0x2(class UEOSMetricsConfig_X* EpicMetric)
{
	static UFunction* uFn__EOSMetrics_X__Init_0x2 = nullptr;

	if (!uFn__EOSMetrics_X__Init_0x2)
	{
		uFn__EOSMetrics_X__Init_0x2 = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.__EOSMetrics_X__Init_0x2");
	}

	UEOSMetrics_X_exec__EOSMetrics_X__Init_0x2_Params __EOSMetrics_X__Init_0x2_Params;
	memcpy_s(&__EOSMetrics_X__Init_0x2_Params.EpicMetric, 0x8, &EpicMetric, 0x8);

	this->ProcessEvent(uFn__EOSMetrics_X__Init_0x2, &__EOSMetrics_X__Init_0x2_Params, nullptr);
};

// Function ProjectX.EOSMetrics_X.GetUserIdNative
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            LocalId                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  EpicId                         (CPF_Parm | CPF_NeedCtorLink)

class FString UEOSMetrics_X::GetUserIdNative(struct FUniqueNetId LocalId, class FString EpicId)
{
	static UFunction* uFnGetUserIdNative = nullptr;

	if (!uFnGetUserIdNative)
	{
		uFnGetUserIdNative = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.GetUserIdNative");
	}

	UEOSMetrics_X_execGetUserIdNative_Params GetUserIdNative_Params;
	memcpy_s(&GetUserIdNative_Params.LocalId, 0x48, &LocalId, 0x48);
	memcpy_s(&GetUserIdNative_Params.EpicId, 0x10, &EpicId, 0x10);

	uFnGetUserIdNative->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetUserIdNative, &GetUserIdNative_Params, nullptr);

	uFnGetUserIdNative->FunctionFlags |= 0x400;

	return GetUserIdNative_Params.ReturnValue;
};

// Function ProjectX.EOSMetrics_X.SetLocation
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InLocation                     (CPF_Parm | CPF_NeedCtorLink)

void UEOSMetrics_X::SetLocation(class FString InLocation)
{
	static UFunction* uFnSetLocation = nullptr;

	if (!uFnSetLocation)
	{
		uFnSetLocation = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.SetLocation");
	}

	UEOSMetrics_X_execSetLocation_Params SetLocation_Params;
	memcpy_s(&SetLocation_Params.InLocation, 0x10, &InLocation, 0x10);

	this->ProcessEvent(uFnSetLocation, &SetLocation_Params, nullptr);
};

// Function ProjectX.EOSMetrics_X.AddEvent
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEOSMetricEvent_X*       InEvent                        (CPF_Parm)

void UEOSMetrics_X::AddEvent(class UEOSMetricEvent_X* InEvent)
{
	static UFunction* uFnAddEvent = nullptr;

	if (!uFnAddEvent)
	{
		uFnAddEvent = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.AddEvent");
	}

	UEOSMetrics_X_execAddEvent_Params AddEvent_Params;
	memcpy_s(&AddEvent_Params.InEvent, 0x8, &InEvent, 0x8);

	this->ProcessEvent(uFnAddEvent, &AddEvent_Params, nullptr);
};

// Function ProjectX.EOSMetrics_X.HandleCrash
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEOSMetrics_X::HandleCrash()
{
	static UFunction* uFnHandleCrash = nullptr;

	if (!uFnHandleCrash)
	{
		uFnHandleCrash = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.HandleCrash");
	}

	UEOSMetrics_X_execHandleCrash_Params HandleCrash_Params;

	this->ProcessEvent(uFnHandleCrash, &HandleCrash_Params, nullptr);
};

// Function ProjectX.EOSMetrics_X.GetUploadType
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UEOSMetrics_X::GetUploadType()
{
	static UFunction* uFnGetUploadType = nullptr;

	if (!uFnGetUploadType)
	{
		uFnGetUploadType = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.GetUploadType");
	}

	UEOSMetrics_X_execGetUploadType_Params GetUploadType_Params;

	this->ProcessEvent(uFnGetUploadType, &GetUploadType_Params, nullptr);

	return GetUploadType_Params.ReturnValue;
};

// Function ProjectX.EOSMetrics_X.GetUserId
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UEOSMetrics_X::GetUserId()
{
	static UFunction* uFnGetUserId = nullptr;

	if (!uFnGetUserId)
	{
		uFnGetUserId = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.GetUserId");
	}

	UEOSMetrics_X_execGetUserId_Params GetUserId_Params;

	this->ProcessEvent(uFnGetUserId, &GetUserId_Params, nullptr);

	return GetUserId_Params.ReturnValue;
};

// Function ProjectX.EOSMetrics_X.GetURL
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UEOSMetrics_X::GetURL()
{
	static UFunction* uFnGetURL = nullptr;

	if (!uFnGetURL)
	{
		uFnGetURL = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.GetURL");
	}

	UEOSMetrics_X_execGetURL_Params GetURL_Params;

	this->ProcessEvent(uFnGetURL, &GetURL_Params, nullptr);

	return GetURL_Params.ReturnValue;
};

// Function ProjectX.EOSMetrics_X.CreatePresenceEvent
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UEOSEvent_Presence_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UEOSEvent_Presence_X* UEOSMetrics_X::CreatePresenceEvent()
{
	static UFunction* uFnCreatePresenceEvent = nullptr;

	if (!uFnCreatePresenceEvent)
	{
		uFnCreatePresenceEvent = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.CreatePresenceEvent");
	}

	UEOSMetrics_X_execCreatePresenceEvent_Params CreatePresenceEvent_Params;

	this->ProcessEvent(uFnCreatePresenceEvent, &CreatePresenceEvent_Params, nullptr);

	return CreatePresenceEvent_Params.ReturnValue;
};

// Function ProjectX.EOSMetrics_X.SendPing
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEOSMetrics_X::SendPing()
{
	static UFunction* uFnSendPing = nullptr;

	if (!uFnSendPing)
	{
		uFnSendPing = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.SendPing");
	}

	UEOSMetrics_X_execSendPing_Params SendPing_Params;

	this->ProcessEvent(uFnSendPing, &SendPing_Params, nullptr);
};

// Function ProjectX.EOSMetrics_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer_X*          InLocalPlayer                  (CPF_Parm)

void UEOSMetrics_X::Init(class ULocalPlayer_X* InLocalPlayer)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.EOSMetrics_X.Init");
	}

	UEOSMetrics_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.InLocalPlayer, 0x8, &InLocalPlayer, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.LocalPlayer_X.SpawnPlayActor
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  OutError                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool ULocalPlayer_X::SpawnPlayActor(class FString URL, class FString& OutError)
{
	static UFunction* uFnSpawnPlayActor = nullptr;

	if (!uFnSpawnPlayActor)
	{
		uFnSpawnPlayActor = UFunction::FindFunction("Function ProjectX.LocalPlayer_X.SpawnPlayActor");
	}

	ULocalPlayer_X_execSpawnPlayActor_Params SpawnPlayActor_Params;
	memcpy_s(&SpawnPlayActor_Params.URL, 0x10, &URL, 0x10);
	memcpy_s(&SpawnPlayActor_Params.OutError, 0x10, &OutError, 0x10);

	uFnSpawnPlayActor->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSpawnPlayActor, &SpawnPlayActor_Params, nullptr);

	uFnSpawnPlayActor->FunctionFlags |= 0x400;

	memcpy_s(&OutError, 0x10, &SpawnPlayActor_Params.OutError, 0x10);

	return SpawnPlayActor_Params.ReturnValue;
};

// Function ProjectX.LocalPlayer_X.NotifyServerConnectionOpen
// [0x400020800] (FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void ULocalPlayer_X::eventNotifyServerConnectionOpen()
{
	static UFunction* uFnNotifyServerConnectionOpen = nullptr;

	if (!uFnNotifyServerConnectionOpen)
	{
		uFnNotifyServerConnectionOpen = UFunction::FindFunction("Function ProjectX.LocalPlayer_X.NotifyServerConnectionOpen");
	}

	ULocalPlayer_X_eventNotifyServerConnectionOpen_Params NotifyServerConnectionOpen_Params;

	this->ProcessEvent(uFnNotifyServerConnectionOpen, &NotifyServerConnectionOpen_Params, nullptr);
};

// Function ProjectX.LocalPlayer_X.NotifyOnValidPlayerController
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// class UClass*                  PCClass                        (CPF_OptionalParm | CPF_Parm)

void ULocalPlayer_X::NotifyOnValidPlayerController(struct FScriptDelegate Callback, class UClass* PCClass)
{
	static UFunction* uFnNotifyOnValidPlayerController = nullptr;

	if (!uFnNotifyOnValidPlayerController)
	{
		uFnNotifyOnValidPlayerController = UFunction::FindFunction("Function ProjectX.LocalPlayer_X.NotifyOnValidPlayerController");
	}

	ULocalPlayer_X_execNotifyOnValidPlayerController_Params NotifyOnValidPlayerController_Params;
	memcpy_s(&NotifyOnValidPlayerController_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&NotifyOnValidPlayerController_Params.PCClass, 0x8, &PCClass, 0x8);

	this->ProcessEvent(uFnNotifyOnValidPlayerController, &NotifyOnValidPlayerController_Params, nullptr);
};

// Function ProjectX.LocalPlayer_X.GetEosNameIfAvailable
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  EosName                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool ULocalPlayer_X::GetEosNameIfAvailable(class FString& EosName)
{
	static UFunction* uFnGetEosNameIfAvailable = nullptr;

	if (!uFnGetEosNameIfAvailable)
	{
		uFnGetEosNameIfAvailable = UFunction::FindFunction("Function ProjectX.LocalPlayer_X.GetEosNameIfAvailable");
	}

	ULocalPlayer_X_execGetEosNameIfAvailable_Params GetEosNameIfAvailable_Params;
	memcpy_s(&GetEosNameIfAvailable_Params.EosName, 0x10, &EosName, 0x10);

	this->ProcessEvent(uFnGetEosNameIfAvailable, &GetEosNameIfAvailable_Params, nullptr);

	memcpy_s(&EosName, 0x10, &GetEosNameIfAvailable_Params.EosName, 0x10);

	return GetEosNameIfAvailable_Params.ReturnValue;
};

// Function ProjectX.LocalPlayer_X.GetNickname
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString ULocalPlayer_X::eventGetNickname()
{
	static UFunction* uFnGetNickname = nullptr;

	if (!uFnGetNickname)
	{
		uFnGetNickname = UFunction::FindFunction("Function ProjectX.LocalPlayer_X.GetNickname");
	}

	ULocalPlayer_X_eventGetNickname_Params GetNickname_Params;

	this->ProcessEvent(uFnGetNickname, &GetNickname_Params, nullptr);

	return GetNickname_Params.ReturnValue;
};

// Function ProjectX.LocalPlayer_X.OnRemoved
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void ULocalPlayer_X::OnRemoved()
{
	static UFunction* uFnOnRemoved = nullptr;

	if (!uFnOnRemoved)
	{
		uFnOnRemoved = UFunction::FindFunction("Function ProjectX.LocalPlayer_X.OnRemoved");
	}

	ULocalPlayer_X_execOnRemoved_Params OnRemoved_Params;

	this->ProcessEvent(uFnOnRemoved, &OnRemoved_Params, nullptr);
};

// Function ProjectX.LocalPlayer_X.HandleOnlineNameChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         PrimaryOnlinePlayer            (CPF_Parm)

void ULocalPlayer_X::HandleOnlineNameChanged(class UOnlinePlayer_X* PrimaryOnlinePlayer)
{
	static UFunction* uFnHandleOnlineNameChanged = nullptr;

	if (!uFnHandleOnlineNameChanged)
	{
		uFnHandleOnlineNameChanged = UFunction::FindFunction("Function ProjectX.LocalPlayer_X.HandleOnlineNameChanged");
	}

	ULocalPlayer_X_execHandleOnlineNameChanged_Params HandleOnlineNameChanged_Params;
	memcpy_s(&HandleOnlineNameChanged_Params.PrimaryOnlinePlayer, 0x8, &PrimaryOnlinePlayer, 0x8);

	this->ProcessEvent(uFnHandleOnlineNameChanged, &HandleOnlineNameChanged_Params, nullptr);
};

// Function ProjectX.LocalPlayer_X.OnCreated
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void ULocalPlayer_X::OnCreated()
{
	static UFunction* uFnOnCreated = nullptr;

	if (!uFnOnCreated)
	{
		uFnOnCreated = UFunction::FindFunction("Function ProjectX.LocalPlayer_X.OnCreated");
	}

	ULocalPlayer_X_execOnCreated_Params OnCreated_Params;

	this->ProcessEvent(uFnOnCreated, &OnCreated_Params, nullptr);
};

// Function ProjectX.StateObject_X.InitExecution
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UStateObject_X::InitExecution()
{
	static UFunction* uFnInitExecution = nullptr;

	if (!uFnInitExecution)
	{
		uFnInitExecution = UFunction::FindFunction("Function ProjectX.StateObject_X.InitExecution");
	}

	UStateObject_X_execInitExecution_Params InitExecution_Params;

	uFnInitExecution->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitExecution, &InitExecution_Params, nullptr);

	uFnInitExecution->FunctionFlags |= 0x400;
};

// Function ProjectX.StateObject_X.Destroyed
// [0x00020800] (FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UStateObject_X::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function ProjectX.StateObject_X.Destroyed");
	}

	UStateObject_X_eventDestroyed_Params Destroyed_Params;

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function ProjectX.StateObject_X.Destroy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UStateObject_X::Destroy()
{
	static UFunction* uFnDestroy = nullptr;

	if (!uFnDestroy)
	{
		uFnDestroy = UFunction::FindFunction("Function ProjectX.StateObject_X.Destroy");
	}

	UStateObject_X_execDestroy_Params Destroy_Params;

	uFnDestroy->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDestroy, &Destroy_Params, nullptr);

	uFnDestroy->FunctionFlags |= 0x400;
};

// Function ProjectX.Online_X.__Online_X__InitializeEOS_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UOSSConfig_X*            OSSConfig                      (CPF_Parm)

void UOnline_X::__Online_X__InitializeEOS_0x1(class UOSSConfig_X* OSSConfig)
{
	static UFunction* uFn__Online_X__InitializeEOS_0x1 = nullptr;

	if (!uFn__Online_X__InitializeEOS_0x1)
	{
		uFn__Online_X__InitializeEOS_0x1 = UFunction::FindFunction("Function ProjectX.Online_X.__Online_X__InitializeEOS_0x1");
	}

	UOnline_X_exec__Online_X__InitializeEOS_0x1_Params __Online_X__InitializeEOS_0x1_Params;
	memcpy_s(&__Online_X__InitializeEOS_0x1_Params.OSSConfig, 0x8, &OSSConfig, 0x8);

	this->ProcessEvent(uFn__Online_X__InitializeEOS_0x1, &__Online_X__InitializeEOS_0x1_Params, nullptr);
};

// Function ProjectX.Online_X.__Online_X__InitializeEOS_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UEpicConfig_X*           EpicConfig                     (CPF_Parm)

void UOnline_X::__Online_X__InitializeEOS_0x2(class UEpicConfig_X* EpicConfig)
{
	static UFunction* uFn__Online_X__InitializeEOS_0x2 = nullptr;

	if (!uFn__Online_X__InitializeEOS_0x2)
	{
		uFn__Online_X__InitializeEOS_0x2 = UFunction::FindFunction("Function ProjectX.Online_X.__Online_X__InitializeEOS_0x2");
	}

	UOnline_X_exec__Online_X__InitializeEOS_0x2_Params __Online_X__InitializeEOS_0x2_Params;
	memcpy_s(&__Online_X__InitializeEOS_0x2_Params.EpicConfig, 0x8, &EpicConfig, 0x8);

	this->ProcessEvent(uFn__Online_X__InitializeEOS_0x2, &__Online_X__InitializeEOS_0x2_Params, nullptr);
};

// Function ProjectX.Online_X.GetOrCreateEOS
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UOnlineSubsystem*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  SandboxId                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class FString                  DeploymentId                   (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UOnlineSubsystem* UOnline_X::GetOrCreateEOS(class FString& SandboxId, class FString& DeploymentId)
{
	static UFunction* uFnGetOrCreateEOS = nullptr;

	if (!uFnGetOrCreateEOS)
	{
		uFnGetOrCreateEOS = UFunction::FindFunction("Function ProjectX.Online_X.GetOrCreateEOS");
	}

	UOnline_X_execGetOrCreateEOS_Params GetOrCreateEOS_Params;
	memcpy_s(&GetOrCreateEOS_Params.SandboxId, 0x10, &SandboxId, 0x10);
	memcpy_s(&GetOrCreateEOS_Params.DeploymentId, 0x10, &DeploymentId, 0x10);

	uFnGetOrCreateEOS->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetOrCreateEOS, &GetOrCreateEOS_Params, nullptr);

	uFnGetOrCreateEOS->FunctionFlags |= 0x400;

	memcpy_s(&SandboxId, 0x10, &GetOrCreateEOS_Params.SandboxId, 0x10);
	memcpy_s(&DeploymentId, 0x10, &GetOrCreateEOS_Params.DeploymentId, 0x10);

	return GetOrCreateEOS_Params.ReturnValue;
};

// Function ProjectX.Online_X.NotifyWhenEOSInitialized
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnline_X::NotifyWhenEOSInitialized(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyWhenEOSInitialized = nullptr;

	if (!uFnNotifyWhenEOSInitialized)
	{
		uFnNotifyWhenEOSInitialized = UFunction::FindFunction("Function ProjectX.Online_X.NotifyWhenEOSInitialized");
	}

	UOnline_X_execNotifyWhenEOSInitialized_Params NotifyWhenEOSInitialized_Params;
	memcpy_s(&NotifyWhenEOSInitialized_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyWhenEOSInitialized, &NotifyWhenEOSInitialized_Params, nullptr);
};

// Function ProjectX.Online_X.HandleLinkStatusChangedEOSInit
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bHasInternetConnection         (CPF_Parm)

void UOnline_X::HandleLinkStatusChangedEOSInit(unsigned long bHasInternetConnection)
{
	static UFunction* uFnHandleLinkStatusChangedEOSInit = nullptr;

	if (!uFnHandleLinkStatusChangedEOSInit)
	{
		uFnHandleLinkStatusChangedEOSInit = UFunction::FindFunction("Function ProjectX.Online_X.HandleLinkStatusChangedEOSInit");
	}

	UOnline_X_execHandleLinkStatusChangedEOSInit_Params HandleLinkStatusChangedEOSInit_Params;
	HandleLinkStatusChangedEOSInit_Params.bHasInternetConnection = bHasInternetConnection;

	this->ProcessEvent(uFnHandleLinkStatusChangedEOSInit, &HandleLinkStatusChangedEOSInit_Params, nullptr);
};

// Function ProjectX.Online_X.OnEosInitTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnline_X::OnEosInitTimeout()
{
	static UFunction* uFnOnEosInitTimeout = nullptr;

	if (!uFnOnEosInitTimeout)
	{
		uFnOnEosInitTimeout = UFunction::FindFunction("Function ProjectX.Online_X.OnEosInitTimeout");
	}

	UOnline_X_execOnEosInitTimeout_Params OnEosInitTimeout_Params;

	this->ProcessEvent(uFnOnEosInitTimeout, &OnEosInitTimeout_Params, nullptr);
};

// Function ProjectX.Online_X.InitializeEOS
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnline_X::InitializeEOS()
{
	static UFunction* uFnInitializeEOS = nullptr;

	if (!uFnInitializeEOS)
	{
		uFnInitializeEOS = UFunction::FindFunction("Function ProjectX.Online_X.InitializeEOS");
	}

	UOnline_X_execInitializeEOS_Params InitializeEOS_Params;

	this->ProcessEvent(uFnInitializeEOS, &InitializeEOS_Params, nullptr);
};

// Function ProjectX.Online_X.BuildAddress
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  Host                           (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Port                           (CPF_Parm)
// class FString                  IP                             (CPF_Parm | CPF_NeedCtorLink)

class FString UOnline_X::BuildAddress(class FString Host, int32_t Port, class FString IP)
{
	static UFunction* uFnBuildAddress = nullptr;

	if (!uFnBuildAddress)
	{
		uFnBuildAddress = UFunction::FindFunction("Function ProjectX.Online_X.BuildAddress");
	}

	UOnline_X_execBuildAddress_Params BuildAddress_Params;
	memcpy_s(&BuildAddress_Params.Host, 0x10, &Host, 0x10);
	memcpy_s(&BuildAddress_Params.Port, 0x4, &Port, 0x4);
	memcpy_s(&BuildAddress_Params.IP, 0x10, &IP, 0x10);

	UOnline_X::StaticClass()->ProcessEvent(uFnBuildAddress, &BuildAddress_Params, nullptr);

	return BuildAddress_Params.ReturnValue;
};

// Function ProjectX.Online_X.IsInOnlineGame
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnline_X::IsInOnlineGame()
{
	static UFunction* uFnIsInOnlineGame = nullptr;

	if (!uFnIsInOnlineGame)
	{
		uFnIsInOnlineGame = UFunction::FindFunction("Function ProjectX.Online_X.IsInOnlineGame");
	}

	UOnline_X_execIsInOnlineGame_Params IsInOnlineGame_Params;

	this->ProcessEvent(uFnIsInOnlineGame, &IsInOnlineGame_Params, nullptr);

	return IsInOnlineGame_Params.ReturnValue;
};

// Function ProjectX.Online_X.IsInMainMenu
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnline_X::IsInMainMenu()
{
	static UFunction* uFnIsInMainMenu = nullptr;

	if (!uFnIsInMainMenu)
	{
		uFnIsInMainMenu = UFunction::FindFunction("Function ProjectX.Online_X.IsInMainMenu");
	}

	UOnline_X_execIsInMainMenu_Params IsInMainMenu_Params;

	this->ProcessEvent(uFnIsInMainMenu, &IsInMainMenu_Params, nullptr);

	return IsInMainMenu_Params.ReturnValue;
};

// Function ProjectX.Online_X.GetGRI
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AGRI_X* UOnline_X::GetGRI()
{
	static UFunction* uFnGetGRI = nullptr;

	if (!uFnGetGRI)
	{
		uFnGetGRI = UFunction::FindFunction("Function ProjectX.Online_X.GetGRI");
	}

	UOnline_X_execGetGRI_Params GetGRI_Params;

	this->ProcessEvent(uFnGetGRI, &GetGRI_Params, nullptr);

	return GetGRI_Params.ReturnValue;
};

// Function ProjectX.Online_X.GetWorldInfo
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AWorldInfo*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AWorldInfo* UOnline_X::GetWorldInfo()
{
	static UFunction* uFnGetWorldInfo = nullptr;

	if (!uFnGetWorldInfo)
	{
		uFnGetWorldInfo = UFunction::FindFunction("Function ProjectX.Online_X.GetWorldInfo");
	}

	UOnline_X_execGetWorldInfo_Params GetWorldInfo_Params;

	this->ProcessEvent(uFnGetWorldInfo, &GetWorldInfo_Params, nullptr);

	return GetWorldInfo_Params.ReturnValue;
};

// Function ProjectX.Online_X.CreateUniqueNetID
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint8_t                        Platform                       (CPF_Parm)
// class FString                  PlatformName                   (CPF_Parm | CPF_NeedCtorLink)
// uint64_t                       PlatformUID                    (CPF_Parm)

struct FUniqueNetId UOnline_X::CreateUniqueNetID(uint8_t Platform, class FString PlatformName, uint64_t PlatformUID)
{
	static UFunction* uFnCreateUniqueNetID = nullptr;

	if (!uFnCreateUniqueNetID)
	{
		uFnCreateUniqueNetID = UFunction::FindFunction("Function ProjectX.Online_X.CreateUniqueNetID");
	}

	UOnline_X_execCreateUniqueNetID_Params CreateUniqueNetID_Params;
	memcpy_s(&CreateUniqueNetID_Params.Platform, 0x1, &Platform, 0x1);
	memcpy_s(&CreateUniqueNetID_Params.PlatformName, 0x10, &PlatformName, 0x10);
	CreateUniqueNetID_Params.PlatformUID = PlatformUID;

	uFnCreateUniqueNetID->FunctionFlags |= ~0x400;

	UOnline_X::StaticClass()->ProcessEvent(uFnCreateUniqueNetID, &CreateUniqueNetID_Params, nullptr);

	uFnCreateUniqueNetID->FunctionFlags |= 0x400;

	return CreateUniqueNetID_Params.ReturnValue;
};

// Function ProjectX.Online_X.UniqueLobbyIDIsSet
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          InID                           (CPF_Parm)

bool UOnline_X::UniqueLobbyIDIsSet(struct FUniqueLobbyId InID)
{
	static UFunction* uFnUniqueLobbyIDIsSet = nullptr;

	if (!uFnUniqueLobbyIDIsSet)
	{
		uFnUniqueLobbyIDIsSet = UFunction::FindFunction("Function ProjectX.Online_X.UniqueLobbyIDIsSet");
	}

	UOnline_X_execUniqueLobbyIDIsSet_Params UniqueLobbyIDIsSet_Params;
	memcpy_s(&UniqueLobbyIDIsSet_Params.InID, 0x10, &InID, 0x10);

	UOnline_X::StaticClass()->ProcessEvent(uFnUniqueLobbyIDIsSet, &UniqueLobbyIDIsSet_Params, nullptr);

	return UniqueLobbyIDIsSet_Params.ReturnValue;
};

// Function ProjectX.Online_X.StringToUniqueLobbyId
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InID                           (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueLobbyId UOnline_X::StringToUniqueLobbyId(class FString InID)
{
	static UFunction* uFnStringToUniqueLobbyId = nullptr;

	if (!uFnStringToUniqueLobbyId)
	{
		uFnStringToUniqueLobbyId = UFunction::FindFunction("Function ProjectX.Online_X.StringToUniqueLobbyId");
	}

	UOnline_X_execStringToUniqueLobbyId_Params StringToUniqueLobbyId_Params;
	memcpy_s(&StringToUniqueLobbyId_Params.InID, 0x10, &InID, 0x10);

	UOnline_X::StaticClass()->ProcessEvent(uFnStringToUniqueLobbyId, &StringToUniqueLobbyId_Params, nullptr);

	return StringToUniqueLobbyId_Params.ReturnValue;
};

// Function ProjectX.Online_X.UniqueLobbyIdToString
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          InID                           (CPF_Parm)

class FString UOnline_X::UniqueLobbyIdToString(struct FUniqueLobbyId InID)
{
	static UFunction* uFnUniqueLobbyIdToString = nullptr;

	if (!uFnUniqueLobbyIdToString)
	{
		uFnUniqueLobbyIdToString = UFunction::FindFunction("Function ProjectX.Online_X.UniqueLobbyIdToString");
	}

	UOnline_X_execUniqueLobbyIdToString_Params UniqueLobbyIdToString_Params;
	memcpy_s(&UniqueLobbyIdToString_Params.InID, 0x10, &InID, 0x10);

	UOnline_X::StaticClass()->ProcessEvent(uFnUniqueLobbyIdToString, &UniqueLobbyIdToString_Params, nullptr);

	return UniqueLobbyIdToString_Params.ReturnValue;
};

// Function ProjectX.Online_X.GetUniqueNetIDWithoutSplitscreenID
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            Id                             (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnline_X::GetUniqueNetIDWithoutSplitscreenID(struct FUniqueNetId Id)
{
	static UFunction* uFnGetUniqueNetIDWithoutSplitscreenID = nullptr;

	if (!uFnGetUniqueNetIDWithoutSplitscreenID)
	{
		uFnGetUniqueNetIDWithoutSplitscreenID = UFunction::FindFunction("Function ProjectX.Online_X.GetUniqueNetIDWithoutSplitscreenID");
	}

	UOnline_X_execGetUniqueNetIDWithoutSplitscreenID_Params GetUniqueNetIDWithoutSplitscreenID_Params;
	memcpy_s(&GetUniqueNetIDWithoutSplitscreenID_Params.Id, 0x48, &Id, 0x48);

	UOnline_X::StaticClass()->ProcessEvent(uFnGetUniqueNetIDWithoutSplitscreenID, &GetUniqueNetIDWithoutSplitscreenID_Params, nullptr);

	return GetUniqueNetIDWithoutSplitscreenID_Params.ReturnValue;
};

// Function ProjectX.Online_X.GetPrimaryIDForGuest
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            InGuestID                      (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnline_X::GetPrimaryIDForGuest(struct FUniqueNetId InGuestID)
{
	static UFunction* uFnGetPrimaryIDForGuest = nullptr;

	if (!uFnGetPrimaryIDForGuest)
	{
		uFnGetPrimaryIDForGuest = UFunction::FindFunction("Function ProjectX.Online_X.GetPrimaryIDForGuest");
	}

	UOnline_X_execGetPrimaryIDForGuest_Params GetPrimaryIDForGuest_Params;
	memcpy_s(&GetPrimaryIDForGuest_Params.InGuestID, 0x48, &InGuestID, 0x48);

	UOnline_X::StaticClass()->ProcessEvent(uFnGetPrimaryIDForGuest, &GetPrimaryIDForGuest_Params, nullptr);

	return GetPrimaryIDForGuest_Params.ReturnValue;
};

// Function ProjectX.Online_X.UniqueNetIDIsGuest
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InID                           (CPF_Parm | CPF_NeedCtorLink)

bool UOnline_X::UniqueNetIDIsGuest(struct FUniqueNetId InID)
{
	static UFunction* uFnUniqueNetIDIsGuest = nullptr;

	if (!uFnUniqueNetIDIsGuest)
	{
		uFnUniqueNetIDIsGuest = UFunction::FindFunction("Function ProjectX.Online_X.UniqueNetIDIsGuest");
	}

	UOnline_X_execUniqueNetIDIsGuest_Params UniqueNetIDIsGuest_Params;
	memcpy_s(&UniqueNetIDIsGuest_Params.InID, 0x48, &InID, 0x48);

	UOnline_X::StaticClass()->ProcessEvent(uFnUniqueNetIDIsGuest, &UniqueNetIDIsGuest_Params, nullptr);

	return UniqueNetIDIsGuest_Params.ReturnValue;
};

// Function ProjectX.Online_X.UniqueNetIDIsPS4Legacy
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InID                           (CPF_Parm | CPF_NeedCtorLink)

bool UOnline_X::UniqueNetIDIsPS4Legacy(struct FUniqueNetId InID)
{
	static UFunction* uFnUniqueNetIDIsPS4Legacy = nullptr;

	if (!uFnUniqueNetIDIsPS4Legacy)
	{
		uFnUniqueNetIDIsPS4Legacy = UFunction::FindFunction("Function ProjectX.Online_X.UniqueNetIDIsPS4Legacy");
	}

	UOnline_X_execUniqueNetIDIsPS4Legacy_Params UniqueNetIDIsPS4Legacy_Params;
	memcpy_s(&UniqueNetIDIsPS4Legacy_Params.InID, 0x48, &InID, 0x48);

	uFnUniqueNetIDIsPS4Legacy->FunctionFlags |= ~0x400;

	UOnline_X::StaticClass()->ProcessEvent(uFnUniqueNetIDIsPS4Legacy, &UniqueNetIDIsPS4Legacy_Params, nullptr);

	uFnUniqueNetIDIsPS4Legacy->FunctionFlags |= 0x400;

	return UniqueNetIDIsPS4Legacy_Params.ReturnValue;
};

// Function ProjectX.Online_X.UniqueNetIDHasValue
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InID                           (CPF_Parm | CPF_NeedCtorLink)

bool UOnline_X::UniqueNetIDHasValue(struct FUniqueNetId InID)
{
	static UFunction* uFnUniqueNetIDHasValue = nullptr;

	if (!uFnUniqueNetIDHasValue)
	{
		uFnUniqueNetIDHasValue = UFunction::FindFunction("Function ProjectX.Online_X.UniqueNetIDHasValue");
	}

	UOnline_X_execUniqueNetIDHasValue_Params UniqueNetIDHasValue_Params;
	memcpy_s(&UniqueNetIDHasValue_Params.InID, 0x48, &InID, 0x48);

	uFnUniqueNetIDHasValue->FunctionFlags |= ~0x400;

	UOnline_X::StaticClass()->ProcessEvent(uFnUniqueNetIDHasValue, &UniqueNetIDHasValue_Params, nullptr);

	uFnUniqueNetIDHasValue->FunctionFlags |= 0x400;

	return UniqueNetIDHasValue_Params.ReturnValue;
};

// Function ProjectX.Online_X.UniqueNetIDIsValid
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InID                           (CPF_Parm | CPF_NeedCtorLink)

bool UOnline_X::UniqueNetIDIsValid(struct FUniqueNetId InID)
{
	static UFunction* uFnUniqueNetIDIsValid = nullptr;

	if (!uFnUniqueNetIDIsValid)
	{
		uFnUniqueNetIDIsValid = UFunction::FindFunction("Function ProjectX.Online_X.UniqueNetIDIsValid");
	}

	UOnline_X_execUniqueNetIDIsValid_Params UniqueNetIDIsValid_Params;
	memcpy_s(&UniqueNetIDIsValid_Params.InID, 0x48, &InID, 0x48);

	uFnUniqueNetIDIsValid->FunctionFlags |= ~0x400;

	UOnline_X::StaticClass()->ProcessEvent(uFnUniqueNetIDIsValid, &UniqueNetIDIsValid_Params, nullptr);

	uFnUniqueNetIDIsValid->FunctionFlags |= 0x400;

	return UniqueNetIDIsValid_Params.ReturnValue;
};

// Function ProjectX.Online_X.StringToUniqueNetId
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  InID                           (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnline_X::StringToUniqueNetId(class FString InID)
{
	static UFunction* uFnStringToUniqueNetId = nullptr;

	if (!uFnStringToUniqueNetId)
	{
		uFnStringToUniqueNetId = UFunction::FindFunction("Function ProjectX.Online_X.StringToUniqueNetId");
	}

	UOnline_X_execStringToUniqueNetId_Params StringToUniqueNetId_Params;
	memcpy_s(&StringToUniqueNetId_Params.InID, 0x10, &InID, 0x10);

	uFnStringToUniqueNetId->FunctionFlags |= ~0x400;

	UOnline_X::StaticClass()->ProcessEvent(uFnStringToUniqueNetId, &StringToUniqueNetId_Params, nullptr);

	uFnStringToUniqueNetId->FunctionFlags |= 0x400;

	return StringToUniqueNetId_Params.ReturnValue;
};

// Function ProjectX.Online_X.PlatformIdToString
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            InID                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class FString UOnline_X::PlatformIdToString(struct FUniqueNetId& InID)
{
	static UFunction* uFnPlatformIdToString = nullptr;

	if (!uFnPlatformIdToString)
	{
		uFnPlatformIdToString = UFunction::FindFunction("Function ProjectX.Online_X.PlatformIdToString");
	}

	UOnline_X_execPlatformIdToString_Params PlatformIdToString_Params;
	memcpy_s(&PlatformIdToString_Params.InID, 0x48, &InID, 0x48);

	uFnPlatformIdToString->FunctionFlags |= ~0x400;

	UOnline_X::StaticClass()->ProcessEvent(uFnPlatformIdToString, &PlatformIdToString_Params, nullptr);

	uFnPlatformIdToString->FunctionFlags |= 0x400;

	memcpy_s(&InID, 0x48, &PlatformIdToString_Params.InID, 0x48);

	return PlatformIdToString_Params.ReturnValue;
};

// Function ProjectX.Online_X.UniqueNetIDArrayToString
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// TArray<struct FUniqueNetId>    Ids                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class FString UOnline_X::UniqueNetIDArrayToString(TArray<struct FUniqueNetId>& Ids)
{
	static UFunction* uFnUniqueNetIDArrayToString = nullptr;

	if (!uFnUniqueNetIDArrayToString)
	{
		uFnUniqueNetIDArrayToString = UFunction::FindFunction("Function ProjectX.Online_X.UniqueNetIDArrayToString");
	}

	UOnline_X_execUniqueNetIDArrayToString_Params UniqueNetIDArrayToString_Params;
	memcpy_s(&UniqueNetIDArrayToString_Params.Ids, 0x10, &Ids, 0x10);

	UOnline_X::StaticClass()->ProcessEvent(uFnUniqueNetIDArrayToString, &UniqueNetIDArrayToString_Params, nullptr);

	memcpy_s(&Ids, 0x10, &UniqueNetIDArrayToString_Params.Ids, 0x10);

	return UniqueNetIDArrayToString_Params.ReturnValue;
};

// Function ProjectX.Online_X.UniqueNetIdToString
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            InID                           (CPF_Parm | CPF_NeedCtorLink)

class FString UOnline_X::UniqueNetIdToString(struct FUniqueNetId InID)
{
	static UFunction* uFnUniqueNetIdToString = nullptr;

	if (!uFnUniqueNetIdToString)
	{
		uFnUniqueNetIdToString = UFunction::FindFunction("Function ProjectX.Online_X.UniqueNetIdToString");
	}

	UOnline_X_execUniqueNetIdToString_Params UniqueNetIdToString_Params;
	memcpy_s(&UniqueNetIdToString_Params.InID, 0x48, &InID, 0x48);

	UOnline_X::StaticClass()->ProcessEvent(uFnUniqueNetIdToString, &UniqueNetIdToString_Params, nullptr);

	return UniqueNetIdToString_Params.ReturnValue;
};

// Function ProjectX.Online_X.CleanUniqueNetID
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            InID                           (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnline_X::CleanUniqueNetID(struct FUniqueNetId InID)
{
	static UFunction* uFnCleanUniqueNetID = nullptr;

	if (!uFnCleanUniqueNetID)
	{
		uFnCleanUniqueNetID = UFunction::FindFunction("Function ProjectX.Online_X.CleanUniqueNetID");
	}

	UOnline_X_execCleanUniqueNetID_Params CleanUniqueNetID_Params;
	memcpy_s(&CleanUniqueNetID_Params.InID, 0x48, &InID, 0x48);

	UOnline_X::StaticClass()->ProcessEvent(uFnCleanUniqueNetID, &CleanUniqueNetID_Params, nullptr);

	return CleanUniqueNetID_Params.ReturnValue;
};

// Function ProjectX.Online_X.FindUniqueNetID
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    List                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueNetId            Search                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UOnline_X::FindUniqueNetID(TArray<struct FUniqueNetId>& List, struct FUniqueNetId& Search)
{
	static UFunction* uFnFindUniqueNetID = nullptr;

	if (!uFnFindUniqueNetID)
	{
		uFnFindUniqueNetID = UFunction::FindFunction("Function ProjectX.Online_X.FindUniqueNetID");
	}

	UOnline_X_execFindUniqueNetID_Params FindUniqueNetID_Params;
	memcpy_s(&FindUniqueNetID_Params.List, 0x10, &List, 0x10);
	memcpy_s(&FindUniqueNetID_Params.Search, 0x48, &Search, 0x48);

	uFnFindUniqueNetID->FunctionFlags |= ~0x400;

	UOnline_X::StaticClass()->ProcessEvent(uFnFindUniqueNetID, &FindUniqueNetID_Params, nullptr);

	uFnFindUniqueNetID->FunctionFlags |= 0x400;

	memcpy_s(&List, 0x10, &FindUniqueNetID_Params.List, 0x10);
	memcpy_s(&Search, 0x48, &FindUniqueNetID_Params.Search, 0x48);

	return FindUniqueNetID_Params.ReturnValue;
};

// Function ProjectX.Online_X.GetConnectionStatusError
// [0x00084003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ErrorCode                      (CPF_Parm)
// class UError*                  FallbackError                  (CPF_OptionalParm | CPF_Parm)

class UError* UOnline_X::GetConnectionStatusError(int32_t ErrorCode, class UError* FallbackError)
{
	static UFunction* uFnGetConnectionStatusError = nullptr;

	if (!uFnGetConnectionStatusError)
	{
		uFnGetConnectionStatusError = UFunction::FindFunction("Function ProjectX.Online_X.GetConnectionStatusError");
	}

	UOnline_X_execGetConnectionStatusError_Params GetConnectionStatusError_Params;
	memcpy_s(&GetConnectionStatusError_Params.ErrorCode, 0x4, &ErrorCode, 0x4);
	memcpy_s(&GetConnectionStatusError_Params.FallbackError, 0x8, &FallbackError, 0x8);

	this->ProcessEvent(uFnGetConnectionStatusError, &GetConnectionStatusError_Params, nullptr);

	return GetConnectionStatusError_Params.ReturnValue;
};

// Function ProjectX.Online_X.OnExit
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnline_X::OnExit()
{
	static UFunction* uFnOnExit = nullptr;

	if (!uFnOnExit)
	{
		uFnOnExit = UFunction::FindFunction("Function ProjectX.Online_X.OnExit");
	}

	UOnline_X_execOnExit_Params OnExit_Params;

	this->ProcessEvent(uFnOnExit, &OnExit_Params, nullptr);
};

// Function ProjectX.Online_X.OnNewGame
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnline_X::OnNewGame()
{
	static UFunction* uFnOnNewGame = nullptr;

	if (!uFnOnNewGame)
	{
		uFnOnNewGame = UFunction::FindFunction("Function ProjectX.Online_X.OnNewGame");
	}

	UOnline_X_execOnNewGame_Params OnNewGame_Params;

	this->ProcessEvent(uFnOnNewGame, &OnNewGame_Params, nullptr);
};

// Function ProjectX.Online_X.OnMainMenuOpened
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnline_X::OnMainMenuOpened()
{
	static UFunction* uFnOnMainMenuOpened = nullptr;

	if (!uFnOnMainMenuOpened)
	{
		uFnOnMainMenuOpened = UFunction::FindFunction("Function ProjectX.Online_X.OnMainMenuOpened");
	}

	UOnline_X_execOnMainMenuOpened_Params OnMainMenuOpened_Params;

	this->ProcessEvent(uFnOnMainMenuOpened, &OnMainMenuOpened_Params, nullptr);
};

// Function ProjectX.Online_X.HandleGRISpawned
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  GRI                            (CPF_Parm)

void UOnline_X::HandleGRISpawned(class AGRI_X* GRI)
{
	static UFunction* uFnHandleGRISpawned = nullptr;

	if (!uFnHandleGRISpawned)
	{
		uFnHandleGRISpawned = UFunction::FindFunction("Function ProjectX.Online_X.HandleGRISpawned");
	}

	UOnline_X_execHandleGRISpawned_Params HandleGRISpawned_Params;
	memcpy_s(&HandleGRISpawned_Params.GRI, 0x8, &GRI, 0x8);

	this->ProcessEvent(uFnHandleGRISpawned, &HandleGRISpawned_Params, nullptr);
};

// Function ProjectX.Online_X.OnInit
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnline_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.Online_X.OnInit");
	}

	UOnline_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.Online_X.Init
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineSubsystem*        NewOnlineSubsystem             (CPF_OptionalParm | CPF_Parm)

void UOnline_X::Init(class UOnlineSubsystem* NewOnlineSubsystem)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.Online_X.Init");
	}

	UOnline_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.NewOnlineSubsystem, 0x8, &NewOnlineSubsystem, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.Online_X.EventEosInitTimeout
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnline_X::EventEosInitTimeout()
{
	static UFunction* uFnEventEosInitTimeout = nullptr;

	if (!uFnEventEosInitTimeout)
	{
		uFnEventEosInitTimeout = UFunction::FindFunction("Function ProjectX.Online_X.EventEosInitTimeout");
	}

	UOnline_X_execEventEosInitTimeout_Params EventEosInitTimeout_Params;

	this->ProcessEvent(uFnEventEosInitTimeout, &EventEosInitTimeout_Params, nullptr);
};

// Function ProjectX.Online_X.EventEOSInitialized
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnline_X::EventEOSInitialized()
{
	static UFunction* uFnEventEOSInitialized = nullptr;

	if (!uFnEventEOSInitialized)
	{
		uFnEventEOSInitialized = UFunction::FindFunction("Function ProjectX.Online_X.EventEOSInitialized");
	}

	UOnline_X_execEventEOSInitialized_Params EventEOSInitialized_Params;

	this->ProcessEvent(uFnEventEOSInitialized, &EventEOSInitialized_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.__OnlinePlayer_X__OnInit_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* _                              (CPF_Parm)

void UOnlinePlayer_X::__OnlinePlayer_X__OnInit_0x1(class UOnlinePlayerAuthentication_X* _)
{
	static UFunction* uFn__OnlinePlayer_X__OnInit_0x1 = nullptr;

	if (!uFn__OnlinePlayer_X__OnInit_0x1)
	{
		uFn__OnlinePlayer_X__OnInit_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.__OnlinePlayer_X__OnInit_0x1");
	}

	UOnlinePlayer_X_exec__OnlinePlayer_X__OnInit_0x1_Params __OnlinePlayer_X__OnInit_0x1_Params;
	memcpy_s(&__OnlinePlayer_X__OnInit_0x1_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__OnlinePlayer_X__OnInit_0x1, &__OnlinePlayer_X__OnInit_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.__OnlinePlayer_X__UpdatePsyNetEnabled_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UBanMessage_X*           _                              (CPF_Parm)

void UOnlinePlayer_X::__OnlinePlayer_X__UpdatePsyNetEnabled_0x1(class UBanMessage_X* _)
{
	static UFunction* uFn__OnlinePlayer_X__UpdatePsyNetEnabled_0x1 = nullptr;

	if (!uFn__OnlinePlayer_X__UpdatePsyNetEnabled_0x1)
	{
		uFn__OnlinePlayer_X__UpdatePsyNetEnabled_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.__OnlinePlayer_X__UpdatePsyNetEnabled_0x1");
	}

	UOnlinePlayer_X_exec__OnlinePlayer_X__UpdatePsyNetEnabled_0x1_Params __OnlinePlayer_X__UpdatePsyNetEnabled_0x1_Params;
	memcpy_s(&__OnlinePlayer_X__UpdatePsyNetEnabled_0x1_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__OnlinePlayer_X__UpdatePsyNetEnabled_0x1, &__OnlinePlayer_X__UpdatePsyNetEnabled_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.__OnlinePlayer_X__InitPlayer_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::__OnlinePlayer_X__InitPlayer_0x1()
{
	static UFunction* uFn__OnlinePlayer_X__InitPlayer_0x1 = nullptr;

	if (!uFn__OnlinePlayer_X__InitPlayer_0x1)
	{
		uFn__OnlinePlayer_X__InitPlayer_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.__OnlinePlayer_X__InitPlayer_0x1");
	}

	UOnlinePlayer_X_exec__OnlinePlayer_X__InitPlayer_0x1_Params __OnlinePlayer_X__InitPlayer_0x1_Params;

	this->ProcessEvent(uFn__OnlinePlayer_X__InitPlayer_0x1, &__OnlinePlayer_X__InitPlayer_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.__OnlinePlayer_X__HandleLoginChanged_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::__OnlinePlayer_X__HandleLoginChanged_0x1()
{
	static UFunction* uFn__OnlinePlayer_X__HandleLoginChanged_0x1 = nullptr;

	if (!uFn__OnlinePlayer_X__HandleLoginChanged_0x1)
	{
		uFn__OnlinePlayer_X__HandleLoginChanged_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.__OnlinePlayer_X__HandleLoginChanged_0x1");
	}

	UOnlinePlayer_X_exec__OnlinePlayer_X__HandleLoginChanged_0x1_Params __OnlinePlayer_X__HandleLoginChanged_0x1_Params;

	this->ProcessEvent(uFn__OnlinePlayer_X__HandleLoginChanged_0x1, &__OnlinePlayer_X__HandleLoginChanged_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.GetPlayersLikesDislikes
// [0x00420000] (FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  Playlist                       (CPF_Parm)
// TArray<struct FName>           PlayerLikes                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<struct FName>           PlayerDislikes                 (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlinePlayer_X::GetPlayersLikesDislikes(class UGameSettingPlaylist_X* Playlist, TArray<struct FName>& PlayerLikes, TArray<struct FName>& PlayerDislikes)
{
	static UFunction* uFnGetPlayersLikesDislikes = nullptr;

	if (!uFnGetPlayersLikesDislikes)
	{
		uFnGetPlayersLikesDislikes = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.GetPlayersLikesDislikes");
	}

	UOnlinePlayer_X_execGetPlayersLikesDislikes_Params GetPlayersLikesDislikes_Params;
	memcpy_s(&GetPlayersLikesDislikes_Params.Playlist, 0x8, &Playlist, 0x8);
	memcpy_s(&GetPlayersLikesDislikes_Params.PlayerLikes, 0x10, &PlayerLikes, 0x10);
	memcpy_s(&GetPlayersLikesDislikes_Params.PlayerDislikes, 0x10, &PlayerDislikes, 0x10);

	this->ProcessEvent(uFnGetPlayersLikesDislikes, &GetPlayersLikesDislikes_Params, nullptr);

	memcpy_s(&PlayerLikes, 0x10, &GetPlayersLikesDislikes_Params.PlayerLikes, 0x10);
	memcpy_s(&PlayerDislikes, 0x10, &GetPlayersLikesDislikes_Params.PlayerDislikes, 0x10);
};

// Function ProjectX.OnlinePlayer_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlinePlayer_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.PrintDebugInfo");
	}

	UOnlinePlayer_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowCabinedReminder
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ShowCabinedReminder()
{
	static UFunction* uFnShowCabinedReminder = nullptr;

	if (!uFnShowCabinedReminder)
	{
		uFnShowCabinedReminder = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowCabinedReminder");
	}

	UOnlinePlayer_X_execShowCabinedReminder_Params ShowCabinedReminder_Params;

	this->ProcessEvent(uFnShowCabinedReminder, &ShowCabinedReminder_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowXboxGuestIsPrimaryPlayerWarningScreen
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ShowXboxGuestIsPrimaryPlayerWarningScreen()
{
	static UFunction* uFnShowXboxGuestIsPrimaryPlayerWarningScreen = nullptr;

	if (!uFnShowXboxGuestIsPrimaryPlayerWarningScreen)
	{
		uFnShowXboxGuestIsPrimaryPlayerWarningScreen = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowXboxGuestIsPrimaryPlayerWarningScreen");
	}

	UOnlinePlayer_X_execShowXboxGuestIsPrimaryPlayerWarningScreen_Params ShowXboxGuestIsPrimaryPlayerWarningScreen_Params;

	this->ProcessEvent(uFnShowXboxGuestIsPrimaryPlayerWarningScreen, &ShowXboxGuestIsPrimaryPlayerWarningScreen_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ForceCloseAgeGate
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ForceCloseAgeGate()
{
	static UFunction* uFnForceCloseAgeGate = nullptr;

	if (!uFnForceCloseAgeGate)
	{
		uFnForceCloseAgeGate = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ForceCloseAgeGate");
	}

	UOnlinePlayer_X_execForceCloseAgeGate_Params ForceCloseAgeGate_Params;

	this->ProcessEvent(uFnForceCloseAgeGate, &ForceCloseAgeGate_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.UnsupportedCorrectiveActionVerify
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::UnsupportedCorrectiveActionVerify()
{
	static UFunction* uFnUnsupportedCorrectiveActionVerify = nullptr;

	if (!uFnUnsupportedCorrectiveActionVerify)
	{
		uFnUnsupportedCorrectiveActionVerify = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.UnsupportedCorrectiveActionVerify");
	}

	UOnlinePlayer_X_execUnsupportedCorrectiveActionVerify_Params UnsupportedCorrectiveActionVerify_Params;

	this->ProcessEvent(uFnUnsupportedCorrectiveActionVerify, &UnsupportedCorrectiveActionVerify_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EpicDisplayNameScreenDone
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::EpicDisplayNameScreenDone()
{
	static UFunction* uFnEpicDisplayNameScreenDone = nullptr;

	if (!uFnEpicDisplayNameScreenDone)
	{
		uFnEpicDisplayNameScreenDone = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EpicDisplayNameScreenDone");
	}

	UOnlinePlayer_X_execEpicDisplayNameScreenDone_Params EpicDisplayNameScreenDone_Params;

	this->ProcessEvent(uFnEpicDisplayNameScreenDone, &EpicDisplayNameScreenDone_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowParentEmailScreen
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ShowParentEmailScreen()
{
	static UFunction* uFnShowParentEmailScreen = nullptr;

	if (!uFnShowParentEmailScreen)
	{
		uFnShowParentEmailScreen = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowParentEmailScreen");
	}

	UOnlinePlayer_X_execShowParentEmailScreen_Params ShowParentEmailScreen_Params;

	this->ProcessEvent(uFnShowParentEmailScreen, &ShowParentEmailScreen_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowDOBScreen
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ShowDOBScreen()
{
	static UFunction* uFnShowDOBScreen = nullptr;

	if (!uFnShowDOBScreen)
	{
		uFnShowDOBScreen = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowDOBScreen");
	}

	UOnlinePlayer_X_execShowDOBScreen_Params ShowDOBScreen_Params;

	this->ProcessEvent(uFnShowDOBScreen, &ShowDOBScreen_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowWelcomeToCabinedModeScreen
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ShowWelcomeToCabinedModeScreen()
{
	static UFunction* uFnShowWelcomeToCabinedModeScreen = nullptr;

	if (!uFnShowWelcomeToCabinedModeScreen)
	{
		uFnShowWelcomeToCabinedModeScreen = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowWelcomeToCabinedModeScreen");
	}

	UOnlinePlayer_X_execShowWelcomeToCabinedModeScreen_Params ShowWelcomeToCabinedModeScreen_Params;

	this->ProcessEvent(uFnShowWelcomeToCabinedModeScreen, &ShowWelcomeToCabinedModeScreen_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowWelcomeNotCabinedModeScreen
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ShowWelcomeNotCabinedModeScreen()
{
	static UFunction* uFnShowWelcomeNotCabinedModeScreen = nullptr;

	if (!uFnShowWelcomeNotCabinedModeScreen)
	{
		uFnShowWelcomeNotCabinedModeScreen = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowWelcomeNotCabinedModeScreen");
	}

	UOnlinePlayer_X_execShowWelcomeNotCabinedModeScreen_Params ShowWelcomeNotCabinedModeScreen_Params;

	this->ProcessEvent(uFnShowWelcomeNotCabinedModeScreen, &ShowWelcomeNotCabinedModeScreen_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowEpicDisplayNameScreen
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ShowEpicDisplayNameScreen()
{
	static UFunction* uFnShowEpicDisplayNameScreen = nullptr;

	if (!uFnShowEpicDisplayNameScreen)
	{
		uFnShowEpicDisplayNameScreen = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowEpicDisplayNameScreen");
	}

	UOnlinePlayer_X_execShowEpicDisplayNameScreen_Params ShowEpicDisplayNameScreen_Params;

	this->ProcessEvent(uFnShowEpicDisplayNameScreen, &ShowEpicDisplayNameScreen_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.SetParentEmail
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Email                          (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::SetParentEmail(class FString Email)
{
	static UFunction* uFnSetParentEmail = nullptr;

	if (!uFnSetParentEmail)
	{
		uFnSetParentEmail = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetParentEmail");
	}

	UOnlinePlayer_X_execSetParentEmail_Params SetParentEmail_Params;
	memcpy_s(&SetParentEmail_Params.Email, 0x10, &Email, 0x10);

	this->ProcessEvent(uFnSetParentEmail, &SetParentEmail_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ValidateEmail
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Email                          (CPF_Parm | CPF_NeedCtorLink)

bool UOnlinePlayer_X::ValidateEmail(class FString Email)
{
	static UFunction* uFnValidateEmail = nullptr;

	if (!uFnValidateEmail)
	{
		uFnValidateEmail = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ValidateEmail");
	}

	UOnlinePlayer_X_execValidateEmail_Params ValidateEmail_Params;
	memcpy_s(&ValidateEmail_Params.Email, 0x10, &Email, 0x10);

	this->ProcessEvent(uFnValidateEmail, &ValidateEmail_Params, nullptr);

	return ValidateEmail_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.IsInCabinedModeOrGuest
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::IsInCabinedModeOrGuest()
{
	static UFunction* uFnIsInCabinedModeOrGuest = nullptr;

	if (!uFnIsInCabinedModeOrGuest)
	{
		uFnIsInCabinedModeOrGuest = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.IsInCabinedModeOrGuest");
	}

	UOnlinePlayer_X_execIsInCabinedModeOrGuest_Params IsInCabinedModeOrGuest_Params;

	this->ProcessEvent(uFnIsInCabinedModeOrGuest, &IsInCabinedModeOrGuest_Params, nullptr);

	return IsInCabinedModeOrGuest_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.EnforceCabinedMode
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::EnforceCabinedMode()
{
	static UFunction* uFnEnforceCabinedMode = nullptr;

	if (!uFnEnforceCabinedMode)
	{
		uFnEnforceCabinedMode = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EnforceCabinedMode");
	}

	UOnlinePlayer_X_execEnforceCabinedMode_Params EnforceCabinedMode_Params;

	this->ProcessEvent(uFnEnforceCabinedMode, &EnforceCabinedMode_Params, nullptr);

	return EnforceCabinedMode_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.UnsupportedCorrectiveActionNeeded
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::UnsupportedCorrectiveActionNeeded()
{
	static UFunction* uFnUnsupportedCorrectiveActionNeeded = nullptr;

	if (!uFnUnsupportedCorrectiveActionNeeded)
	{
		uFnUnsupportedCorrectiveActionNeeded = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.UnsupportedCorrectiveActionNeeded");
	}

	UOnlinePlayer_X_execUnsupportedCorrectiveActionNeeded_Params UnsupportedCorrectiveActionNeeded_Params;

	this->ProcessEvent(uFnUnsupportedCorrectiveActionNeeded, &UnsupportedCorrectiveActionNeeded_Params, nullptr);

	return UnsupportedCorrectiveActionNeeded_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.ShowEpicAccountLinkScreen
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::ShowEpicAccountLinkScreen()
{
	static UFunction* uFnShowEpicAccountLinkScreen = nullptr;

	if (!uFnShowEpicAccountLinkScreen)
	{
		uFnShowEpicAccountLinkScreen = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowEpicAccountLinkScreen");
	}

	UOnlinePlayer_X_execShowEpicAccountLinkScreen_Params ShowEpicAccountLinkScreen_Params;

	this->ProcessEvent(uFnShowEpicAccountLinkScreen, &ShowEpicAccountLinkScreen_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.SetAskConfirmDisplayName
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  val                            (CPF_Parm)

void UOnlinePlayer_X::SetAskConfirmDisplayName(unsigned long val)
{
	static UFunction* uFnSetAskConfirmDisplayName = nullptr;

	if (!uFnSetAskConfirmDisplayName)
	{
		uFnSetAskConfirmDisplayName = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetAskConfirmDisplayName");
	}

	UOnlinePlayer_X_execSetAskConfirmDisplayName_Params SetAskConfirmDisplayName_Params;
	SetAskConfirmDisplayName_Params.val = val;

	this->ProcessEvent(uFnSetAskConfirmDisplayName, &SetAskConfirmDisplayName_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.AskConfirmDisplayName
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::AskConfirmDisplayName()
{
	static UFunction* uFnAskConfirmDisplayName = nullptr;

	if (!uFnAskConfirmDisplayName)
	{
		uFnAskConfirmDisplayName = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.AskConfirmDisplayName");
	}

	UOnlinePlayer_X_execAskConfirmDisplayName_Params AskConfirmDisplayName_Params;

	this->ProcessEvent(uFnAskConfirmDisplayName, &AskConfirmDisplayName_Params, nullptr);

	return AskConfirmDisplayName_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.SetAskParentEmail
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  val                            (CPF_Parm)

void UOnlinePlayer_X::SetAskParentEmail(unsigned long val)
{
	static UFunction* uFnSetAskParentEmail = nullptr;

	if (!uFnSetAskParentEmail)
	{
		uFnSetAskParentEmail = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetAskParentEmail");
	}

	UOnlinePlayer_X_execSetAskParentEmail_Params SetAskParentEmail_Params;
	SetAskParentEmail_Params.val = val;

	this->ProcessEvent(uFnSetAskParentEmail, &SetAskParentEmail_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.AskParentEmail
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::AskParentEmail()
{
	static UFunction* uFnAskParentEmail = nullptr;

	if (!uFnAskParentEmail)
	{
		uFnAskParentEmail = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.AskParentEmail");
	}

	UOnlinePlayer_X_execAskParentEmail_Params AskParentEmail_Params;

	this->ProcessEvent(uFnAskParentEmail, &AskParentEmail_Params, nullptr);

	return AskParentEmail_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.SetShowedAgeGate
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  val                            (CPF_Parm)

void UOnlinePlayer_X::SetShowedAgeGate(unsigned long val)
{
	static UFunction* uFnSetShowedAgeGate = nullptr;

	if (!uFnSetShowedAgeGate)
	{
		uFnSetShowedAgeGate = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetShowedAgeGate");
	}

	UOnlinePlayer_X_execSetShowedAgeGate_Params SetShowedAgeGate_Params;
	SetShowedAgeGate_Params.val = val;

	this->ProcessEvent(uFnSetShowedAgeGate, &SetShowedAgeGate_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowedAgeGate
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::ShowedAgeGate()
{
	static UFunction* uFnShowedAgeGate = nullptr;

	if (!uFnShowedAgeGate)
	{
		uFnShowedAgeGate = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowedAgeGate");
	}

	UOnlinePlayer_X_execShowedAgeGate_Params ShowedAgeGate_Params;

	this->ProcessEvent(uFnShowedAgeGate, &ShowedAgeGate_Params, nullptr);

	return ShowedAgeGate_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.SetAskAge
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  val                            (CPF_Parm)

void UOnlinePlayer_X::SetAskAge(unsigned long val)
{
	static UFunction* uFnSetAskAge = nullptr;

	if (!uFnSetAskAge)
	{
		uFnSetAskAge = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetAskAge");
	}

	UOnlinePlayer_X_execSetAskAge_Params SetAskAge_Params;
	SetAskAge_Params.val = val;

	this->ProcessEvent(uFnSetAskAge, &SetAskAge_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.AskAge
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::AskAge()
{
	static UFunction* uFnAskAge = nullptr;

	if (!uFnAskAge)
	{
		uFnAskAge = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.AskAge");
	}

	UOnlinePlayer_X_execAskAge_Params AskAge_Params;

	this->ProcessEvent(uFnAskAge, &AskAge_Params, nullptr);

	return AskAge_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.SetInCabinedMode
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  val                            (CPF_Parm)

void UOnlinePlayer_X::SetInCabinedMode(unsigned long val)
{
	static UFunction* uFnSetInCabinedMode = nullptr;

	if (!uFnSetInCabinedMode)
	{
		uFnSetInCabinedMode = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetInCabinedMode");
	}

	UOnlinePlayer_X_execSetInCabinedMode_Params SetInCabinedMode_Params;
	SetInCabinedMode_Params.val = val;

	this->ProcessEvent(uFnSetInCabinedMode, &SetInCabinedMode_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.IsInCabinedMode
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::IsInCabinedMode()
{
	static UFunction* uFnIsInCabinedMode = nullptr;

	if (!uFnIsInCabinedMode)
	{
		uFnIsInCabinedMode = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.IsInCabinedMode");
	}

	UOnlinePlayer_X_execIsInCabinedMode_Params IsInCabinedMode_Params;

	this->ProcessEvent(uFnIsInCabinedMode, &IsInCabinedMode_Params, nullptr);

	return IsInCabinedMode_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.PromptForPin
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::PromptForPin()
{
	static UFunction* uFnPromptForPin = nullptr;

	if (!uFnPromptForPin)
	{
		uFnPromptForPin = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.PromptForPin");
	}

	UOnlinePlayer_X_execPromptForPin_Params PromptForPin_Params;

	this->ProcessEvent(uFnPromptForPin, &PromptForPin_Params, nullptr);

	return PromptForPin_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.SetRequirePinForFriends
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bVal                           (CPF_Parm)

void UOnlinePlayer_X::SetRequirePinForFriends(unsigned long bVal)
{
	static UFunction* uFnSetRequirePinForFriends = nullptr;

	if (!uFnSetRequirePinForFriends)
	{
		uFnSetRequirePinForFriends = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetRequirePinForFriends");
	}

	UOnlinePlayer_X_execSetRequirePinForFriends_Params SetRequirePinForFriends_Params;
	SetRequirePinForFriends_Params.bVal = bVal;

	this->ProcessEvent(uFnSetRequirePinForFriends, &SetRequirePinForFriends_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.IsPinRequiredForFriends
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::IsPinRequiredForFriends()
{
	static UFunction* uFnIsPinRequiredForFriends = nullptr;

	if (!uFnIsPinRequiredForFriends)
	{
		uFnIsPinRequiredForFriends = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.IsPinRequiredForFriends");
	}

	UOnlinePlayer_X_execIsPinRequiredForFriends_Params IsPinRequiredForFriends_Params;

	this->ProcessEvent(uFnIsPinRequiredForFriends, &IsPinRequiredForFriends_Params, nullptr);

	return IsPinRequiredForFriends_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.NotifyWhenCabinedModeStatusKnown
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::NotifyWhenCabinedModeStatusKnown(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyWhenCabinedModeStatusKnown = nullptr;

	if (!uFnNotifyWhenCabinedModeStatusKnown)
	{
		uFnNotifyWhenCabinedModeStatusKnown = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.NotifyWhenCabinedModeStatusKnown");
	}

	UOnlinePlayer_X_execNotifyWhenCabinedModeStatusKnown_Params NotifyWhenCabinedModeStatusKnown_Params;
	memcpy_s(&NotifyWhenCabinedModeStatusKnown_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyWhenCabinedModeStatusKnown, &NotifyWhenCabinedModeStatusKnown_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.IsGuestAccount
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::IsGuestAccount()
{
	static UFunction* uFnIsGuestAccount = nullptr;

	if (!uFnIsGuestAccount)
	{
		uFnIsGuestAccount = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.IsGuestAccount");
	}

	UOnlinePlayer_X_execIsGuestAccount_Params IsGuestAccount_Params;

	this->ProcessEvent(uFnIsGuestAccount, &IsGuestAccount_Params, nullptr);

	return IsGuestAccount_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.SetPlayerName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InName                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::SetPlayerName(class FString InName)
{
	static UFunction* uFnSetPlayerName = nullptr;

	if (!uFnSetPlayerName)
	{
		uFnSetPlayerName = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetPlayerName");
	}

	UOnlinePlayer_X_execSetPlayerName_Params SetPlayerName_Params;
	memcpy_s(&SetPlayerName_Params.InName, 0x10, &InName, 0x10);

	this->ProcessEvent(uFnSetPlayerName, &SetPlayerName_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.UpdateSplitscreenId
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::UpdateSplitscreenId()
{
	static UFunction* uFnUpdateSplitscreenId = nullptr;

	if (!uFnUpdateSplitscreenId)
	{
		uFnUpdateSplitscreenId = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.UpdateSplitscreenId");
	}

	UOnlinePlayer_X_execUpdateSplitscreenId_Params UpdateSplitscreenId_Params;

	this->ProcessEvent(uFnUpdateSplitscreenId, &UpdateSplitscreenId_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.IsUpdateRequired
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::IsUpdateRequired()
{
	static UFunction* uFnIsUpdateRequired = nullptr;

	if (!uFnIsUpdateRequired)
	{
		uFnIsUpdateRequired = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.IsUpdateRequired");
	}

	UOnlinePlayer_X_execIsUpdateRequired_Params IsUpdateRequired_Params;

	this->ProcessEvent(uFnIsUpdateRequired, &IsUpdateRequired_Params, nullptr);

	return IsUpdateRequired_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.GetOnlineName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlinePlayer_X::GetOnlineName()
{
	static UFunction* uFnGetOnlineName = nullptr;

	if (!uFnGetOnlineName)
	{
		uFnGetOnlineName = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.GetOnlineName");
	}

	UOnlinePlayer_X_execGetOnlineName_Params GetOnlineName_Params;

	this->ProcessEvent(uFnGetOnlineName, &GetOnlineName_Params, nullptr);

	return GetOnlineName_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.GetLocalName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlinePlayer_X::GetLocalName()
{
	static UFunction* uFnGetLocalName = nullptr;

	if (!uFnGetLocalName)
	{
		uFnGetLocalName = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.GetLocalName");
	}

	UOnlinePlayer_X_execGetLocalName_Params GetLocalName_Params;

	this->ProcessEvent(uFnGetLocalName, &GetLocalName_Params, nullptr);

	return GetLocalName_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.GetRemoteName
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// int32_t                        LocalPlayerIndex               (CPF_OptionalParm | CPF_Parm)

class FString UOnlinePlayer_X::GetRemoteName(int32_t LocalPlayerIndex)
{
	static UFunction* uFnGetRemoteName = nullptr;

	if (!uFnGetRemoteName)
	{
		uFnGetRemoteName = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.GetRemoteName");
	}

	UOnlinePlayer_X_execGetRemoteName_Params GetRemoteName_Params;
	memcpy_s(&GetRemoteName_Params.LocalPlayerIndex, 0x4, &LocalPlayerIndex, 0x4);

	this->ProcessEvent(uFnGetRemoteName, &GetRemoteName_Params, nullptr);

	return GetRemoteName_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.HandleCanPlayOnlineChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)

void UOnlinePlayer_X::HandleCanPlayOnlineChanged(uint8_t LocalUserNum)
{
	static UFunction* uFnHandleCanPlayOnlineChanged = nullptr;

	if (!uFnHandleCanPlayOnlineChanged)
	{
		uFnHandleCanPlayOnlineChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleCanPlayOnlineChanged");
	}

	UOnlinePlayer_X_execHandleCanPlayOnlineChanged_Params HandleCanPlayOnlineChanged_Params;
	memcpy_s(&HandleCanPlayOnlineChanged_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);

	this->ProcessEvent(uFnHandleCanPlayOnlineChanged, &HandleCanPlayOnlineChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.CanPlayOnline
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

uint8_t UOnlinePlayer_X::CanPlayOnline()
{
	static UFunction* uFnCanPlayOnline = nullptr;

	if (!uFnCanPlayOnline)
	{
		uFnCanPlayOnline = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.CanPlayOnline");
	}

	UOnlinePlayer_X_execCanPlayOnline_Params CanPlayOnline_Params;

	this->ProcessEvent(uFnCanPlayOnline, &CanPlayOnline_Params, nullptr);

	return CanPlayOnline_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.HandlePlayerCountryReceived
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Country                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::HandlePlayerCountryReceived(struct FUniqueNetId InPlayerId, class FString Country)
{
	static UFunction* uFnHandlePlayerCountryReceived = nullptr;

	if (!uFnHandlePlayerCountryReceived)
	{
		uFnHandlePlayerCountryReceived = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandlePlayerCountryReceived");
	}

	UOnlinePlayer_X_execHandlePlayerCountryReceived_Params HandlePlayerCountryReceived_Params;
	memcpy_s(&HandlePlayerCountryReceived_Params.InPlayerId, 0x48, &InPlayerId, 0x48);
	memcpy_s(&HandlePlayerCountryReceived_Params.Country, 0x10, &Country, 0x10);

	this->ProcessEvent(uFnHandlePlayerCountryReceived, &HandlePlayerCountryReceived_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.GetPlayerCountry
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Handler                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::GetPlayerCountry(struct FScriptDelegate Handler)
{
	static UFunction* uFnGetPlayerCountry = nullptr;

	if (!uFnGetPlayerCountry)
	{
		uFnGetPlayerCountry = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.GetPlayerCountry");
	}

	UOnlinePlayer_X_execGetPlayerCountry_Params GetPlayerCountry_Params;
	memcpy_s(&GetPlayerCountry_Params.Handler, 0x18, &Handler, 0x18);

	this->ProcessEvent(uFnGetPlayerCountry, &GetPlayerCountry_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.CanCommunicateVoice
// [0x00024002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bTryToResolve                  (CPF_OptionalParm | CPF_Parm)

uint8_t UOnlinePlayer_X::CanCommunicateVoice(unsigned long bTryToResolve)
{
	static UFunction* uFnCanCommunicateVoice = nullptr;

	if (!uFnCanCommunicateVoice)
	{
		uFnCanCommunicateVoice = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.CanCommunicateVoice");
	}

	UOnlinePlayer_X_execCanCommunicateVoice_Params CanCommunicateVoice_Params;
	CanCommunicateVoice_Params.bTryToResolve = bTryToResolve;

	this->ProcessEvent(uFnCanCommunicateVoice, &CanCommunicateVoice_Params, nullptr);

	return CanCommunicateVoice_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.CanCommunicateText
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bTryToResolve                  (CPF_OptionalParm | CPF_Parm)

uint8_t UOnlinePlayer_X::CanCommunicateText(unsigned long bTryToResolve)
{
	static UFunction* uFnCanCommunicateText = nullptr;

	if (!uFnCanCommunicateText)
	{
		uFnCanCommunicateText = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.CanCommunicateText");
	}

	UOnlinePlayer_X_execCanCommunicateText_Params CanCommunicateText_Params;
	CanCommunicateText_Params.bTryToResolve = bTryToResolve;

	this->ProcessEvent(uFnCanCommunicateText, &CanCommunicateText_Params, nullptr);

	return CanCommunicateText_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.OpenErrorDialog
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ErrorCode                      (CPF_Parm)

void UOnlinePlayer_X::OpenErrorDialog(uint8_t ErrorCode)
{
	static UFunction* uFnOpenErrorDialog = nullptr;

	if (!uFnOpenErrorDialog)
	{
		uFnOpenErrorDialog = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.OpenErrorDialog");
	}

	UOnlinePlayer_X_execOpenErrorDialog_Params OpenErrorDialog_Params;
	memcpy_s(&OpenErrorDialog_Params.ErrorCode, 0x1, &ErrorCode, 0x1);

	this->ProcessEvent(uFnOpenErrorDialog, &OpenErrorDialog_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.OpenPS4DisplayMode
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        DisplayMode                    (CPF_Parm)
// TArray<class FString>          Targets                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// int32_t                        ServiceLabel                   (CPF_OptionalParm | CPF_Parm)

void UOnlinePlayer_X::OpenPS4DisplayMode(uint8_t DisplayMode, TArray<class FString> Targets, int32_t ServiceLabel)
{
	static UFunction* uFnOpenPS4DisplayMode = nullptr;

	if (!uFnOpenPS4DisplayMode)
	{
		uFnOpenPS4DisplayMode = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.OpenPS4DisplayMode");
	}

	UOnlinePlayer_X_execOpenPS4DisplayMode_Params OpenPS4DisplayMode_Params;
	memcpy_s(&OpenPS4DisplayMode_Params.DisplayMode, 0x1, &DisplayMode, 0x1);
	memcpy_s(&OpenPS4DisplayMode_Params.Targets, 0x10, &Targets, 0x10);
	memcpy_s(&OpenPS4DisplayMode_Params.ServiceLabel, 0x4, &ServiceLabel, 0x4);

	this->ProcessEvent(uFnOpenPS4DisplayMode, &OpenPS4DisplayMode_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ResetControllerColor
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        InControllerID                 (CPF_Parm)

void UOnlinePlayer_X::ResetControllerColor(int32_t InControllerID)
{
	static UFunction* uFnResetControllerColor = nullptr;

	if (!uFnResetControllerColor)
	{
		uFnResetControllerColor = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ResetControllerColor");
	}

	UOnlinePlayer_X_execResetControllerColor_Params ResetControllerColor_Params;
	memcpy_s(&ResetControllerColor_Params.InControllerID, 0x4, &InControllerID, 0x4);

	this->ProcessEvent(uFnResetControllerColor, &ResetControllerColor_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.SetControllerColor
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        InControllerID                 (CPF_Parm)
// struct FColor                  NewColor                       (CPF_Parm)

void UOnlinePlayer_X::SetControllerColor(int32_t InControllerID, struct FColor NewColor)
{
	static UFunction* uFnSetControllerColor = nullptr;

	if (!uFnSetControllerColor)
	{
		uFnSetControllerColor = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.SetControllerColor");
	}

	UOnlinePlayer_X_execSetControllerColor_Params SetControllerColor_Params;
	memcpy_s(&SetControllerColor_Params.InControllerID, 0x4, &InControllerID, 0x4);
	memcpy_s(&SetControllerColor_Params.NewColor, 0x4, &NewColor, 0x4);

	this->ProcessEvent(uFnSetControllerColor, &SetControllerColor_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.PostActivityFeedMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Id                             (CPF_Parm | CPF_NeedCtorLink)
// TArray<class FString>          StringReplaceList              (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::PostActivityFeedMessage(class FString Id, TArray<class FString> StringReplaceList)
{
	static UFunction* uFnPostActivityFeedMessage = nullptr;

	if (!uFnPostActivityFeedMessage)
	{
		uFnPostActivityFeedMessage = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.PostActivityFeedMessage");
	}

	UOnlinePlayer_X_execPostActivityFeedMessage_Params PostActivityFeedMessage_Params;
	memcpy_s(&PostActivityFeedMessage_Params.Id, 0x10, &Id, 0x10);
	memcpy_s(&PostActivityFeedMessage_Params.StringReplaceList, 0x10, &StringReplaceList, 0x10);

	this->ProcessEvent(uFnPostActivityFeedMessage, &PostActivityFeedMessage_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.GetSyncedAchievements
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<bool>                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint8_t                        LocalUserNum                   (CPF_Parm)

TArray<bool> UOnlinePlayer_X::GetSyncedAchievements(uint8_t LocalUserNum)
{
	static UFunction* uFnGetSyncedAchievements = nullptr;

	if (!uFnGetSyncedAchievements)
	{
		uFnGetSyncedAchievements = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.GetSyncedAchievements");
	}

	UOnlinePlayer_X_execGetSyncedAchievements_Params GetSyncedAchievements_Params;
	memcpy_s(&GetSyncedAchievements_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);

	this->ProcessEvent(uFnGetSyncedAchievements, &GetSyncedAchievements_Params, nullptr);

	return GetSyncedAchievements_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.UnlockAchievement
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)
// int32_t                        AchievementId                  (CPF_Parm)
// float                          PercentComplete                (CPF_OptionalParm | CPF_Parm)

void UOnlinePlayer_X::UnlockAchievement(uint8_t LocalUserNum, int32_t AchievementId, float PercentComplete)
{
	static UFunction* uFnUnlockAchievement = nullptr;

	if (!uFnUnlockAchievement)
	{
		uFnUnlockAchievement = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.UnlockAchievement");
	}

	UOnlinePlayer_X_execUnlockAchievement_Params UnlockAchievement_Params;
	memcpy_s(&UnlockAchievement_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&UnlockAchievement_Params.AchievementId, 0x4, &AchievementId, 0x4);
	memcpy_s(&UnlockAchievement_Params.PercentComplete, 0x4, &PercentComplete, 0x4);

	this->ProcessEvent(uFnUnlockAchievement, &UnlockAchievement_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.UpdateStat
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   StatName                       (CPF_Parm)
// int32_t                        Points                         (CPF_Parm)

void UOnlinePlayer_X::UpdateStat(struct FName StatName, int32_t Points)
{
	static UFunction* uFnUpdateStat = nullptr;

	if (!uFnUpdateStat)
	{
		uFnUpdateStat = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.UpdateStat");
	}

	UOnlinePlayer_X_execUpdateStat_Params UpdateStat_Params;
	memcpy_s(&UpdateStat_Params.StatName, 0x8, &StatName, 0x8);
	memcpy_s(&UpdateStat_Params.Points, 0x4, &Points, 0x4);

	this->ProcessEvent(uFnUpdateStat, &UpdateStat_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.HandleShowKeyboardComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)

void UOnlinePlayer_X::HandleShowKeyboardComplete(unsigned long bWasSuccessful)
{
	static UFunction* uFnHandleShowKeyboardComplete = nullptr;

	if (!uFnHandleShowKeyboardComplete)
	{
		uFnHandleShowKeyboardComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleShowKeyboardComplete");
	}

	UOnlinePlayer_X_execHandleShowKeyboardComplete_Params HandleShowKeyboardComplete_Params;
	HandleShowKeyboardComplete_Params.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent(uFnHandleShowKeyboardComplete, &HandleShowKeyboardComplete_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.HideKeyboard
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::HideKeyboard()
{
	static UFunction* uFnHideKeyboard = nullptr;

	if (!uFnHideKeyboard)
	{
		uFnHideKeyboard = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HideKeyboard");
	}

	UOnlinePlayer_X_execHideKeyboard_Params HideKeyboard_Params;

	this->ProcessEvent(uFnHideKeyboard, &HideKeyboard_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.ShowKeyboard
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  TitleText                      (CPF_Parm | CPF_NeedCtorLink)
// class FString                  DescriptionText                (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bIsPassword                    (CPF_Parm)
// class FString                  DefaultText                    (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        MaxLength                      (CPF_Parm)
// struct FScriptDelegate         OnCompleteDelegate             (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        LocalPlayerNumOverride         (CPF_OptionalParm | CPF_Parm)

bool UOnlinePlayer_X::ShowKeyboard(class FString TitleText, class FString DescriptionText, unsigned long bIsPassword, class FString DefaultText, int32_t MaxLength, struct FScriptDelegate OnCompleteDelegate, int32_t LocalPlayerNumOverride)
{
	static UFunction* uFnShowKeyboard = nullptr;

	if (!uFnShowKeyboard)
	{
		uFnShowKeyboard = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.ShowKeyboard");
	}

	UOnlinePlayer_X_execShowKeyboard_Params ShowKeyboard_Params;
	memcpy_s(&ShowKeyboard_Params.TitleText, 0x10, &TitleText, 0x10);
	memcpy_s(&ShowKeyboard_Params.DescriptionText, 0x10, &DescriptionText, 0x10);
	ShowKeyboard_Params.bIsPassword = bIsPassword;
	memcpy_s(&ShowKeyboard_Params.DefaultText, 0x10, &DefaultText, 0x10);
	memcpy_s(&ShowKeyboard_Params.MaxLength, 0x4, &MaxLength, 0x4);
	memcpy_s(&ShowKeyboard_Params.OnCompleteDelegate, 0x18, &OnCompleteDelegate, 0x18);
	memcpy_s(&ShowKeyboard_Params.LocalPlayerNumOverride, 0x4, &LocalPlayerNumOverride, 0x4);

	this->ProcessEvent(uFnShowKeyboard, &ShowKeyboard_Params, nullptr);

	return ShowKeyboard_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.OnNewGame
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::OnNewGame()
{
	static UFunction* uFnOnNewGame = nullptr;

	if (!uFnOnNewGame)
	{
		uFnOnNewGame = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.OnNewGame");
	}

	UOnlinePlayer_X_execOnNewGame_Params OnNewGame_Params;

	this->ProcessEvent(uFnOnNewGame, &OnNewGame_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.HandleControllerChange
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        InControllerID                 (CPF_Parm)
// unsigned long                  bIsConnected                   (CPF_Parm)

void UOnlinePlayer_X::HandleControllerChange(int32_t InControllerID, unsigned long bIsConnected)
{
	static UFunction* uFnHandleControllerChange = nullptr;

	if (!uFnHandleControllerChange)
	{
		uFnHandleControllerChange = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleControllerChange");
	}

	UOnlinePlayer_X_execHandleControllerChange_Params HandleControllerChange_Params;
	memcpy_s(&HandleControllerChange_Params.InControllerID, 0x4, &InControllerID, 0x4);
	HandleControllerChange_Params.bIsConnected = bIsConnected;

	this->ProcessEvent(uFnHandleControllerChange, &HandleControllerChange_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.HandleUserLoginStatusChange
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// uint8_t                        NewStatus                      (CPF_Parm)
// struct FUniqueNetId            NewId                          (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::HandleUserLoginStatusChange(uint8_t NewStatus, struct FUniqueNetId NewId)
{
	static UFunction* uFnHandleUserLoginStatusChange = nullptr;

	if (!uFnHandleUserLoginStatusChange)
	{
		uFnHandleUserLoginStatusChange = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleUserLoginStatusChange");
	}

	UOnlinePlayer_X_execHandleUserLoginStatusChange_Params HandleUserLoginStatusChange_Params;
	memcpy_s(&HandleUserLoginStatusChange_Params.NewStatus, 0x1, &NewStatus, 0x1);
	memcpy_s(&HandleUserLoginStatusChange_Params.NewId, 0x48, &NewId, 0x48);

	this->ProcessEvent(uFnHandleUserLoginStatusChange, &HandleUserLoginStatusChange_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.IsLoggedIn
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bRequireOnlineLogin            (CPF_OptionalParm | CPF_Parm)

bool UOnlinePlayer_X::IsLoggedIn(unsigned long bRequireOnlineLogin)
{
	static UFunction* uFnIsLoggedIn = nullptr;

	if (!uFnIsLoggedIn)
	{
		uFnIsLoggedIn = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.IsLoggedIn");
	}

	UOnlinePlayer_X_execIsLoggedIn_Params IsLoggedIn_Params;
	IsLoggedIn_Params.bRequireOnlineLogin = bRequireOnlineLogin;

	this->ProcessEvent(uFnIsLoggedIn, &IsLoggedIn_Params, nullptr);

	return IsLoggedIn_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.HandleLogoutComplete
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)

void UOnlinePlayer_X::HandleLogoutComplete(unsigned long bWasSuccessful)
{
	static UFunction* uFnHandleLogoutComplete = nullptr;

	if (!uFnHandleLogoutComplete)
	{
		uFnHandleLogoutComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleLogoutComplete");
	}

	UOnlinePlayer_X_execHandleLogoutComplete_Params HandleLogoutComplete_Params;
	HandleLogoutComplete_Params.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent(uFnHandleLogoutComplete, &HandleLogoutComplete_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.HandleLoginChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        PlayerNum                      (CPF_Parm)

void UOnlinePlayer_X::HandleLoginChanged(uint8_t PlayerNum)
{
	static UFunction* uFnHandleLoginChanged = nullptr;

	if (!uFnHandleLoginChanged)
	{
		uFnHandleLoginChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleLoginChanged");
	}

	UOnlinePlayer_X_execHandleLoginChanged_Params HandleLoginChanged_Params;
	memcpy_s(&HandleLoginChanged_Params.PlayerNum, 0x1, &PlayerNum, 0x1);

	this->ProcessEvent(uFnHandleLoginChanged, &HandleLoginChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.GetEpicAccountId
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlinePlayer_X::GetEpicAccountId()
{
	static UFunction* uFnGetEpicAccountId = nullptr;

	if (!uFnGetEpicAccountId)
	{
		uFnGetEpicAccountId = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.GetEpicAccountId");
	}

	UOnlinePlayer_X_execGetEpicAccountId_Params GetEpicAccountId_Params;

	this->ProcessEvent(uFnGetEpicAccountId, &GetEpicAccountId_Params, nullptr);

	return GetEpicAccountId_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.HandleLoginFailed
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// uint8_t                        PlayerNum                      (CPF_Parm)
// uint8_t                        ErrorCode                      (CPF_Parm)

void UOnlinePlayer_X::HandleLoginFailed(uint8_t PlayerNum, uint8_t ErrorCode)
{
	static UFunction* uFnHandleLoginFailed = nullptr;

	if (!uFnHandleLoginFailed)
	{
		uFnHandleLoginFailed = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleLoginFailed");
	}

	UOnlinePlayer_X_execHandleLoginFailed_Params HandleLoginFailed_Params;
	memcpy_s(&HandleLoginFailed_Params.PlayerNum, 0x1, &PlayerNum, 0x1);
	memcpy_s(&HandleLoginFailed_Params.ErrorCode, 0x1, &ErrorCode, 0x1);

	this->ProcessEvent(uFnHandleLoginFailed, &HandleLoginFailed_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.Logout
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::Logout(struct FScriptDelegate Callback)
{
	static UFunction* uFnLogout = nullptr;

	if (!uFnLogout)
	{
		uFnLogout = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.Logout");
	}

	UOnlinePlayer_X_execLogout_Params Logout_Params;
	memcpy_s(&Logout_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnLogout, &Logout_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.Login
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  LoginName                      (CPF_Parm | CPF_NeedCtorLink)
// class FString                  LoginPassword                  (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::Login(class FString LoginName, class FString LoginPassword)
{
	static UFunction* uFnLogin = nullptr;

	if (!uFnLogin)
	{
		uFnLogin = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.Login");
	}

	UOnlinePlayer_X_execLogin_Params Login_Params;
	memcpy_s(&Login_Params.LoginName, 0x10, &LoginName, 0x10);
	memcpy_s(&Login_Params.LoginPassword, 0x10, &LoginPassword, 0x10);

	this->ProcessEvent(uFnLogin, &Login_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.OnRemoved
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::OnRemoved()
{
	static UFunction* uFnOnRemoved = nullptr;

	if (!uFnOnRemoved)
	{
		uFnOnRemoved = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.OnRemoved");
	}

	UOnlinePlayer_X_execOnRemoved_Params OnRemoved_Params;

	this->ProcessEvent(uFnOnRemoved, &OnRemoved_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.InitPlayer
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::InitPlayer()
{
	static UFunction* uFnInitPlayer = nullptr;

	if (!uFnInitPlayer)
	{
		uFnInitPlayer = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.InitPlayer");
	}

	UOnlinePlayer_X_execInitPlayer_Params InitPlayer_Params;

	this->ProcessEvent(uFnInitPlayer, &InitPlayer_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.IsPrimaryPlayer
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayer_X::eventIsPrimaryPlayer()
{
	static UFunction* uFnIsPrimaryPlayer = nullptr;

	if (!uFnIsPrimaryPlayer)
	{
		uFnIsPrimaryPlayer = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.IsPrimaryPlayer");
	}

	UOnlinePlayer_X_eventIsPrimaryPlayer_Params IsPrimaryPlayer_Params;

	this->ProcessEvent(uFnIsPrimaryPlayer, &IsPrimaryPlayer_Params, nullptr);

	return IsPrimaryPlayer_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.HandlePsyNetDisconnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UOnlinePlayer_X::HandlePsyNetDisconnect(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnHandlePsyNetDisconnect = nullptr;

	if (!uFnHandlePsyNetDisconnect)
	{
		uFnHandlePsyNetDisconnect = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandlePsyNetDisconnect");
	}

	UOnlinePlayer_X_execHandlePsyNetDisconnect_Params HandlePsyNetDisconnect_Params;
	memcpy_s(&HandlePsyNetDisconnect_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnHandlePsyNetDisconnect, &HandlePsyNetDisconnect_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.UpdatePsyNetEnabled
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::UpdatePsyNetEnabled()
{
	static UFunction* uFnUpdatePsyNetEnabled = nullptr;

	if (!uFnUpdatePsyNetEnabled)
	{
		uFnUpdatePsyNetEnabled = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.UpdatePsyNetEnabled");
	}

	UOnlinePlayer_X_execUpdatePsyNetEnabled_Params UpdatePsyNetEnabled_Params;

	this->ProcessEvent(uFnUpdatePsyNetEnabled, &UpdatePsyNetEnabled_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.HandleBanned
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlinePlayer_X::HandleBanned(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnHandleBanned = nullptr;

	if (!uFnHandleBanned)
	{
		uFnHandleBanned = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleBanned");
	}

	UOnlinePlayer_X_execHandleBanned_Params HandleBanned_Params;
	memcpy_s(&HandleBanned_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnHandleBanned, &HandleBanned_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.HandleAuthLoginChange
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlinePlayer_X::HandleAuthLoginChange(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnHandleAuthLoginChange = nullptr;

	if (!uFnHandleAuthLoginChange)
	{
		uFnHandleAuthLoginChange = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.HandleAuthLoginChange");
	}

	UOnlinePlayer_X_execHandleAuthLoginChange_Params HandleAuthLoginChange_Params;
	memcpy_s(&HandleAuthLoginChange_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnHandleAuthLoginChange, &HandleAuthLoginChange_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.OnInit");
	}

	UOnlinePlayer_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayer_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.Construct");
	}

	UOnlinePlayer_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.GetOnlineGame
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGame_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGame_X* UOnlinePlayer_X::GetOnlineGame()
{
	static UFunction* uFnGetOnlineGame = nullptr;

	if (!uFnGetOnlineGame)
	{
		uFnGetOnlineGame = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.GetOnlineGame");
	}

	UOnlinePlayer_X_execGetOnlineGame_Params GetOnlineGame_Params;

	this->ProcessEvent(uFnGetOnlineGame, &GetOnlineGame_Params, nullptr);

	return GetOnlineGame_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayer_X.EventCabinedModeStatusKnown
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlinePlayer_X::EventCabinedModeStatusKnown(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventCabinedModeStatusKnown = nullptr;

	if (!uFnEventCabinedModeStatusKnown)
	{
		uFnEventCabinedModeStatusKnown = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventCabinedModeStatusKnown");
	}

	UOnlinePlayer_X_execEventCabinedModeStatusKnown_Params EventCabinedModeStatusKnown_Params;
	memcpy_s(&EventCabinedModeStatusKnown_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventCabinedModeStatusKnown, &EventCabinedModeStatusKnown_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EventRemoved
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlinePlayer_X::EventRemoved(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventRemoved = nullptr;

	if (!uFnEventRemoved)
	{
		uFnEventRemoved = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventRemoved");
	}

	UOnlinePlayer_X_execEventRemoved_Params EventRemoved_Params;
	memcpy_s(&EventRemoved_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventRemoved, &EventRemoved_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EventOnlineNameChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlinePlayer_X::EventOnlineNameChanged(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventOnlineNameChanged = nullptr;

	if (!uFnEventOnlineNameChanged)
	{
		uFnEventOnlineNameChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventOnlineNameChanged");
	}

	UOnlinePlayer_X_execEventOnlineNameChanged_Params EventOnlineNameChanged_Params;
	memcpy_s(&EventOnlineNameChanged_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventOnlineNameChanged, &EventOnlineNameChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EventShowKeyboardComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  NewText                        (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bCanceled                      (CPF_Parm)

void UOnlinePlayer_X::EventShowKeyboardComplete(class FString NewText, unsigned long bCanceled)
{
	static UFunction* uFnEventShowKeyboardComplete = nullptr;

	if (!uFnEventShowKeyboardComplete)
	{
		uFnEventShowKeyboardComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventShowKeyboardComplete");
	}

	UOnlinePlayer_X_execEventShowKeyboardComplete_Params EventShowKeyboardComplete_Params;
	memcpy_s(&EventShowKeyboardComplete_Params.NewText, 0x10, &NewText, 0x10);
	EventShowKeyboardComplete_Params.bCanceled = bCanceled;

	this->ProcessEvent(uFnEventShowKeyboardComplete, &EventShowKeyboardComplete_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EventCanPlayOnlineChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlinePlayer_X::EventCanPlayOnlineChanged(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventCanPlayOnlineChanged = nullptr;

	if (!uFnEventCanPlayOnlineChanged)
	{
		uFnEventCanPlayOnlineChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventCanPlayOnlineChanged");
	}

	UOnlinePlayer_X_execEventCanPlayOnlineChanged_Params EventCanPlayOnlineChanged_Params;
	memcpy_s(&EventCanPlayOnlineChanged_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventCanPlayOnlineChanged, &EventCanPlayOnlineChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EventCountryUpdated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  Country                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayer_X::EventCountryUpdated(class FString Country)
{
	static UFunction* uFnEventCountryUpdated = nullptr;

	if (!uFnEventCountryUpdated)
	{
		uFnEventCountryUpdated = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventCountryUpdated");
	}

	UOnlinePlayer_X_execEventCountryUpdated_Params EventCountryUpdated_Params;
	memcpy_s(&EventCountryUpdated_Params.Country, 0x10, &Country, 0x10);

	this->ProcessEvent(uFnEventCountryUpdated, &EventCountryUpdated_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EventLoginStatusChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlinePlayer_X::EventLoginStatusChanged(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventLoginStatusChanged = nullptr;

	if (!uFnEventLoginStatusChanged)
	{
		uFnEventLoginStatusChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventLoginStatusChanged");
	}

	UOnlinePlayer_X_execEventLoginStatusChanged_Params EventLoginStatusChanged_Params;
	memcpy_s(&EventLoginStatusChanged_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventLoginStatusChanged, &EventLoginStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EventLogoutComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlinePlayer_X::EventLogoutComplete(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventLogoutComplete = nullptr;

	if (!uFnEventLogoutComplete)
	{
		uFnEventLogoutComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventLogoutComplete");
	}

	UOnlinePlayer_X_execEventLogoutComplete_Params EventLogoutComplete_Params;
	memcpy_s(&EventLogoutComplete_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventLogoutComplete, &EventLogoutComplete_Params, nullptr);
};

// Function ProjectX.OnlinePlayer_X.EventLoginComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayer_X::EventLoginComplete(class UOnlinePlayer_X* Player, class UError* Error)
{
	static UFunction* uFnEventLoginComplete = nullptr;

	if (!uFnEventLoginComplete)
	{
		uFnEventLoginComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayer_X.EventLoginComplete");
	}

	UOnlinePlayer_X_execEventLoginComplete_Params EventLoginComplete_Params;
	memcpy_s(&EventLoginComplete_Params.Player, 0x8, &Player, 0x8);
	memcpy_s(&EventLoginComplete_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventLoginComplete, &EventLoginComplete_Params, nullptr);
};

// Function ProjectX.EpicFriendsPlugin_X.ConvertError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UEOS_ErrorResponse*      ErrorResponse                  (CPF_Const | CPF_Parm)

class UError* UEpicFriendsPlugin_X::ConvertError(class UEOS_ErrorResponse* ErrorResponse)
{
	static UFunction* uFnConvertError = nullptr;

	if (!uFnConvertError)
	{
		uFnConvertError = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.ConvertError");
	}

	UEpicFriendsPlugin_X_execConvertError_Params ConvertError_Params;
	memcpy_s(&ConvertError_Params.ErrorResponse, 0x8, &ErrorResponse, 0x8);

	this->ProcessEvent(uFnConvertError, &ConvertError_Params, nullptr);

	return ConvertError_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.GetAccountSummary
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicFriendsPlugin_X::GetAccountSummary()
{
	static UFunction* uFnGetAccountSummary = nullptr;

	if (!uFnGetAccountSummary)
	{
		uFnGetAccountSummary = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.GetAccountSummary");
	}

	UEpicFriendsPlugin_X_execGetAccountSummary_Params GetAccountSummary_Params;

	this->ProcessEvent(uFnGetAccountSummary, &GetAccountSummary_Params, nullptr);

	return GetAccountSummary_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.GetOutgoingFriendRequestsWithCustomCallback
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

bool UEpicFriendsPlugin_X::GetOutgoingFriendRequestsWithCustomCallback(struct FScriptDelegate Callback)
{
	static UFunction* uFnGetOutgoingFriendRequestsWithCustomCallback = nullptr;

	if (!uFnGetOutgoingFriendRequestsWithCustomCallback)
	{
		uFnGetOutgoingFriendRequestsWithCustomCallback = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.GetOutgoingFriendRequestsWithCustomCallback");
	}

	UEpicFriendsPlugin_X_execGetOutgoingFriendRequestsWithCustomCallback_Params GetOutgoingFriendRequestsWithCustomCallback_Params;
	memcpy_s(&GetOutgoingFriendRequestsWithCustomCallback_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnGetOutgoingFriendRequestsWithCustomCallback, &GetOutgoingFriendRequestsWithCustomCallback_Params, nullptr);

	return GetOutgoingFriendRequestsWithCustomCallback_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.GetOutgoingFriendRequests
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicFriendsPlugin_X::GetOutgoingFriendRequests()
{
	static UFunction* uFnGetOutgoingFriendRequests = nullptr;

	if (!uFnGetOutgoingFriendRequests)
	{
		uFnGetOutgoingFriendRequests = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.GetOutgoingFriendRequests");
	}

	UEpicFriendsPlugin_X_execGetOutgoingFriendRequests_Params GetOutgoingFriendRequests_Params;

	this->ProcessEvent(uFnGetOutgoingFriendRequests, &GetOutgoingFriendRequests_Params, nullptr);

	return GetOutgoingFriendRequests_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.GetIncomingFriendRequests
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicFriendsPlugin_X::GetIncomingFriendRequests()
{
	static UFunction* uFnGetIncomingFriendRequests = nullptr;

	if (!uFnGetIncomingFriendRequests)
	{
		uFnGetIncomingFriendRequests = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.GetIncomingFriendRequests");
	}

	UEpicFriendsPlugin_X_execGetIncomingFriendRequests_Params GetIncomingFriendRequests_Params;

	this->ProcessEvent(uFnGetIncomingFriendRequests, &GetIncomingFriendRequests_Params, nullptr);

	return GetIncomingFriendRequests_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.GetBlockList
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicFriendsPlugin_X::GetBlockList()
{
	static UFunction* uFnGetBlockList = nullptr;

	if (!uFnGetBlockList)
	{
		uFnGetBlockList = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.GetBlockList");
	}

	UEpicFriendsPlugin_X_execGetBlockList_Params GetBlockList_Params;

	this->ProcessEvent(uFnGetBlockList, &GetBlockList_Params, nullptr);

	return GetBlockList_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.Unblock
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            UserId                         (CPF_Parm | CPF_NeedCtorLink)

bool UEpicFriendsPlugin_X::Unblock(struct FUniqueNetId UserId)
{
	static UFunction* uFnUnblock = nullptr;

	if (!uFnUnblock)
	{
		uFnUnblock = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.Unblock");
	}

	UEpicFriendsPlugin_X_execUnblock_Params Unblock_Params;
	memcpy_s(&Unblock_Params.UserId, 0x48, &UserId, 0x48);

	this->ProcessEvent(uFnUnblock, &Unblock_Params, nullptr);

	return Unblock_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.bLock
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            UserId                         (CPF_Parm | CPF_NeedCtorLink)

bool UEpicFriendsPlugin_X::bLock(struct FUniqueNetId UserId)
{
	static UFunction* uFnbLock = nullptr;

	if (!uFnbLock)
	{
		uFnbLock = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.bLock");
	}

	UEpicFriendsPlugin_X_execbLock_Params bLock_Params;
	memcpy_s(&bLock_Params.UserId, 0x48, &UserId, 0x48);

	this->ProcessEvent(uFnbLock, &bLock_Params, nullptr);

	return bLock_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.RejectFriendRequest
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

bool UEpicFriendsPlugin_X::RejectFriendRequest(struct FUniqueNetId FriendId)
{
	static UFunction* uFnRejectFriendRequest = nullptr;

	if (!uFnRejectFriendRequest)
	{
		uFnRejectFriendRequest = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.RejectFriendRequest");
	}

	UEpicFriendsPlugin_X_execRejectFriendRequest_Params RejectFriendRequest_Params;
	memcpy_s(&RejectFriendRequest_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnRejectFriendRequest, &RejectFriendRequest_Params, nullptr);

	return RejectFriendRequest_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.AcceptFriendRequest
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  InPin                          (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

bool UEpicFriendsPlugin_X::AcceptFriendRequest(struct FUniqueNetId FriendId, class FString InPin)
{
	static UFunction* uFnAcceptFriendRequest = nullptr;

	if (!uFnAcceptFriendRequest)
	{
		uFnAcceptFriendRequest = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.AcceptFriendRequest");
	}

	UEpicFriendsPlugin_X_execAcceptFriendRequest_Params AcceptFriendRequest_Params;
	memcpy_s(&AcceptFriendRequest_Params.FriendId, 0x48, &FriendId, 0x48);
	memcpy_s(&AcceptFriendRequest_Params.InPin, 0x10, &InPin, 0x10);

	this->ProcessEvent(uFnAcceptFriendRequest, &AcceptFriendRequest_Params, nullptr);

	return AcceptFriendRequest_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.RemoveFriend
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

bool UEpicFriendsPlugin_X::RemoveFriend(struct FUniqueNetId FriendId)
{
	static UFunction* uFnRemoveFriend = nullptr;

	if (!uFnRemoveFriend)
	{
		uFnRemoveFriend = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.RemoveFriend");
	}

	UEpicFriendsPlugin_X_execRemoveFriend_Params RemoveFriend_Params;
	memcpy_s(&RemoveFriend_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnRemoveFriend, &RemoveFriend_Params, nullptr);

	return RemoveFriend_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.AddFriendWithCustomCallback
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Pin                            (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

bool UEpicFriendsPlugin_X::AddFriendWithCustomCallback(struct FUniqueNetId FriendId, struct FScriptDelegate Callback, class FString Pin)
{
	static UFunction* uFnAddFriendWithCustomCallback = nullptr;

	if (!uFnAddFriendWithCustomCallback)
	{
		uFnAddFriendWithCustomCallback = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.AddFriendWithCustomCallback");
	}

	UEpicFriendsPlugin_X_execAddFriendWithCustomCallback_Params AddFriendWithCustomCallback_Params;
	memcpy_s(&AddFriendWithCustomCallback_Params.FriendId, 0x48, &FriendId, 0x48);
	memcpy_s(&AddFriendWithCustomCallback_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&AddFriendWithCustomCallback_Params.Pin, 0x10, &Pin, 0x10);

	this->ProcessEvent(uFnAddFriendWithCustomCallback, &AddFriendWithCustomCallback_Params, nullptr);

	return AddFriendWithCustomCallback_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.AddFriend
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Pin                            (CPF_Parm | CPF_NeedCtorLink)

bool UEpicFriendsPlugin_X::AddFriend(struct FUniqueNetId FriendId, class FString Pin)
{
	static UFunction* uFnAddFriend = nullptr;

	if (!uFnAddFriend)
	{
		uFnAddFriend = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.AddFriend");
	}

	UEpicFriendsPlugin_X_execAddFriend_Params AddFriend_Params;
	memcpy_s(&AddFriend_Params.FriendId, 0x48, &FriendId, 0x48);
	memcpy_s(&AddFriend_Params.Pin, 0x10, &Pin, 0x10);

	this->ProcessEvent(uFnAddFriend, &AddFriend_Params, nullptr);

	return AddFriend_Params.ReturnValue;
};

// Function ProjectX.EpicFriendsPlugin_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UEpicFriendsPlugin_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.Construct");
	}

	UEpicFriendsPlugin_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.EpicFriendsPlugin_X.GetOutgoingFriendsCallback
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UEOS_GetAccountsResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicFriendsPlugin_X::GetOutgoingFriendsCallback(class UEOS_GetAccountsResponse* Response, class UError* Error)
{
	static UFunction* uFnGetOutgoingFriendsCallback = nullptr;

	if (!uFnGetOutgoingFriendsCallback)
	{
		uFnGetOutgoingFriendsCallback = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.GetOutgoingFriendsCallback");
	}

	UEpicFriendsPlugin_X_execGetOutgoingFriendsCallback_Params GetOutgoingFriendsCallback_Params;
	memcpy_s(&GetOutgoingFriendsCallback_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&GetOutgoingFriendsCallback_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnGetOutgoingFriendsCallback, &GetOutgoingFriendsCallback_Params, nullptr);
};

// Function ProjectX.EpicFriendsPlugin_X.AddFriendCallback
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)
// class FString                  FriendId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UEpicFriendsPlugin_X::AddFriendCallback(class UEOS_ManageFriendsListResponse* Response, class UError* Error, class FString& FriendId)
{
	static UFunction* uFnAddFriendCallback = nullptr;

	if (!uFnAddFriendCallback)
	{
		uFnAddFriendCallback = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.AddFriendCallback");
	}

	UEpicFriendsPlugin_X_execAddFriendCallback_Params AddFriendCallback_Params;
	memcpy_s(&AddFriendCallback_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&AddFriendCallback_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&AddFriendCallback_Params.FriendId, 0x10, &FriendId, 0x10);

	this->ProcessEvent(uFnAddFriendCallback, &AddFriendCallback_Params, nullptr);

	memcpy_s(&FriendId, 0x10, &AddFriendCallback_Params.FriendId, 0x10);
};

// Function ProjectX.EpicFriendsPlugin_X.HandleAccountSummaryResponse
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEOS_AccountSummaryResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicFriendsPlugin_X::HandleAccountSummaryResponse(class UEOS_AccountSummaryResponse* Response, class UError* Error)
{
	static UFunction* uFnHandleAccountSummaryResponse = nullptr;

	if (!uFnHandleAccountSummaryResponse)
	{
		uFnHandleAccountSummaryResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleAccountSummaryResponse");
	}

	UEpicFriendsPlugin_X_execHandleAccountSummaryResponse_Params HandleAccountSummaryResponse_Params;
	memcpy_s(&HandleAccountSummaryResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleAccountSummaryResponse_Params.Error, 0x8, &Error, 0x8);

	uFnHandleAccountSummaryResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleAccountSummaryResponse, &HandleAccountSummaryResponse_Params, nullptr);

	uFnHandleAccountSummaryResponse->FunctionFlags |= 0x400;
};

// Function ProjectX.EpicFriendsPlugin_X.HandleGetOutgoingInvitesResponse
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEOS_GetAccountsResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicFriendsPlugin_X::HandleGetOutgoingInvitesResponse(class UEOS_GetAccountsResponse* Response, class UError* Error)
{
	static UFunction* uFnHandleGetOutgoingInvitesResponse = nullptr;

	if (!uFnHandleGetOutgoingInvitesResponse)
	{
		uFnHandleGetOutgoingInvitesResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleGetOutgoingInvitesResponse");
	}

	UEpicFriendsPlugin_X_execHandleGetOutgoingInvitesResponse_Params HandleGetOutgoingInvitesResponse_Params;
	memcpy_s(&HandleGetOutgoingInvitesResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleGetOutgoingInvitesResponse_Params.Error, 0x8, &Error, 0x8);

	uFnHandleGetOutgoingInvitesResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleGetOutgoingInvitesResponse, &HandleGetOutgoingInvitesResponse_Params, nullptr);

	uFnHandleGetOutgoingInvitesResponse->FunctionFlags |= 0x400;
};

// Function ProjectX.EpicFriendsPlugin_X.HandleGetIncomingInvitesResponse
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEOS_GetAccountsResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicFriendsPlugin_X::HandleGetIncomingInvitesResponse(class UEOS_GetAccountsResponse* Response, class UError* Error)
{
	static UFunction* uFnHandleGetIncomingInvitesResponse = nullptr;

	if (!uFnHandleGetIncomingInvitesResponse)
	{
		uFnHandleGetIncomingInvitesResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleGetIncomingInvitesResponse");
	}

	UEpicFriendsPlugin_X_execHandleGetIncomingInvitesResponse_Params HandleGetIncomingInvitesResponse_Params;
	memcpy_s(&HandleGetIncomingInvitesResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleGetIncomingInvitesResponse_Params.Error, 0x8, &Error, 0x8);

	uFnHandleGetIncomingInvitesResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleGetIncomingInvitesResponse, &HandleGetIncomingInvitesResponse_Params, nullptr);

	uFnHandleGetIncomingInvitesResponse->FunctionFlags |= 0x400;
};

// Function ProjectX.EpicFriendsPlugin_X.HandleGetBlockListResponse
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEOS_GetAccountsResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicFriendsPlugin_X::HandleGetBlockListResponse(class UEOS_GetAccountsResponse* Response, class UError* Error)
{
	static UFunction* uFnHandleGetBlockListResponse = nullptr;

	if (!uFnHandleGetBlockListResponse)
	{
		uFnHandleGetBlockListResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleGetBlockListResponse");
	}

	UEpicFriendsPlugin_X_execHandleGetBlockListResponse_Params HandleGetBlockListResponse_Params;
	memcpy_s(&HandleGetBlockListResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleGetBlockListResponse_Params.Error, 0x8, &Error, 0x8);

	uFnHandleGetBlockListResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleGetBlockListResponse, &HandleGetBlockListResponse_Params, nullptr);

	uFnHandleGetBlockListResponse->FunctionFlags |= 0x400;
};

// Function ProjectX.EpicFriendsPlugin_X.HandleUnblockPlayerResponse
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageBlockListResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicFriendsPlugin_X::HandleUnblockPlayerResponse(class UEOS_ManageBlockListResponse* Response, class UError* Error)
{
	static UFunction* uFnHandleUnblockPlayerResponse = nullptr;

	if (!uFnHandleUnblockPlayerResponse)
	{
		uFnHandleUnblockPlayerResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleUnblockPlayerResponse");
	}

	UEpicFriendsPlugin_X_execHandleUnblockPlayerResponse_Params HandleUnblockPlayerResponse_Params;
	memcpy_s(&HandleUnblockPlayerResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleUnblockPlayerResponse_Params.Error, 0x8, &Error, 0x8);

	uFnHandleUnblockPlayerResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleUnblockPlayerResponse, &HandleUnblockPlayerResponse_Params, nullptr);

	uFnHandleUnblockPlayerResponse->FunctionFlags |= 0x400;
};

// Function ProjectX.EpicFriendsPlugin_X.HandleBlockPlayerResponse
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageBlockListResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicFriendsPlugin_X::HandleBlockPlayerResponse(class UEOS_ManageBlockListResponse* Response, class UError* Error)
{
	static UFunction* uFnHandleBlockPlayerResponse = nullptr;

	if (!uFnHandleBlockPlayerResponse)
	{
		uFnHandleBlockPlayerResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleBlockPlayerResponse");
	}

	UEpicFriendsPlugin_X_execHandleBlockPlayerResponse_Params HandleBlockPlayerResponse_Params;
	memcpy_s(&HandleBlockPlayerResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleBlockPlayerResponse_Params.Error, 0x8, &Error, 0x8);

	uFnHandleBlockPlayerResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleBlockPlayerResponse, &HandleBlockPlayerResponse_Params, nullptr);

	uFnHandleBlockPlayerResponse->FunctionFlags |= 0x400;
};

// Function ProjectX.EpicFriendsPlugin_X.HandleRejectFriendRequestResponse
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)
// class FString                  FriendId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UEpicFriendsPlugin_X::HandleRejectFriendRequestResponse(class UEOS_ManageFriendsListResponse* Response, class UError* Error, class FString& FriendId)
{
	static UFunction* uFnHandleRejectFriendRequestResponse = nullptr;

	if (!uFnHandleRejectFriendRequestResponse)
	{
		uFnHandleRejectFriendRequestResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleRejectFriendRequestResponse");
	}

	UEpicFriendsPlugin_X_execHandleRejectFriendRequestResponse_Params HandleRejectFriendRequestResponse_Params;
	memcpy_s(&HandleRejectFriendRequestResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleRejectFriendRequestResponse_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&HandleRejectFriendRequestResponse_Params.FriendId, 0x10, &FriendId, 0x10);

	uFnHandleRejectFriendRequestResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleRejectFriendRequestResponse, &HandleRejectFriendRequestResponse_Params, nullptr);

	uFnHandleRejectFriendRequestResponse->FunctionFlags |= 0x400;

	memcpy_s(&FriendId, 0x10, &HandleRejectFriendRequestResponse_Params.FriendId, 0x10);
};

// Function ProjectX.EpicFriendsPlugin_X.HandleAcceptFriendRequestResponse
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)
// class FString                  FriendId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UEpicFriendsPlugin_X::HandleAcceptFriendRequestResponse(class UEOS_ManageFriendsListResponse* Response, class UError* Error, class FString& FriendId)
{
	static UFunction* uFnHandleAcceptFriendRequestResponse = nullptr;

	if (!uFnHandleAcceptFriendRequestResponse)
	{
		uFnHandleAcceptFriendRequestResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleAcceptFriendRequestResponse");
	}

	UEpicFriendsPlugin_X_execHandleAcceptFriendRequestResponse_Params HandleAcceptFriendRequestResponse_Params;
	memcpy_s(&HandleAcceptFriendRequestResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleAcceptFriendRequestResponse_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&HandleAcceptFriendRequestResponse_Params.FriendId, 0x10, &FriendId, 0x10);

	uFnHandleAcceptFriendRequestResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleAcceptFriendRequestResponse, &HandleAcceptFriendRequestResponse_Params, nullptr);

	uFnHandleAcceptFriendRequestResponse->FunctionFlags |= 0x400;

	memcpy_s(&FriendId, 0x10, &HandleAcceptFriendRequestResponse_Params.FriendId, 0x10);
};

// Function ProjectX.EpicFriendsPlugin_X.HandleRemoveFriendResponse
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)
// class FString                  FriendId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UEpicFriendsPlugin_X::HandleRemoveFriendResponse(class UEOS_ManageFriendsListResponse* Response, class UError* Error, class FString& FriendId)
{
	static UFunction* uFnHandleRemoveFriendResponse = nullptr;

	if (!uFnHandleRemoveFriendResponse)
	{
		uFnHandleRemoveFriendResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleRemoveFriendResponse");
	}

	UEpicFriendsPlugin_X_execHandleRemoveFriendResponse_Params HandleRemoveFriendResponse_Params;
	memcpy_s(&HandleRemoveFriendResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleRemoveFriendResponse_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&HandleRemoveFriendResponse_Params.FriendId, 0x10, &FriendId, 0x10);

	uFnHandleRemoveFriendResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleRemoveFriendResponse, &HandleRemoveFriendResponse_Params, nullptr);

	uFnHandleRemoveFriendResponse->FunctionFlags |= 0x400;

	memcpy_s(&FriendId, 0x10, &HandleRemoveFriendResponse_Params.FriendId, 0x10);
};

// Function ProjectX.EpicFriendsPlugin_X.HandleAddFriendResponse
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)
// class FString                  FriendId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UEpicFriendsPlugin_X::HandleAddFriendResponse(class UEOS_ManageFriendsListResponse* Response, class UError* Error, class FString& FriendId)
{
	static UFunction* uFnHandleAddFriendResponse = nullptr;

	if (!uFnHandleAddFriendResponse)
	{
		uFnHandleAddFriendResponse = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HandleAddFriendResponse");
	}

	UEpicFriendsPlugin_X_execHandleAddFriendResponse_Params HandleAddFriendResponse_Params;
	memcpy_s(&HandleAddFriendResponse_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleAddFriendResponse_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&HandleAddFriendResponse_Params.FriendId, 0x10, &FriendId, 0x10);

	uFnHandleAddFriendResponse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleAddFriendResponse, &HandleAddFriendResponse_Params, nullptr);

	uFnHandleAddFriendResponse->FunctionFlags |= 0x400;

	memcpy_s(&FriendId, 0x10, &HandleAddFriendResponse_Params.FriendId, 0x10);
};

// Function ProjectX.EpicFriendsPlugin_X.HTTPRequestCallback
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Response                       (CPF_Const | CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicFriendsPlugin_X::HTTPRequestCallback(class UObject* Response, class UError* Error)
{
	static UFunction* uFnHTTPRequestCallback = nullptr;

	if (!uFnHTTPRequestCallback)
	{
		uFnHTTPRequestCallback = UFunction::FindFunction("Function ProjectX.EpicFriendsPlugin_X.HTTPRequestCallback");
	}

	UEpicFriendsPlugin_X_execHTTPRequestCallback_Params HTTPRequestCallback_Params;
	memcpy_s(&HTTPRequestCallback_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HTTPRequestCallback_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHTTPRequestCallback, &HTTPRequestCallback_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.RequestAuthTicket
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::RequestAuthTicket()
{
	static UFunction* uFnRequestAuthTicket = nullptr;

	if (!uFnRequestAuthTicket)
	{
		uFnRequestAuthTicket = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.RequestAuthTicket");
	}

	UOnlinePlayerAuthentication_X_execRequestAuthTicket_Params RequestAuthTicket_Params;

	this->ProcessEvent(uFnRequestAuthTicket, &RequestAuthTicket_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.GoToRequestEpicAuthTicket
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::GoToRequestEpicAuthTicket()
{
	static UFunction* uFnGoToRequestEpicAuthTicket = nullptr;

	if (!uFnGoToRequestEpicAuthTicket)
	{
		uFnGoToRequestEpicAuthTicket = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.GoToRequestEpicAuthTicket");
	}

	UOnlinePlayerAuthentication_X_execGoToRequestEpicAuthTicket_Params GoToRequestEpicAuthTicket_Params;

	this->ProcessEvent(uFnGoToRequestEpicAuthTicket, &GoToRequestEpicAuthTicket_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.RequestEpicAuthTicket
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::RequestEpicAuthTicket()
{
	static UFunction* uFnRequestEpicAuthTicket = nullptr;

	if (!uFnRequestEpicAuthTicket)
	{
		uFnRequestEpicAuthTicket = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.RequestEpicAuthTicket");
	}

	UOnlinePlayerAuthentication_X_execRequestEpicAuthTicket_Params RequestEpicAuthTicket_Params;

	this->ProcessEvent(uFnRequestEpicAuthTicket, &RequestEpicAuthTicket_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandleEpicAuthTicket
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  AuthTicket                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  EpicAccountId                  (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerAuthentication_X::HandleEpicAuthTicket(class FString AuthTicket, class FString EpicAccountId, class UError* Error)
{
	static UFunction* uFnHandleEpicAuthTicket = nullptr;

	if (!uFnHandleEpicAuthTicket)
	{
		uFnHandleEpicAuthTicket = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandleEpicAuthTicket");
	}

	UOnlinePlayerAuthentication_X_execHandleEpicAuthTicket_Params HandleEpicAuthTicket_Params;
	memcpy_s(&HandleEpicAuthTicket_Params.AuthTicket, 0x10, &AuthTicket, 0x10);
	memcpy_s(&HandleEpicAuthTicket_Params.EpicAccountId, 0x10, &EpicAccountId, 0x10);
	memcpy_s(&HandleEpicAuthTicket_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleEpicAuthTicket, &HandleEpicAuthTicket_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.__OnlinePlayerAuthentication_X__OnInit_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::__OnlinePlayerAuthentication_X__OnInit_0x1()
{
	static UFunction* uFn__OnlinePlayerAuthentication_X__OnInit_0x1 = nullptr;

	if (!uFn__OnlinePlayerAuthentication_X__OnInit_0x1)
	{
		uFn__OnlinePlayerAuthentication_X__OnInit_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.__OnlinePlayerAuthentication_X__OnInit_0x1");
	}

	UOnlinePlayerAuthentication_X_exec__OnlinePlayerAuthentication_X__OnInit_0x1_Params __OnlinePlayerAuthentication_X__OnInit_0x1_Params;

	this->ProcessEvent(uFn__OnlinePlayerAuthentication_X__OnInit_0x1, &__OnlinePlayerAuthentication_X__OnInit_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.GetDebugName
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlinePlayerAuthentication_X::GetDebugName()
{
	static UFunction* uFnGetDebugName = nullptr;

	if (!uFnGetDebugName)
	{
		uFnGetDebugName = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.GetDebugName");
	}

	UOnlinePlayerAuthentication_X_execGetDebugName_Params GetDebugName_Params;

	this->ProcessEvent(uFnGetDebugName, &GetDebugName_Params, nullptr);

	return GetDebugName_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerAuthentication_X.GotoAuthState
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FName                   AuthStateName                  (CPF_Parm)

void UOnlinePlayerAuthentication_X::GotoAuthState(struct FName AuthStateName)
{
	static UFunction* uFnGotoAuthState = nullptr;

	if (!uFnGotoAuthState)
	{
		uFnGotoAuthState = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.GotoAuthState");
	}

	UOnlinePlayerAuthentication_X_execGotoAuthState_Params GotoAuthState_Params;
	memcpy_s(&GotoAuthState_Params.AuthStateName, 0x8, &AuthStateName, 0x8);

	this->ProcessEvent(uFnGotoAuthState, &GotoAuthState_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandleAuthTicket
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  AuthTicket                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerAuthentication_X::HandleAuthTicket(unsigned long bSuccess, class FString AuthTicket)
{
	static UFunction* uFnHandleAuthTicket = nullptr;

	if (!uFnHandleAuthTicket)
	{
		uFnHandleAuthTicket = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandleAuthTicket");
	}

	UOnlinePlayerAuthentication_X_execHandleAuthTicket_Params HandleAuthTicket_Params;
	HandleAuthTicket_Params.bSuccess = bSuccess;
	memcpy_s(&HandleAuthTicket_Params.AuthTicket, 0x10, &AuthTicket, 0x10);

	this->ProcessEvent(uFnHandleAuthTicket, &HandleAuthTicket_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.IsLoginAttemptActive
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayerAuthentication_X::IsLoginAttemptActive()
{
	static UFunction* uFnIsLoginAttemptActive = nullptr;

	if (!uFnIsLoginAttemptActive)
	{
		uFnIsLoginAttemptActive = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.IsLoginAttemptActive");
	}

	UOnlinePlayerAuthentication_X_execIsLoginAttemptActive_Params IsLoginAttemptActive_Params;

	this->ProcessEvent(uFnIsLoginAttemptActive, &IsLoginAttemptActive_Params, nullptr);

	return IsLoginAttemptActive_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerAuthentication_X.GetFeatureSet
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UOnlinePlayerAuthentication_X::GetFeatureSet()
{
	static UFunction* uFnGetFeatureSet = nullptr;

	if (!uFnGetFeatureSet)
	{
		uFnGetFeatureSet = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.GetFeatureSet");
	}

	UOnlinePlayerAuthentication_X_execGetFeatureSet_Params GetFeatureSet_Params;

	uFnGetFeatureSet->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetFeatureSet, &GetFeatureSet_Params, nullptr);

	uFnGetFeatureSet->FunctionFlags |= 0x400;

	return GetFeatureSet_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerAuthentication_X.GetBuildRegion
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlinePlayerAuthentication_X::GetBuildRegion()
{
	static UFunction* uFnGetBuildRegion = nullptr;

	if (!uFnGetBuildRegion)
	{
		uFnGetBuildRegion = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.GetBuildRegion");
	}

	UOnlinePlayerAuthentication_X_execGetBuildRegion_Params GetBuildRegion_Params;

	this->ProcessEvent(uFnGetBuildRegion, &GetBuildRegion_Params, nullptr);

	return GetBuildRegion_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerAuthentication_X.SetPlatformAuthTicketFailed_Switch
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bNewValue                      (CPF_Parm)

void UOnlinePlayerAuthentication_X::SetPlatformAuthTicketFailed_Switch(unsigned long bNewValue)
{
	static UFunction* uFnSetPlatformAuthTicketFailed_Switch = nullptr;

	if (!uFnSetPlatformAuthTicketFailed_Switch)
	{
		uFnSetPlatformAuthTicketFailed_Switch = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.SetPlatformAuthTicketFailed_Switch");
	}

	UOnlinePlayerAuthentication_X_execSetPlatformAuthTicketFailed_Switch_Params SetPlatformAuthTicketFailed_Switch_Params;
	SetPlatformAuthTicketFailed_Switch_Params.bNewValue = bNewValue;

	this->ProcessEvent(uFnSetPlatformAuthTicketFailed_Switch, &SetPlatformAuthTicketFailed_Switch_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.RequiresEpicAuthTicket
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayerAuthentication_X::RequiresEpicAuthTicket()
{
	static UFunction* uFnRequiresEpicAuthTicket = nullptr;

	if (!uFnRequiresEpicAuthTicket)
	{
		uFnRequiresEpicAuthTicket = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.RequiresEpicAuthTicket");
	}

	UOnlinePlayerAuthentication_X_execRequiresEpicAuthTicket_Params RequiresEpicAuthTicket_Params;

	this->ProcessEvent(uFnRequiresEpicAuthTicket, &RequiresEpicAuthTicket_Params, nullptr);

	return RequiresEpicAuthTicket_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerAuthentication_X.RequiresAuthTicket
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlinePlayerAuthentication_X::RequiresAuthTicket()
{
	static UFunction* uFnRequiresAuthTicket = nullptr;

	if (!uFnRequiresAuthTicket)
	{
		uFnRequiresAuthTicket = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.RequiresAuthTicket");
	}

	UOnlinePlayerAuthentication_X_execRequiresAuthTicket_Params RequiresAuthTicket_Params;

	this->ProcessEvent(uFnRequiresAuthTicket, &RequiresAuthTicket_Params, nullptr);

	return RequiresAuthTicket_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerAuthentication_X.ReLogin
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::ReLogin()
{
	static UFunction* uFnReLogin = nullptr;

	if (!uFnReLogin)
	{
		uFnReLogin = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.ReLogin");
	}

	UOnlinePlayerAuthentication_X_execReLogin_Params ReLogin_Params;

	this->ProcessEvent(uFnReLogin, &ReLogin_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.Logout
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::Logout()
{
	static UFunction* uFnLogout = nullptr;

	if (!uFnLogout)
	{
		uFnLogout = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.Logout");
	}

	UOnlinePlayerAuthentication_X_execLogout_Params Logout_Params;

	this->ProcessEvent(uFnLogout, &Logout_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.SetAuthLoginError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  E                              (CPF_Parm)

void UOnlinePlayerAuthentication_X::SetAuthLoginError(class UError* E)
{
	static UFunction* uFnSetAuthLoginError = nullptr;

	if (!uFnSetAuthLoginError)
	{
		uFnSetAuthLoginError = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.SetAuthLoginError");
	}

	UOnlinePlayerAuthentication_X_execSetAuthLoginError_Params SetAuthLoginError_Params;
	memcpy_s(&SetAuthLoginError_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFnSetAuthLoginError, &SetAuthLoginError_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.UpdateLoginState
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::UpdateLoginState()
{
	static UFunction* uFnUpdateLoginState = nullptr;

	if (!uFnUpdateLoginState)
	{
		uFnUpdateLoginState = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.UpdateLoginState");
	}

	UOnlinePlayerAuthentication_X_execUpdateLoginState_Params UpdateLoginState_Params;

	this->ProcessEvent(uFnUpdateLoginState, &UpdateLoginState_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.GetAuthLoginError
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UError* UOnlinePlayerAuthentication_X::GetAuthLoginError()
{
	static UFunction* uFnGetAuthLoginError = nullptr;

	if (!uFnGetAuthLoginError)
	{
		uFnGetAuthLoginError = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.GetAuthLoginError");
	}

	UOnlinePlayerAuthentication_X_execGetAuthLoginError_Params GetAuthLoginError_Params;

	this->ProcessEvent(uFnGetAuthLoginError, &GetAuthLoginError_Params, nullptr);

	return GetAuthLoginError_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerAuthentication_X.UpdateAuthLoginError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::UpdateAuthLoginError()
{
	static UFunction* uFnUpdateAuthLoginError = nullptr;

	if (!uFnUpdateAuthLoginError)
	{
		uFnUpdateAuthLoginError = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.UpdateAuthLoginError");
	}

	UOnlinePlayerAuthentication_X_execUpdateAuthLoginError_Params UpdateAuthLoginError_Params;

	this->ProcessEvent(uFnUpdateAuthLoginError, &UpdateAuthLoginError_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandlePsyNetLoginChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlinePlayerAuthentication_X::HandlePsyNetLoginChanged(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnHandlePsyNetLoginChanged = nullptr;

	if (!uFnHandlePsyNetLoginChanged)
	{
		uFnHandlePsyNetLoginChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandlePsyNetLoginChanged");
	}

	UOnlinePlayerAuthentication_X_execHandlePsyNetLoginChanged_Params HandlePsyNetLoginChanged_Params;
	memcpy_s(&HandlePsyNetLoginChanged_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnHandlePsyNetLoginChanged, &HandlePsyNetLoginChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandleLinkStatusChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  B                              (CPF_Parm)

void UOnlinePlayerAuthentication_X::HandleLinkStatusChanged(unsigned long B)
{
	static UFunction* uFnHandleLinkStatusChanged = nullptr;

	if (!uFnHandleLinkStatusChanged)
	{
		uFnHandleLinkStatusChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandleLinkStatusChanged");
	}

	UOnlinePlayerAuthentication_X_execHandleLinkStatusChanged_Params HandleLinkStatusChanged_Params;
	HandleLinkStatusChanged_Params.B = B;

	this->ProcessEvent(uFnHandleLinkStatusChanged, &HandleLinkStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandlePsyNetConnectionChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     C                              (CPF_Parm)

void UOnlinePlayerAuthentication_X::HandlePsyNetConnectionChanged(class UPsyNetConnection_X* C)
{
	static UFunction* uFnHandlePsyNetConnectionChanged = nullptr;

	if (!uFnHandlePsyNetConnectionChanged)
	{
		uFnHandlePsyNetConnectionChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandlePsyNetConnectionChanged");
	}

	UOnlinePlayerAuthentication_X_execHandlePsyNetConnectionChanged_Params HandlePsyNetConnectionChanged_Params;
	memcpy_s(&HandlePsyNetConnectionChanged_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnHandlePsyNetConnectionChanged, &HandlePsyNetConnectionChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandleEosTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::HandleEosTimeout()
{
	static UFunction* uFnHandleEosTimeout = nullptr;

	if (!uFnHandleEosTimeout)
	{
		uFnHandleEosTimeout = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandleEosTimeout");
	}

	UOnlinePlayerAuthentication_X_execHandleEosTimeout_Params HandleEosTimeout_Params;

	this->ProcessEvent(uFnHandleEosTimeout, &HandleEosTimeout_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandleLoginStatusChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlinePlayerAuthentication_X::HandleLoginStatusChanged(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnHandleLoginStatusChanged = nullptr;

	if (!uFnHandleLoginStatusChanged)
	{
		uFnHandleLoginStatusChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandleLoginStatusChanged");
	}

	UOnlinePlayerAuthentication_X_execHandleLoginStatusChanged_Params HandleLoginStatusChanged_Params;
	memcpy_s(&HandleLoginStatusChanged_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnHandleLoginStatusChanged, &HandleLoginStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.OnLoginFail
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerAuthentication_X::OnLoginFail(class UError* Error)
{
	static UFunction* uFnOnLoginFail = nullptr;

	if (!uFnOnLoginFail)
	{
		uFnOnLoginFail = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.OnLoginFail");
	}

	UOnlinePlayerAuthentication_X_execOnLoginFail_Params OnLoginFail_Params;
	memcpy_s(&OnLoginFail_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnOnLoginFail, &OnLoginFail_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.OnLoginFailRPC
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  RPC                            (CPF_Parm)

void UOnlinePlayerAuthentication_X::OnLoginFailRPC(class URPC_LoginAuthPlayer_X* RPC)
{
	static UFunction* uFnOnLoginFailRPC = nullptr;

	if (!uFnOnLoginFailRPC)
	{
		uFnOnLoginFailRPC = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.OnLoginFailRPC");
	}

	UOnlinePlayerAuthentication_X_execOnLoginFailRPC_Params OnLoginFailRPC_Params;
	memcpy_s(&OnLoginFailRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnOnLoginFailRPC, &OnLoginFailRPC_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.OnLoginSuccessRPC
// [0x20080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  RPC                            (CPF_Parm)

void UOnlinePlayerAuthentication_X::OnLoginSuccessRPC(class URPC_LoginAuthPlayer_X* RPC)
{
	static UFunction* uFnOnLoginSuccessRPC = nullptr;

	if (!uFnOnLoginSuccessRPC)
	{
		uFnOnLoginSuccessRPC = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.OnLoginSuccessRPC");
	}

	UOnlinePlayerAuthentication_X_execOnLoginSuccessRPC_Params OnLoginSuccessRPC_Params;
	memcpy_s(&OnLoginSuccessRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnOnLoginSuccessRPC, &OnLoginSuccessRPC_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.SendLoginRPC
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::SendLoginRPC()
{
	static UFunction* uFnSendLoginRPC = nullptr;

	if (!uFnSendLoginRPC)
	{
		uFnSendLoginRPC = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.SendLoginRPC");
	}

	UOnlinePlayerAuthentication_X_execSendLoginRPC_Params SendLoginRPC_Params;

	this->ProcessEvent(uFnSendLoginRPC, &SendLoginRPC_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.PsyNetLogin
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerAuthentication_X::PsyNetLogin(struct FScriptDelegate Callback)
{
	static UFunction* uFnPsyNetLogin = nullptr;

	if (!uFnPsyNetLogin)
	{
		uFnPsyNetLogin = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.PsyNetLogin");
	}

	UOnlinePlayerAuthentication_X_execPsyNetLogin_Params PsyNetLogin_Params;
	memcpy_s(&PsyNetLogin_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnPsyNetLogin, &PsyNetLogin_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandleInternetConnectionChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bConnected                     (CPF_Parm)

void UOnlinePlayerAuthentication_X::HandleInternetConnectionChanged(unsigned long bConnected)
{
	static UFunction* uFnHandleInternetConnectionChanged = nullptr;

	if (!uFnHandleInternetConnectionChanged)
	{
		uFnHandleInternetConnectionChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandleInternetConnectionChanged");
	}

	UOnlinePlayerAuthentication_X_execHandleInternetConnectionChanged_Params HandleInternetConnectionChanged_Params;
	HandleInternetConnectionChanged_Params.bConnected = bConnected;

	this->ProcessEvent(uFnHandleInternetConnectionChanged, &HandleInternetConnectionChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.HandleConnectionStatusChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        Status                         (CPF_Parm)

void UOnlinePlayerAuthentication_X::HandleConnectionStatusChanged(uint8_t Status)
{
	static UFunction* uFnHandleConnectionStatusChanged = nullptr;

	if (!uFnHandleConnectionStatusChanged)
	{
		uFnHandleConnectionStatusChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.HandleConnectionStatusChanged");
	}

	UOnlinePlayerAuthentication_X_execHandleConnectionStatusChanged_Params HandleConnectionStatusChanged_Params;
	memcpy_s(&HandleConnectionStatusChanged_Params.Status, 0x1, &Status, 0x1);

	this->ProcessEvent(uFnHandleConnectionStatusChanged, &HandleConnectionStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.OnRemoved
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::OnRemoved()
{
	static UFunction* uFnOnRemoved = nullptr;

	if (!uFnOnRemoved)
	{
		uFnOnRemoved = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.OnRemoved");
	}

	UOnlinePlayerAuthentication_X_execOnRemoved_Params OnRemoved_Params;

	this->ProcessEvent(uFnOnRemoved, &OnRemoved_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerAuthentication_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.OnInit");
	}

	UOnlinePlayerAuthentication_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.EventConnectionStatusChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bConnected                     (CPF_Parm)

void UOnlinePlayerAuthentication_X::EventConnectionStatusChanged(unsigned long bConnected)
{
	static UFunction* uFnEventConnectionStatusChanged = nullptr;

	if (!uFnEventConnectionStatusChanged)
	{
		uFnEventConnectionStatusChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.EventConnectionStatusChanged");
	}

	UOnlinePlayerAuthentication_X_execEventConnectionStatusChanged_Params EventConnectionStatusChanged_Params;
	EventConnectionStatusChanged_Params.bConnected = bConnected;

	this->ProcessEvent(uFnEventConnectionStatusChanged, &EventConnectionStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.EventPlatformAuthTicketFailedChanged_Switch
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bFailure                       (CPF_Parm)

void UOnlinePlayerAuthentication_X::EventPlatformAuthTicketFailedChanged_Switch(unsigned long bFailure)
{
	static UFunction* uFnEventPlatformAuthTicketFailedChanged_Switch = nullptr;

	if (!uFnEventPlatformAuthTicketFailedChanged_Switch)
	{
		uFnEventPlatformAuthTicketFailedChanged_Switch = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.EventPlatformAuthTicketFailedChanged_Switch");
	}

	UOnlinePlayerAuthentication_X_execEventPlatformAuthTicketFailedChanged_Switch_Params EventPlatformAuthTicketFailedChanged_Switch_Params;
	EventPlatformAuthTicketFailedChanged_Switch_Params.bFailure = bFailure;

	this->ProcessEvent(uFnEventPlatformAuthTicketFailedChanged_Switch, &EventPlatformAuthTicketFailedChanged_Switch_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.EventLoginResult
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlinePlayerAuthentication_X::EventLoginResult(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnEventLoginResult = nullptr;

	if (!uFnEventLoginResult)
	{
		uFnEventLoginResult = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.EventLoginResult");
	}

	UOnlinePlayerAuthentication_X_execEventLoginResult_Params EventLoginResult_Params;
	memcpy_s(&EventLoginResult_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnEventLoginResult, &EventLoginResult_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.EventBanned
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlinePlayerAuthentication_X::EventBanned(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnEventBanned = nullptr;

	if (!uFnEventBanned)
	{
		uFnEventBanned = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.EventBanned");
	}

	UOnlinePlayerAuthentication_X_execEventBanned_Params EventBanned_Params;
	memcpy_s(&EventBanned_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnEventBanned, &EventBanned_Params, nullptr);
};

// Function ProjectX.OnlinePlayerAuthentication_X.EventLoginChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlinePlayerAuthentication_X::EventLoginChanged(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnEventLoginChanged = nullptr;

	if (!uFnEventLoginChanged)
	{
		uFnEventLoginChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerAuthentication_X.EventLoginChanged");
	}

	UOnlinePlayerAuthentication_X_execEventLoginChanged_Params EventLoginChanged_Params;
	memcpy_s(&EventLoginChanged_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnEventLoginChanged, &EventLoginChanged_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.__EpicLogin_X__HandleLoginChanged_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  Ticket                         (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Id                             (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Err                            (CPF_Parm)

void UEpicLogin_X::__EpicLogin_X__HandleLoginChanged_0x2(class FString Ticket, class FString Id, class UError* Err)
{
	static UFunction* uFn__EpicLogin_X__HandleLoginChanged_0x2 = nullptr;

	if (!uFn__EpicLogin_X__HandleLoginChanged_0x2)
	{
		uFn__EpicLogin_X__HandleLoginChanged_0x2 = UFunction::FindFunction("Function ProjectX.EpicLogin_X.__EpicLogin_X__HandleLoginChanged_0x2");
	}

	UEpicLogin_X_exec__EpicLogin_X__HandleLoginChanged_0x2_Params __EpicLogin_X__HandleLoginChanged_0x2_Params;
	memcpy_s(&__EpicLogin_X__HandleLoginChanged_0x2_Params.Ticket, 0x10, &Ticket, 0x10);
	memcpy_s(&__EpicLogin_X__HandleLoginChanged_0x2_Params.Id, 0x10, &Id, 0x10);
	memcpy_s(&__EpicLogin_X__HandleLoginChanged_0x2_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__EpicLogin_X__HandleLoginChanged_0x2, &__EpicLogin_X__HandleLoginChanged_0x2_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.__EpicLogin_X__HandleLoginFailed_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  Ticket                         (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Id                             (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Err                            (CPF_Parm)

void UEpicLogin_X::__EpicLogin_X__HandleLoginFailed_0x1(class FString Ticket, class FString Id, class UError* Err)
{
	static UFunction* uFn__EpicLogin_X__HandleLoginFailed_0x1 = nullptr;

	if (!uFn__EpicLogin_X__HandleLoginFailed_0x1)
	{
		uFn__EpicLogin_X__HandleLoginFailed_0x1 = UFunction::FindFunction("Function ProjectX.EpicLogin_X.__EpicLogin_X__HandleLoginFailed_0x1");
	}

	UEpicLogin_X_exec__EpicLogin_X__HandleLoginFailed_0x1_Params __EpicLogin_X__HandleLoginFailed_0x1_Params;
	memcpy_s(&__EpicLogin_X__HandleLoginFailed_0x1_Params.Ticket, 0x10, &Ticket, 0x10);
	memcpy_s(&__EpicLogin_X__HandleLoginFailed_0x1_Params.Id, 0x10, &Id, 0x10);
	memcpy_s(&__EpicLogin_X__HandleLoginFailed_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__EpicLogin_X__HandleLoginFailed_0x1, &__EpicLogin_X__HandleLoginFailed_0x1_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  Ticket                         (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Id                             (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Err                            (CPF_Parm)

void UEpicLogin_X::__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2(class FString Ticket, class FString Id, class UError* Err)
{
	static UFunction* uFn__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2 = nullptr;

	if (!uFn__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2)
	{
		uFn__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2 = UFunction::FindFunction("Function ProjectX.EpicLogin_X.__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2");
	}

	UEpicLogin_X_exec__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2_Params __EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2_Params;
	memcpy_s(&__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2_Params.Ticket, 0x10, &Ticket, 0x10);
	memcpy_s(&__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2_Params.Id, 0x10, &Id, 0x10);
	memcpy_s(&__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2, &__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x2_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.__EpicLogin_X__CreateEpicGamesAccount_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           Response                       (CPF_Parm)

void UEpicLogin_X::__EpicLogin_X__CreateEpicGamesAccount_0x1(class UWebRequest_X* Response)
{
	static UFunction* uFn__EpicLogin_X__CreateEpicGamesAccount_0x1 = nullptr;

	if (!uFn__EpicLogin_X__CreateEpicGamesAccount_0x1)
	{
		uFn__EpicLogin_X__CreateEpicGamesAccount_0x1 = UFunction::FindFunction("Function ProjectX.EpicLogin_X.__EpicLogin_X__CreateEpicGamesAccount_0x1");
	}

	UEpicLogin_X_exec__EpicLogin_X__CreateEpicGamesAccount_0x1_Params __EpicLogin_X__CreateEpicGamesAccount_0x1_Params;
	memcpy_s(&__EpicLogin_X__CreateEpicGamesAccount_0x1_Params.Response, 0x8, &Response, 0x8);

	this->ProcessEvent(uFn__EpicLogin_X__CreateEpicGamesAccount_0x1, &__EpicLogin_X__CreateEpicGamesAccount_0x1_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.__EpicLogin_X__NintendoAccountLogin_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  AuthTicket                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  __                             (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UEpicLogin_X::__EpicLogin_X__NintendoAccountLogin_0x1(class FString AuthTicket, class FString __, class UError* Error)
{
	static UFunction* uFn__EpicLogin_X__NintendoAccountLogin_0x1 = nullptr;

	if (!uFn__EpicLogin_X__NintendoAccountLogin_0x1)
	{
		uFn__EpicLogin_X__NintendoAccountLogin_0x1 = UFunction::FindFunction("Function ProjectX.EpicLogin_X.__EpicLogin_X__NintendoAccountLogin_0x1");
	}

	UEpicLogin_X_exec__EpicLogin_X__NintendoAccountLogin_0x1_Params __EpicLogin_X__NintendoAccountLogin_0x1_Params;
	memcpy_s(&__EpicLogin_X__NintendoAccountLogin_0x1_Params.AuthTicket, 0x10, &AuthTicket, 0x10);
	memcpy_s(&__EpicLogin_X__NintendoAccountLogin_0x1_Params.__, 0x10, &__, 0x10);
	memcpy_s(&__EpicLogin_X__NintendoAccountLogin_0x1_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__EpicLogin_X__NintendoAccountLogin_0x1, &__EpicLogin_X__NintendoAccountLogin_0x1_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.__EpicLogin_X__RequestNintendoAccountAuthorization_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UError*                  _                              (CPF_Parm)

void UEpicLogin_X::__EpicLogin_X__RequestNintendoAccountAuthorization_0x2(class UError* _)
{
	static UFunction* uFn__EpicLogin_X__RequestNintendoAccountAuthorization_0x2 = nullptr;

	if (!uFn__EpicLogin_X__RequestNintendoAccountAuthorization_0x2)
	{
		uFn__EpicLogin_X__RequestNintendoAccountAuthorization_0x2 = UFunction::FindFunction("Function ProjectX.EpicLogin_X.__EpicLogin_X__RequestNintendoAccountAuthorization_0x2");
	}

	UEpicLogin_X_exec__EpicLogin_X__RequestNintendoAccountAuthorization_0x2_Params __EpicLogin_X__RequestNintendoAccountAuthorization_0x2_Params;
	memcpy_s(&__EpicLogin_X__RequestNintendoAccountAuthorization_0x2_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__EpicLogin_X__RequestNintendoAccountAuthorization_0x2, &__EpicLogin_X__RequestNintendoAccountAuthorization_0x2_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1
// [0x40042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULocalPlayer_X*          GamePlayer                     (CPF_Parm)

bool UEpicLogin_X::__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1(class ULocalPlayer_X* GamePlayer)
{
	static UFunction* uFn__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1 = nullptr;

	if (!uFn__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1)
	{
		uFn__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1 = UFunction::FindFunction("Function ProjectX.EpicLogin_X.__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1");
	}

	UEpicLogin_X_exec__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1_Params __EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1_Params;
	memcpy_s(&__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1_Params.GamePlayer, 0x8, &GamePlayer, 0x8);

	UEpicLogin_X::StaticClass()->ProcessEvent(uFn__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1, &__EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1_Params, nullptr);

	return __EpicLogin_X__IsAnyLocalPlayerCabinedOrGuest_0x1_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.BuildIdentityURL
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  URLSuffix                      (CPF_Parm | CPF_NeedCtorLink)

class FString UEpicLogin_X::BuildIdentityURL(class FString URLSuffix)
{
	static UFunction* uFnBuildIdentityURL = nullptr;

	if (!uFnBuildIdentityURL)
	{
		uFnBuildIdentityURL = UFunction::FindFunction("Function ProjectX.EpicLogin_X.BuildIdentityURL");
	}

	UEpicLogin_X_execBuildIdentityURL_Params BuildIdentityURL_Params;
	memcpy_s(&BuildIdentityURL_Params.URLSuffix, 0x10, &URLSuffix, 0x10);

	this->ProcessEvent(uFnBuildIdentityURL, &BuildIdentityURL_Params, nullptr);

	return BuildIdentityURL_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.IsAnyLocalPlayerCabinedOrGuest
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicLogin_X::IsAnyLocalPlayerCabinedOrGuest()
{
	static UFunction* uFnIsAnyLocalPlayerCabinedOrGuest = nullptr;

	if (!uFnIsAnyLocalPlayerCabinedOrGuest)
	{
		uFnIsAnyLocalPlayerCabinedOrGuest = UFunction::FindFunction("Function ProjectX.EpicLogin_X.IsAnyLocalPlayerCabinedOrGuest");
	}

	UEpicLogin_X_execIsAnyLocalPlayerCabinedOrGuest_Params IsAnyLocalPlayerCabinedOrGuest_Params;

	UEpicLogin_X::StaticClass()->ProcessEvent(uFnIsAnyLocalPlayerCabinedOrGuest, &IsAnyLocalPlayerCabinedOrGuest_Params, nullptr);

	return IsAnyLocalPlayerCabinedOrGuest_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.IsPrimaryPlayerXboxGuest
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicLogin_X::IsPrimaryPlayerXboxGuest()
{
	static UFunction* uFnIsPrimaryPlayerXboxGuest = nullptr;

	if (!uFnIsPrimaryPlayerXboxGuest)
	{
		uFnIsPrimaryPlayerXboxGuest = UFunction::FindFunction("Function ProjectX.EpicLogin_X.IsPrimaryPlayerXboxGuest");
	}

	UEpicLogin_X_execIsPrimaryPlayerXboxGuest_Params IsPrimaryPlayerXboxGuest_Params;

	this->ProcessEvent(uFnIsPrimaryPlayerXboxGuest, &IsPrimaryPlayerXboxGuest_Params, nullptr);

	return IsPrimaryPlayerXboxGuest_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.ConvertError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UEOS_ErrorResponse*      ErrorResponse                  (CPF_Const | CPF_Parm)

class UError* UEpicLogin_X::ConvertError(class UEOS_ErrorResponse* ErrorResponse)
{
	static UFunction* uFnConvertError = nullptr;

	if (!uFnConvertError)
	{
		uFnConvertError = UFunction::FindFunction("Function ProjectX.EpicLogin_X.ConvertError");
	}

	UEpicLogin_X_execConvertError_Params ConvertError_Params;
	memcpy_s(&ConvertError_Params.ErrorResponse, 0x8, &ErrorResponse, 0x8);

	this->ProcessEvent(uFnConvertError, &ConvertError_Params, nullptr);

	return ConvertError_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.ShowDOBScreen
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::ShowDOBScreen()
{
	static UFunction* uFnShowDOBScreen = nullptr;

	if (!uFnShowDOBScreen)
	{
		uFnShowDOBScreen = UFunction::FindFunction("Function ProjectX.EpicLogin_X.ShowDOBScreen");
	}

	UEpicLogin_X_execShowDOBScreen_Params ShowDOBScreen_Params;

	this->ProcessEvent(uFnShowDOBScreen, &ShowDOBScreen_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleRequestCabinedMode
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UCabinedModeResponse*    ResponseAsObject               (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UEpicLogin_X::HandleRequestCabinedMode(class UCabinedModeResponse* ResponseAsObject, class UError* Error)
{
	static UFunction* uFnHandleRequestCabinedMode = nullptr;

	if (!uFnHandleRequestCabinedMode)
	{
		uFnHandleRequestCabinedMode = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleRequestCabinedMode");
	}

	UEpicLogin_X_execHandleRequestCabinedMode_Params HandleRequestCabinedMode_Params;
	memcpy_s(&HandleRequestCabinedMode_Params.ResponseAsObject, 0x8, &ResponseAsObject, 0x8);
	memcpy_s(&HandleRequestCabinedMode_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleRequestCabinedMode, &HandleRequestCabinedMode_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.RequestCabinedMode
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicLogin_X::RequestCabinedMode()
{
	static UFunction* uFnRequestCabinedMode = nullptr;

	if (!uFnRequestCabinedMode)
	{
		uFnRequestCabinedMode = UFunction::FindFunction("Function ProjectX.EpicLogin_X.RequestCabinedMode");
	}

	UEpicLogin_X_execRequestCabinedMode_Params RequestCabinedMode_Params;

	this->ProcessEvent(uFnRequestCabinedMode, &RequestCabinedMode_Params, nullptr);

	return RequestCabinedMode_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.HandleRequestPinGrantTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::HandleRequestPinGrantTimeout()
{
	static UFunction* uFnHandleRequestPinGrantTimeout = nullptr;

	if (!uFnHandleRequestPinGrantTimeout)
	{
		uFnHandleRequestPinGrantTimeout = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleRequestPinGrantTimeout");
	}

	UEpicLogin_X_execHandleRequestPinGrantTimeout_Params HandleRequestPinGrantTimeout_Params;

	this->ProcessEvent(uFnHandleRequestPinGrantTimeout, &HandleRequestPinGrantTimeout_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleLoginTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::HandleLoginTimeout()
{
	static UFunction* uFnHandleLoginTimeout = nullptr;

	if (!uFnHandleLoginTimeout)
	{
		uFnHandleLoginTimeout = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleLoginTimeout");
	}

	UEpicLogin_X_execHandleLoginTimeout_Params HandleLoginTimeout_Params;

	this->ProcessEvent(uFnHandleLoginTimeout, &HandleLoginTimeout_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.ClearRequestPinGrantCallbacks
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::ClearRequestPinGrantCallbacks()
{
	static UFunction* uFnClearRequestPinGrantCallbacks = nullptr;

	if (!uFnClearRequestPinGrantCallbacks)
	{
		uFnClearRequestPinGrantCallbacks = UFunction::FindFunction("Function ProjectX.EpicLogin_X.ClearRequestPinGrantCallbacks");
	}

	UEpicLogin_X_execClearRequestPinGrantCallbacks_Params ClearRequestPinGrantCallbacks_Params;

	this->ProcessEvent(uFnClearRequestPinGrantCallbacks, &ClearRequestPinGrantCallbacks_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.ClearLoginCallbacks
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::ClearLoginCallbacks()
{
	static UFunction* uFnClearLoginCallbacks = nullptr;

	if (!uFnClearLoginCallbacks)
	{
		uFnClearLoginCallbacks = UFunction::FindFunction("Function ProjectX.EpicLogin_X.ClearLoginCallbacks");
	}

	UEpicLogin_X_execClearLoginCallbacks_Params ClearLoginCallbacks_Params;

	this->ProcessEvent(uFnClearLoginCallbacks, &ClearLoginCallbacks_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleReceivedPinGrantCode
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        Result                         (CPF_Parm)
// uint8_t                        InLocalPlayerNum               (CPF_Parm)
// class FString                  Code                           (CPF_Parm | CPF_NeedCtorLink)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        SecondsUntilExpiration         (CPF_Parm)

void UEpicLogin_X::HandleReceivedPinGrantCode(uint8_t Result, uint8_t InLocalPlayerNum, class FString Code, class FString URL, int32_t SecondsUntilExpiration)
{
	static UFunction* uFnHandleReceivedPinGrantCode = nullptr;

	if (!uFnHandleReceivedPinGrantCode)
	{
		uFnHandleReceivedPinGrantCode = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleReceivedPinGrantCode");
	}

	UEpicLogin_X_execHandleReceivedPinGrantCode_Params HandleReceivedPinGrantCode_Params;
	memcpy_s(&HandleReceivedPinGrantCode_Params.Result, 0x1, &Result, 0x1);
	memcpy_s(&HandleReceivedPinGrantCode_Params.InLocalPlayerNum, 0x1, &InLocalPlayerNum, 0x1);
	memcpy_s(&HandleReceivedPinGrantCode_Params.Code, 0x10, &Code, 0x10);
	memcpy_s(&HandleReceivedPinGrantCode_Params.URL, 0x10, &URL, 0x10);
	memcpy_s(&HandleReceivedPinGrantCode_Params.SecondsUntilExpiration, 0x4, &SecondsUntilExpiration, 0x4);

	this->ProcessEvent(uFnHandleReceivedPinGrantCode, &HandleReceivedPinGrantCode_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleCompletedPinGrant
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::HandleCompletedPinGrant()
{
	static UFunction* uFnHandleCompletedPinGrant = nullptr;

	if (!uFnHandleCompletedPinGrant)
	{
		uFnHandleCompletedPinGrant = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleCompletedPinGrant");
	}

	UEpicLogin_X_execHandleCompletedPinGrant_Params HandleCompletedPinGrant_Params;

	this->ProcessEvent(uFnHandleCompletedPinGrant, &HandleCompletedPinGrant_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.RequestPinGrantCode
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::RequestPinGrantCode()
{
	static UFunction* uFnRequestPinGrantCode = nullptr;

	if (!uFnRequestPinGrantCode)
	{
		uFnRequestPinGrantCode = UFunction::FindFunction("Function ProjectX.EpicLogin_X.RequestPinGrantCode");
	}

	UEpicLogin_X_execRequestPinGrantCode_Params RequestPinGrantCode_Params;

	this->ProcessEvent(uFnRequestPinGrantCode, &RequestPinGrantCode_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.RequestNintendoAccountAuthorization
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UEpicLogin_X::RequestNintendoAccountAuthorization(struct FScriptDelegate Callback)
{
	static UFunction* uFnRequestNintendoAccountAuthorization = nullptr;

	if (!uFnRequestNintendoAccountAuthorization)
	{
		uFnRequestNintendoAccountAuthorization = UFunction::FindFunction("Function ProjectX.EpicLogin_X.RequestNintendoAccountAuthorization");
	}

	UEpicLogin_X_execRequestNintendoAccountAuthorization_Params RequestNintendoAccountAuthorization_Params;
	memcpy_s(&RequestNintendoAccountAuthorization_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnRequestNintendoAccountAuthorization, &RequestNintendoAccountAuthorization_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.Login
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  PlatformAuthTicket             (CPF_Parm | CPF_NeedCtorLink)

bool UEpicLogin_X::Login(class FString PlatformAuthTicket)
{
	static UFunction* uFnLogin = nullptr;

	if (!uFnLogin)
	{
		uFnLogin = UFunction::FindFunction("Function ProjectX.EpicLogin_X.Login");
	}

	UEpicLogin_X_execLogin_Params Login_Params;
	memcpy_s(&Login_Params.PlatformAuthTicket, 0x10, &PlatformAuthTicket, 0x10);

	this->ProcessEvent(uFnLogin, &Login_Params, nullptr);

	return Login_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.NintendoAccountLogin
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::NintendoAccountLogin()
{
	static UFunction* uFnNintendoAccountLogin = nullptr;

	if (!uFnNintendoAccountLogin)
	{
		uFnNintendoAccountLogin = UFunction::FindFunction("Function ProjectX.EpicLogin_X.NintendoAccountLogin");
	}

	UEpicLogin_X_execNintendoAccountLogin_Params NintendoAccountLogin_Params;

	this->ProcessEvent(uFnNintendoAccountLogin, &NintendoAccountLogin_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleEpicAccountCreated
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::HandleEpicAccountCreated()
{
	static UFunction* uFnHandleEpicAccountCreated = nullptr;

	if (!uFnHandleEpicAccountCreated)
	{
		uFnHandleEpicAccountCreated = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleEpicAccountCreated");
	}

	UEpicLogin_X_execHandleEpicAccountCreated_Params HandleEpicAccountCreated_Params;

	this->ProcessEvent(uFnHandleEpicAccountCreated, &HandleEpicAccountCreated_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.CreateEpicGamesAccount
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::CreateEpicGamesAccount()
{
	static UFunction* uFnCreateEpicGamesAccount = nullptr;

	if (!uFnCreateEpicGamesAccount)
	{
		uFnCreateEpicGamesAccount = UFunction::FindFunction("Function ProjectX.EpicLogin_X.CreateEpicGamesAccount");
	}

	UEpicLogin_X_execCreateEpicGamesAccount_Params CreateEpicGamesAccount_Params;

	this->ProcessEvent(uFnCreateEpicGamesAccount, &CreateEpicGamesAccount_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.UpdateTwoFactorAuthenticationStatus
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UEpicLogin_X::UpdateTwoFactorAuthenticationStatus(struct FScriptDelegate Callback)
{
	static UFunction* uFnUpdateTwoFactorAuthenticationStatus = nullptr;

	if (!uFnUpdateTwoFactorAuthenticationStatus)
	{
		uFnUpdateTwoFactorAuthenticationStatus = UFunction::FindFunction("Function ProjectX.EpicLogin_X.UpdateTwoFactorAuthenticationStatus");
	}

	UEpicLogin_X_execUpdateTwoFactorAuthenticationStatus_Params UpdateTwoFactorAuthenticationStatus_Params;
	memcpy_s(&UpdateTwoFactorAuthenticationStatus_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnUpdateTwoFactorAuthenticationStatus, &UpdateTwoFactorAuthenticationStatus_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.RetryAuth
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::RetryAuth()
{
	static UFunction* uFnRetryAuth = nullptr;

	if (!uFnRetryAuth)
	{
		uFnRetryAuth = UFunction::FindFunction("Function ProjectX.EpicLogin_X.RetryAuth");
	}

	UEpicLogin_X_execRetryAuth_Params RetryAuth_Params;

	this->ProcessEvent(uFnRetryAuth, &RetryAuth_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleConnectionStatusChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bConnected                     (CPF_Parm)

void UEpicLogin_X::HandleConnectionStatusChanged(unsigned long bConnected)
{
	static UFunction* uFnHandleConnectionStatusChanged = nullptr;

	if (!uFnHandleConnectionStatusChanged)
	{
		uFnHandleConnectionStatusChanged = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleConnectionStatusChanged");
	}

	UEpicLogin_X_execHandleConnectionStatusChanged_Params HandleConnectionStatusChanged_Params;
	HandleConnectionStatusChanged_Params.bConnected = bConnected;

	this->ProcessEvent(uFnHandleConnectionStatusChanged, &HandleConnectionStatusChanged_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleKickedByEpic
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::HandleKickedByEpic()
{
	static UFunction* uFnHandleKickedByEpic = nullptr;

	if (!uFnHandleKickedByEpic)
	{
		uFnHandleKickedByEpic = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleKickedByEpic");
	}

	UEpicLogin_X_execHandleKickedByEpic_Params HandleKickedByEpic_Params;

	this->ProcessEvent(uFnHandleKickedByEpic, &HandleKickedByEpic_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleAuthTicketExpired
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::HandleAuthTicketExpired()
{
	static UFunction* uFnHandleAuthTicketExpired = nullptr;

	if (!uFnHandleAuthTicketExpired)
	{
		uFnHandleAuthTicketExpired = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleAuthTicketExpired");
	}

	UEpicLogin_X_execHandleAuthTicketExpired_Params HandleAuthTicketExpired_Params;

	this->ProcessEvent(uFnHandleAuthTicketExpired, &HandleAuthTicketExpired_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleUnderageUserDetected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        InLocalPlayerNum               (CPF_Parm)
// class FString                  InParentalConsentURL           (CPF_Parm | CPF_NeedCtorLink)

void UEpicLogin_X::HandleUnderageUserDetected(uint8_t InLocalPlayerNum, class FString InParentalConsentURL)
{
	static UFunction* uFnHandleUnderageUserDetected = nullptr;

	if (!uFnHandleUnderageUserDetected)
	{
		uFnHandleUnderageUserDetected = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleUnderageUserDetected");
	}

	UEpicLogin_X_execHandleUnderageUserDetected_Params HandleUnderageUserDetected_Params;
	memcpy_s(&HandleUnderageUserDetected_Params.InLocalPlayerNum, 0x1, &InLocalPlayerNum, 0x1);
	memcpy_s(&HandleUnderageUserDetected_Params.InParentalConsentURL, 0x10, &InParentalConsentURL, 0x10);

	this->ProcessEvent(uFnHandleUnderageUserDetected, &HandleUnderageUserDetected_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleLoginResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UEpicLogin_X::HandleLoginResult(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnHandleLoginResult = nullptr;

	if (!uFnHandleLoginResult)
	{
		uFnHandleLoginResult = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleLoginResult");
	}

	UEpicLogin_X_execHandleLoginResult_Params HandleLoginResult_Params;
	memcpy_s(&HandleLoginResult_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnHandleLoginResult, &HandleLoginResult_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleLoginFailed
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// uint8_t                        InLocalPlayerNum               (CPF_Parm)
// uint8_t                        Error                          (CPF_Parm)

void UEpicLogin_X::HandleLoginFailed(uint8_t InLocalPlayerNum, uint8_t Error)
{
	static UFunction* uFnHandleLoginFailed = nullptr;

	if (!uFnHandleLoginFailed)
	{
		uFnHandleLoginFailed = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleLoginFailed");
	}

	UEpicLogin_X_execHandleLoginFailed_Params HandleLoginFailed_Params;
	memcpy_s(&HandleLoginFailed_Params.InLocalPlayerNum, 0x1, &InLocalPlayerNum, 0x1);
	memcpy_s(&HandleLoginFailed_Params.Error, 0x1, &Error, 0x1);

	this->ProcessEvent(uFnHandleLoginFailed, &HandleLoginFailed_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.UpdateAgeGateModalScreen
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::UpdateAgeGateModalScreen()
{
	static UFunction* uFnUpdateAgeGateModalScreen = nullptr;

	if (!uFnUpdateAgeGateModalScreen)
	{
		uFnUpdateAgeGateModalScreen = UFunction::FindFunction("Function ProjectX.EpicLogin_X.UpdateAgeGateModalScreen");
	}

	UEpicLogin_X_execUpdateAgeGateModalScreen_Params UpdateAgeGateModalScreen_Params;

	this->ProcessEvent(uFnUpdateAgeGateModalScreen, &UpdateAgeGateModalScreen_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleLoginChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        InLocalPlayerNum               (CPF_Parm)

void UEpicLogin_X::HandleLoginChanged(uint8_t InLocalPlayerNum)
{
	static UFunction* uFnHandleLoginChanged = nullptr;

	if (!uFnHandleLoginChanged)
	{
		uFnHandleLoginChanged = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleLoginChanged");
	}

	UEpicLogin_X_execHandleLoginChanged_Params HandleLoginChanged_Params;
	memcpy_s(&HandleLoginChanged_Params.InLocalPlayerNum, 0x1, &InLocalPlayerNum, 0x1);

	this->ProcessEvent(uFnHandleLoginChanged, &HandleLoginChanged_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.ClearLoginError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::ClearLoginError()
{
	static UFunction* uFnClearLoginError = nullptr;

	if (!uFnClearLoginError)
	{
		uFnClearLoginError = UFunction::FindFunction("Function ProjectX.EpicLogin_X.ClearLoginError");
	}

	UEpicLogin_X_execClearLoginError_Params ClearLoginError_Params;

	this->ProcessEvent(uFnClearLoginError, &ClearLoginError_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.SetLoginError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UErrorType*              Error                          (CPF_Parm)

void UEpicLogin_X::SetLoginError(class UErrorType* Error)
{
	static UFunction* uFnSetLoginError = nullptr;

	if (!uFnSetLoginError)
	{
		uFnSetLoginError = UFunction::FindFunction("Function ProjectX.EpicLogin_X.SetLoginError");
	}

	UEpicLogin_X_execSetLoginError_Params SetLoginError_Params;
	memcpy_s(&SetLoginError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnSetLoginError, &SetLoginError_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.TriggerAuthTicketDelegate
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UEpicLogin_X::TriggerAuthTicketDelegate(struct FScriptDelegate Callback)
{
	static UFunction* uFnTriggerAuthTicketDelegate = nullptr;

	if (!uFnTriggerAuthTicketDelegate)
	{
		uFnTriggerAuthTicketDelegate = UFunction::FindFunction("Function ProjectX.EpicLogin_X.TriggerAuthTicketDelegate");
	}

	UEpicLogin_X_execTriggerAuthTicketDelegate_Params TriggerAuthTicketDelegate_Params;
	memcpy_s(&TriggerAuthTicketDelegate_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnTriggerAuthTicketDelegate, &TriggerAuthTicketDelegate_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.ClearReceivedAuthTicketDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UEpicLogin_X::ClearReceivedAuthTicketDelegate(struct FScriptDelegate Callback)
{
	static UFunction* uFnClearReceivedAuthTicketDelegate = nullptr;

	if (!uFnClearReceivedAuthTicketDelegate)
	{
		uFnClearReceivedAuthTicketDelegate = UFunction::FindFunction("Function ProjectX.EpicLogin_X.ClearReceivedAuthTicketDelegate");
	}

	UEpicLogin_X_execClearReceivedAuthTicketDelegate_Params ClearReceivedAuthTicketDelegate_Params;
	memcpy_s(&ClearReceivedAuthTicketDelegate_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnClearReceivedAuthTicketDelegate, &ClearReceivedAuthTicketDelegate_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.RequestEpicAuthTicket
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

bool UEpicLogin_X::RequestEpicAuthTicket(struct FScriptDelegate Callback)
{
	static UFunction* uFnRequestEpicAuthTicket = nullptr;

	if (!uFnRequestEpicAuthTicket)
	{
		uFnRequestEpicAuthTicket = UFunction::FindFunction("Function ProjectX.EpicLogin_X.RequestEpicAuthTicket");
	}

	UEpicLogin_X_execRequestEpicAuthTicket_Params RequestEpicAuthTicket_Params;
	memcpy_s(&RequestEpicAuthTicket_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnRequestEpicAuthTicket, &RequestEpicAuthTicket_Params, nullptr);

	return RequestEpicAuthTicket_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.RequiresEpicAuthTicket
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicLogin_X::RequiresEpicAuthTicket()
{
	static UFunction* uFnRequiresEpicAuthTicket = nullptr;

	if (!uFnRequiresEpicAuthTicket)
	{
		uFnRequiresEpicAuthTicket = UFunction::FindFunction("Function ProjectX.EpicLogin_X.RequiresEpicAuthTicket");
	}

	UEpicLogin_X_execRequiresEpicAuthTicket_Params RequiresEpicAuthTicket_Params;

	this->ProcessEvent(uFnRequiresEpicAuthTicket, &RequiresEpicAuthTicket_Params, nullptr);

	return RequiresEpicAuthTicket_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.IsLoggedIn
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEpicLogin_X::IsLoggedIn()
{
	static UFunction* uFnIsLoggedIn = nullptr;

	if (!uFnIsLoggedIn)
	{
		uFnIsLoggedIn = UFunction::FindFunction("Function ProjectX.EpicLogin_X.IsLoggedIn");
	}

	UEpicLogin_X_execIsLoggedIn_Params IsLoggedIn_Params;

	this->ProcessEvent(uFnIsLoggedIn, &IsLoggedIn_Params, nullptr);

	return IsLoggedIn_Params.ReturnValue;
};

// Function ProjectX.EpicLogin_X.UnsubscribeFromInitialized
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UEpicLogin_X::UnsubscribeFromInitialized(struct FScriptDelegate Callback)
{
	static UFunction* uFnUnsubscribeFromInitialized = nullptr;

	if (!uFnUnsubscribeFromInitialized)
	{
		uFnUnsubscribeFromInitialized = UFunction::FindFunction("Function ProjectX.EpicLogin_X.UnsubscribeFromInitialized");
	}

	UEpicLogin_X_execUnsubscribeFromInitialized_Params UnsubscribeFromInitialized_Params;
	memcpy_s(&UnsubscribeFromInitialized_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnUnsubscribeFromInitialized, &UnsubscribeFromInitialized_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.NotifyWhenInitialized
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UEpicLogin_X::NotifyWhenInitialized(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyWhenInitialized = nullptr;

	if (!uFnNotifyWhenInitialized)
	{
		uFnNotifyWhenInitialized = UFunction::FindFunction("Function ProjectX.EpicLogin_X.NotifyWhenInitialized");
	}

	UEpicLogin_X_execNotifyWhenInitialized_Params NotifyWhenInitialized_Params;
	memcpy_s(&NotifyWhenInitialized_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyWhenInitialized, &NotifyWhenInitialized_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.OnRemoved
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::OnRemoved()
{
	static UFunction* uFnOnRemoved = nullptr;

	if (!uFnOnRemoved)
	{
		uFnOnRemoved = UFunction::FindFunction("Function ProjectX.EpicLogin_X.OnRemoved");
	}

	UEpicLogin_X_execOnRemoved_Params OnRemoved_Params;

	this->ProcessEvent(uFnOnRemoved, &OnRemoved_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleEOSInitialized
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::HandleEOSInitialized()
{
	static UFunction* uFnHandleEOSInitialized = nullptr;

	if (!uFnHandleEOSInitialized)
	{
		uFnHandleEOSInitialized = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleEOSInitialized");
	}

	UEpicLogin_X_execHandleEOSInitialized_Params HandleEOSInitialized_Params;

	this->ProcessEvent(uFnHandleEOSInitialized, &HandleEOSInitialized_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandleEpicConfigSet
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::HandleEpicConfigSet()
{
	static UFunction* uFnHandleEpicConfigSet = nullptr;

	if (!uFnHandleEpicConfigSet)
	{
		uFnHandleEpicConfigSet = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandleEpicConfigSet");
	}

	UEpicLogin_X_execHandleEpicConfigSet_Params HandleEpicConfigSet_Params;

	this->ProcessEvent(uFnHandleEpicConfigSet, &HandleEpicConfigSet_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.HandlePlatformAuthTicketFailedChanged_Switch
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bNewValue                      (CPF_Parm)

void UEpicLogin_X::HandlePlatformAuthTicketFailedChanged_Switch(unsigned long bNewValue)
{
	static UFunction* uFnHandlePlatformAuthTicketFailedChanged_Switch = nullptr;

	if (!uFnHandlePlatformAuthTicketFailedChanged_Switch)
	{
		uFnHandlePlatformAuthTicketFailedChanged_Switch = UFunction::FindFunction("Function ProjectX.EpicLogin_X.HandlePlatformAuthTicketFailedChanged_Switch");
	}

	UEpicLogin_X_execHandlePlatformAuthTicketFailedChanged_Switch_Params HandlePlatformAuthTicketFailedChanged_Switch_Params;
	HandlePlatformAuthTicketFailedChanged_Switch_Params.bNewValue = bNewValue;

	this->ProcessEvent(uFnHandlePlatformAuthTicketFailedChanged_Switch, &HandlePlatformAuthTicketFailedChanged_Switch_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.NotifyWhenLoggedIn
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UEpicLogin_X::NotifyWhenLoggedIn(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyWhenLoggedIn = nullptr;

	if (!uFnNotifyWhenLoggedIn)
	{
		uFnNotifyWhenLoggedIn = UFunction::FindFunction("Function ProjectX.EpicLogin_X.NotifyWhenLoggedIn");
	}

	UEpicLogin_X_execNotifyWhenLoggedIn_Params NotifyWhenLoggedIn_Params;
	memcpy_s(&NotifyWhenLoggedIn_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyWhenLoggedIn, &NotifyWhenLoggedIn_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.EpicLogin_X.Construct");
	}

	UEpicLogin_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.EventCreatedEpicGamesAccount
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::EventCreatedEpicGamesAccount()
{
	static UFunction* uFnEventCreatedEpicGamesAccount = nullptr;

	if (!uFnEventCreatedEpicGamesAccount)
	{
		uFnEventCreatedEpicGamesAccount = UFunction::FindFunction("Function ProjectX.EpicLogin_X.EventCreatedEpicGamesAccount");
	}

	UEpicLogin_X_execEventCreatedEpicGamesAccount_Params EventCreatedEpicGamesAccount_Params;

	this->ProcessEvent(uFnEventCreatedEpicGamesAccount, &EventCreatedEpicGamesAccount_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.EventInitialized
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::EventInitialized()
{
	static UFunction* uFnEventInitialized = nullptr;

	if (!uFnEventInitialized)
	{
		uFnEventInitialized = UFunction::FindFunction("Function ProjectX.EpicLogin_X.EventInitialized");
	}

	UEpicLogin_X_execEventInitialized_Params EventInitialized_Params;

	this->ProcessEvent(uFnEventInitialized, &EventInitialized_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.EventReceivedEpicAuthTicket
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  AuthTicket                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  AccountId                      (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UEpicLogin_X::EventReceivedEpicAuthTicket(class FString AuthTicket, class FString AccountId, class UError* Error)
{
	static UFunction* uFnEventReceivedEpicAuthTicket = nullptr;

	if (!uFnEventReceivedEpicAuthTicket)
	{
		uFnEventReceivedEpicAuthTicket = UFunction::FindFunction("Function ProjectX.EpicLogin_X.EventReceivedEpicAuthTicket");
	}

	UEpicLogin_X_execEventReceivedEpicAuthTicket_Params EventReceivedEpicAuthTicket_Params;
	memcpy_s(&EventReceivedEpicAuthTicket_Params.AuthTicket, 0x10, &AuthTicket, 0x10);
	memcpy_s(&EventReceivedEpicAuthTicket_Params.AccountId, 0x10, &AccountId, 0x10);
	memcpy_s(&EventReceivedEpicAuthTicket_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventReceivedEpicAuthTicket, &EventReceivedEpicAuthTicket_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.EventLoginError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UEpicLogin_X*            EpicLogin                      (CPF_Parm)
// class UErrorType*              Error                          (CPF_Parm)

void UEpicLogin_X::EventLoginError(class UEpicLogin_X* EpicLogin, class UErrorType* Error)
{
	static UFunction* uFnEventLoginError = nullptr;

	if (!uFnEventLoginError)
	{
		uFnEventLoginError = UFunction::FindFunction("Function ProjectX.EpicLogin_X.EventLoginError");
	}

	UEpicLogin_X_execEventLoginError_Params EventLoginError_Params;
	memcpy_s(&EventLoginError_Params.EpicLogin, 0x8, &EpicLogin, 0x8);
	memcpy_s(&EventLoginError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventLoginError, &EventLoginError_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.EventReceivedPinGrantCode
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::EventReceivedPinGrantCode()
{
	static UFunction* uFnEventReceivedPinGrantCode = nullptr;

	if (!uFnEventReceivedPinGrantCode)
	{
		uFnEventReceivedPinGrantCode = UFunction::FindFunction("Function ProjectX.EpicLogin_X.EventReceivedPinGrantCode");
	}

	UEpicLogin_X_execEventReceivedPinGrantCode_Params EventReceivedPinGrantCode_Params;

	this->ProcessEvent(uFnEventReceivedPinGrantCode, &EventReceivedPinGrantCode_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.EventLoginFailed
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::EventLoginFailed()
{
	static UFunction* uFnEventLoginFailed = nullptr;

	if (!uFnEventLoginFailed)
	{
		uFnEventLoginFailed = UFunction::FindFunction("Function ProjectX.EpicLogin_X.EventLoginFailed");
	}

	UEpicLogin_X_execEventLoginFailed_Params EventLoginFailed_Params;

	this->ProcessEvent(uFnEventLoginFailed, &EventLoginFailed_Params, nullptr);
};

// Function ProjectX.EpicLogin_X.EventLoginSucceeded
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UEpicLogin_X::EventLoginSucceeded()
{
	static UFunction* uFnEventLoginSucceeded = nullptr;

	if (!uFnEventLoginSucceeded)
	{
		uFnEventLoginSucceeded = UFunction::FindFunction("Function ProjectX.EpicLogin_X.EventLoginSucceeded");
	}

	UEpicLogin_X_execEventLoginSucceeded_Params EventLoginSucceeded_Params;

	this->ProcessEvent(uFnEventLoginSucceeded, &EventLoginSucceeded_Params, nullptr);
};

// Function ProjectX.EpochTimers_X.IsActive
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

bool UEpochTimers_X::IsActive(struct FScriptDelegate Callback)
{
	static UFunction* uFnIsActive = nullptr;

	if (!uFnIsActive)
	{
		uFnIsActive = UFunction::FindFunction("Function ProjectX.EpochTimers_X.IsActive");
	}

	UEpochTimers_X_execIsActive_Params IsActive_Params;
	memcpy_s(&IsActive_Params.Callback, 0x18, &Callback, 0x18);

	uFnIsActive->FunctionFlags |= ~0x400;

	UEpochTimers_X::StaticClass()->ProcessEvent(uFnIsActive, &IsActive_Params, nullptr);

	uFnIsActive->FunctionFlags |= 0x400;

	return IsActive_Params.ReturnValue;
};

// Function ProjectX.EpochTimers_X.ClearAll
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Obj                            (CPF_Parm)

void UEpochTimers_X::ClearAll(class UObject* Obj)
{
	static UFunction* uFnClearAll = nullptr;

	if (!uFnClearAll)
	{
		uFnClearAll = UFunction::FindFunction("Function ProjectX.EpochTimers_X.ClearAll");
	}

	UEpochTimers_X_execClearAll_Params ClearAll_Params;
	memcpy_s(&ClearAll_Params.Obj, 0x8, &Obj, 0x8);

	uFnClearAll->FunctionFlags |= ~0x400;

	UEpochTimers_X::StaticClass()->ProcessEvent(uFnClearAll, &ClearAll_Params, nullptr);

	uFnClearAll->FunctionFlags |= 0x400;
};

// Function ProjectX.EpochTimers_X.Clear
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback2                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UEpochTimers_X::Clear(struct FScriptDelegate Callback, struct FScriptDelegate Callback2)
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function ProjectX.EpochTimers_X.Clear");
	}

	UEpochTimers_X_execClear_Params Clear_Params;
	memcpy_s(&Clear_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&Clear_Params.Callback2, 0x18, &Callback2, 0x18);

	uFnClear->FunctionFlags |= ~0x400;

	UEpochTimers_X::StaticClass()->ProcessEvent(uFnClear, &Clear_Params, nullptr);

	uFnClear->FunctionFlags |= 0x400;
};

// Function ProjectX.EpochTimers_X.SetWindow
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         StartCallback                  (CPF_Parm | CPF_NeedCtorLink)
// uint64_t                       EpochStartTime                 (CPF_Parm)
// struct FScriptDelegate         EndCallback                    (CPF_Parm | CPF_NeedCtorLink)
// uint64_t                       EpochEndTime                   (CPF_Parm)

void UEpochTimers_X::SetWindow(struct FScriptDelegate StartCallback, uint64_t EpochStartTime, struct FScriptDelegate EndCallback, uint64_t EpochEndTime)
{
	static UFunction* uFnSetWindow = nullptr;

	if (!uFnSetWindow)
	{
		uFnSetWindow = UFunction::FindFunction("Function ProjectX.EpochTimers_X.SetWindow");
	}

	UEpochTimers_X_execSetWindow_Params SetWindow_Params;
	memcpy_s(&SetWindow_Params.StartCallback, 0x18, &StartCallback, 0x18);
	SetWindow_Params.EpochStartTime = EpochStartTime;
	memcpy_s(&SetWindow_Params.EndCallback, 0x18, &EndCallback, 0x18);
	SetWindow_Params.EpochEndTime = EpochEndTime;

	uFnSetWindow->FunctionFlags |= ~0x400;

	UEpochTimers_X::StaticClass()->ProcessEvent(uFnSetWindow, &SetWindow_Params, nullptr);

	uFnSetWindow->FunctionFlags |= 0x400;
};

// Function ProjectX.EpochTimers_X.SetTime
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// uint64_t                       EpochTime                      (CPF_Parm)

void UEpochTimers_X::SetTime(struct FScriptDelegate Callback, uint64_t EpochTime)
{
	static UFunction* uFnSetTime = nullptr;

	if (!uFnSetTime)
	{
		uFnSetTime = UFunction::FindFunction("Function ProjectX.EpochTimers_X.SetTime");
	}

	UEpochTimers_X_execSetTime_Params SetTime_Params;
	memcpy_s(&SetTime_Params.Callback, 0x18, &Callback, 0x18);
	SetTime_Params.EpochTime = EpochTime;

	uFnSetTime->FunctionFlags |= ~0x400;

	UEpochTimers_X::StaticClass()->ProcessEvent(uFnSetTime, &SetTime_Params, nullptr);

	uFnSetTime->FunctionFlags |= 0x400;
};

// Function ProjectX.EpochTimers_X.Set
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// uint64_t                       DelaySeconds                   (CPF_Parm)

void UEpochTimers_X::Set(struct FScriptDelegate Callback, uint64_t DelaySeconds)
{
	static UFunction* uFnSet = nullptr;

	if (!uFnSet)
	{
		uFnSet = UFunction::FindFunction("Function ProjectX.EpochTimers_X.Set");
	}

	UEpochTimers_X_execSet_Params Set_Params;
	memcpy_s(&Set_Params.Callback, 0x18, &Callback, 0x18);
	Set_Params.DelaySeconds = DelaySeconds;

	uFnSet->FunctionFlags |= ~0x400;

	UEpochTimers_X::StaticClass()->ProcessEvent(uFnSet, &Set_Params, nullptr);

	uFnSet->FunctionFlags |= 0x400;
};

// Function ProjectX.Errors_X.DisplayPlatformError
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UErrorType*              InErrorType                    (CPF_Parm)

bool UErrors_X::DisplayPlatformError(class UErrorType* InErrorType)
{
	static UFunction* uFnDisplayPlatformError = nullptr;

	if (!uFnDisplayPlatformError)
	{
		uFnDisplayPlatformError = UFunction::FindFunction("Function ProjectX.Errors_X.DisplayPlatformError");
	}

	UErrors_X_execDisplayPlatformError_Params DisplayPlatformError_Params;
	memcpy_s(&DisplayPlatformError_Params.InErrorType, 0x8, &InErrorType, 0x8);

	uFnDisplayPlatformError->FunctionFlags |= ~0x400;

	UErrors_X::StaticClass()->ProcessEvent(uFnDisplayPlatformError, &DisplayPlatformError_Params, nullptr);

	uFnDisplayPlatformError->FunctionFlags |= 0x400;

	return DisplayPlatformError_Params.ReturnValue;
};

// Function ProjectX.EventRecorder_X.MetricsNotSent
// [0x00080803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        Count                          (CPF_Parm)

void UEventRecorder_X::eventMetricsNotSent(int32_t Count)
{
	static UFunction* uFnMetricsNotSent = nullptr;

	if (!uFnMetricsNotSent)
	{
		uFnMetricsNotSent = UFunction::FindFunction("Function ProjectX.EventRecorder_X.MetricsNotSent");
	}

	UEventRecorder_X_eventMetricsNotSent_Params MetricsNotSent_Params;
	memcpy_s(&MetricsNotSent_Params.Count, 0x4, &Count, 0x4);

	this->ProcessEvent(uFnMetricsNotSent, &MetricsNotSent_Params, nullptr);
};

// Function ProjectX.EventRecorder_X.MetricsFlood
// [0x00080803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  LastEventName                  (CPF_Parm | CPF_NeedCtorLink)

void UEventRecorder_X::eventMetricsFlood(class FString LastEventName)
{
	static UFunction* uFnMetricsFlood = nullptr;

	if (!uFnMetricsFlood)
	{
		uFnMetricsFlood = UFunction::FindFunction("Function ProjectX.EventRecorder_X.MetricsFlood");
	}

	UEventRecorder_X_eventMetricsFlood_Params MetricsFlood_Params;
	memcpy_s(&MetricsFlood_Params.LastEventName, 0x10, &LastEventName, 0x10);

	this->ProcessEvent(uFnMetricsFlood, &MetricsFlood_Params, nullptr);
};

// Function ProjectX.EventRecorder_X.SetLevelSessionID
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FGuid                   Id                             (CPF_Parm)

void UEventRecorder_X::SetLevelSessionID(struct FGuid Id)
{
	static UFunction* uFnSetLevelSessionID = nullptr;

	if (!uFnSetLevelSessionID)
	{
		uFnSetLevelSessionID = UFunction::FindFunction("Function ProjectX.EventRecorder_X.SetLevelSessionID");
	}

	UEventRecorder_X_execSetLevelSessionID_Params SetLevelSessionID_Params;
	memcpy_s(&SetLevelSessionID_Params.Id, 0x10, &Id, 0x10);

	uFnSetLevelSessionID->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetLevelSessionID, &SetLevelSessionID_Params, nullptr);

	uFnSetLevelSessionID->FunctionFlags |= 0x400;
};

// Function ProjectX.EventRecorder_X.Send
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UEventRecorder_X::Send()
{
	static UFunction* uFnSend = nullptr;

	if (!uFnSend)
	{
		uFnSend = UFunction::FindFunction("Function ProjectX.EventRecorder_X.Send");
	}

	UEventRecorder_X_execSend_Params Send_Params;

	uFnSend->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSend, &Send_Params, nullptr);

	uFnSend->FunctionFlags |= 0x400;

	return Send_Params.ReturnValue;
};

// Function ProjectX.EventRecorder_X.RecordEvent
// [0x00424400] (FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Category                       (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   Event                          (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Version                        (CPF_OptionalParm | CPF_Parm)
// class FString                  Data                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UEventRecorder_X::RecordEvent(class FString Category, struct FName Event, struct FUniqueNetId PlayerID, int32_t Version, class FString& Data)
{
	static UFunction* uFnRecordEvent = nullptr;

	if (!uFnRecordEvent)
	{
		uFnRecordEvent = UFunction::FindFunction("Function ProjectX.EventRecorder_X.RecordEvent");
	}

	UEventRecorder_X_execRecordEvent_Params RecordEvent_Params;
	memcpy_s(&RecordEvent_Params.Category, 0x10, &Category, 0x10);
	memcpy_s(&RecordEvent_Params.Event, 0x8, &Event, 0x8);
	memcpy_s(&RecordEvent_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&RecordEvent_Params.Version, 0x4, &Version, 0x4);
	memcpy_s(&RecordEvent_Params.Data, 0x10, &Data, 0x10);

	uFnRecordEvent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRecordEvent, &RecordEvent_Params, nullptr);

	uFnRecordEvent->FunctionFlags |= 0x400;

	memcpy_s(&Data, 0x10, &RecordEvent_Params.Data, 0x10);
};

// Function ProjectX.EventRecorder_X.RecordFunction
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Category                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Version                        (CPF_Parm)

void UEventRecorder_X::RecordFunction(class FString Category, int32_t Version)
{
	static UFunction* uFnRecordFunction = nullptr;

	if (!uFnRecordFunction)
	{
		uFnRecordFunction = UFunction::FindFunction("Function ProjectX.EventRecorder_X.RecordFunction");
	}

	UEventRecorder_X_execRecordFunction_Params RecordFunction_Params;
	memcpy_s(&RecordFunction_Params.Category, 0x10, &Category, 0x10);
	memcpy_s(&RecordFunction_Params.Version, 0x4, &Version, 0x4);

	uFnRecordFunction->FunctionFlags |= ~0x400;

	UEventRecorder_X::StaticClass()->ProcessEvent(uFnRecordFunction, &RecordFunction_Params, nullptr);

	uFnRecordFunction->FunctionFlags |= 0x400;
};

// Function ProjectX.MetricsSystem_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UMetricsSystem_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.MetricsSystem_X.Construct");
	}

	UMetricsSystem_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.MetricsSystem_X.HandleUnpause
// [0x200042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UNetMode_Networked*      NetMode                        (CPF_Parm)
// class UMetricsSystem_X*        Metrics                        (CPF_Parm | CPF_EditInline)
// class UPauseMetricsState_X*    State                          (CPF_Parm)

void UMetricsSystem_X::HandleUnpause(class UNetMode_Networked* NetMode, class UMetricsSystem_X* Metrics, class UPauseMetricsState_X* State)
{
	static UFunction* uFnHandleUnpause = nullptr;

	if (!uFnHandleUnpause)
	{
		uFnHandleUnpause = UFunction::FindFunction("Function ProjectX.MetricsSystem_X.HandleUnpause");
	}

	UMetricsSystem_X_execHandleUnpause_Params HandleUnpause_Params;
	memcpy_s(&HandleUnpause_Params.NetMode, 0x8, &NetMode, 0x8);
	memcpy_s(&HandleUnpause_Params.Metrics, 0x8, &Metrics, 0x8);
	memcpy_s(&HandleUnpause_Params.State, 0x8, &State, 0x8);

	UMetricsSystem_X::StaticClass()->ProcessEvent(uFnHandleUnpause, &HandleUnpause_Params, nullptr);
};

// Function ProjectX.MetricsSystem_X.HandlePause
// [0x100042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UNetMode_Networked*      NetMode                        (CPF_Parm)
// class UMetricsSystem_X*        Metrics                        (CPF_Parm | CPF_EditInline)
// class UPauseMetricsState_X*    State                          (CPF_Parm)

void UMetricsSystem_X::HandlePause(class UNetMode_Networked* NetMode, class UMetricsSystem_X* Metrics, class UPauseMetricsState_X* State)
{
	static UFunction* uFnHandlePause = nullptr;

	if (!uFnHandlePause)
	{
		uFnHandlePause = UFunction::FindFunction("Function ProjectX.MetricsSystem_X.HandlePause");
	}

	UMetricsSystem_X_execHandlePause_Params HandlePause_Params;
	memcpy_s(&HandlePause_Params.NetMode, 0x8, &NetMode, 0x8);
	memcpy_s(&HandlePause_Params.Metrics, 0x8, &Metrics, 0x8);
	memcpy_s(&HandlePause_Params.State, 0x8, &State, 0x8);

	UMetricsSystem_X::StaticClass()->ProcessEvent(uFnHandlePause, &HandlePause_Params, nullptr);
};

// Function ProjectX.EventRecorderGroup_X.VectorToString
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FVector                 V                              (CPF_Parm)

class FString UEventRecorderGroup_X::VectorToString(struct FVector V)
{
	static UFunction* uFnVectorToString = nullptr;

	if (!uFnVectorToString)
	{
		uFnVectorToString = UFunction::FindFunction("Function ProjectX.EventRecorderGroup_X.VectorToString");
	}

	UEventRecorderGroup_X_execVectorToString_Params VectorToString_Params;
	memcpy_s(&VectorToString_Params.V, 0xC, &V, 0xC);

	this->ProcessEvent(uFnVectorToString, &VectorToString_Params, nullptr);

	return VectorToString_Params.ReturnValue;
};

// Function ProjectX.EventRecorderGroup_X.RecordFunction
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        Version                        (CPF_OptionalParm | CPF_Parm)

void UEventRecorderGroup_X::RecordFunction(int32_t Version)
{
	static UFunction* uFnRecordFunction = nullptr;

	if (!uFnRecordFunction)
	{
		uFnRecordFunction = UFunction::FindFunction("Function ProjectX.EventRecorderGroup_X.RecordFunction");
	}

	UEventRecorderGroup_X_execRecordFunction_Params RecordFunction_Params;
	memcpy_s(&RecordFunction_Params.Version, 0x4, &Version, 0x4);

	uFnRecordFunction->FunctionFlags |= ~0x400;

	UEventRecorderGroup_X::StaticClass()->ProcessEvent(uFnRecordFunction, &RecordFunction_Params, nullptr);

	uFnRecordFunction->FunctionFlags |= 0x400;
};

// Function ProjectX.EventRecorderGroup_X.GetEventRecorder
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEventRecorder_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UEventRecorder_X* UEventRecorderGroup_X::GetEventRecorder()
{
	static UFunction* uFnGetEventRecorder = nullptr;

	if (!uFnGetEventRecorder)
	{
		uFnGetEventRecorder = UFunction::FindFunction("Function ProjectX.EventRecorderGroup_X.GetEventRecorder");
	}

	UEventRecorderGroup_X_execGetEventRecorder_Params GetEventRecorder_Params;

	uFnGetEventRecorder->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetEventRecorder, &GetEventRecorder_Params, nullptr);

	uFnGetEventRecorder->FunctionFlags |= 0x400;

	return GetEventRecorder_Params.ReturnValue;
};

// Function ProjectX.MetricsGroup_X.GetEventRecorder
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UEventRecorder_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UEventRecorder_X* UMetricsGroup_X::GetEventRecorder()
{
	static UFunction* uFnGetEventRecorder = nullptr;

	if (!uFnGetEventRecorder)
	{
		uFnGetEventRecorder = UFunction::FindFunction("Function ProjectX.MetricsGroup_X.GetEventRecorder");
	}

	UMetricsGroup_X_execGetEventRecorder_Params GetEventRecorder_Params;

	uFnGetEventRecorder->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetEventRecorder, &GetEventRecorder_Params, nullptr);

	uFnGetEventRecorder->FunctionFlags |= 0x400;

	return GetEventRecorder_Params.ReturnValue;
};

// Function ProjectX.NetMetrics_X.GetConnectionType
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

uint8_t UNetMetrics_X::GetConnectionType()
{
	static UFunction* uFnGetConnectionType = nullptr;

	if (!uFnGetConnectionType)
	{
		uFnGetConnectionType = UFunction::FindFunction("Function ProjectX.NetMetrics_X.GetConnectionType");
	}

	UNetMetrics_X_execGetConnectionType_Params GetConnectionType_Params;

	uFnGetConnectionType->FunctionFlags |= ~0x400;

	UNetMetrics_X::StaticClass()->ProcessEvent(uFnGetConnectionType, &GetConnectionType_Params, nullptr);

	uFnGetConnectionType->FunctionFlags |= 0x400;

	return GetConnectionType_Params.ReturnValue;
};

// Function ProjectX.NetMetrics_X.UnstableConnections
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class FString>          Addresses                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UNetMetrics_X::UnstableConnections(TArray<class FString>& Addresses)
{
	static UFunction* uFnUnstableConnections = nullptr;

	if (!uFnUnstableConnections)
	{
		uFnUnstableConnections = UFunction::FindFunction("Function ProjectX.NetMetrics_X.UnstableConnections");
	}

	UNetMetrics_X_execUnstableConnections_Params UnstableConnections_Params;
	memcpy_s(&UnstableConnections_Params.Addresses, 0x10, &Addresses, 0x10);

	this->ProcessEvent(uFnUnstableConnections, &UnstableConnections_Params, nullptr);

	memcpy_s(&Addresses, 0x10, &UnstableConnections_Params.Addresses, 0x10);
};

// Function ProjectX.NetMetrics_X.RecordUnstableConnections
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UNetMetrics_X::RecordUnstableConnections()
{
	static UFunction* uFnRecordUnstableConnections = nullptr;

	if (!uFnRecordUnstableConnections)
	{
		uFnRecordUnstableConnections = UFunction::FindFunction("Function ProjectX.NetMetrics_X.RecordUnstableConnections");
	}

	UNetMetrics_X_execRecordUnstableConnections_Params RecordUnstableConnections_Params;

	this->ProcessEvent(uFnRecordUnstableConnections, &RecordUnstableConnections_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.AddUnstableConnection
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Address                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UNetMetrics_X::AddUnstableConnection(class FString& Address)
{
	static UFunction* uFnAddUnstableConnection = nullptr;

	if (!uFnAddUnstableConnection)
	{
		uFnAddUnstableConnection = UFunction::FindFunction("Function ProjectX.NetMetrics_X.AddUnstableConnection");
	}

	UNetMetrics_X_execAddUnstableConnection_Params AddUnstableConnection_Params;
	memcpy_s(&AddUnstableConnection_Params.Address, 0x10, &Address, 0x10);

	this->ProcessEvent(uFnAddUnstableConnection, &AddUnstableConnection_Params, nullptr);

	memcpy_s(&Address, 0x10, &AddUnstableConnection_Params.Address, 0x10);
};

// Function ProjectX.NetMetrics_X.StaticUnstableConnection
// [0x00422803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Address                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UNetMetrics_X::eventStaticUnstableConnection(class FString& Address)
{
	static UFunction* uFnStaticUnstableConnection = nullptr;

	if (!uFnStaticUnstableConnection)
	{
		uFnStaticUnstableConnection = UFunction::FindFunction("Function ProjectX.NetMetrics_X.StaticUnstableConnection");
	}

	UNetMetrics_X_eventStaticUnstableConnection_Params StaticUnstableConnection_Params;
	memcpy_s(&StaticUnstableConnection_Params.Address, 0x10, &Address, 0x10);

	UNetMetrics_X::StaticClass()->ProcessEvent(uFnStaticUnstableConnection, &StaticUnstableConnection_Params, nullptr);

	memcpy_s(&Address, 0x10, &StaticUnstableConnection_Params.Address, 0x10);
};

// Function ProjectX.NetMetrics_X.ReliablePacketsBlocked
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UNetMetrics_X::ReliablePacketsBlocked()
{
	static UFunction* uFnReliablePacketsBlocked = nullptr;

	if (!uFnReliablePacketsBlocked)
	{
		uFnReliablePacketsBlocked = UFunction::FindFunction("Function ProjectX.NetMetrics_X.ReliablePacketsBlocked");
	}

	UNetMetrics_X_execReliablePacketsBlocked_Params ReliablePacketsBlocked_Params;

	this->ProcessEvent(uFnReliablePacketsBlocked, &ReliablePacketsBlocked_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.UseInputBuffer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   Type                           (CPF_Parm)

void UNetMetrics_X::UseInputBuffer(struct FUniqueNetId PlayerID, struct FName Type)
{
	static UFunction* uFnUseInputBuffer = nullptr;

	if (!uFnUseInputBuffer)
	{
		uFnUseInputBuffer = UFunction::FindFunction("Function ProjectX.NetMetrics_X.UseInputBuffer");
	}

	UNetMetrics_X_execUseInputBuffer_Params UseInputBuffer_Params;
	memcpy_s(&UseInputBuffer_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&UseInputBuffer_Params.Type, 0x8, &Type, 0x8);

	this->ProcessEvent(uFnUseInputBuffer, &UseInputBuffer_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.LaunchURL
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

void UNetMetrics_X::LaunchURL(class FString URL)
{
	static UFunction* uFnLaunchURL = nullptr;

	if (!uFnLaunchURL)
	{
		uFnLaunchURL = UFunction::FindFunction("Function ProjectX.NetMetrics_X.LaunchURL");
	}

	UNetMetrics_X_execLaunchURL_Params LaunchURL_Params;
	memcpy_s(&LaunchURL_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnLaunchURL, &LaunchURL_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.ServerReported
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UNetMetrics_X::ServerReported(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnServerReported = nullptr;

	if (!uFnServerReported)
	{
		uFnServerReported = UFunction::FindFunction("Function ProjectX.NetMetrics_X.ServerReported");
	}

	UNetMetrics_X_execServerReported_Params ServerReported_Params;
	memcpy_s(&ServerReported_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnServerReported, &ServerReported_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.RpcSignatureMismatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ServiceID                      (CPF_Parm)

void UNetMetrics_X::RpcSignatureMismatch(int32_t ServiceID)
{
	static UFunction* uFnRpcSignatureMismatch = nullptr;

	if (!uFnRpcSignatureMismatch)
	{
		uFnRpcSignatureMismatch = UFunction::FindFunction("Function ProjectX.NetMetrics_X.RpcSignatureMismatch");
	}

	UNetMetrics_X_execRpcSignatureMismatch_Params RpcSignatureMismatch_Params;
	memcpy_s(&RpcSignatureMismatch_Params.ServiceID, 0x4, &ServiceID, 0x4);

	this->ProcessEvent(uFnRpcSignatureMismatch, &RpcSignatureMismatch_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.ConnectionChangedIP
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UNetMetrics_X::ConnectionChangedIP(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnConnectionChangedIP = nullptr;

	if (!uFnConnectionChangedIP)
	{
		uFnConnectionChangedIP = UFunction::FindFunction("Function ProjectX.NetMetrics_X.ConnectionChangedIP");
	}

	UNetMetrics_X_execConnectionChangedIP_Params ConnectionChangedIP_Params;
	memcpy_s(&ConnectionChangedIP_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnConnectionChangedIP, &ConnectionChangedIP_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.PlayerNetworkError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UNetMetrics_X::PlayerNetworkError(struct FUniqueNetId PlayerID, class FString Reason)
{
	static UFunction* uFnPlayerNetworkError = nullptr;

	if (!uFnPlayerNetworkError)
	{
		uFnPlayerNetworkError = UFunction::FindFunction("Function ProjectX.NetMetrics_X.PlayerNetworkError");
	}

	UNetMetrics_X_execPlayerNetworkError_Params PlayerNetworkError_Params;
	memcpy_s(&PlayerNetworkError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&PlayerNetworkError_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnPlayerNetworkError, &PlayerNetworkError_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.PlayerTimeout
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UNetMetrics_X::PlayerTimeout(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnPlayerTimeout = nullptr;

	if (!uFnPlayerTimeout)
	{
		uFnPlayerTimeout = UFunction::FindFunction("Function ProjectX.NetMetrics_X.PlayerTimeout");
	}

	UNetMetrics_X_execPlayerTimeout_Params PlayerTimeout_Params;
	memcpy_s(&PlayerTimeout_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnPlayerTimeout, &PlayerTimeout_Params, nullptr);
};

// Function ProjectX.NetMetrics_X.NetStats
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlaylistId                     (CPF_Parm)
// class FString                  MatchGuid                      (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        ConnectionType                 (CPF_Parm)
// int32_t                        PeriodMS                       (CPF_Parm)
// int32_t                        PingMin                        (CPF_Parm)
// int32_t                        PingMax                        (CPF_Parm)
// int32_t                        PingAvg                        (CPF_Parm)
// int32_t                        PingMed                        (CPF_Parm)
// int32_t                        OutPackets                     (CPF_Parm)
// int32_t                        InPackets                      (CPF_Parm)
// int32_t                        OutLost                        (CPF_Parm)
// int32_t                        InLost                         (CPF_Parm)
// int32_t                        OutOfOrder                     (CPF_Parm)
// int32_t                        OutBytes                       (CPF_Parm)
// int32_t                        InBytes                        (CPF_Parm)
// int32_t                        PsyPingMin                     (CPF_Parm)
// int32_t                        PsyPingMax                     (CPF_Parm)
// int32_t                        PsyPingAvg                     (CPF_Parm)
// int32_t                        PsyPingMed                     (CPF_Parm)
// int32_t                        PsyReceived                    (CPF_Parm)
// int32_t                        PsyLost                        (CPF_Parm)

void UNetMetrics_X::NetStats(int32_t PlaylistId, class FString MatchGuid, int32_t ConnectionType, int32_t PeriodMS, int32_t PingMin, int32_t PingMax, int32_t PingAvg, int32_t PingMed, int32_t OutPackets, int32_t InPackets, int32_t OutLost, int32_t InLost, int32_t OutOfOrder, int32_t OutBytes, int32_t InBytes, int32_t PsyPingMin, int32_t PsyPingMax, int32_t PsyPingAvg, int32_t PsyPingMed, int32_t PsyReceived, int32_t PsyLost)
{
	static UFunction* uFnNetStats = nullptr;

	if (!uFnNetStats)
	{
		uFnNetStats = UFunction::FindFunction("Function ProjectX.NetMetrics_X.NetStats");
	}

	UNetMetrics_X_execNetStats_Params NetStats_Params;
	memcpy_s(&NetStats_Params.PlaylistId, 0x4, &PlaylistId, 0x4);
	memcpy_s(&NetStats_Params.MatchGuid, 0x10, &MatchGuid, 0x10);
	memcpy_s(&NetStats_Params.ConnectionType, 0x4, &ConnectionType, 0x4);
	memcpy_s(&NetStats_Params.PeriodMS, 0x4, &PeriodMS, 0x4);
	memcpy_s(&NetStats_Params.PingMin, 0x4, &PingMin, 0x4);
	memcpy_s(&NetStats_Params.PingMax, 0x4, &PingMax, 0x4);
	memcpy_s(&NetStats_Params.PingAvg, 0x4, &PingAvg, 0x4);
	memcpy_s(&NetStats_Params.PingMed, 0x4, &PingMed, 0x4);
	memcpy_s(&NetStats_Params.OutPackets, 0x4, &OutPackets, 0x4);
	memcpy_s(&NetStats_Params.InPackets, 0x4, &InPackets, 0x4);
	memcpy_s(&NetStats_Params.OutLost, 0x4, &OutLost, 0x4);
	memcpy_s(&NetStats_Params.InLost, 0x4, &InLost, 0x4);
	memcpy_s(&NetStats_Params.OutOfOrder, 0x4, &OutOfOrder, 0x4);
	memcpy_s(&NetStats_Params.OutBytes, 0x4, &OutBytes, 0x4);
	memcpy_s(&NetStats_Params.InBytes, 0x4, &InBytes, 0x4);
	memcpy_s(&NetStats_Params.PsyPingMin, 0x4, &PsyPingMin, 0x4);
	memcpy_s(&NetStats_Params.PsyPingMax, 0x4, &PsyPingMax, 0x4);
	memcpy_s(&NetStats_Params.PsyPingAvg, 0x4, &PsyPingAvg, 0x4);
	memcpy_s(&NetStats_Params.PsyPingMed, 0x4, &PsyPingMed, 0x4);
	memcpy_s(&NetStats_Params.PsyReceived, 0x4, &PsyReceived, 0x4);
	memcpy_s(&NetStats_Params.PsyLost, 0x4, &PsyLost, 0x4);

	this->ProcessEvent(uFnNetStats, &NetStats_Params, nullptr);
};

// Function ProjectX.ExplosionCollisionShapes_X.Destroy
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UExplosionCollisionShapes_X::Destroy()
{
	static UFunction* uFnDestroy = nullptr;

	if (!uFnDestroy)
	{
		uFnDestroy = UFunction::FindFunction("Function ProjectX.ExplosionCollisionShapes_X.Destroy");
	}

	UExplosionCollisionShapes_X_execDestroy_Params Destroy_Params;

	this->ProcessEvent(uFnDestroy, &Destroy_Params, nullptr);
};

// Function ProjectX.ExplosionCollisionShapes_X.Init
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UExplosionCollisionShapes_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.ExplosionCollisionShapes_X.Init");
	}

	UExplosionCollisionShapes_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.BoxCollisionShape_X.GetCurrentSize
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FVector UBoxCollisionShape_X::GetCurrentSize()
{
	static UFunction* uFnGetCurrentSize = nullptr;

	if (!uFnGetCurrentSize)
	{
		uFnGetCurrentSize = UFunction::FindFunction("Function ProjectX.BoxCollisionShape_X.GetCurrentSize");
	}

	UBoxCollisionShape_X_execGetCurrentSize_Params GetCurrentSize_Params;

	uFnGetCurrentSize->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetCurrentSize, &GetCurrentSize_Params, nullptr);

	uFnGetCurrentSize->FunctionFlags |= 0x400;

	return GetCurrentSize_Params.ReturnValue;
};

// Function ProjectX.BoxCollisionShape_X.GetCurrentBox
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FBox                    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FBox UBoxCollisionShape_X::GetCurrentBox()
{
	static UFunction* uFnGetCurrentBox = nullptr;

	if (!uFnGetCurrentBox)
	{
		uFnGetCurrentBox = UFunction::FindFunction("Function ProjectX.BoxCollisionShape_X.GetCurrentBox");
	}

	UBoxCollisionShape_X_execGetCurrentBox_Params GetCurrentBox_Params;

	uFnGetCurrentBox->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetCurrentBox, &GetCurrentBox_Params, nullptr);

	uFnGetCurrentBox->FunctionFlags |= 0x400;

	return GetCurrentBox_Params.ReturnValue;
};

// Function ProjectX.SphereCollisionShape_X.GetCurrentRadius
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float USphereCollisionShape_X::GetCurrentRadius()
{
	static UFunction* uFnGetCurrentRadius = nullptr;

	if (!uFnGetCurrentRadius)
	{
		uFnGetCurrentRadius = UFunction::FindFunction("Function ProjectX.SphereCollisionShape_X.GetCurrentRadius");
	}

	USphereCollisionShape_X_execGetCurrentRadius_Params GetCurrentRadius_Params;

	uFnGetCurrentRadius->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetCurrentRadius, &GetCurrentRadius_Params, nullptr);

	uFnGetCurrentRadius->FunctionFlags |= 0x400;

	return GetCurrentRadius_Params.ReturnValue;
};

// Function ProjectX.FakeData_X.RandomizeValues
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 Target                         (CPF_Parm)
// int32_t                        InRandomSeed                   (CPF_OptionalParm | CPF_Parm)

int32_t UFakeData_X::RandomizeValues(class UObject* Target, int32_t InRandomSeed)
{
	static UFunction* uFnRandomizeValues = nullptr;

	if (!uFnRandomizeValues)
	{
		uFnRandomizeValues = UFunction::FindFunction("Function ProjectX.FakeData_X.RandomizeValues");
	}

	UFakeData_X_execRandomizeValues_Params RandomizeValues_Params;
	memcpy_s(&RandomizeValues_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&RandomizeValues_Params.InRandomSeed, 0x4, &InRandomSeed, 0x4);

	uFnRandomizeValues->FunctionFlags |= ~0x400;

	UFakeData_X::StaticClass()->ProcessEvent(uFnRandomizeValues, &RandomizeValues_Params, nullptr);

	uFnRandomizeValues->FunctionFlags |= 0x400;

	return RandomizeValues_Params.ReturnValue;
};

// Function ProjectX.FakeData_X.RandomizeFakeData
// [0x00026003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFakeData_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UFakeData_X*             FakeData                       (CPF_Parm)
// int32_t                        InRandomSeed                   (CPF_OptionalParm | CPF_Parm)

class UFakeData_X* UFakeData_X::RandomizeFakeData(class UFakeData_X* FakeData, int32_t InRandomSeed)
{
	static UFunction* uFnRandomizeFakeData = nullptr;

	if (!uFnRandomizeFakeData)
	{
		uFnRandomizeFakeData = UFunction::FindFunction("Function ProjectX.FakeData_X.RandomizeFakeData");
	}

	UFakeData_X_execRandomizeFakeData_Params RandomizeFakeData_Params;
	memcpy_s(&RandomizeFakeData_Params.FakeData, 0x8, &FakeData, 0x8);
	memcpy_s(&RandomizeFakeData_Params.InRandomSeed, 0x4, &InRandomSeed, 0x4);

	UFakeData_X::StaticClass()->ProcessEvent(uFnRandomizeFakeData, &RandomizeFakeData_Params, nullptr);

	return RandomizeFakeData_Params.ReturnValue;
};

// Function ProjectX.FakeData_X.GenerateFakeData
// [0x00026003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFakeData_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InRandomSeed                   (CPF_OptionalParm | CPF_Parm)

class UFakeData_X* UFakeData_X::GenerateFakeData(int32_t InRandomSeed)
{
	static UFunction* uFnGenerateFakeData = nullptr;

	if (!uFnGenerateFakeData)
	{
		uFnGenerateFakeData = UFunction::FindFunction("Function ProjectX.FakeData_X.GenerateFakeData");
	}

	UFakeData_X_execGenerateFakeData_Params GenerateFakeData_Params;
	memcpy_s(&GenerateFakeData_Params.InRandomSeed, 0x4, &InRandomSeed, 0x4);

	UFakeData_X::StaticClass()->ProcessEvent(uFnGenerateFakeData, &GenerateFakeData_Params, nullptr);

	return GenerateFakeData_Params.ReturnValue;
};

// Function ProjectX.FXAttachmentTraitBase_X.GetComponent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UActorComponent*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UActorComponent* UFXAttachmentTraitBase_X::GetComponent()
{
	static UFunction* uFnGetComponent = nullptr;

	if (!uFnGetComponent)
	{
		uFnGetComponent = UFunction::FindFunction("Function ProjectX.FXAttachmentTraitBase_X.GetComponent");
	}

	UFXAttachmentTraitBase_X_execGetComponent_Params GetComponent_Params;

	uFnGetComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetComponent, &GetComponent_Params, nullptr);

	uFnGetComponent->FunctionFlags |= 0x400;

	return GetComponent_Params.ReturnValue;
};

// Function ProjectX.FXAttachmentTraitBase_X.Init
// [0x00020800] (FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UFXAttachmentTraitBase_X::eventInit()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.FXAttachmentTraitBase_X.Init");
	}

	UFXAttachmentTraitBase_X_eventInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.GameEngine_X.__GameEngine_X__Construct_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  InURL                          (CPF_Parm | CPF_NeedCtorLink)

void UGameEngine_X::__GameEngine_X__Construct_0x1(class FString InURL)
{
	static UFunction* uFn__GameEngine_X__Construct_0x1 = nullptr;

	if (!uFn__GameEngine_X__Construct_0x1)
	{
		uFn__GameEngine_X__Construct_0x1 = UFunction::FindFunction("Function ProjectX.GameEngine_X.__GameEngine_X__Construct_0x1");
	}

	UGameEngine_X_exec__GameEngine_X__Construct_0x1_Params __GameEngine_X__Construct_0x1_Params;
	memcpy_s(&__GameEngine_X__Construct_0x1_Params.InURL, 0x10, &InURL, 0x10);

	this->ProcessEvent(uFn__GameEngine_X__Construct_0x1, &__GameEngine_X__Construct_0x1_Params, nullptr);
};

// Function ProjectX.GameEngine_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UGameEngine_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.GameEngine_X.PrintDebugInfo");
	}

	UGameEngine_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.GameEngine_X.OnlineSubsystemInitialized
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGameEngine_X::eventOnlineSubsystemInitialized()
{
	static UFunction* uFnOnlineSubsystemInitialized = nullptr;

	if (!uFnOnlineSubsystemInitialized)
	{
		uFnOnlineSubsystemInitialized = UFunction::FindFunction("Function ProjectX.GameEngine_X.OnlineSubsystemInitialized");
	}

	UGameEngine_X_eventOnlineSubsystemInitialized_Params OnlineSubsystemInitialized_Params;

	this->ProcessEvent(uFnOnlineSubsystemInitialized, &OnlineSubsystemInitialized_Params, nullptr);
};

// Function ProjectX.GameEngine_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UGameEngine_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.GameEngine_X.Construct");
	}

	UGameEngine_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.GameInfo_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void AGameInfo_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.GameInfo_X.PrintDebugInfo");
	}

	AGameInfo_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.GameInfo_X.ClientMapLoadFail
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  MapName                        (CPF_Parm | CPF_NeedCtorLink)

void AGameInfo_X::eventClientMapLoadFail(struct FUniqueNetId PlayerID, class FString MapName)
{
	static UFunction* uFnClientMapLoadFail = nullptr;

	if (!uFnClientMapLoadFail)
	{
		uFnClientMapLoadFail = UFunction::FindFunction("Function ProjectX.GameInfo_X.ClientMapLoadFail");
	}

	AGameInfo_X_eventClientMapLoadFail_Params ClientMapLoadFail_Params;
	memcpy_s(&ClientMapLoadFail_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&ClientMapLoadFail_Params.MapName, 0x10, &MapName, 0x10);

	this->ProcessEvent(uFnClientMapLoadFail, &ClientMapLoadFail_Params, nullptr);
};

// Function ProjectX.GameInfo_X.RemovePauser
// [0x00044003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       PC                             (CPF_Parm)
// unsigned long                  bForceRemove                   (CPF_OptionalParm | CPF_Parm)

void AGameInfo_X::RemovePauser(class APlayerController* PC, unsigned long bForceRemove)
{
	static UFunction* uFnRemovePauser = nullptr;

	if (!uFnRemovePauser)
	{
		uFnRemovePauser = UFunction::FindFunction("Function ProjectX.GameInfo_X.RemovePauser");
	}

	AGameInfo_X_execRemovePauser_Params RemovePauser_Params;
	memcpy_s(&RemovePauser_Params.PC, 0x8, &PC, 0x8);
	RemovePauser_Params.bForceRemove = bForceRemove;

	this->ProcessEvent(uFnRemovePauser, &RemovePauser_Params, nullptr);
};

// Function ProjectX.GameInfo_X.AddPauser
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       PC                             (CPF_Parm)

void AGameInfo_X::AddPauser(class APlayerController* PC)
{
	static UFunction* uFnAddPauser = nullptr;

	if (!uFnAddPauser)
	{
		uFnAddPauser = UFunction::FindFunction("Function ProjectX.GameInfo_X.AddPauser");
	}

	AGameInfo_X_execAddPauser_Params AddPauser_Params;
	memcpy_s(&AddPauser_Params.PC, 0x8, &PC, 0x8);

	this->ProcessEvent(uFnAddPauser, &AddPauser_Params, nullptr);
};

// Function ProjectX.GameInfo_X.SetPaused
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       PC                             (CPF_Parm)
// unsigned long                  bPause                         (CPF_Parm)

void AGameInfo_X::SetPaused(class APlayerController* PC, unsigned long bPause)
{
	static UFunction* uFnSetPaused = nullptr;

	if (!uFnSetPaused)
	{
		uFnSetPaused = UFunction::FindFunction("Function ProjectX.GameInfo_X.SetPaused");
	}

	AGameInfo_X_execSetPaused_Params SetPaused_Params;
	memcpy_s(&SetPaused_Params.PC, 0x8, &PC, 0x8);
	SetPaused_Params.bPause = bPause;

	this->ProcessEvent(uFnSetPaused, &SetPaused_Params, nullptr);
};

// Function ProjectX.GameInfo_X.TogglePause
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       PC                             (CPF_Parm)

void AGameInfo_X::TogglePause(class APlayerController* PC)
{
	static UFunction* uFnTogglePause = nullptr;

	if (!uFnTogglePause)
	{
		uFnTogglePause = UFunction::FindFunction("Function ProjectX.GameInfo_X.TogglePause");
	}

	AGameInfo_X_execTogglePause_Params TogglePause_Params;
	memcpy_s(&TogglePause_Params.PC, 0x8, &PC, 0x8);

	this->ProcessEvent(uFnTogglePause, &TogglePause_Params, nullptr);
};

// Function ProjectX.GameInfo_X.IsPaused
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class APlayerController*       PC                             (CPF_Parm)

bool AGameInfo_X::IsPaused(class APlayerController* PC)
{
	static UFunction* uFnIsPaused = nullptr;

	if (!uFnIsPaused)
	{
		uFnIsPaused = UFunction::FindFunction("Function ProjectX.GameInfo_X.IsPaused");
	}

	AGameInfo_X_execIsPaused_Params IsPaused_Params;
	memcpy_s(&IsPaused_Params.PC, 0x8, &PC, 0x8);

	this->ProcessEvent(uFnIsPaused, &IsPaused_Params, nullptr);

	return IsPaused_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.GetOnlineGameHost
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UIOnlineGameHost_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UIOnlineGameHost_X* AGameInfo_X::GetOnlineGameHost()
{
	static UFunction* uFnGetOnlineGameHost = nullptr;

	if (!uFnGetOnlineGameHost)
	{
		uFnGetOnlineGameHost = UFunction::FindFunction("Function ProjectX.GameInfo_X.GetOnlineGameHost");
	}

	AGameInfo_X_execGetOnlineGameHost_Params GetOnlineGameHost_Params;

	this->ProcessEvent(uFnGetOnlineGameHost, &GetOnlineGameHost_Params, nullptr);

	return GetOnlineGameHost_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.GetOnlineGameDedicatedServer
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGameDedicatedServer_X* AGameInfo_X::GetOnlineGameDedicatedServer()
{
	static UFunction* uFnGetOnlineGameDedicatedServer = nullptr;

	if (!uFnGetOnlineGameDedicatedServer)
	{
		uFnGetOnlineGameDedicatedServer = UFunction::FindFunction("Function ProjectX.GameInfo_X.GetOnlineGameDedicatedServer");
	}

	AGameInfo_X_execGetOnlineGameDedicatedServer_Params GetOnlineGameDedicatedServer_Params;

	AGameInfo_X::StaticClass()->ProcessEvent(uFnGetOnlineGameDedicatedServer, &GetOnlineGameDedicatedServer_Params, nullptr);

	return GetOnlineGameDedicatedServer_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.GetOnlineGame
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGame_Base_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGame_Base_X* AGameInfo_X::GetOnlineGame()
{
	static UFunction* uFnGetOnlineGame = nullptr;

	if (!uFnGetOnlineGame)
	{
		uFnGetOnlineGame = UFunction::FindFunction("Function ProjectX.GameInfo_X.GetOnlineGame");
	}

	AGameInfo_X_execGetOnlineGame_Params GetOnlineGame_Params;

	AGameInfo_X::StaticClass()->ProcessEvent(uFnGetOnlineGame, &GetOnlineGame_Params, nullptr);

	return GetOnlineGame_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.EndOnlineGame
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AGameInfo_X::EndOnlineGame()
{
	static UFunction* uFnEndOnlineGame = nullptr;

	if (!uFnEndOnlineGame)
	{
		uFnEndOnlineGame = UFunction::FindFunction("Function ProjectX.GameInfo_X.EndOnlineGame");
	}

	AGameInfo_X_execEndOnlineGame_Params EndOnlineGame_Params;

	this->ProcessEvent(uFnEndOnlineGame, &EndOnlineGame_Params, nullptr);
};

// Function ProjectX.GameInfo_X.Logout
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AController*             Exiting                        (CPF_Parm)

void AGameInfo_X::Logout(class AController* Exiting)
{
	static UFunction* uFnLogout = nullptr;

	if (!uFnLogout)
	{
		uFnLogout = UFunction::FindFunction("Function ProjectX.GameInfo_X.Logout");
	}

	AGameInfo_X_execLogout_Params Logout_Params;
	memcpy_s(&Logout_Params.Exiting, 0x8, &Exiting, 0x8);

	this->ProcessEvent(uFnLogout, &Logout_Params, nullptr);
};

// Function ProjectX.GameInfo_X.GenericPlayerInitialization
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AController*             C                              (CPF_Parm)

void AGameInfo_X::GenericPlayerInitialization(class AController* C)
{
	static UFunction* uFnGenericPlayerInitialization = nullptr;

	if (!uFnGenericPlayerInitialization)
	{
		uFnGenericPlayerInitialization = UFunction::FindFunction("Function ProjectX.GameInfo_X.GenericPlayerInitialization");
	}

	AGameInfo_X_execGenericPlayerInitialization_Params GenericPlayerInitialization_Params;
	memcpy_s(&GenericPlayerInitialization_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnGenericPlayerInitialization, &GenericPlayerInitialization_Params, nullptr);
};

// Function ProjectX.GameInfo_X.DisconnectExistingPlayer
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void AGameInfo_X::DisconnectExistingPlayer(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnDisconnectExistingPlayer = nullptr;

	if (!uFnDisconnectExistingPlayer)
	{
		uFnDisconnectExistingPlayer = UFunction::FindFunction("Function ProjectX.GameInfo_X.DisconnectExistingPlayer");
	}

	AGameInfo_X_execDisconnectExistingPlayer_Params DisconnectExistingPlayer_Params;
	memcpy_s(&DisconnectExistingPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);

	AGameInfo_X::StaticClass()->ProcessEvent(uFnDisconnectExistingPlayer, &DisconnectExistingPlayer_Params, nullptr);

	memcpy_s(&PlayerID, 0x48, &DisconnectExistingPlayer_Params.PlayerID, 0x48);
};

// Function ProjectX.GameInfo_X.Login
// [0x400420802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Portal                         (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            UniqueId                       (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// class FString                  ErrorMessage                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class APlayerController* AGameInfo_X::eventLogin(class FString Portal, class FString Options, struct FUniqueNetId UniqueId, class FString& ErrorMessage)
{
	static UFunction* uFnLogin = nullptr;

	if (!uFnLogin)
	{
		uFnLogin = UFunction::FindFunction("Function ProjectX.GameInfo_X.Login");
	}

	AGameInfo_X_eventLogin_Params Login_Params;
	memcpy_s(&Login_Params.Portal, 0x10, &Portal, 0x10);
	memcpy_s(&Login_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&Login_Params.UniqueId, 0x48, &UniqueId, 0x48);
	memcpy_s(&Login_Params.ErrorMessage, 0x10, &ErrorMessage, 0x10);

	this->ProcessEvent(uFnLogin, &Login_Params, nullptr);

	memcpy_s(&ErrorMessage, 0x10, &Login_Params.ErrorMessage, 0x10);

	return Login_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.PreLoginSplitscreen
// [0x400420802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PrimaryPlayerUniqueId          (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Address                        (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            UniqueId                       (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bSupportsAuth                  (CPF_Parm)
// class FString                  ErrorMessage                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void AGameInfo_X::eventPreLoginSplitscreen(struct FUniqueNetId PrimaryPlayerUniqueId, class FString Options, class FString Address, struct FUniqueNetId UniqueId, unsigned long bSupportsAuth, class FString& ErrorMessage)
{
	static UFunction* uFnPreLoginSplitscreen = nullptr;

	if (!uFnPreLoginSplitscreen)
	{
		uFnPreLoginSplitscreen = UFunction::FindFunction("Function ProjectX.GameInfo_X.PreLoginSplitscreen");
	}

	AGameInfo_X_eventPreLoginSplitscreen_Params PreLoginSplitscreen_Params;
	memcpy_s(&PreLoginSplitscreen_Params.PrimaryPlayerUniqueId, 0x48, &PrimaryPlayerUniqueId, 0x48);
	memcpy_s(&PreLoginSplitscreen_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&PreLoginSplitscreen_Params.Address, 0x10, &Address, 0x10);
	memcpy_s(&PreLoginSplitscreen_Params.UniqueId, 0x48, &UniqueId, 0x48);
	PreLoginSplitscreen_Params.bSupportsAuth = bSupportsAuth;
	memcpy_s(&PreLoginSplitscreen_Params.ErrorMessage, 0x10, &ErrorMessage, 0x10);

	this->ProcessEvent(uFnPreLoginSplitscreen, &PreLoginSplitscreen_Params, nullptr);

	memcpy_s(&ErrorMessage, 0x10, &PreLoginSplitscreen_Params.ErrorMessage, 0x10);
};

// Function ProjectX.GameInfo_X.PreLogin
// [0x400420802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Address                        (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            UniqueId                       (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bSupportsAuth                  (CPF_Parm)
// class FString                  ErrorMessage                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void AGameInfo_X::eventPreLogin(class FString Options, class FString Address, struct FUniqueNetId UniqueId, unsigned long bSupportsAuth, class FString& ErrorMessage)
{
	static UFunction* uFnPreLogin = nullptr;

	if (!uFnPreLogin)
	{
		uFnPreLogin = UFunction::FindFunction("Function ProjectX.GameInfo_X.PreLogin");
	}

	AGameInfo_X_eventPreLogin_Params PreLogin_Params;
	memcpy_s(&PreLogin_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&PreLogin_Params.Address, 0x10, &Address, 0x10);
	memcpy_s(&PreLogin_Params.UniqueId, 0x48, &UniqueId, 0x48);
	PreLogin_Params.bSupportsAuth = bSupportsAuth;
	memcpy_s(&PreLogin_Params.ErrorMessage, 0x10, &ErrorMessage, 0x10);

	this->ProcessEvent(uFnPreLogin, &PreLogin_Params, nullptr);

	memcpy_s(&ErrorMessage, 0x10, &PreLogin_Params.ErrorMessage, 0x10);
};

// Function ProjectX.GameInfo_X.UpdateGameSettingsCounts
// [0x400020000] (FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AGameInfo_X::UpdateGameSettingsCounts()
{
	static UFunction* uFnUpdateGameSettingsCounts = nullptr;

	if (!uFnUpdateGameSettingsCounts)
	{
		uFnUpdateGameSettingsCounts = UFunction::FindFunction("Function ProjectX.GameInfo_X.UpdateGameSettingsCounts");
	}

	AGameInfo_X_execUpdateGameSettingsCounts_Params UpdateGameSettingsCounts_Params;

	this->ProcessEvent(uFnUpdateGameSettingsCounts, &UpdateGameSettingsCounts_Params, nullptr);
};

// Function ProjectX.GameInfo_X.PostBeginPlay
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AGameInfo_X::PostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function ProjectX.GameInfo_X.PostBeginPlay");
	}

	AGameInfo_X_execPostBeginPlay_Params PostBeginPlay_Params;

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function ProjectX.GameInfo_X.ProcessServerLogin
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGameInfo_X::ProcessServerLogin()
{
	static UFunction* uFnProcessServerLogin = nullptr;

	if (!uFnProcessServerLogin)
	{
		uFnProcessServerLogin = UFunction::FindFunction("Function ProjectX.GameInfo_X.ProcessServerLogin");
	}

	AGameInfo_X_execProcessServerLogin_Params ProcessServerLogin_Params;

	this->ProcessEvent(uFnProcessServerLogin, &ProcessServerLogin_Params, nullptr);

	return ProcessServerLogin_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.RegisterServer
// [0x400020000] (FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AGameInfo_X::RegisterServer()
{
	static UFunction* uFnRegisterServer = nullptr;

	if (!uFnRegisterServer)
	{
		uFnRegisterServer = UFunction::FindFunction("Function ProjectX.GameInfo_X.RegisterServer");
	}

	AGameInfo_X_execRegisterServer_Params RegisterServer_Params;

	this->ProcessEvent(uFnRegisterServer, &RegisterServer_Params, nullptr);
};

// Function ProjectX.GameInfo_X.SpawnDefaultPawnFor
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class APawn*                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class AController*             NewPlayer                      (CPF_Parm)
// class ANavigationPoint*        StartSpot                      (CPF_Parm)

class APawn* AGameInfo_X::SpawnDefaultPawnFor(class AController* NewPlayer, class ANavigationPoint* StartSpot)
{
	static UFunction* uFnSpawnDefaultPawnFor = nullptr;

	if (!uFnSpawnDefaultPawnFor)
	{
		uFnSpawnDefaultPawnFor = UFunction::FindFunction("Function ProjectX.GameInfo_X.SpawnDefaultPawnFor");
	}

	AGameInfo_X_execSpawnDefaultPawnFor_Params SpawnDefaultPawnFor_Params;
	memcpy_s(&SpawnDefaultPawnFor_Params.NewPlayer, 0x8, &NewPlayer, 0x8);
	memcpy_s(&SpawnDefaultPawnFor_Params.StartSpot, 0x8, &StartSpot, 0x8);

	this->ProcessEvent(uFnSpawnDefaultPawnFor, &SpawnDefaultPawnFor_Params, nullptr);

	return SpawnDefaultPawnFor_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.PreBeginPlay
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AGameInfo_X::eventPreBeginPlay()
{
	static UFunction* uFnPreBeginPlay = nullptr;

	if (!uFnPreBeginPlay)
	{
		uFnPreBeginPlay = UFunction::FindFunction("Function ProjectX.GameInfo_X.PreBeginPlay");
	}

	AGameInfo_X_eventPreBeginPlay_Params PreBeginPlay_Params;

	this->ProcessEvent(uFnPreBeginPlay, &PreBeginPlay_Params, nullptr);
};

// Function ProjectX.GameInfo_X.SpawnPlayerController
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 SpawnLocation                  (CPF_Parm)
// struct FRotator                SpawnRotation                  (CPF_Parm)

class APlayerController* AGameInfo_X::SpawnPlayerController(struct FVector SpawnLocation, struct FRotator SpawnRotation)
{
	static UFunction* uFnSpawnPlayerController = nullptr;

	if (!uFnSpawnPlayerController)
	{
		uFnSpawnPlayerController = UFunction::FindFunction("Function ProjectX.GameInfo_X.SpawnPlayerController");
	}

	AGameInfo_X_execSpawnPlayerController_Params SpawnPlayerController_Params;
	memcpy_s(&SpawnPlayerController_Params.SpawnLocation, 0xC, &SpawnLocation, 0xC);
	memcpy_s(&SpawnPlayerController_Params.SpawnRotation, 0xC, &SpawnRotation, 0xC);

	this->ProcessEvent(uFnSpawnPlayerController, &SpawnPlayerController_Params, nullptr);

	return SpawnPlayerController_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.SetGameType
// [0x400022802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Static | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  MapName                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Portal                         (CPF_Parm | CPF_NeedCtorLink)

class UClass* AGameInfo_X::eventSetGameType(class FString MapName, class FString Options, class FString Portal)
{
	static UFunction* uFnSetGameType = nullptr;

	if (!uFnSetGameType)
	{
		uFnSetGameType = UFunction::FindFunction("Function ProjectX.GameInfo_X.SetGameType");
	}

	AGameInfo_X_eventSetGameType_Params SetGameType_Params;
	memcpy_s(&SetGameType_Params.MapName, 0x10, &MapName, 0x10);
	memcpy_s(&SetGameType_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&SetGameType_Params.Portal, 0x10, &Portal, 0x10);

	AGameInfo_X::StaticClass()->ProcessEvent(uFnSetGameType, &SetGameType_Params, nullptr);

	return SetGameType_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.GetDefaultGameClassPath
// [0x400022802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Static | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  MapName                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Portal                         (CPF_Parm | CPF_NeedCtorLink)

class FString AGameInfo_X::eventGetDefaultGameClassPath(class FString MapName, class FString Options, class FString Portal)
{
	static UFunction* uFnGetDefaultGameClassPath = nullptr;

	if (!uFnGetDefaultGameClassPath)
	{
		uFnGetDefaultGameClassPath = UFunction::FindFunction("Function ProjectX.GameInfo_X.GetDefaultGameClassPath");
	}

	AGameInfo_X_eventGetDefaultGameClassPath_Params GetDefaultGameClassPath_Params;
	memcpy_s(&GetDefaultGameClassPath_Params.MapName, 0x10, &MapName, 0x10);
	memcpy_s(&GetDefaultGameClassPath_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&GetDefaultGameClassPath_Params.Portal, 0x10, &Portal, 0x10);

	AGameInfo_X::StaticClass()->ProcessEvent(uFnGetDefaultGameClassPath, &GetDefaultGameClassPath_Params, nullptr);

	return GetDefaultGameClassPath_Params.ReturnValue;
};

// Function ProjectX.GameInfo_X.PDI
// [0x00024203] (FUNC_Final | FUNC_RequiredAPI | FUNC_Exec | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ActorClass                     (CPF_Parm)
// unsigned long                  bOnlybDebug                    (CPF_OptionalParm | CPF_Parm)

void AGameInfo_X::PDI(class UClass* ActorClass, unsigned long bOnlybDebug)
{
	static UFunction* uFnPDI = nullptr;

	if (!uFnPDI)
	{
		uFnPDI = UFunction::FindFunction("Function ProjectX.GameInfo_X.PDI");
	}

	AGameInfo_X_execPDI_Params PDI_Params;
	memcpy_s(&PDI_Params.ActorClass, 0x8, &ActorClass, 0x8);
	PDI_Params.bOnlybDebug = bOnlybDebug;

	this->ProcessEvent(uFnPDI, &PDI_Params, nullptr);
};

// Function ProjectX.GameInfo_X.InitGame
// [0x400420802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ErrorMessage                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void AGameInfo_X::eventInitGame(class FString Options, class FString& ErrorMessage)
{
	static UFunction* uFnInitGame = nullptr;

	if (!uFnInitGame)
	{
		uFnInitGame = UFunction::FindFunction("Function ProjectX.GameInfo_X.InitGame");
	}

	AGameInfo_X_eventInitGame_Params InitGame_Params;
	memcpy_s(&InitGame_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&InitGame_Params.ErrorMessage, 0x10, &ErrorMessage, 0x10);

	this->ProcessEvent(uFnInitGame, &InitGame_Params, nullptr);

	memcpy_s(&ErrorMessage, 0x10, &InitGame_Params.ErrorMessage, 0x10);
};

// Function ProjectX.GameInfo_X.EventInit
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             G                              (CPF_Parm)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)

void AGameInfo_X::EventInit(class AGameInfo_X* G, class FString Options)
{
	static UFunction* uFnEventInit = nullptr;

	if (!uFnEventInit)
	{
		uFnEventInit = UFunction::FindFunction("Function ProjectX.GameInfo_X.EventInit");
	}

	AGameInfo_X_execEventInit_Params EventInit_Params;
	memcpy_s(&EventInit_Params.G, 0x8, &G, 0x8);
	memcpy_s(&EventInit_Params.Options, 0x10, &Options, 0x10);

	this->ProcessEvent(uFnEventInit, &EventInit_Params, nullptr);
};

// Function ProjectX.GameInfo_X.EventSpawned
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             G                              (CPF_Parm)

void AGameInfo_X::EventSpawned(class AGameInfo_X* G)
{
	static UFunction* uFnEventSpawned = nullptr;

	if (!uFnEventSpawned)
	{
		uFnEventSpawned = UFunction::FindFunction("Function ProjectX.GameInfo_X.EventSpawned");
	}

	AGameInfo_X_execEventSpawned_Params EventSpawned_Params;
	memcpy_s(&EventSpawned_Params.G, 0x8, &G, 0x8);

	this->ProcessEvent(uFnEventSpawned, &EventSpawned_Params, nullptr);
};

// Function ProjectX.GameSetting_X.__GameSetting_X__IsSettingHidden_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FGameSettingHidingOverride SO                             (CPF_Parm)

bool UGameSetting_X::__GameSetting_X__IsSettingHidden_0x1(struct FGameSettingHidingOverride SO)
{
	static UFunction* uFn__GameSetting_X__IsSettingHidden_0x1 = nullptr;

	if (!uFn__GameSetting_X__IsSettingHidden_0x1)
	{
		uFn__GameSetting_X__IsSettingHidden_0x1 = UFunction::FindFunction("Function ProjectX.GameSetting_X.__GameSetting_X__IsSettingHidden_0x1");
	}

	UGameSetting_X_exec__GameSetting_X__IsSettingHidden_0x1_Params __GameSetting_X__IsSettingHidden_0x1_Params;
	memcpy_s(&__GameSetting_X__IsSettingHidden_0x1_Params.SO, 0xC, &SO, 0xC);

	this->ProcessEvent(uFn__GameSetting_X__IsSettingHidden_0x1, &__GameSetting_X__IsSettingHidden_0x1_Params, nullptr);

	return __GameSetting_X__IsSettingHidden_0x1_Params.ReturnValue;
};

// Function ProjectX.GameSetting_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UGameSetting_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.GameSetting_X.PrintDebugInfo");
	}

	UGameSetting_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.GameSetting_X.IsSettingHidden
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSetting_X::IsSettingHidden()
{
	static UFunction* uFnIsSettingHidden = nullptr;

	if (!uFnIsSettingHidden)
	{
		uFnIsSettingHidden = UFunction::FindFunction("Function ProjectX.GameSetting_X.IsSettingHidden");
	}

	UGameSetting_X_execIsSettingHidden_Params IsSettingHidden_Params;

	this->ProcessEvent(uFnIsSettingHidden, &IsSettingHidden_Params, nullptr);

	return IsSettingHidden_Params.ReturnValue;
};

// Function ProjectX.GameSetting_X.SetHidden
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bNewHidden                     (CPF_Parm)

void UGameSetting_X::SetHidden(unsigned long bNewHidden)
{
	static UFunction* uFnSetHidden = nullptr;

	if (!uFnSetHidden)
	{
		uFnSetHidden = UFunction::FindFunction("Function ProjectX.GameSetting_X.SetHidden");
	}

	UGameSetting_X_execSetHidden_Params SetHidden_Params;
	SetHidden_Params.bNewHidden = bNewHidden;

	this->ProcessEvent(uFnSetHidden, &SetHidden_Params, nullptr);
};

// Function ProjectX.GameSetting_X.IsSetting
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   SettingName                    (CPF_Parm)

bool UGameSetting_X::IsSetting(struct FName SettingName)
{
	static UFunction* uFnIsSetting = nullptr;

	if (!uFnIsSetting)
	{
		uFnIsSetting = UFunction::FindFunction("Function ProjectX.GameSetting_X.IsSetting");
	}

	UGameSetting_X_execIsSetting_Params IsSetting_Params;
	memcpy_s(&IsSetting_Params.SettingName, 0x8, &SettingName, 0x8);

	this->ProcessEvent(uFnIsSetting, &IsSetting_Params, nullptr);

	return IsSetting_Params.ReturnValue;
};

// Function ProjectX.GameSetting_X.AddGameSettingToList
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameSettings_X*   OnlineGameSettings             (CPF_Parm)
// TArray<class UGameSetting_X*>  GameSettingsArray              (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGameSetting_X::AddGameSettingToList(class UOnlineGameSettings_X* OnlineGameSettings, TArray<class UGameSetting_X*>& GameSettingsArray)
{
	static UFunction* uFnAddGameSettingToList = nullptr;

	if (!uFnAddGameSettingToList)
	{
		uFnAddGameSettingToList = UFunction::FindFunction("Function ProjectX.GameSetting_X.AddGameSettingToList");
	}

	UGameSetting_X_execAddGameSettingToList_Params AddGameSettingToList_Params;
	memcpy_s(&AddGameSettingToList_Params.OnlineGameSettings, 0x8, &OnlineGameSettings, 0x8);
	memcpy_s(&AddGameSettingToList_Params.GameSettingsArray, 0x10, &GameSettingsArray, 0x10);

	uFnAddGameSettingToList->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddGameSettingToList, &AddGameSettingToList_Params, nullptr);

	uFnAddGameSettingToList->FunctionFlags |= 0x400;

	memcpy_s(&GameSettingsArray, 0x10, &AddGameSettingToList_Params.GameSettingsArray, 0x10);
};

// Function ProjectX.GameSettingCategory_X.__GameSettingCategory_X__GetGameSettingIndex_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGameSetting_X*          GS                             (CPF_Parm)

bool UGameSettingCategory_X::__GameSettingCategory_X__GetGameSettingIndex_0x1(class UGameSetting_X* GS)
{
	static UFunction* uFn__GameSettingCategory_X__GetGameSettingIndex_0x1 = nullptr;

	if (!uFn__GameSettingCategory_X__GetGameSettingIndex_0x1)
	{
		uFn__GameSettingCategory_X__GetGameSettingIndex_0x1 = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.__GameSettingCategory_X__GetGameSettingIndex_0x1");
	}

	UGameSettingCategory_X_exec__GameSettingCategory_X__GetGameSettingIndex_0x1_Params __GameSettingCategory_X__GetGameSettingIndex_0x1_Params;
	memcpy_s(&__GameSettingCategory_X__GetGameSettingIndex_0x1_Params.GS, 0x8, &GS, 0x8);

	this->ProcessEvent(uFn__GameSettingCategory_X__GetGameSettingIndex_0x1, &__GameSettingCategory_X__GetGameSettingIndex_0x1_Params, nullptr);

	return __GameSettingCategory_X__GetGameSettingIndex_0x1_Params.ReturnValue;
};

// Function ProjectX.GameSettingCategory_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UGameSettingCategory_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.PrintDebugInfo");
	}

	UGameSettingCategory_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.GameSettingCategory_X.GetGameSettingIndex
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   SettingName                    (CPF_Parm)
// unsigned long                  bIgnoreHidden                  (CPF_OptionalParm | CPF_Parm)

int32_t UGameSettingCategory_X::GetGameSettingIndex(struct FName SettingName, unsigned long bIgnoreHidden)
{
	static UFunction* uFnGetGameSettingIndex = nullptr;

	if (!uFnGetGameSettingIndex)
	{
		uFnGetGameSettingIndex = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.GetGameSettingIndex");
	}

	UGameSettingCategory_X_execGetGameSettingIndex_Params GetGameSettingIndex_Params;
	memcpy_s(&GetGameSettingIndex_Params.SettingName, 0x8, &SettingName, 0x8);
	GetGameSettingIndex_Params.bIgnoreHidden = bIgnoreHidden;

	this->ProcessEvent(uFnGetGameSettingIndex, &GetGameSettingIndex_Params, nullptr);

	return GetGameSettingIndex_Params.ReturnValue;
};

// Function ProjectX.GameSettingCategory_X.HasSetting
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   SettingName                    (CPF_Parm)

bool UGameSettingCategory_X::eventHasSetting(struct FName SettingName)
{
	static UFunction* uFnHasSetting = nullptr;

	if (!uFnHasSetting)
	{
		uFnHasSetting = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.HasSetting");
	}

	UGameSettingCategory_X_eventHasSetting_Params HasSetting_Params;
	memcpy_s(&HasSetting_Params.SettingName, 0x8, &SettingName, 0x8);

	this->ProcessEvent(uFnHasSetting, &HasSetting_Params, nullptr);

	return HasSetting_Params.ReturnValue;
};

// Function ProjectX.GameSettingCategory_X.GetSelectedGameSettings
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class UGameSetting_X*>  SelectedGameSettings           (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGameSettingCategory_X::GetSelectedGameSettings(TArray<class UGameSetting_X*>& SelectedGameSettings)
{
	static UFunction* uFnGetSelectedGameSettings = nullptr;

	if (!uFnGetSelectedGameSettings)
	{
		uFnGetSelectedGameSettings = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.GetSelectedGameSettings");
	}

	UGameSettingCategory_X_execGetSelectedGameSettings_Params GetSelectedGameSettings_Params;
	memcpy_s(&GetSelectedGameSettings_Params.SelectedGameSettings, 0x10, &SelectedGameSettings, 0x10);

	this->ProcessEvent(uFnGetSelectedGameSettings, &GetSelectedGameSettings_Params, nullptr);

	memcpy_s(&SelectedGameSettings, 0x10, &GetSelectedGameSettings_Params.SelectedGameSettings, 0x10);
};

// Function ProjectX.GameSettingCategory_X.GetFirstSelectedGameSetting
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSetting_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGameSetting_X* UGameSettingCategory_X::GetFirstSelectedGameSetting()
{
	static UFunction* uFnGetFirstSelectedGameSetting = nullptr;

	if (!uFnGetFirstSelectedGameSetting)
	{
		uFnGetFirstSelectedGameSetting = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.GetFirstSelectedGameSetting");
	}

	UGameSettingCategory_X_execGetFirstSelectedGameSetting_Params GetFirstSelectedGameSetting_Params;

	this->ProcessEvent(uFnGetFirstSelectedGameSetting, &GetFirstSelectedGameSetting_Params, nullptr);

	return GetFirstSelectedGameSetting_Params.ReturnValue;
};

// Function ProjectX.GameSettingCategory_X.ClearSelected
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGameSettingCategory_X::ClearSelected()
{
	static UFunction* uFnClearSelected = nullptr;

	if (!uFnClearSelected)
	{
		uFnClearSelected = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.ClearSelected");
	}

	UGameSettingCategory_X_execClearSelected_Params ClearSelected_Params;

	this->ProcessEvent(uFnClearSelected, &ClearSelected_Params, nullptr);
};

// Function ProjectX.GameSettingCategory_X.AddSelectedSetting
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   NewSelectedName                (CPF_Parm)

void UGameSettingCategory_X::AddSelectedSetting(struct FName NewSelectedName)
{
	static UFunction* uFnAddSelectedSetting = nullptr;

	if (!uFnAddSelectedSetting)
	{
		uFnAddSelectedSetting = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.AddSelectedSetting");
	}

	UGameSettingCategory_X_execAddSelectedSetting_Params AddSelectedSetting_Params;
	memcpy_s(&AddSelectedSetting_Params.NewSelectedName, 0x8, &NewSelectedName, 0x8);

	this->ProcessEvent(uFnAddSelectedSetting, &AddSelectedSetting_Params, nullptr);
};

// Function ProjectX.GameSettingCategory_X.SetGameSettings
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class UGameSetting_X*>  NewGameSettings                (CPF_Parm | CPF_NeedCtorLink)

void UGameSettingCategory_X::SetGameSettings(TArray<class UGameSetting_X*> NewGameSettings)
{
	static UFunction* uFnSetGameSettings = nullptr;

	if (!uFnSetGameSettings)
	{
		uFnSetGameSettings = UFunction::FindFunction("Function ProjectX.GameSettingCategory_X.SetGameSettings");
	}

	UGameSettingCategory_X_execSetGameSettings_Params SetGameSettings_Params;
	memcpy_s(&SetGameSettings_Params.NewGameSettings, 0x10, &NewGameSettings, 0x10);

	this->ProcessEvent(uFnSetGameSettings, &SetGameSettings_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.HasFocus
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameViewportClient_X::HasFocus()
{
	static UFunction* uFnHasFocus = nullptr;

	if (!uFnHasFocus)
	{
		uFnHasFocus = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.HasFocus");
	}

	UGameViewportClient_X_execHasFocus_Params HasFocus_Params;

	uFnHasFocus->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHasFocus, &HasFocus_Params, nullptr);

	uFnHasFocus->FunctionFlags |= 0x400;

	return HasFocus_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.OnPrimaryPlayerSwitch
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            OldPrimaryPlayer               (CPF_Parm)
// class ULocalPlayer*            NewPrimaryPlayer               (CPF_Parm)

void UGameViewportClient_X::OnPrimaryPlayerSwitch(class ULocalPlayer* OldPrimaryPlayer, class ULocalPlayer* NewPrimaryPlayer)
{
	static UFunction* uFnOnPrimaryPlayerSwitch = nullptr;

	if (!uFnOnPrimaryPlayerSwitch)
	{
		uFnOnPrimaryPlayerSwitch = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.OnPrimaryPlayerSwitch");
	}

	UGameViewportClient_X_execOnPrimaryPlayerSwitch_Params OnPrimaryPlayerSwitch_Params;
	memcpy_s(&OnPrimaryPlayerSwitch_Params.OldPrimaryPlayer, 0x8, &OldPrimaryPlayer, 0x8);
	memcpy_s(&OnPrimaryPlayerSwitch_Params.NewPrimaryPlayer, 0x8, &NewPrimaryPlayer, 0x8);

	this->ProcessEvent(uFnOnPrimaryPlayerSwitch, &OnPrimaryPlayerSwitch_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.ForceRemovePlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULocalPlayer*            ExPlayer                       (CPF_Parm)

bool UGameViewportClient_X::ForceRemovePlayer(class ULocalPlayer* ExPlayer)
{
	static UFunction* uFnForceRemovePlayer = nullptr;

	if (!uFnForceRemovePlayer)
	{
		uFnForceRemovePlayer = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.ForceRemovePlayer");
	}

	UGameViewportClient_X_execForceRemovePlayer_Params ForceRemovePlayer_Params;
	memcpy_s(&ForceRemovePlayer_Params.ExPlayer, 0x8, &ExPlayer, 0x8);

	this->ProcessEvent(uFnForceRemovePlayer, &ForceRemovePlayer_Params, nullptr);

	return ForceRemovePlayer_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.RemovePlayer
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULocalPlayer*            ExPlayer                       (CPF_Parm)

bool UGameViewportClient_X::eventRemovePlayer(class ULocalPlayer* ExPlayer)
{
	static UFunction* uFnRemovePlayer = nullptr;

	if (!uFnRemovePlayer)
	{
		uFnRemovePlayer = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.RemovePlayer");
	}

	UGameViewportClient_X_eventRemovePlayer_Params RemovePlayer_Params;
	memcpy_s(&RemovePlayer_Params.ExPlayer, 0x8, &ExPlayer, 0x8);

	this->ProcessEvent(uFnRemovePlayer, &RemovePlayer_Params, nullptr);

	return RemovePlayer_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.RemovePlayerByID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ControllerId                   (CPF_Parm)

bool UGameViewportClient_X::RemovePlayerByID(int32_t ControllerId)
{
	static UFunction* uFnRemovePlayerByID = nullptr;

	if (!uFnRemovePlayerByID)
	{
		uFnRemovePlayerByID = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.RemovePlayerByID");
	}

	UGameViewportClient_X_execRemovePlayerByID_Params RemovePlayerByID_Params;
	memcpy_s(&RemovePlayerByID_Params.ControllerId, 0x4, &ControllerId, 0x4);

	this->ProcessEvent(uFnRemovePlayerByID, &RemovePlayerByID_Params, nullptr);

	return RemovePlayerByID_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.SetHardwareMouseCursorVisibility
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bIsVisible                     (CPF_Parm)

void UGameViewportClient_X::eventSetHardwareMouseCursorVisibility(unsigned long bIsVisible)
{
	static UFunction* uFnSetHardwareMouseCursorVisibility = nullptr;

	if (!uFnSetHardwareMouseCursorVisibility)
	{
		uFnSetHardwareMouseCursorVisibility = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.SetHardwareMouseCursorVisibility");
	}

	UGameViewportClient_X_eventSetHardwareMouseCursorVisibility_Params SetHardwareMouseCursorVisibility_Params;
	SetHardwareMouseCursorVisibility_Params.bIsVisible = bIsVisible;

	this->ProcessEvent(uFnSetHardwareMouseCursorVisibility, &SetHardwareMouseCursorVisibility_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.NotifyConnectionError
// [0x400024002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// uint8_t                        MessageType                    (CPF_Parm)
// class FString                  Message                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// class FString                  Title                          (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UGameViewportClient_X::NotifyConnectionError(uint8_t MessageType, class FString Message, class FString Title)
{
	static UFunction* uFnNotifyConnectionError = nullptr;

	if (!uFnNotifyConnectionError)
	{
		uFnNotifyConnectionError = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.NotifyConnectionError");
	}

	UGameViewportClient_X_execNotifyConnectionError_Params NotifyConnectionError_Params;
	memcpy_s(&NotifyConnectionError_Params.MessageType, 0x1, &MessageType, 0x1);
	memcpy_s(&NotifyConnectionError_Params.Message, 0x10, &Message, 0x10);
	memcpy_s(&NotifyConnectionError_Params.Title, 0x10, &Title, 0x10);

	this->ProcessEvent(uFnNotifyConnectionError, &NotifyConnectionError_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.SetProgressMessage
// [0x400024802] (FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// uint8_t                        MessageType                    (CPF_Parm)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Title                          (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bIgnoreFutureNetworkMessages   (CPF_OptionalParm | CPF_Parm)

void UGameViewportClient_X::eventSetProgressMessage(uint8_t MessageType, class FString Message, class FString Title, unsigned long bIgnoreFutureNetworkMessages)
{
	static UFunction* uFnSetProgressMessage = nullptr;

	if (!uFnSetProgressMessage)
	{
		uFnSetProgressMessage = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.SetProgressMessage");
	}

	UGameViewportClient_X_eventSetProgressMessage_Params SetProgressMessage_Params;
	memcpy_s(&SetProgressMessage_Params.MessageType, 0x1, &MessageType, 0x1);
	memcpy_s(&SetProgressMessage_Params.Message, 0x10, &Message, 0x10);
	memcpy_s(&SetProgressMessage_Params.Title, 0x10, &Title, 0x10);
	SetProgressMessage_Params.bIgnoreFutureNetworkMessages = bIgnoreFutureNetworkMessages;

	this->ProcessEvent(uFnSetProgressMessage, &SetProgressMessage_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.CreatePlayer
// [0x400420802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ControllerId                   (CPF_Parm)
// unsigned long                  bSpawnActor                    (CPF_Parm)
// class FString                  OutError                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class ULocalPlayer* UGameViewportClient_X::eventCreatePlayer(int32_t ControllerId, unsigned long bSpawnActor, class FString& OutError)
{
	static UFunction* uFnCreatePlayer = nullptr;

	if (!uFnCreatePlayer)
	{
		uFnCreatePlayer = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.CreatePlayer");
	}

	UGameViewportClient_X_eventCreatePlayer_Params CreatePlayer_Params;
	memcpy_s(&CreatePlayer_Params.ControllerId, 0x4, &ControllerId, 0x4);
	CreatePlayer_Params.bSpawnActor = bSpawnActor;
	memcpy_s(&CreatePlayer_Params.OutError, 0x10, &OutError, 0x10);

	this->ProcessEvent(uFnCreatePlayer, &CreatePlayer_Params, nullptr);

	memcpy_s(&OutError, 0x10, &CreatePlayer_Params.OutError, 0x10);

	return CreatePlayer_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.NotifyPlayerRemoved
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlayerIndex                    (CPF_Parm)
// class ULocalPlayer*            RemovedPlayer                  (CPF_Parm)

void UGameViewportClient_X::NotifyPlayerRemoved(int32_t PlayerIndex, class ULocalPlayer* RemovedPlayer)
{
	static UFunction* uFnNotifyPlayerRemoved = nullptr;

	if (!uFnNotifyPlayerRemoved)
	{
		uFnNotifyPlayerRemoved = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.NotifyPlayerRemoved");
	}

	UGameViewportClient_X_execNotifyPlayerRemoved_Params NotifyPlayerRemoved_Params;
	memcpy_s(&NotifyPlayerRemoved_Params.PlayerIndex, 0x4, &PlayerIndex, 0x4);
	memcpy_s(&NotifyPlayerRemoved_Params.RemovedPlayer, 0x8, &RemovedPlayer, 0x8);

	this->ProcessEvent(uFnNotifyPlayerRemoved, &NotifyPlayerRemoved_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.NotifyPlayerAdded
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlayerIndex                    (CPF_Parm)
// class ULocalPlayer*            AddedPlayer                    (CPF_Parm)

void UGameViewportClient_X::NotifyPlayerAdded(int32_t PlayerIndex, class ULocalPlayer* AddedPlayer)
{
	static UFunction* uFnNotifyPlayerAdded = nullptr;

	if (!uFnNotifyPlayerAdded)
	{
		uFnNotifyPlayerAdded = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.NotifyPlayerAdded");
	}

	UGameViewportClient_X_execNotifyPlayerAdded_Params NotifyPlayerAdded_Params;
	memcpy_s(&NotifyPlayerAdded_Params.PlayerIndex, 0x4, &PlayerIndex, 0x4);
	memcpy_s(&NotifyPlayerAdded_Params.AddedPlayer, 0x8, &AddedPlayer, 0x8);

	this->ProcessEvent(uFnNotifyPlayerAdded, &NotifyPlayerAdded_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.ShouldMuteAudioWhenUnfocused
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameViewportClient_X::ShouldMuteAudioWhenUnfocused()
{
	static UFunction* uFnShouldMuteAudioWhenUnfocused = nullptr;

	if (!uFnShouldMuteAudioWhenUnfocused)
	{
		uFnShouldMuteAudioWhenUnfocused = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.ShouldMuteAudioWhenUnfocused");
	}

	UGameViewportClient_X_execShouldMuteAudioWhenUnfocused_Params ShouldMuteAudioWhenUnfocused_Params;

	uFnShouldMuteAudioWhenUnfocused->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnShouldMuteAudioWhenUnfocused, &ShouldMuteAudioWhenUnfocused_Params, nullptr);

	uFnShouldMuteAudioWhenUnfocused->FunctionFlags |= 0x400;

	return ShouldMuteAudioWhenUnfocused_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.PlatformSupportsMuteOnFocusLostOption
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameViewportClient_X::PlatformSupportsMuteOnFocusLostOption()
{
	static UFunction* uFnPlatformSupportsMuteOnFocusLostOption = nullptr;

	if (!uFnPlatformSupportsMuteOnFocusLostOption)
	{
		uFnPlatformSupportsMuteOnFocusLostOption = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.PlatformSupportsMuteOnFocusLostOption");
	}

	UGameViewportClient_X_execPlatformSupportsMuteOnFocusLostOption_Params PlatformSupportsMuteOnFocusLostOption_Params;

	uFnPlatformSupportsMuteOnFocusLostOption->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnPlatformSupportsMuteOnFocusLostOption, &PlatformSupportsMuteOnFocusLostOption_Params, nullptr);

	uFnPlatformSupportsMuteOnFocusLostOption->FunctionFlags |= 0x400;

	return PlatformSupportsMuteOnFocusLostOption_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.IsGameRecordingEnabled
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameViewportClient_X::IsGameRecordingEnabled()
{
	static UFunction* uFnIsGameRecordingEnabled = nullptr;

	if (!uFnIsGameRecordingEnabled)
	{
		uFnIsGameRecordingEnabled = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.IsGameRecordingEnabled");
	}

	UGameViewportClient_X_execIsGameRecordingEnabled_Params IsGameRecordingEnabled_Params;

	uFnIsGameRecordingEnabled->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsGameRecordingEnabled, &IsGameRecordingEnabled_Params, nullptr);

	uFnIsGameRecordingEnabled->FunctionFlags |= 0x400;

	return IsGameRecordingEnabled_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.GetDefaultSafeZone
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UGameViewportClient_X::GetDefaultSafeZone()
{
	static UFunction* uFnGetDefaultSafeZone = nullptr;

	if (!uFnGetDefaultSafeZone)
	{
		uFnGetDefaultSafeZone = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.GetDefaultSafeZone");
	}

	UGameViewportClient_X_execGetDefaultSafeZone_Params GetDefaultSafeZone_Params;

	uFnGetDefaultSafeZone->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetDefaultSafeZone, &GetDefaultSafeZone_Params, nullptr);

	uFnGetDefaultSafeZone->FunctionFlags |= 0x400;

	return GetDefaultSafeZone_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.FlashWindow
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGameViewportClient_X::FlashWindow()
{
	static UFunction* uFnFlashWindow = nullptr;

	if (!uFnFlashWindow)
	{
		uFnFlashWindow = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.FlashWindow");
	}

	UGameViewportClient_X_execFlashWindow_Params FlashWindow_Params;

	uFnFlashWindow->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlashWindow, &FlashWindow_Params, nullptr);

	uFnFlashWindow->FunctionFlags |= 0x400;
};

// Function ProjectX.GameViewportClient_X.SaveCurrentWindowState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGameViewportClient_X::SaveCurrentWindowState()
{
	static UFunction* uFnSaveCurrentWindowState = nullptr;

	if (!uFnSaveCurrentWindowState)
	{
		uFnSaveCurrentWindowState = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.SaveCurrentWindowState");
	}

	UGameViewportClient_X_execSaveCurrentWindowState_Params SaveCurrentWindowState_Params;

	uFnSaveCurrentWindowState->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSaveCurrentWindowState, &SaveCurrentWindowState_Params, nullptr);

	uFnSaveCurrentWindowState->FunctionFlags |= 0x400;
};

// Function ProjectX.GameViewportClient_X.SaveWindowState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ResX                           (CPF_Parm | CPF_CoerceParm)
// int32_t                        ResY                           (CPF_Parm | CPF_CoerceParm)
// unsigned long                  bFullScreen                    (CPF_Parm)
// unsigned long                  bBorderless                    (CPF_Parm)
// unsigned long                  bVsync                         (CPF_Parm)

void UGameViewportClient_X::SaveWindowState(int32_t ResX, int32_t ResY, unsigned long bFullScreen, unsigned long bBorderless, unsigned long bVsync)
{
	static UFunction* uFnSaveWindowState = nullptr;

	if (!uFnSaveWindowState)
	{
		uFnSaveWindowState = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.SaveWindowState");
	}

	UGameViewportClient_X_execSaveWindowState_Params SaveWindowState_Params;
	memcpy_s(&SaveWindowState_Params.ResX, 0x4, &ResX, 0x4);
	memcpy_s(&SaveWindowState_Params.ResY, 0x4, &ResY, 0x4);
	SaveWindowState_Params.bFullScreen = bFullScreen;
	SaveWindowState_Params.bBorderless = bBorderless;
	SaveWindowState_Params.bVsync = bVsync;

	uFnSaveWindowState->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSaveWindowState, &SaveWindowState_Params, nullptr);

	uFnSaveWindowState->FunctionFlags |= 0x400;
};

// Function ProjectX.GameViewportClient_X.GetAvailableRefreshRates
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<int32_t>                RefreshRates                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGameViewportClient_X::GetAvailableRefreshRates(TArray<int32_t>& RefreshRates)
{
	static UFunction* uFnGetAvailableRefreshRates = nullptr;

	if (!uFnGetAvailableRefreshRates)
	{
		uFnGetAvailableRefreshRates = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.GetAvailableRefreshRates");
	}

	UGameViewportClient_X_execGetAvailableRefreshRates_Params GetAvailableRefreshRates_Params;
	memcpy_s(&GetAvailableRefreshRates_Params.RefreshRates, 0x10, &RefreshRates, 0x10);

	uFnGetAvailableRefreshRates->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetAvailableRefreshRates, &GetAvailableRefreshRates_Params, nullptr);

	uFnGetAvailableRefreshRates->FunctionFlags |= 0x400;

	memcpy_s(&RefreshRates, 0x10, &GetAvailableRefreshRates_Params.RefreshRates, 0x10);

	return GetAvailableRefreshRates_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.GetAvailableResolutions
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FIntPoint>       Resolutions                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGameViewportClient_X::GetAvailableResolutions(TArray<struct FIntPoint>& Resolutions)
{
	static UFunction* uFnGetAvailableResolutions = nullptr;

	if (!uFnGetAvailableResolutions)
	{
		uFnGetAvailableResolutions = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.GetAvailableResolutions");
	}

	UGameViewportClient_X_execGetAvailableResolutions_Params GetAvailableResolutions_Params;
	memcpy_s(&GetAvailableResolutions_Params.Resolutions, 0x10, &Resolutions, 0x10);

	uFnGetAvailableResolutions->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetAvailableResolutions, &GetAvailableResolutions_Params, nullptr);

	uFnGetAvailableResolutions->FunctionFlags |= 0x400;

	memcpy_s(&Resolutions, 0x10, &GetAvailableResolutions_Params.Resolutions, 0x10);

	return GetAvailableResolutions_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.GetAvailableResolutionsStr
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<class FString>          Resolutions                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGameViewportClient_X::GetAvailableResolutionsStr(TArray<class FString>& Resolutions)
{
	static UFunction* uFnGetAvailableResolutionsStr = nullptr;

	if (!uFnGetAvailableResolutionsStr)
	{
		uFnGetAvailableResolutionsStr = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.GetAvailableResolutionsStr");
	}

	UGameViewportClient_X_execGetAvailableResolutionsStr_Params GetAvailableResolutionsStr_Params;
	memcpy_s(&GetAvailableResolutionsStr_Params.Resolutions, 0x10, &Resolutions, 0x10);

	uFnGetAvailableResolutionsStr->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetAvailableResolutionsStr, &GetAvailableResolutionsStr_Params, nullptr);

	uFnGetAvailableResolutionsStr->FunctionFlags |= 0x400;

	memcpy_s(&Resolutions, 0x10, &GetAvailableResolutionsStr_Params.Resolutions, 0x10);

	return GetAvailableResolutionsStr_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.IsBorderlessViewport
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameViewportClient_X::IsBorderlessViewport()
{
	static UFunction* uFnIsBorderlessViewport = nullptr;

	if (!uFnIsBorderlessViewport)
	{
		uFnIsBorderlessViewport = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.IsBorderlessViewport");
	}

	UGameViewportClient_X_execIsBorderlessViewport_Params IsBorderlessViewport_Params;

	uFnIsBorderlessViewport->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsBorderlessViewport, &IsBorderlessViewport_Params, nullptr);

	uFnIsBorderlessViewport->FunctionFlags |= 0x400;

	return IsBorderlessViewport_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.GetViewportSizePoint
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FIntPoint               ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FIntPoint UGameViewportClient_X::GetViewportSizePoint()
{
	static UFunction* uFnGetViewportSizePoint = nullptr;

	if (!uFnGetViewportSizePoint)
	{
		uFnGetViewportSizePoint = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.GetViewportSizePoint");
	}

	UGameViewportClient_X_execGetViewportSizePoint_Params GetViewportSizePoint_Params;

	uFnGetViewportSizePoint->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetViewportSizePoint, &GetViewportSizePoint_Params, nullptr);

	uFnGetViewportSizePoint->FunctionFlags |= 0x400;

	return GetViewportSizePoint_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.GetViewportSizeStr
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGameViewportClient_X::GetViewportSizeStr()
{
	static UFunction* uFnGetViewportSizeStr = nullptr;

	if (!uFnGetViewportSizeStr)
	{
		uFnGetViewportSizeStr = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.GetViewportSizeStr");
	}

	UGameViewportClient_X_execGetViewportSizeStr_Params GetViewportSizeStr_Params;

	uFnGetViewportSizeStr->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetViewportSizeStr, &GetViewportSizeStr_Params, nullptr);

	uFnGetViewportSizeStr->FunctionFlags |= 0x400;

	return GetViewportSizeStr_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.GetInstance
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameViewportClient_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGameViewportClient_X* UGameViewportClient_X::GetInstance()
{
	static UFunction* uFnGetInstance = nullptr;

	if (!uFnGetInstance)
	{
		uFnGetInstance = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.GetInstance");
	}

	UGameViewportClient_X_execGetInstance_Params GetInstance_Params;

	UGameViewportClient_X::StaticClass()->ProcessEvent(uFnGetInstance, &GetInstance_Params, nullptr);

	return GetInstance_Params.ReturnValue;
};

// Function ProjectX.GameViewportClient_X.EventFocusChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bInHasFocus                    (CPF_Parm)

void UGameViewportClient_X::EventFocusChanged(unsigned long bInHasFocus)
{
	static UFunction* uFnEventFocusChanged = nullptr;

	if (!uFnEventFocusChanged)
	{
		uFnEventFocusChanged = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.EventFocusChanged");
	}

	UGameViewportClient_X_execEventFocusChanged_Params EventFocusChanged_Params;
	EventFocusChanged_Params.bInHasFocus = bInHasFocus;

	this->ProcessEvent(uFnEventFocusChanged, &EventFocusChanged_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.EventPrimaryPlayerChange
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            OldPrimaryPlayer               (CPF_Parm)
// class ULocalPlayer*            NewPrimaryPlayer               (CPF_Parm)

void UGameViewportClient_X::EventPrimaryPlayerChange(class ULocalPlayer* OldPrimaryPlayer, class ULocalPlayer* NewPrimaryPlayer)
{
	static UFunction* uFnEventPrimaryPlayerChange = nullptr;

	if (!uFnEventPrimaryPlayerChange)
	{
		uFnEventPrimaryPlayerChange = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.EventPrimaryPlayerChange");
	}

	UGameViewportClient_X_execEventPrimaryPlayerChange_Params EventPrimaryPlayerChange_Params;
	memcpy_s(&EventPrimaryPlayerChange_Params.OldPrimaryPlayer, 0x8, &OldPrimaryPlayer, 0x8);
	memcpy_s(&EventPrimaryPlayerChange_Params.NewPrimaryPlayer, 0x8, &NewPrimaryPlayer, 0x8);

	this->ProcessEvent(uFnEventPrimaryPlayerChange, &EventPrimaryPlayerChange_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.EventNotifyConnectionError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// uint8_t                        MessageType                    (CPF_Parm)
// class FString                  Title                          (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

void UGameViewportClient_X::EventNotifyConnectionError(uint8_t MessageType, class FString Title, class FString Message)
{
	static UFunction* uFnEventNotifyConnectionError = nullptr;

	if (!uFnEventNotifyConnectionError)
	{
		uFnEventNotifyConnectionError = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.EventNotifyConnectionError");
	}

	UGameViewportClient_X_execEventNotifyConnectionError_Params EventNotifyConnectionError_Params;
	memcpy_s(&EventNotifyConnectionError_Params.MessageType, 0x1, &MessageType, 0x1);
	memcpy_s(&EventNotifyConnectionError_Params.Title, 0x10, &Title, 0x10);
	memcpy_s(&EventNotifyConnectionError_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnEventNotifyConnectionError, &EventNotifyConnectionError_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.EventLocalPlayerLeave
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            OldPlayer                      (CPF_Parm)

void UGameViewportClient_X::EventLocalPlayerLeave(class ULocalPlayer* OldPlayer)
{
	static UFunction* uFnEventLocalPlayerLeave = nullptr;

	if (!uFnEventLocalPlayerLeave)
	{
		uFnEventLocalPlayerLeave = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.EventLocalPlayerLeave");
	}

	UGameViewportClient_X_execEventLocalPlayerLeave_Params EventLocalPlayerLeave_Params;
	memcpy_s(&EventLocalPlayerLeave_Params.OldPlayer, 0x8, &OldPlayer, 0x8);

	this->ProcessEvent(uFnEventLocalPlayerLeave, &EventLocalPlayerLeave_Params, nullptr);
};

// Function ProjectX.GameViewportClient_X.EventLocalPlayerJoin
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            NewPlayer                      (CPF_Parm)

void UGameViewportClient_X::EventLocalPlayerJoin(class ULocalPlayer* NewPlayer)
{
	static UFunction* uFnEventLocalPlayerJoin = nullptr;

	if (!uFnEventLocalPlayerJoin)
	{
		uFnEventLocalPlayerJoin = UFunction::FindFunction("Function ProjectX.GameViewportClient_X.EventLocalPlayerJoin");
	}

	UGameViewportClient_X_execEventLocalPlayerJoin_Params EventLocalPlayerJoin_Params;
	memcpy_s(&EventLocalPlayerJoin_Params.NewPlayer, 0x8, &NewPlayer, 0x8);

	this->ProcessEvent(uFnEventLocalPlayerJoin, &EventLocalPlayerJoin_Params, nullptr);
};

// Function ProjectX.GeForceNow_X.IsStreaming
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGeForceNow_X::IsStreaming()
{
	static UFunction* uFnIsStreaming = nullptr;

	if (!uFnIsStreaming)
	{
		uFnIsStreaming = UFunction::FindFunction("Function ProjectX.GeForceNow_X.IsStreaming");
	}

	UGeForceNow_X_execIsStreaming_Params IsStreaming_Params;

	uFnIsStreaming->FunctionFlags |= ~0x400;

	UGeForceNow_X::StaticClass()->ProcessEvent(uFnIsStreaming, &IsStreaming_Params, nullptr);

	uFnIsStreaming->FunctionFlags |= 0x400;

	return IsStreaming_Params.ReturnValue;
};

// Function ProjectX.GFxDataRow_X.FlashEventObject
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxObject*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGFxObject* UGFxDataRow_X::FlashEventObject()
{
	static UFunction* uFnFlashEventObject = nullptr;

	if (!uFnFlashEventObject)
	{
		uFnFlashEventObject = UFunction::FindFunction("Function ProjectX.GFxDataRow_X.FlashEventObject");
	}

	UGFxDataRow_X_execFlashEventObject_Params FlashEventObject_Params;

	uFnFlashEventObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlashEventObject, &FlashEventObject_Params, nullptr);

	uFnFlashEventObject->FunctionFlags |= 0x400;

	return FlashEventObject_Params.ReturnValue;
};

// Function ProjectX.GFxDataRow_X.FlashEventString
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGFxDataRow_X::FlashEventString()
{
	static UFunction* uFnFlashEventString = nullptr;

	if (!uFnFlashEventString)
	{
		uFnFlashEventString = UFunction::FindFunction("Function ProjectX.GFxDataRow_X.FlashEventString");
	}

	UGFxDataRow_X_execFlashEventString_Params FlashEventString_Params;

	uFnFlashEventString->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlashEventString, &FlashEventString_Params, nullptr);

	uFnFlashEventString->FunctionFlags |= 0x400;

	return FlashEventString_Params.ReturnValue;
};

// Function ProjectX.GFxDataRow_X.FlashEventFloat
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UGFxDataRow_X::FlashEventFloat()
{
	static UFunction* uFnFlashEventFloat = nullptr;

	if (!uFnFlashEventFloat)
	{
		uFnFlashEventFloat = UFunction::FindFunction("Function ProjectX.GFxDataRow_X.FlashEventFloat");
	}

	UGFxDataRow_X_execFlashEventFloat_Params FlashEventFloat_Params;

	uFnFlashEventFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlashEventFloat, &FlashEventFloat_Params, nullptr);

	uFnFlashEventFloat->FunctionFlags |= 0x400;

	return FlashEventFloat_Params.ReturnValue;
};

// Function ProjectX.GFxDataRow_X.FlashEventInt
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UGFxDataRow_X::FlashEventInt()
{
	static UFunction* uFnFlashEventInt = nullptr;

	if (!uFnFlashEventInt)
	{
		uFnFlashEventInt = UFunction::FindFunction("Function ProjectX.GFxDataRow_X.FlashEventInt");
	}

	UGFxDataRow_X_execFlashEventInt_Params FlashEventInt_Params;

	uFnFlashEventInt->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlashEventInt, &FlashEventInt_Params, nullptr);

	uFnFlashEventInt->FunctionFlags |= 0x400;

	return FlashEventInt_Params.ReturnValue;
};

// Function ProjectX.GFxDataRow_X.FlashEventVoid
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGFxDataRow_X::FlashEventVoid()
{
	static UFunction* uFnFlashEventVoid = nullptr;

	if (!uFnFlashEventVoid)
	{
		uFnFlashEventVoid = UFunction::FindFunction("Function ProjectX.GFxDataRow_X.FlashEventVoid");
	}

	UGFxDataRow_X_execFlashEventVoid_Params FlashEventVoid_Params;

	uFnFlashEventVoid->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlashEventVoid, &FlashEventVoid_Params, nullptr);

	uFnFlashEventVoid->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataRow_X.SetProxy
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 InProxyObject                  (CPF_Parm)

void UGFxDataRow_X::SetProxy(class UObject* InProxyObject)
{
	static UFunction* uFnSetProxy = nullptr;

	if (!uFnSetProxy)
	{
		uFnSetProxy = UFunction::FindFunction("Function ProjectX.GFxDataRow_X.SetProxy");
	}

	UGFxDataRow_X_execSetProxy_Params SetProxy_Params;
	memcpy_s(&SetProxy_Params.InProxyObject, 0x8, &InProxyObject, 0x8);

	uFnSetProxy->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetProxy, &SetProxy_Params, nullptr);

	uFnSetProxy->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataRow_X.OnRemoved
// [0x00080800] (FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UGFxDataRow_X::eventOnRemoved()
{
	static UFunction* uFnOnRemoved = nullptr;

	if (!uFnOnRemoved)
	{
		uFnOnRemoved = UFunction::FindFunction("Function ProjectX.GFxDataRow_X.OnRemoved");
	}

	UGFxDataRow_X_eventOnRemoved_Params OnRemoved_Params;

	this->ProcessEvent(uFnOnRemoved, &OnRemoved_Params, nullptr);
};

// Function ProjectX.GFxDataRow_X.OnShellSet
// [0x00080800] (FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UGFxDataRow_X::eventOnShellSet()
{
	static UFunction* uFnOnShellSet = nullptr;

	if (!uFnOnShellSet)
	{
		uFnOnShellSet = UFunction::FindFunction("Function ProjectX.GFxDataRow_X.OnShellSet");
	}

	UGFxDataRow_X_eventOnShellSet_Params OnShellSet_Params;

	this->ProcessEvent(uFnOnShellSet, &OnShellSet_Params, nullptr);
};

// Function ProjectX.GFxShell_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UGFxShell_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.GFxShell_X.PrintDebugInfo");
	}

	UGFxShell_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.GFxShell_X.SetMouseKeyPressed
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// unsigned long                  bPressed                       (CPF_Parm)

void UGFxShell_X::SetMouseKeyPressed(struct FName Key, unsigned long bPressed)
{
	static UFunction* uFnSetMouseKeyPressed = nullptr;

	if (!uFnSetMouseKeyPressed)
	{
		uFnSetMouseKeyPressed = UFunction::FindFunction("Function ProjectX.GFxShell_X.SetMouseKeyPressed");
	}

	UGFxShell_X_execSetMouseKeyPressed_Params SetMouseKeyPressed_Params;
	memcpy_s(&SetMouseKeyPressed_Params.Key, 0x8, &Key, 0x8);
	SetMouseKeyPressed_Params.bPressed = bPressed;

	uFnSetMouseKeyPressed->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetMouseKeyPressed, &SetMouseKeyPressed_Params, nullptr);

	uFnSetMouseKeyPressed->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxShell_X.HandleOnlineSubSet
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::HandleOnlineSubSet()
{
	static UFunction* uFnHandleOnlineSubSet = nullptr;

	if (!uFnHandleOnlineSubSet)
	{
		uFnHandleOnlineSubSet = UFunction::FindFunction("Function ProjectX.GFxShell_X.HandleOnlineSubSet");
	}

	UGFxShell_X_execHandleOnlineSubSet_Params HandleOnlineSubSet_Params;

	this->ProcessEvent(uFnHandleOnlineSubSet, &HandleOnlineSubSet_Params, nullptr);
};

// Function ProjectX.GFxShell_X.SetAllowAnyPlayerInput
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bAllow                         (CPF_Parm)

void UGFxShell_X::SetAllowAnyPlayerInput(unsigned long bAllow)
{
	static UFunction* uFnSetAllowAnyPlayerInput = nullptr;

	if (!uFnSetAllowAnyPlayerInput)
	{
		uFnSetAllowAnyPlayerInput = UFunction::FindFunction("Function ProjectX.GFxShell_X.SetAllowAnyPlayerInput");
	}

	UGFxShell_X_execSetAllowAnyPlayerInput_Params SetAllowAnyPlayerInput_Params;
	SetAllowAnyPlayerInput_Params.bAllow = bAllow;

	this->ProcessEvent(uFnSetAllowAnyPlayerInput, &SetAllowAnyPlayerInput_Params, nullptr);
};

// Function ProjectX.GFxShell_X.HandlePauseChanged
// [0x00088002] (FUNC_RequiredAPI | FUNC_UbergraphFunction | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::HandlePauseChanged()
{
	static UFunction* uFnHandlePauseChanged = nullptr;

	if (!uFnHandlePauseChanged)
	{
		uFnHandlePauseChanged = UFunction::FindFunction("Function ProjectX.GFxShell_X.HandlePauseChanged");
	}

	UGFxShell_X_execHandlePauseChanged_Params HandlePauseChanged_Params;

	this->ProcessEvent(uFnHandlePauseChanged, &HandlePauseChanged_Params, nullptr);
};

// Function ProjectX.GFxShell_X.OnShowKeyboardCanceled
// [0x10080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_BlueprintPure | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::OnShowKeyboardCanceled()
{
	static UFunction* uFnOnShowKeyboardCanceled = nullptr;

	if (!uFnOnShowKeyboardCanceled)
	{
		uFnOnShowKeyboardCanceled = UFunction::FindFunction("Function ProjectX.GFxShell_X.OnShowKeyboardCanceled");
	}

	UGFxShell_X_execOnShowKeyboardCanceled_Params OnShowKeyboardCanceled_Params;

	this->ProcessEvent(uFnOnShowKeyboardCanceled, &OnShowKeyboardCanceled_Params, nullptr);
};

// Function ProjectX.GFxShell_X.OnShowKeyboardComplete
// [0x10080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_BlueprintPure | FUNC_AllFlags)
// Parameter info:
// class FString                  NewText                        (CPF_Parm | CPF_NeedCtorLink)

void UGFxShell_X::OnShowKeyboardComplete(class FString NewText)
{
	static UFunction* uFnOnShowKeyboardComplete = nullptr;

	if (!uFnOnShowKeyboardComplete)
	{
		uFnOnShowKeyboardComplete = UFunction::FindFunction("Function ProjectX.GFxShell_X.OnShowKeyboardComplete");
	}

	UGFxShell_X_execOnShowKeyboardComplete_Params OnShowKeyboardComplete_Params;
	memcpy_s(&OnShowKeyboardComplete_Params.NewText, 0x10, &NewText, 0x10);

	this->ProcessEvent(uFnOnShowKeyboardComplete, &OnShowKeyboardComplete_Params, nullptr);
};

// Function ProjectX.GFxShell_X.HandleShowKeyboardComplete
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  NewText                        (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bCanceled                      (CPF_Parm)

void UGFxShell_X::HandleShowKeyboardComplete(class FString NewText, unsigned long bCanceled)
{
	static UFunction* uFnHandleShowKeyboardComplete = nullptr;

	if (!uFnHandleShowKeyboardComplete)
	{
		uFnHandleShowKeyboardComplete = UFunction::FindFunction("Function ProjectX.GFxShell_X.HandleShowKeyboardComplete");
	}

	UGFxShell_X_execHandleShowKeyboardComplete_Params HandleShowKeyboardComplete_Params;
	memcpy_s(&HandleShowKeyboardComplete_Params.NewText, 0x10, &NewText, 0x10);
	HandleShowKeyboardComplete_Params.bCanceled = bCanceled;

	this->ProcessEvent(uFnHandleShowKeyboardComplete, &HandleShowKeyboardComplete_Params, nullptr);
};

// Function ProjectX.GFxShell_X.PasteFromClipboard
// [0x08020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_BlueprintEvent | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGFxShell_X::PasteFromClipboard()
{
	static UFunction* uFnPasteFromClipboard = nullptr;

	if (!uFnPasteFromClipboard)
	{
		uFnPasteFromClipboard = UFunction::FindFunction("Function ProjectX.GFxShell_X.PasteFromClipboard");
	}

	UGFxShell_X_execPasteFromClipboard_Params PasteFromClipboard_Params;

	this->ProcessEvent(uFnPasteFromClipboard, &PasteFromClipboard_Params, nullptr);

	return PasteFromClipboard_Params.ReturnValue;
};

// Function ProjectX.GFxShell_X.CopyToClipboard
// [0x08020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_BlueprintEvent | FUNC_AllFlags)
// Parameter info:
// class FString                  ClipboardText                  (CPF_Parm | CPF_NeedCtorLink)

void UGFxShell_X::CopyToClipboard(class FString ClipboardText)
{
	static UFunction* uFnCopyToClipboard = nullptr;

	if (!uFnCopyToClipboard)
	{
		uFnCopyToClipboard = UFunction::FindFunction("Function ProjectX.GFxShell_X.CopyToClipboard");
	}

	UGFxShell_X_execCopyToClipboard_Params CopyToClipboard_Params;
	memcpy_s(&CopyToClipboard_Params.ClipboardText, 0x10, &ClipboardText, 0x10);

	this->ProcessEvent(uFnCopyToClipboard, &CopyToClipboard_Params, nullptr);
};

// Function ProjectX.GFxShell_X.HideKeyboard
// [0x08020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_BlueprintEvent | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::HideKeyboard()
{
	static UFunction* uFnHideKeyboard = nullptr;

	if (!uFnHideKeyboard)
	{
		uFnHideKeyboard = UFunction::FindFunction("Function ProjectX.GFxShell_X.HideKeyboard");
	}

	UGFxShell_X_execHideKeyboard_Params HideKeyboard_Params;

	this->ProcessEvent(uFnHideKeyboard, &HideKeyboard_Params, nullptr);
};

// Function ProjectX.GFxShell_X.ShowKeyboard
// [0x08020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_BlueprintEvent | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  TitleText                      (CPF_Parm | CPF_NeedCtorLink)
// class FString                  DescriptionText                (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bIsPassword                    (CPF_Parm)
// class FString                  DefaultText                    (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        MaxLength                      (CPF_Parm)

bool UGFxShell_X::ShowKeyboard(class FString TitleText, class FString DescriptionText, unsigned long bIsPassword, class FString DefaultText, int32_t MaxLength)
{
	static UFunction* uFnShowKeyboard = nullptr;

	if (!uFnShowKeyboard)
	{
		uFnShowKeyboard = UFunction::FindFunction("Function ProjectX.GFxShell_X.ShowKeyboard");
	}

	UGFxShell_X_execShowKeyboard_Params ShowKeyboard_Params;
	memcpy_s(&ShowKeyboard_Params.TitleText, 0x10, &TitleText, 0x10);
	memcpy_s(&ShowKeyboard_Params.DescriptionText, 0x10, &DescriptionText, 0x10);
	ShowKeyboard_Params.bIsPassword = bIsPassword;
	memcpy_s(&ShowKeyboard_Params.DefaultText, 0x10, &DefaultText, 0x10);
	memcpy_s(&ShowKeyboard_Params.MaxLength, 0x4, &MaxLength, 0x4);

	this->ProcessEvent(uFnShowKeyboard, &ShowKeyboard_Params, nullptr);

	return ShowKeyboard_Params.ReturnValue;
};

// Function ProjectX.GFxShell_X.SetGamePaused
// [0x08020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_BlueprintEvent | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bPaused                        (CPF_Parm)

void UGFxShell_X::SetGamePaused(unsigned long bPaused)
{
	static UFunction* uFnSetGamePaused = nullptr;

	if (!uFnSetGamePaused)
	{
		uFnSetGamePaused = UFunction::FindFunction("Function ProjectX.GFxShell_X.SetGamePaused");
	}

	UGFxShell_X_execSetGamePaused_Params SetGamePaused_Params;
	SetGamePaused_Params.bPaused = bPaused;

	this->ProcessEvent(uFnSetGamePaused, &SetGamePaused_Params, nullptr);
};

// Function ProjectX.GFxShell_X.ExitToMainMenu
// [0x08020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_BlueprintEvent | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::ExitToMainMenu()
{
	static UFunction* uFnExitToMainMenu = nullptr;

	if (!uFnExitToMainMenu)
	{
		uFnExitToMainMenu = UFunction::FindFunction("Function ProjectX.GFxShell_X.ExitToMainMenu");
	}

	UGFxShell_X_execExitToMainMenu_Params ExitToMainMenu_Params;

	this->ProcessEvent(uFnExitToMainMenu, &ExitToMainMenu_Params, nullptr);
};

// Function ProjectX.GFxShell_X.ExitGame
// [0x08020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_BlueprintEvent | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::ExitGame()
{
	static UFunction* uFnExitGame = nullptr;

	if (!uFnExitGame)
	{
		uFnExitGame = UFunction::FindFunction("Function ProjectX.GFxShell_X.ExitGame");
	}

	UGFxShell_X_execExitGame_Params ExitGame_Params;

	this->ProcessEvent(uFnExitGame, &ExitGame_Params, nullptr);
};

// Function ProjectX.GFxShell_X.HandleMovieInputCaptureChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UGFxMoviePlayer_X*       MoviePlayer                    (CPF_Parm)

void UGFxShell_X::HandleMovieInputCaptureChanged(class UGFxMoviePlayer_X* MoviePlayer)
{
	static UFunction* uFnHandleMovieInputCaptureChanged = nullptr;

	if (!uFnHandleMovieInputCaptureChanged)
	{
		uFnHandleMovieInputCaptureChanged = UFunction::FindFunction("Function ProjectX.GFxShell_X.HandleMovieInputCaptureChanged");
	}

	UGFxShell_X_execHandleMovieInputCaptureChanged_Params HandleMovieInputCaptureChanged_Params;
	memcpy_s(&HandleMovieInputCaptureChanged_Params.MoviePlayer, 0x8, &MoviePlayer, 0x8);

	this->ProcessEvent(uFnHandleMovieInputCaptureChanged, &HandleMovieInputCaptureChanged_Params, nullptr);
};

// Function ProjectX.GFxShell_X.TriggerDataCallbacks
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::TriggerDataCallbacks()
{
	static UFunction* uFnTriggerDataCallbacks = nullptr;

	if (!uFnTriggerDataCallbacks)
	{
		uFnTriggerDataCallbacks = UFunction::FindFunction("Function ProjectX.GFxShell_X.TriggerDataCallbacks");
	}

	UGFxShell_X_execTriggerDataCallbacks_Params TriggerDataCallbacks_Params;

	uFnTriggerDataCallbacks->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTriggerDataCallbacks, &TriggerDataCallbacks_Params, nullptr);

	uFnTriggerDataCallbacks->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxShell_X.Tick
// [0x00020C01] (FUNC_Final | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UGFxShell_X::eventTick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.GFxShell_X.Tick");
	}

	UGFxShell_X_eventTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	uFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);

	uFnTick->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxShell_X.OnMovieClosed
// [0x00080803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UGFxMoviePlayer_X*       Movie                          (CPF_Parm)

void UGFxShell_X::eventOnMovieClosed(class UGFxMoviePlayer_X* Movie)
{
	static UFunction* uFnOnMovieClosed = nullptr;

	if (!uFnOnMovieClosed)
	{
		uFnOnMovieClosed = UFunction::FindFunction("Function ProjectX.GFxShell_X.OnMovieClosed");
	}

	UGFxShell_X_eventOnMovieClosed_Params OnMovieClosed_Params;
	memcpy_s(&OnMovieClosed_Params.Movie, 0x8, &Movie, 0x8);

	this->ProcessEvent(uFnOnMovieClosed, &OnMovieClosed_Params, nullptr);
};

// Function ProjectX.GFxShell_X.OnMovieStarted
// [0x00080803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UGFxMoviePlayer_X*       Movie                          (CPF_Parm)

void UGFxShell_X::eventOnMovieStarted(class UGFxMoviePlayer_X* Movie)
{
	static UFunction* uFnOnMovieStarted = nullptr;

	if (!uFnOnMovieStarted)
	{
		uFnOnMovieStarted = UFunction::FindFunction("Function ProjectX.GFxShell_X.OnMovieStarted");
	}

	UGFxShell_X_eventOnMovieStarted_Params OnMovieStarted_Params;
	memcpy_s(&OnMovieStarted_Params.Movie, 0x8, &Movie, 0x8);

	this->ProcessEvent(uFnOnMovieStarted, &OnMovieStarted_Params, nullptr);
};

// Function ProjectX.GFxShell_X.StopMovie
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxMoviePlayer_X*       Movie                          (CPF_Parm)

void UGFxShell_X::StopMovie(class UGFxMoviePlayer_X* Movie)
{
	static UFunction* uFnStopMovie = nullptr;

	if (!uFnStopMovie)
	{
		uFnStopMovie = UFunction::FindFunction("Function ProjectX.GFxShell_X.StopMovie");
	}

	UGFxShell_X_execStopMovie_Params StopMovie_Params;
	memcpy_s(&StopMovie_Params.Movie, 0x8, &Movie, 0x8);

	uFnStopMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnStopMovie, &StopMovie_Params, nullptr);

	uFnStopMovie->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxShell_X.StartMovie
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxMoviePlayer_X*       Movie                          (CPF_Parm)

void UGFxShell_X::StartMovie(class UGFxMoviePlayer_X* Movie)
{
	static UFunction* uFnStartMovie = nullptr;

	if (!uFnStartMovie)
	{
		uFnStartMovie = UFunction::FindFunction("Function ProjectX.GFxShell_X.StartMovie");
	}

	UGFxShell_X_execStartMovie_Params StartMovie_Params;
	memcpy_s(&StartMovie_Params.Movie, 0x8, &Movie, 0x8);

	uFnStartMovie->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnStartMovie, &StartMovie_Params, nullptr);

	uFnStartMovie->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxShell_X.Stop
// [0x00020C01] (FUNC_Final | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::eventStop()
{
	static UFunction* uFnStop = nullptr;

	if (!uFnStop)
	{
		uFnStop = UFunction::FindFunction("Function ProjectX.GFxShell_X.Stop");
	}

	UGFxShell_X_eventStop_Params Stop_Params;

	uFnStop->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnStop, &Stop_Params, nullptr);

	uFnStop->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxShell_X.OnStart
// [0x00080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UGFxShell_X::eventOnStart()
{
	static UFunction* uFnOnStart = nullptr;

	if (!uFnOnStart)
	{
		uFnOnStart = UFunction::FindFunction("Function ProjectX.GFxShell_X.OnStart");
	}

	UGFxShell_X_eventOnStart_Params OnStart_Params;

	this->ProcessEvent(uFnOnStart, &OnStart_Params, nullptr);
};

// Function ProjectX.GFxShell_X.Start
// [0x00020C01] (FUNC_Final | FUNC_Native | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer_X*          InPlayer                       (CPF_Parm)

void UGFxShell_X::eventStart(class ULocalPlayer_X* InPlayer)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.GFxShell_X.Start");
	}

	UGFxShell_X_eventStart_Params Start_Params;
	memcpy_s(&Start_Params.InPlayer, 0x8, &InPlayer, 0x8);

	uFnStart->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);

	uFnStart->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxShell_X.EventReceivedInput
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             InShell                        (CPF_Parm)

void UGFxShell_X::EventReceivedInput(class UGFxShell_X* InShell)
{
	static UFunction* uFnEventReceivedInput = nullptr;

	if (!uFnEventReceivedInput)
	{
		uFnEventReceivedInput = UFunction::FindFunction("Function ProjectX.GFxShell_X.EventReceivedInput");
	}

	UGFxShell_X_execEventReceivedInput_Params EventReceivedInput_Params;
	memcpy_s(&EventReceivedInput_Params.InShell, 0x8, &InShell, 0x8);

	this->ProcessEvent(uFnEventReceivedInput, &EventReceivedInput_Params, nullptr);
};

// Function ProjectX.GFxShell_X.EventInputTypeChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             InShell                        (CPF_Parm)

void UGFxShell_X::EventInputTypeChanged(class UGFxShell_X* InShell)
{
	static UFunction* uFnEventInputTypeChanged = nullptr;

	if (!uFnEventInputTypeChanged)
	{
		uFnEventInputTypeChanged = UFunction::FindFunction("Function ProjectX.GFxShell_X.EventInputTypeChanged");
	}

	UGFxShell_X_execEventInputTypeChanged_Params EventInputTypeChanged_Params;
	memcpy_s(&EventInputTypeChanged_Params.InShell, 0x8, &InShell, 0x8);

	this->ProcessEvent(uFnEventInputTypeChanged, &EventInputTypeChanged_Params, nullptr);
};

// Function ProjectX.GFxShell_X.EventInputCaptureChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             InShell                        (CPF_Parm)

void UGFxShell_X::EventInputCaptureChanged(class UGFxShell_X* InShell)
{
	static UFunction* uFnEventInputCaptureChanged = nullptr;

	if (!uFnEventInputCaptureChanged)
	{
		uFnEventInputCaptureChanged = UFunction::FindFunction("Function ProjectX.GFxShell_X.EventInputCaptureChanged");
	}

	UGFxShell_X_execEventInputCaptureChanged_Params EventInputCaptureChanged_Params;
	memcpy_s(&EventInputCaptureChanged_Params.InShell, 0x8, &InShell, 0x8);

	this->ProcessEvent(uFnEventInputCaptureChanged, &EventInputCaptureChanged_Params, nullptr);
};

// Function ProjectX.GFxDataStore_X.ExportFakeData
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   InTableName                    (CPF_OptionalParm | CPF_Parm)

void UGFxDataStore_X::ExportFakeData(struct FName InTableName)
{
	static UFunction* uFnExportFakeData = nullptr;

	if (!uFnExportFakeData)
	{
		uFnExportFakeData = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.ExportFakeData");
	}

	UGFxDataStore_X_execExportFakeData_Params ExportFakeData_Params;
	memcpy_s(&ExportFakeData_Params.InTableName, 0x8, &InTableName, 0x8);

	uFnExportFakeData->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnExportFakeData, &ExportFakeData_Params, nullptr);

	uFnExportFakeData->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.PrintData
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   InTableName                    (CPF_OptionalParm | CPF_Parm)

void UGFxDataStore_X::PrintData(struct FName InTableName)
{
	static UFunction* uFnPrintData = nullptr;

	if (!uFnPrintData)
	{
		uFnPrintData = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.PrintData");
	}

	UGFxDataStore_X_execPrintData_Params PrintData_Params;
	memcpy_s(&PrintData_Params.InTableName, 0x8, &InTableName, 0x8);

	uFnPrintData->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnPrintData, &PrintData_Params, nullptr);

	uFnPrintData->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.GetObjectRow
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGFxDataRow_X*           O                              (CPF_Parm)

int32_t UGFxDataStore_X::GetObjectRowW(class UGFxDataRow_X* O)
{
	static UFunction* uFnGetObjectRowW = nullptr;

	if (!uFnGetObjectRowW)
	{
		uFnGetObjectRowW = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.GetObjectRow");
	}

	UGFxDataStore_X_execGetObjectRowW_Params GetObjectRowW_Params;
	memcpy_s(&GetObjectRowW_Params.O, 0x8, &O, 0x8);

	uFnGetObjectRowW->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetObjectRowW, &GetObjectRowW_Params, nullptr);

	uFnGetObjectRowW->FunctionFlags |= 0x400;

	return GetObjectRowW_Params.ReturnValue;
};

// Function ProjectX.GFxDataStore_X.AllObjectsOfType
// [0x00420405] (FUNC_Final | FUNC_BlueprintAuthorityOnly | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UClass*                  BaseClass                      (CPF_Parm)
// class UGFxDataRow_X*           OutObject                      (CPF_Parm | CPF_OutParm)

void UGFxDataStore_X::AllObjectsOfType(class UClass* BaseClass, class UGFxDataRow_X*& OutObject)
{
	static UFunction* uFnAllObjectsOfType = nullptr;

	if (!uFnAllObjectsOfType)
	{
		uFnAllObjectsOfType = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.AllObjectsOfType");
	}

	UGFxDataStore_X_execAllObjectsOfType_Params AllObjectsOfType_Params;
	memcpy_s(&AllObjectsOfType_Params.BaseClass, 0x8, &BaseClass, 0x8);
	memcpy_s(&AllObjectsOfType_Params.OutObject, 0x8, &OutObject, 0x8);

	uFnAllObjectsOfType->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAllObjectsOfType, &AllObjectsOfType_Params, nullptr);

	uFnAllObjectsOfType->FunctionFlags |= 0x400;

	memcpy_s(&OutObject, 0x8, &AllObjectsOfType_Params.OutObject, 0x8);
};

// Function ProjectX.GFxDataStore_X.AllObjects
// [0x00424405] (FUNC_Final | FUNC_BlueprintAuthorityOnly | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ObjClass                       (CPF_Parm)
// class UGFxDataRow_X*           OutObject                      (CPF_Parm | CPF_OutParm)
// int32_t                        Row                            (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

void UGFxDataStore_X::AllObjects(class UClass* ObjClass, class UGFxDataRow_X*& OutObject, int32_t& Row)
{
	static UFunction* uFnAllObjects = nullptr;

	if (!uFnAllObjects)
	{
		uFnAllObjects = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.AllObjects");
	}

	UGFxDataStore_X_execAllObjects_Params AllObjects_Params;
	memcpy_s(&AllObjects_Params.ObjClass, 0x8, &ObjClass, 0x8);
	memcpy_s(&AllObjects_Params.OutObject, 0x8, &OutObject, 0x8);
	memcpy_s(&AllObjects_Params.Row, 0x4, &Row, 0x4);

	uFnAllObjects->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAllObjects, &AllObjects_Params, nullptr);

	uFnAllObjects->FunctionFlags |= 0x400;

	memcpy_s(&OutObject, 0x8, &AllObjects_Params.OutObject, 0x8);
	memcpy_s(&Row, 0x4, &AllObjects_Params.Row, 0x4);
};

// Function ProjectX.GFxDataStore_X.GetObjectByPrimaryKey
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxDataRow_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  ObjClass                       (CPF_Parm)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

class UGFxDataRow_X* UGFxDataStore_X::GetObjectByPrimaryKeyW(class UClass* ObjClass, class FString Value)
{
	static UFunction* uFnGetObjectByPrimaryKeyW = nullptr;

	if (!uFnGetObjectByPrimaryKeyW)
	{
		uFnGetObjectByPrimaryKeyW = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.GetObjectByPrimaryKey");
	}

	UGFxDataStore_X_execGetObjectByPrimaryKeyW_Params GetObjectByPrimaryKeyW_Params;
	memcpy_s(&GetObjectByPrimaryKeyW_Params.ObjClass, 0x8, &ObjClass, 0x8);
	memcpy_s(&GetObjectByPrimaryKeyW_Params.Value, 0x10, &Value, 0x10);

	uFnGetObjectByPrimaryKeyW->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetObjectByPrimaryKeyW, &GetObjectByPrimaryKeyW_Params, nullptr);

	uFnGetObjectByPrimaryKeyW->FunctionFlags |= 0x400;

	return GetObjectByPrimaryKeyW_Params.ReturnValue;
};

// Function ProjectX.GFxDataStore_X.GetObject
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxDataRow_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  ObjClass                       (CPF_Parm)
// int32_t                        Row                            (CPF_OptionalParm | CPF_Parm)

class UGFxDataRow_X* UGFxDataStore_X::GetObjectW(class UClass* ObjClass, int32_t Row)
{
	static UFunction* uFnGetObjectW = nullptr;

	if (!uFnGetObjectW)
	{
		uFnGetObjectW = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.GetObject");
	}

	UGFxDataStore_X_execGetObjectW_Params GetObjectW_Params;
	memcpy_s(&GetObjectW_Params.ObjClass, 0x8, &ObjClass, 0x8);
	memcpy_s(&GetObjectW_Params.Row, 0x4, &Row, 0x4);

	uFnGetObjectW->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetObjectW, &GetObjectW_Params, nullptr);

	uFnGetObjectW->FunctionFlags |= 0x400;

	return GetObjectW_Params.ReturnValue;
};

// Function ProjectX.GFxDataStore_X.RemoveObject
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxDataRow_X*           O                              (CPF_Parm)

void UGFxDataStore_X::RemoveObject(class UGFxDataRow_X* O)
{
	static UFunction* uFnRemoveObject = nullptr;

	if (!uFnRemoveObject)
	{
		uFnRemoveObject = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.RemoveObject");
	}

	UGFxDataStore_X_execRemoveObject_Params RemoveObject_Params;
	memcpy_s(&RemoveObject_Params.O, 0x8, &O, 0x8);

	uFnRemoveObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveObject, &RemoveObject_Params, nullptr);

	uFnRemoveObject->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.BindObject
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxDataRow_X*           Object                         (CPF_Parm)
// int32_t                        Row                            (CPF_OptionalParm | CPF_Parm)

void UGFxDataStore_X::BindObject(class UGFxDataRow_X* Object, int32_t Row)
{
	static UFunction* uFnBindObject = nullptr;

	if (!uFnBindObject)
	{
		uFnBindObject = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.BindObject");
	}

	UGFxDataStore_X_execBindObject_Params BindObject_Params;
	memcpy_s(&BindObject_Params.Object, 0x8, &Object, 0x8);
	memcpy_s(&BindObject_Params.Row, 0x4, &Row, 0x4);

	uFnBindObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnBindObject, &BindObject_Params, nullptr);

	uFnBindObject->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.CreateObject
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UGFxDataRow_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  ObjClass                       (CPF_Parm)
// int32_t                        Row                            (CPF_OptionalParm | CPF_Parm)
// int32_t                        PlacedRow                      (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

class UGFxDataRow_X* UGFxDataStore_X::CreateObject(class UClass* ObjClass, int32_t Row, int32_t& PlacedRow)
{
	static UFunction* uFnCreateObject = nullptr;

	if (!uFnCreateObject)
	{
		uFnCreateObject = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.CreateObject");
	}

	UGFxDataStore_X_execCreateObject_Params CreateObject_Params;
	memcpy_s(&CreateObject_Params.ObjClass, 0x8, &ObjClass, 0x8);
	memcpy_s(&CreateObject_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&CreateObject_Params.PlacedRow, 0x4, &PlacedRow, 0x4);

	uFnCreateObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCreateObject, &CreateObject_Params, nullptr);

	uFnCreateObject->FunctionFlags |= 0x400;

	memcpy_s(&PlacedRow, 0x4, &CreateObject_Params.PlacedRow, 0x4);

	return CreateObject_Params.ReturnValue;
};

// Function ProjectX.GFxDataStore_X.RemoveAllObjects
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ObjClass                       (CPF_Parm)

void UGFxDataStore_X::RemoveAllObjects(class UClass* ObjClass)
{
	static UFunction* uFnRemoveAllObjects = nullptr;

	if (!uFnRemoveAllObjects)
	{
		uFnRemoveAllObjects = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.RemoveAllObjects");
	}

	UGFxDataStore_X_execRemoveAllObjects_Params RemoveAllObjects_Params;
	memcpy_s(&RemoveAllObjects_Params.ObjClass, 0x8, &ObjClass, 0x8);

	uFnRemoveAllObjects->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveAllObjects, &RemoveAllObjects_Params, nullptr);

	uFnRemoveAllObjects->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SetObjectCount
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ObjClass                       (CPF_Parm)
// int32_t                        Count                          (CPF_Parm)

void UGFxDataStore_X::SetObjectCount(class UClass* ObjClass, int32_t Count)
{
	static UFunction* uFnSetObjectCount = nullptr;

	if (!uFnSetObjectCount)
	{
		uFnSetObjectCount = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetObjectCount");
	}

	UGFxDataStore_X_execSetObjectCount_Params SetObjectCount_Params;
	memcpy_s(&SetObjectCount_Params.ObjClass, 0x8, &ObjClass, 0x8);
	memcpy_s(&SetObjectCount_Params.Count, 0x4, &Count, 0x4);

	uFnSetObjectCount->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetObjectCount, &SetObjectCount_Params, nullptr);

	uFnSetObjectCount->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SortTable
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ObjClass                       (CPF_Parm)

void UGFxDataStore_X::SortTable(class UClass* ObjClass)
{
	static UFunction* uFnSortTable = nullptr;

	if (!uFnSortTable)
	{
		uFnSortTable = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SortTable");
	}

	UGFxDataStore_X_execSortTable_Params SortTable_Params;
	memcpy_s(&SortTable_Params.ObjClass, 0x8, &ObjClass, 0x8);

	uFnSortTable->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSortTable, &SortTable_Params, nullptr);

	uFnSortTable->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.GetObjectCount
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  ObjClass                       (CPF_Parm)

int32_t UGFxDataStore_X::GetObjectCountW(class UClass* ObjClass)
{
	static UFunction* uFnGetObjectCountW = nullptr;

	if (!uFnGetObjectCountW)
	{
		uFnGetObjectCountW = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.GetObjectCount");
	}

	UGFxDataStore_X_execGetObjectCountW_Params GetObjectCountW_Params;
	memcpy_s(&GetObjectCountW_Params.ObjClass, 0x8, &ObjClass, 0x8);

	uFnGetObjectCountW->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetObjectCountW, &GetObjectCountW_Params, nullptr);

	uFnGetObjectCountW->FunctionFlags |= 0x400;

	return GetObjectCountW_Params.ReturnValue;
};

// Function ProjectX.GFxDataStore_X.EmptyTables
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGFxDataStore_X::EmptyTables()
{
	static UFunction* uFnEmptyTables = nullptr;

	if (!uFnEmptyTables)
	{
		uFnEmptyTables = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.EmptyTables");
	}

	UGFxDataStore_X_execEmptyTables_Params EmptyTables_Params;

	uFnEmptyTables->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnEmptyTables, &EmptyTables_Params, nullptr);

	uFnEmptyTables->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.EmptyTable
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)

void UGFxDataStore_X::EmptyTable(struct FName Table)
{
	static UFunction* uFnEmptyTable = nullptr;

	if (!uFnEmptyTable)
	{
		uFnEmptyTable = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.EmptyTable");
	}

	UGFxDataStore_X_execEmptyTable_Params EmptyTable_Params;
	memcpy_s(&EmptyTable_Params.Table, 0x8, &Table, 0x8);

	uFnEmptyTable->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnEmptyTable, &EmptyTable_Params, nullptr);

	uFnEmptyTable->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.RemoveRow
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)

void UGFxDataStore_X::RemoveRow(struct FName Table, int32_t Row)
{
	static UFunction* uFnRemoveRow = nullptr;

	if (!uFnRemoveRow)
	{
		uFnRemoveRow = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.RemoveRow");
	}

	UGFxDataStore_X_execRemoveRow_Params RemoveRow_Params;
	memcpy_s(&RemoveRow_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&RemoveRow_Params.Row, 0x4, &Row, 0x4);

	uFnRemoveRow->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveRow, &RemoveRow_Params, nullptr);

	uFnRemoveRow->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SetRowCount
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Count                          (CPF_Parm)

void UGFxDataStore_X::SetRowCount(struct FName Table, int32_t Count)
{
	static UFunction* uFnSetRowCount = nullptr;

	if (!uFnSetRowCount)
	{
		uFnSetRowCount = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetRowCount");
	}

	UGFxDataStore_X_execSetRowCount_Params SetRowCount_Params;
	memcpy_s(&SetRowCount_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&SetRowCount_Params.Count, 0x4, &Count, 0x4);

	uFnSetRowCount->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetRowCount, &SetRowCount_Params, nullptr);

	uFnSetRowCount->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.GetRowCount
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   Table                          (CPF_Parm)

int32_t UGFxDataStore_X::GetRowCount(struct FName Table)
{
	static UFunction* uFnGetRowCount = nullptr;

	if (!uFnGetRowCount)
	{
		uFnGetRowCount = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.GetRowCount");
	}

	UGFxDataStore_X_execGetRowCount_Params GetRowCount_Params;
	memcpy_s(&GetRowCount_Params.Table, 0x8, &Table, 0x8);

	uFnGetRowCount->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetRowCount, &GetRowCount_Params, nullptr);

	uFnGetRowCount->FunctionFlags |= 0x400;

	return GetRowCount_Params.ReturnValue;
};

// Function ProjectX.GFxDataStore_X.GetValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FASValue                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)
// struct FName                   Column                         (CPF_Parm)

struct FASValue UGFxDataStore_X::GetValue(struct FName Table, int32_t Row, struct FName Column)
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.GetValue");
	}

	UGFxDataStore_X_execGetValue_Params GetValue_Params;
	memcpy_s(&GetValue_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&GetValue_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&GetValue_Params.Column, 0x8, &Column, 0x8);

	uFnGetValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);

	uFnGetValue->FunctionFlags |= 0x400;

	return GetValue_Params.ReturnValue;
};

// Function ProjectX.GFxDataStore_X.GetObjectIndex
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGFxDataRow_X*           TargetObject                   (CPF_Const | CPF_Parm)

int32_t UGFxDataStore_X::GetObjectIndexW(class UGFxDataRow_X* TargetObject)
{
	static UFunction* uFnGetObjectIndexW = nullptr;

	if (!uFnGetObjectIndexW)
	{
		uFnGetObjectIndexW = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.GetObjectIndex");
	}

	UGFxDataStore_X_execGetObjectIndexW_Params GetObjectIndexW_Params;
	memcpy_s(&GetObjectIndexW_Params.TargetObject, 0x8, &TargetObject, 0x8);

	uFnGetObjectIndexW->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetObjectIndexW, &GetObjectIndexW_Params, nullptr);

	uFnGetObjectIndexW->FunctionFlags |= 0x400;

	return GetObjectIndexW_Params.ReturnValue;
};

// Function ProjectX.GFxDataStore_X.SetASValue
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)
// struct FName                   Column                         (CPF_Parm)
// struct FASValue                Value                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UGFxDataStore_X::SetASValue(struct FName Table, int32_t Row, struct FName Column, struct FASValue& Value)
{
	static UFunction* uFnSetASValue = nullptr;

	if (!uFnSetASValue)
	{
		uFnSetASValue = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetASValue");
	}

	UGFxDataStore_X_execSetASValue_Params SetASValue_Params;
	memcpy_s(&SetASValue_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&SetASValue_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&SetASValue_Params.Column, 0x8, &Column, 0x8);
	memcpy_s(&SetASValue_Params.Value, 0x28, &Value, 0x28);

	uFnSetASValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetASValue, &SetASValue_Params, nullptr);

	uFnSetASValue->FunctionFlags |= 0x400;

	memcpy_s(&Value, 0x28, &SetASValue_Params.Value, 0x28);
};

// Function ProjectX.GFxDataStore_X.SetTextureValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)
// struct FName                   Column                         (CPF_Parm)
// class UTexture*                Value                          (CPF_Parm)

void UGFxDataStore_X::SetTextureValue(struct FName Table, int32_t Row, struct FName Column, class UTexture* Value)
{
	static UFunction* uFnSetTextureValue = nullptr;

	if (!uFnSetTextureValue)
	{
		uFnSetTextureValue = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetTextureValue");
	}

	UGFxDataStore_X_execSetTextureValue_Params SetTextureValue_Params;
	memcpy_s(&SetTextureValue_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&SetTextureValue_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&SetTextureValue_Params.Column, 0x8, &Column, 0x8);
	memcpy_s(&SetTextureValue_Params.Value, 0x8, &Value, 0x8);

	uFnSetTextureValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetTextureValue, &SetTextureValue_Params, nullptr);

	uFnSetTextureValue->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SetStringValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)
// struct FName                   Column                         (CPF_Parm)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

void UGFxDataStore_X::SetStringValue(struct FName Table, int32_t Row, struct FName Column, class FString Value)
{
	static UFunction* uFnSetStringValue = nullptr;

	if (!uFnSetStringValue)
	{
		uFnSetStringValue = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetStringValue");
	}

	UGFxDataStore_X_execSetStringValue_Params SetStringValue_Params;
	memcpy_s(&SetStringValue_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&SetStringValue_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&SetStringValue_Params.Column, 0x8, &Column, 0x8);
	memcpy_s(&SetStringValue_Params.Value, 0x10, &Value, 0x10);

	uFnSetStringValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetStringValue, &SetStringValue_Params, nullptr);

	uFnSetStringValue->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SetQWordValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)
// struct FName                   Column                         (CPF_Parm)
// uint64_t                       Value                          (CPF_Parm)

void UGFxDataStore_X::SetQWordValue(struct FName Table, int32_t Row, struct FName Column, uint64_t Value)
{
	static UFunction* uFnSetQWordValue = nullptr;

	if (!uFnSetQWordValue)
	{
		uFnSetQWordValue = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetQWordValue");
	}

	UGFxDataStore_X_execSetQWordValue_Params SetQWordValue_Params;
	memcpy_s(&SetQWordValue_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&SetQWordValue_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&SetQWordValue_Params.Column, 0x8, &Column, 0x8);
	SetQWordValue_Params.Value = Value;

	uFnSetQWordValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetQWordValue, &SetQWordValue_Params, nullptr);

	uFnSetQWordValue->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SetFloatValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)
// struct FName                   Column                         (CPF_Parm)
// float                          Value                          (CPF_Parm)

void UGFxDataStore_X::SetFloatValue(struct FName Table, int32_t Row, struct FName Column, float Value)
{
	static UFunction* uFnSetFloatValue = nullptr;

	if (!uFnSetFloatValue)
	{
		uFnSetFloatValue = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetFloatValue");
	}

	UGFxDataStore_X_execSetFloatValue_Params SetFloatValue_Params;
	memcpy_s(&SetFloatValue_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&SetFloatValue_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&SetFloatValue_Params.Column, 0x8, &Column, 0x8);
	memcpy_s(&SetFloatValue_Params.Value, 0x4, &Value, 0x4);

	uFnSetFloatValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetFloatValue, &SetFloatValue_Params, nullptr);

	uFnSetFloatValue->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SetIntValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)
// struct FName                   Column                         (CPF_Parm)
// int32_t                        Value                          (CPF_Parm)

void UGFxDataStore_X::SetIntValue(struct FName Table, int32_t Row, struct FName Column, int32_t Value)
{
	static UFunction* uFnSetIntValue = nullptr;

	if (!uFnSetIntValue)
	{
		uFnSetIntValue = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetIntValue");
	}

	UGFxDataStore_X_execSetIntValue_Params SetIntValue_Params;
	memcpy_s(&SetIntValue_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&SetIntValue_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&SetIntValue_Params.Column, 0x8, &Column, 0x8);
	memcpy_s(&SetIntValue_Params.Value, 0x4, &Value, 0x4);

	uFnSetIntValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetIntValue, &SetIntValue_Params, nullptr);

	uFnSetIntValue->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SetBoolValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Table                          (CPF_Parm)
// int32_t                        Row                            (CPF_Parm)
// struct FName                   Column                         (CPF_Parm)
// unsigned long                  Value                          (CPF_Parm)

void UGFxDataStore_X::SetBoolValue(struct FName Table, int32_t Row, struct FName Column, unsigned long Value)
{
	static UFunction* uFnSetBoolValue = nullptr;

	if (!uFnSetBoolValue)
	{
		uFnSetBoolValue = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetBoolValue");
	}

	UGFxDataStore_X_execSetBoolValue_Params SetBoolValue_Params;
	memcpy_s(&SetBoolValue_Params.Table, 0x8, &Table, 0x8);
	memcpy_s(&SetBoolValue_Params.Row, 0x4, &Row, 0x4);
	memcpy_s(&SetBoolValue_Params.Column, 0x8, &Column, 0x8);
	SetBoolValue_Params.Value = Value;

	uFnSetBoolValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetBoolValue, &SetBoolValue_Params, nullptr);

	uFnSetBoolValue->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxDataStore_X.SetDirty
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   InTableName                    (CPF_Parm)
// int32_t                        RowNum                         (CPF_OptionalParm | CPF_Parm)
// struct FName                   Value                          (CPF_OptionalParm | CPF_Parm)

void UGFxDataStore_X::SetDirty(struct FName InTableName, int32_t RowNum, struct FName Value)
{
	static UFunction* uFnSetDirty = nullptr;

	if (!uFnSetDirty)
	{
		uFnSetDirty = UFunction::FindFunction("Function ProjectX.GFxDataStore_X.SetDirty");
	}

	UGFxDataStore_X_execSetDirty_Params SetDirty_Params;
	memcpy_s(&SetDirty_Params.InTableName, 0x8, &InTableName, 0x8);
	memcpy_s(&SetDirty_Params.RowNum, 0x4, &RowNum, 0x4);
	memcpy_s(&SetDirty_Params.Value, 0x8, &Value, 0x8);

	uFnSetDirty->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetDirty, &SetDirty_Params, nullptr);

	uFnSetDirty->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxEngine_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UGFxEngine_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.GFxEngine_X.PrintDebugInfo");
	}

	UGFxEngine_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.OnGameSessionEnded
// [0x00080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UGFxEngine_X::eventOnGameSessionEnded()
{
	static UFunction* uFnOnGameSessionEnded = nullptr;

	if (!uFnOnGameSessionEnded)
	{
		uFnOnGameSessionEnded = UFunction::FindFunction("Function ProjectX.GFxEngine_X.OnGameSessionEnded");
	}

	UGFxEngine_X_eventOnGameSessionEnded_Params OnGameSessionEnded_Params;

	this->ProcessEvent(uFnOnGameSessionEnded, &OnGameSessionEnded_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.GetFlashKey
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FName                   UnrealKey                      (CPF_Parm)
// int32_t                        KeyCode                        (CPF_Parm | CPF_OutParm)
// int32_t                        MouseButton                    (CPF_Parm | CPF_OutParm)

void UGFxEngine_X::GetFlashKey(struct FName UnrealKey, int32_t& KeyCode, int32_t& MouseButton)
{
	static UFunction* uFnGetFlashKey = nullptr;

	if (!uFnGetFlashKey)
	{
		uFnGetFlashKey = UFunction::FindFunction("Function ProjectX.GFxEngine_X.GetFlashKey");
	}

	UGFxEngine_X_execGetFlashKey_Params GetFlashKey_Params;
	memcpy_s(&GetFlashKey_Params.UnrealKey, 0x8, &UnrealKey, 0x8);
	memcpy_s(&GetFlashKey_Params.KeyCode, 0x4, &KeyCode, 0x4);
	memcpy_s(&GetFlashKey_Params.MouseButton, 0x4, &MouseButton, 0x4);

	uFnGetFlashKey->FunctionFlags |= ~0x400;

	UGFxEngine_X::StaticClass()->ProcessEvent(uFnGetFlashKey, &GetFlashKey_Params, nullptr);

	uFnGetFlashKey->FunctionFlags |= 0x400;

	memcpy_s(&KeyCode, 0x4, &GetFlashKey_Params.KeyCode, 0x4);
	memcpy_s(&MouseButton, 0x4, &GetFlashKey_Params.MouseButton, 0x4);
};

// Function ProjectX.GFxEngine_X.UpdateHardwareMouseCursorVisibility
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UGFxEngine_X::UpdateHardwareMouseCursorVisibility()
{
	static UFunction* uFnUpdateHardwareMouseCursorVisibility = nullptr;

	if (!uFnUpdateHardwareMouseCursorVisibility)
	{
		uFnUpdateHardwareMouseCursorVisibility = UFunction::FindFunction("Function ProjectX.GFxEngine_X.UpdateHardwareMouseCursorVisibility");
	}

	UGFxEngine_X_execUpdateHardwareMouseCursorVisibility_Params UpdateHardwareMouseCursorVisibility_Params;

	this->ProcessEvent(uFnUpdateHardwareMouseCursorVisibility, &UpdateHardwareMouseCursorVisibility_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.HandleShellInputTypeChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             InShell                        (CPF_Parm)

void UGFxEngine_X::HandleShellInputTypeChanged(class UGFxShell_X* InShell)
{
	static UFunction* uFnHandleShellInputTypeChanged = nullptr;

	if (!uFnHandleShellInputTypeChanged)
	{
		uFnHandleShellInputTypeChanged = UFunction::FindFunction("Function ProjectX.GFxEngine_X.HandleShellInputTypeChanged");
	}

	UGFxEngine_X_execHandleShellInputTypeChanged_Params HandleShellInputTypeChanged_Params;
	memcpy_s(&HandleShellInputTypeChanged_Params.InShell, 0x8, &InShell, 0x8);

	this->ProcessEvent(uFnHandleShellInputTypeChanged, &HandleShellInputTypeChanged_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.HandleGFxEnabledChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UGameViewportClient*     GVC                            (CPF_Parm)

void UGFxEngine_X::HandleGFxEnabledChanged(class UGameViewportClient* GVC)
{
	static UFunction* uFnHandleGFxEnabledChanged = nullptr;

	if (!uFnHandleGFxEnabledChanged)
	{
		uFnHandleGFxEnabledChanged = UFunction::FindFunction("Function ProjectX.GFxEngine_X.HandleGFxEnabledChanged");
	}

	UGFxEngine_X_execHandleGFxEnabledChanged_Params HandleGFxEnabledChanged_Params;
	memcpy_s(&HandleGFxEnabledChanged_Params.GVC, 0x8, &GVC, 0x8);

	this->ProcessEvent(uFnHandleGFxEnabledChanged, &HandleGFxEnabledChanged_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.HandleShellInputCaptureChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             InShell                        (CPF_Parm)

void UGFxEngine_X::HandleShellInputCaptureChanged(class UGFxShell_X* InShell)
{
	static UFunction* uFnHandleShellInputCaptureChanged = nullptr;

	if (!uFnHandleShellInputCaptureChanged)
	{
		uFnHandleShellInputCaptureChanged = UFunction::FindFunction("Function ProjectX.GFxEngine_X.HandleShellInputCaptureChanged");
	}

	UGFxEngine_X_execHandleShellInputCaptureChanged_Params HandleShellInputCaptureChanged_Params;
	memcpy_s(&HandleShellInputCaptureChanged_Params.InShell, 0x8, &InShell, 0x8);

	this->ProcessEvent(uFnHandleShellInputCaptureChanged, &HandleShellInputCaptureChanged_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.FlushDirtyObjects
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGFxEngine_X::FlushDirtyObjects()
{
	static UFunction* uFnFlushDirtyObjects = nullptr;

	if (!uFnFlushDirtyObjects)
	{
		uFnFlushDirtyObjects = UFunction::FindFunction("Function ProjectX.GFxEngine_X.FlushDirtyObjects");
	}

	UGFxEngine_X_execFlushDirtyObjects_Params FlushDirtyObjects_Params;

	uFnFlushDirtyObjects->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlushDirtyObjects, &FlushDirtyObjects_Params, nullptr);

	uFnFlushDirtyObjects->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxEngine_X.Tick
// [0x400020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UGFxEngine_X::eventTick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.GFxEngine_X.Tick");
	}

	UGFxEngine_X_eventTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	uFnTick->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);

	uFnTick->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxEngine_X.FindShell
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULocalPlayer_X*          ForPlayer                      (CPF_Parm)

class UGFxShell_X* UGFxEngine_X::FindShell(class ULocalPlayer_X* ForPlayer)
{
	static UFunction* uFnFindShell = nullptr;

	if (!uFnFindShell)
	{
		uFnFindShell = UFunction::FindFunction("Function ProjectX.GFxEngine_X.FindShell");
	}

	UGFxEngine_X_execFindShell_Params FindShell_Params;
	memcpy_s(&FindShell_Params.ForPlayer, 0x8, &ForPlayer, 0x8);

	this->ProcessEvent(uFnFindShell, &FindShell_Params, nullptr);

	return FindShell_Params.ReturnValue;
};

// Function ProjectX.GFxEngine_X.OnShellDestroyed
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             Shell                          (CPF_Parm)

void UGFxEngine_X::OnShellDestroyed(class UGFxShell_X* Shell)
{
	static UFunction* uFnOnShellDestroyed = nullptr;

	if (!uFnOnShellDestroyed)
	{
		uFnOnShellDestroyed = UFunction::FindFunction("Function ProjectX.GFxEngine_X.OnShellDestroyed");
	}

	UGFxEngine_X_execOnShellDestroyed_Params OnShellDestroyed_Params;
	memcpy_s(&OnShellDestroyed_Params.Shell, 0x8, &Shell, 0x8);

	this->ProcessEvent(uFnOnShellDestroyed, &OnShellDestroyed_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.DestroyShell
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            ForPlayer                      (CPF_Parm)

void UGFxEngine_X::DestroyShell(class ULocalPlayer* ForPlayer)
{
	static UFunction* uFnDestroyShell = nullptr;

	if (!uFnDestroyShell)
	{
		uFnDestroyShell = UFunction::FindFunction("Function ProjectX.GFxEngine_X.DestroyShell");
	}

	UGFxEngine_X_execDestroyShell_Params DestroyShell_Params;
	memcpy_s(&DestroyShell_Params.ForPlayer, 0x8, &ForPlayer, 0x8);

	this->ProcessEvent(uFnDestroyShell, &DestroyShell_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.CreateShell
// [0x00080803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGFxShell_X* UGFxEngine_X::eventCreateShell()
{
	static UFunction* uFnCreateShell = nullptr;

	if (!uFnCreateShell)
	{
		uFnCreateShell = UFunction::FindFunction("Function ProjectX.GFxEngine_X.CreateShell");
	}

	UGFxEngine_X_eventCreateShell_Params CreateShell_Params;

	this->ProcessEvent(uFnCreateShell, &CreateShell_Params, nullptr);

	return CreateShell_Params.ReturnValue;
};

// Function ProjectX.GFxEngine_X.GetShell
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULocalPlayer_X*          ForPlayer                      (CPF_Parm)

class UGFxShell_X* UGFxEngine_X::GetShell(class ULocalPlayer_X* ForPlayer)
{
	static UFunction* uFnGetShell = nullptr;

	if (!uFnGetShell)
	{
		uFnGetShell = UFunction::FindFunction("Function ProjectX.GFxEngine_X.GetShell");
	}

	UGFxEngine_X_execGetShell_Params GetShell_Params;
	memcpy_s(&GetShell_Params.ForPlayer, 0x8, &ForPlayer, 0x8);

	uFnGetShell->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetShell, &GetShell_Params, nullptr);

	uFnGetShell->FunctionFlags |= 0x400;

	return GetShell_Params.ReturnValue;
};

// Function ProjectX.GFxEngine_X.SetShellArchetype
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxShell_X*             InShellArchetype               (CPF_Parm)

void UGFxEngine_X::SetShellArchetype(class UGFxShell_X* InShellArchetype)
{
	static UFunction* uFnSetShellArchetype = nullptr;

	if (!uFnSetShellArchetype)
	{
		uFnSetShellArchetype = UFunction::FindFunction("Function ProjectX.GFxEngine_X.SetShellArchetype");
	}

	UGFxEngine_X_execSetShellArchetype_Params SetShellArchetype_Params;
	memcpy_s(&SetShellArchetype_Params.InShellArchetype, 0x8, &InShellArchetype, 0x8);

	this->ProcessEvent(uFnSetShellArchetype, &SetShellArchetype_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.GetInstance
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxEngine_X*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  Type                           (CPF_OptionalParm | CPF_Parm)

class UGFxEngine_X* UGFxEngine_X::GetInstance(class UClass* Type)
{
	static UFunction* uFnGetInstance = nullptr;

	if (!uFnGetInstance)
	{
		uFnGetInstance = UFunction::FindFunction("Function ProjectX.GFxEngine_X.GetInstance");
	}

	UGFxEngine_X_execGetInstance_Params GetInstance_Params;
	memcpy_s(&GetInstance_Params.Type, 0x8, &Type, 0x8);

	uFnGetInstance->FunctionFlags |= ~0x400;

	UGFxEngine_X::StaticClass()->ProcessEvent(uFnGetInstance, &GetInstance_Params, nullptr);

	uFnGetInstance->FunctionFlags |= 0x400;

	return GetInstance_Params.ReturnValue;
};

// Function ProjectX.GFxEngine_X.EventGameSessionEnded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UGFxEngine_X::EventGameSessionEnded()
{
	static UFunction* uFnEventGameSessionEnded = nullptr;

	if (!uFnEventGameSessionEnded)
	{
		uFnEventGameSessionEnded = UFunction::FindFunction("Function ProjectX.GFxEngine_X.EventGameSessionEnded");
	}

	UGFxEngine_X_execEventGameSessionEnded_Params EventGameSessionEnded_Params;

	this->ProcessEvent(uFnEventGameSessionEnded, &EventGameSessionEnded_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.EventAvailableGamepadTypeChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxEngine_X*            Engine                         (CPF_Parm)

void UGFxEngine_X::EventAvailableGamepadTypeChanged(class UGFxEngine_X* Engine)
{
	static UFunction* uFnEventAvailableGamepadTypeChanged = nullptr;

	if (!uFnEventAvailableGamepadTypeChanged)
	{
		uFnEventAvailableGamepadTypeChanged = UFunction::FindFunction("Function ProjectX.GFxEngine_X.EventAvailableGamepadTypeChanged");
	}

	UGFxEngine_X_execEventAvailableGamepadTypeChanged_Params EventAvailableGamepadTypeChanged_Params;
	memcpy_s(&EventAvailableGamepadTypeChanged_Params.Engine, 0x8, &Engine, 0x8);

	this->ProcessEvent(uFnEventAvailableGamepadTypeChanged, &EventAvailableGamepadTypeChanged_Params, nullptr);
};

// Function ProjectX.GFxEngine_X.EventShellCreated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxEngine_X*            Engine                         (CPF_Parm)
// class UGFxShell_X*             Shell                          (CPF_Parm)

void UGFxEngine_X::EventShellCreated(class UGFxEngine_X* Engine, class UGFxShell_X* Shell)
{
	static UFunction* uFnEventShellCreated = nullptr;

	if (!uFnEventShellCreated)
	{
		uFnEventShellCreated = UFunction::FindFunction("Function ProjectX.GFxEngine_X.EventShellCreated");
	}

	UGFxEngine_X_execEventShellCreated_Params EventShellCreated_Params;
	memcpy_s(&EventShellCreated_Params.Engine, 0x8, &Engine, 0x8);
	memcpy_s(&EventShellCreated_Params.Shell, 0x8, &Shell, 0x8);

	this->ProcessEvent(uFnEventShellCreated, &EventShellCreated_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UGFxMoviePlayer_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.PrintDebugInfo");
	}

	UGFxMoviePlayer_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.SetAllowAnyPlayerInput
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bAllow                         (CPF_Parm)

void UGFxMoviePlayer_X::SetAllowAnyPlayerInput(unsigned long bAllow)
{
	static UFunction* uFnSetAllowAnyPlayerInput = nullptr;

	if (!uFnSetAllowAnyPlayerInput)
	{
		uFnSetAllowAnyPlayerInput = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.SetAllowAnyPlayerInput");
	}

	UGFxMoviePlayer_X_execSetAllowAnyPlayerInput_Params SetAllowAnyPlayerInput_Params;
	SetAllowAnyPlayerInput_Params.bAllow = bAllow;

	this->ProcessEvent(uFnSetAllowAnyPlayerInput, &SetAllowAnyPlayerInput_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.PopString
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)
// TArray<class FString>          Items                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UGFxMoviePlayer_X::PopString(class FString Value, TArray<class FString>& Items)
{
	static UFunction* uFnPopString = nullptr;

	if (!uFnPopString)
	{
		uFnPopString = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.PopString");
	}

	UGFxMoviePlayer_X_execPopString_Params PopString_Params;
	memcpy_s(&PopString_Params.Value, 0x10, &Value, 0x10);
	memcpy_s(&PopString_Params.Items, 0x10, &Items, 0x10);

	this->ProcessEvent(uFnPopString, &PopString_Params, nullptr);

	memcpy_s(&Items, 0x10, &PopString_Params.Items, 0x10);

	return PopString_Params.ReturnValue;
};

// Function ProjectX.GFxMoviePlayer_X.SetGlobalRTCP
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// float                          Value                          (CPF_Parm)

void UGFxMoviePlayer_X::SetGlobalRTCP(struct FName Key, float Value)
{
	static UFunction* uFnSetGlobalRTCP = nullptr;

	if (!uFnSetGlobalRTCP)
	{
		uFnSetGlobalRTCP = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.SetGlobalRTCP");
	}

	UGFxMoviePlayer_X_execSetGlobalRTCP_Params SetGlobalRTCP_Params;
	memcpy_s(&SetGlobalRTCP_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetGlobalRTCP_Params.Value, 0x4, &Value, 0x4);

	this->ProcessEvent(uFnSetGlobalRTCP, &SetGlobalRTCP_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.StopAllSounds
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxSoundPack_X*         SoundPack                      (CPF_Parm)

void UGFxMoviePlayer_X::eventStopAllSounds(class UGFxSoundPack_X* SoundPack)
{
	static UFunction* uFnStopAllSounds = nullptr;

	if (!uFnStopAllSounds)
	{
		uFnStopAllSounds = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.StopAllSounds");
	}

	UGFxMoviePlayer_X_eventStopAllSounds_Params StopAllSounds_Params;
	memcpy_s(&StopAllSounds_Params.SoundPack, 0x8, &SoundPack, 0x8);

	this->ProcessEvent(uFnStopAllSounds, &StopAllSounds_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.StopSound
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   EventName                      (CPF_Parm)

void UGFxMoviePlayer_X::StopSound(struct FName EventName)
{
	static UFunction* uFnStopSound = nullptr;

	if (!uFnStopSound)
	{
		uFnStopSound = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.StopSound");
	}

	UGFxMoviePlayer_X_execStopSound_Params StopSound_Params;
	memcpy_s(&StopSound_Params.EventName, 0x8, &EventName, 0x8);

	this->ProcessEvent(uFnStopSound, &StopSound_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.PlaySound
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   EventName                      (CPF_Parm)

void UGFxMoviePlayer_X::PlaySound(struct FName EventName)
{
	static UFunction* uFnPlaySound = nullptr;

	if (!uFnPlaySound)
	{
		uFnPlaySound = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.PlaySound");
	}

	UGFxMoviePlayer_X_execPlaySound_Params PlaySound_Params;
	memcpy_s(&PlaySound_Params.EventName, 0x8, &EventName, 0x8);

	this->ProcessEvent(uFnPlaySound, &PlaySound_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.PlaySoundFromTheme
// [0x400024802] (FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FName                   EventName                      (CPF_Parm)
// struct FName                   SoundThemeName                 (CPF_OptionalParm | CPF_Parm)

void UGFxMoviePlayer_X::eventPlaySoundFromTheme(struct FName EventName, struct FName SoundThemeName)
{
	static UFunction* uFnPlaySoundFromTheme = nullptr;

	if (!uFnPlaySoundFromTheme)
	{
		uFnPlaySoundFromTheme = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.PlaySoundFromTheme");
	}

	UGFxMoviePlayer_X_eventPlaySoundFromTheme_Params PlaySoundFromTheme_Params;
	memcpy_s(&PlaySoundFromTheme_Params.EventName, 0x8, &EventName, 0x8);
	memcpy_s(&PlaySoundFromTheme_Params.SoundThemeName, 0x8, &SoundThemeName, 0x8);

	this->ProcessEvent(uFnPlaySoundFromTheme, &PlaySoundFromTheme_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.GetSoundSource
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class AActor* UGFxMoviePlayer_X::GetSoundSource()
{
	static UFunction* uFnGetSoundSource = nullptr;

	if (!uFnGetSoundSource)
	{
		uFnGetSoundSource = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.GetSoundSource");
	}

	UGFxMoviePlayer_X_execGetSoundSource_Params GetSoundSource_Params;

	this->ProcessEvent(uFnGetSoundSource, &GetSoundSource_Params, nullptr);

	return GetSoundSource_Params.ReturnValue;
};

// Function ProjectX.GFxMoviePlayer_X.UpdateCursorVisibility
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UGFxMoviePlayer_X::UpdateCursorVisibility()
{
	static UFunction* uFnUpdateCursorVisibility = nullptr;

	if (!uFnUpdateCursorVisibility)
	{
		uFnUpdateCursorVisibility = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.UpdateCursorVisibility");
	}

	UGFxMoviePlayer_X_execUpdateCursorVisibility_Params UpdateCursorVisibility_Params;

	this->ProcessEvent(uFnUpdateCursorVisibility, &UpdateCursorVisibility_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.SetCaptureAllInput
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bNewCaptureInput               (CPF_Parm)
// class FString                  SceneName                      (CPF_Parm | CPF_NeedCtorLink)

void UGFxMoviePlayer_X::eventSetCaptureAllInput(unsigned long bNewCaptureInput, class FString SceneName)
{
	static UFunction* uFnSetCaptureAllInput = nullptr;

	if (!uFnSetCaptureAllInput)
	{
		uFnSetCaptureAllInput = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.SetCaptureAllInput");
	}

	UGFxMoviePlayer_X_eventSetCaptureAllInput_Params SetCaptureAllInput_Params;
	SetCaptureAllInput_Params.bNewCaptureInput = bNewCaptureInput;
	memcpy_s(&SetCaptureAllInput_Params.SceneName, 0x10, &SceneName, 0x10);

	this->ProcessEvent(uFnSetCaptureAllInput, &SetCaptureAllInput_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.SetReceiveInput
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bNewReceiveInput               (CPF_Parm)
// class FString                  SceneName                      (CPF_Parm | CPF_NeedCtorLink)

void UGFxMoviePlayer_X::eventSetReceiveInput(unsigned long bNewReceiveInput, class FString SceneName)
{
	static UFunction* uFnSetReceiveInput = nullptr;

	if (!uFnSetReceiveInput)
	{
		uFnSetReceiveInput = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.SetReceiveInput");
	}

	UGFxMoviePlayer_X_eventSetReceiveInput_Params SetReceiveInput_Params;
	SetReceiveInput_Params.bNewReceiveInput = bNewReceiveInput;
	memcpy_s(&SetReceiveInput_Params.SceneName, 0x10, &SceneName, 0x10);

	this->ProcessEvent(uFnSetReceiveInput, &SetReceiveInput_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.SetCursorVisible
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bVisible                       (CPF_Parm)
// class FString                  SceneName                      (CPF_Parm | CPF_NeedCtorLink)

void UGFxMoviePlayer_X::eventSetCursorVisible(unsigned long bVisible, class FString SceneName)
{
	static UFunction* uFnSetCursorVisible = nullptr;

	if (!uFnSetCursorVisible)
	{
		uFnSetCursorVisible = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.SetCursorVisible");
	}

	UGFxMoviePlayer_X_eventSetCursorVisible_Params SetCursorVisible_Params;
	SetCursorVisible_Params.bVisible = bVisible;
	memcpy_s(&SetCursorVisible_Params.SceneName, 0x10, &SceneName, 0x10);

	this->ProcessEvent(uFnSetCursorVisible, &SetCursorVisible_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.InitShellHooks
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGFxMoviePlayer_X::InitShellHooks()
{
	static UFunction* uFnInitShellHooks = nullptr;

	if (!uFnInitShellHooks)
	{
		uFnInitShellHooks = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.InitShellHooks");
	}

	UGFxMoviePlayer_X_execInitShellHooks_Params InitShellHooks_Params;

	uFnInitShellHooks->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitShellHooks, &InitShellHooks_Params, nullptr);

	uFnInitShellHooks->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxMoviePlayer_X.InitDataHooks
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGFxMoviePlayer_X::InitDataHooks()
{
	static UFunction* uFnInitDataHooks = nullptr;

	if (!uFnInitDataHooks)
	{
		uFnInitDataHooks = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.InitDataHooks");
	}

	UGFxMoviePlayer_X_execInitDataHooks_Params InitDataHooks_Params;

	uFnInitDataHooks->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitDataHooks, &InitDataHooks_Params, nullptr);

	uFnInitDataHooks->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxMoviePlayer_X.OnClose
// [0x400020C00] (FUNC_Native | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UGFxMoviePlayer_X::eventOnClose()
{
	static UFunction* uFnOnClose = nullptr;

	if (!uFnOnClose)
	{
		uFnOnClose = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.OnClose");
	}

	UGFxMoviePlayer_X_eventOnClose_Params OnClose_Params;

	uFnOnClose->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnOnClose, &OnClose_Params, nullptr);

	uFnOnClose->FunctionFlags |= 0x400;
};

// Function ProjectX.GFxMoviePlayer_X.Start
// [0x400024C00] (FUNC_Native | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  StartPaused                    (CPF_OptionalParm | CPF_Parm)

bool UGFxMoviePlayer_X::eventStart(unsigned long StartPaused)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.Start");
	}

	UGFxMoviePlayer_X_eventStart_Params Start_Params;
	Start_Params.StartPaused = StartPaused;

	uFnStart->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);

	uFnStart->FunctionFlags |= 0x400;

	return Start_Params.ReturnValue;
};

// Function ProjectX.GFxMoviePlayer_X.EventInputCaptureChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxMoviePlayer_X*       Player                         (CPF_Parm)

void UGFxMoviePlayer_X::EventInputCaptureChanged(class UGFxMoviePlayer_X* Player)
{
	static UFunction* uFnEventInputCaptureChanged = nullptr;

	if (!uFnEventInputCaptureChanged)
	{
		uFnEventInputCaptureChanged = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.EventInputCaptureChanged");
	}

	UGFxMoviePlayer_X_execEventInputCaptureChanged_Params EventInputCaptureChanged_Params;
	memcpy_s(&EventInputCaptureChanged_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventInputCaptureChanged, &EventInputCaptureChanged_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.EventClosed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxMoviePlayer_X*       Player                         (CPF_Parm)

void UGFxMoviePlayer_X::EventClosed(class UGFxMoviePlayer_X* Player)
{
	static UFunction* uFnEventClosed = nullptr;

	if (!uFnEventClosed)
	{
		uFnEventClosed = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.EventClosed");
	}

	UGFxMoviePlayer_X_execEventClosed_Params EventClosed_Params;
	memcpy_s(&EventClosed_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventClosed, &EventClosed_Params, nullptr);
};

// Function ProjectX.GFxMoviePlayer_X.EventStarted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxMoviePlayer_X*       Player                         (CPF_Parm)

void UGFxMoviePlayer_X::EventStarted(class UGFxMoviePlayer_X* Player)
{
	static UFunction* uFnEventStarted = nullptr;

	if (!uFnEventStarted)
	{
		uFnEventStarted = UFunction::FindFunction("Function ProjectX.GFxMoviePlayer_X.EventStarted");
	}

	UGFxMoviePlayer_X_execEventStarted_Params EventStarted_Params;
	memcpy_s(&EventStarted_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventStarted, &EventStarted_Params, nullptr);
};

// Function ProjectX.GFxSoundPack_X.ToggleSound
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Idx                            (CPF_Parm)
// class AActor*                  Target                         (CPF_Parm)
// unsigned long                  bPlay                          (CPF_Parm)

bool UGFxSoundPack_X::ToggleSound(int32_t Idx, class AActor* Target, unsigned long bPlay)
{
	static UFunction* uFnToggleSound = nullptr;

	if (!uFnToggleSound)
	{
		uFnToggleSound = UFunction::FindFunction("Function ProjectX.GFxSoundPack_X.ToggleSound");
	}

	UGFxSoundPack_X_execToggleSound_Params ToggleSound_Params;
	memcpy_s(&ToggleSound_Params.Idx, 0x4, &Idx, 0x4);
	memcpy_s(&ToggleSound_Params.Target, 0x8, &Target, 0x8);
	ToggleSound_Params.bPlay = bPlay;

	this->ProcessEvent(uFnToggleSound, &ToggleSound_Params, nullptr);

	return ToggleSound_Params.ReturnValue;
};

// Function ProjectX.GFxSoundPack_X.StopAll
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  Target                         (CPF_Parm)

void UGFxSoundPack_X::StopAll(class AActor* Target)
{
	static UFunction* uFnStopAll = nullptr;

	if (!uFnStopAll)
	{
		uFnStopAll = UFunction::FindFunction("Function ProjectX.GFxSoundPack_X.StopAll");
	}

	UGFxSoundPack_X_execStopAll_Params StopAll_Params;
	memcpy_s(&StopAll_Params.Target, 0x8, &Target, 0x8);

	this->ProcessEvent(uFnStopAll, &StopAll_Params, nullptr);
};

// Function ProjectX.GFxSoundPack_X.StopSound
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   SoundName                      (CPF_Parm)
// class AActor*                  Target                         (CPF_Parm)

bool UGFxSoundPack_X::StopSound(struct FName SoundName, class AActor* Target)
{
	static UFunction* uFnStopSound = nullptr;

	if (!uFnStopSound)
	{
		uFnStopSound = UFunction::FindFunction("Function ProjectX.GFxSoundPack_X.StopSound");
	}

	UGFxSoundPack_X_execStopSound_Params StopSound_Params;
	memcpy_s(&StopSound_Params.SoundName, 0x8, &SoundName, 0x8);
	memcpy_s(&StopSound_Params.Target, 0x8, &Target, 0x8);

	this->ProcessEvent(uFnStopSound, &StopSound_Params, nullptr);

	return StopSound_Params.ReturnValue;
};

// Function ProjectX.GFxSoundPack_X.PlaySound
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   SoundName                      (CPF_Parm)
// class AActor*                  Target                         (CPF_Parm)

bool UGFxSoundPack_X::PlaySound(struct FName SoundName, class AActor* Target)
{
	static UFunction* uFnPlaySound = nullptr;

	if (!uFnPlaySound)
	{
		uFnPlaySound = UFunction::FindFunction("Function ProjectX.GFxSoundPack_X.PlaySound");
	}

	UGFxSoundPack_X_execPlaySound_Params PlaySound_Params;
	memcpy_s(&PlaySound_Params.SoundName, 0x8, &SoundName, 0x8);
	memcpy_s(&PlaySound_Params.Target, 0x8, &Target, 0x8);

	this->ProcessEvent(uFnPlaySound, &PlaySound_Params, nullptr);

	return PlaySound_Params.ReturnValue;
};

// Function ProjectX.Hashes_X.HashInt
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Value                          (CPF_Parm)

int32_t UHashes_X::HashInt(int32_t Value)
{
	static UFunction* uFnHashInt = nullptr;

	if (!uFnHashInt)
	{
		uFnHashInt = UFunction::FindFunction("Function ProjectX.Hashes_X.HashInt");
	}

	UHashes_X_execHashInt_Params HashInt_Params;
	memcpy_s(&HashInt_Params.Value, 0x4, &Value, 0x4);

	uFnHashInt->FunctionFlags |= ~0x400;

	UHashes_X::StaticClass()->ProcessEvent(uFnHashInt, &HashInt_Params, nullptr);

	uFnHashInt->FunctionFlags |= 0x400;

	return HashInt_Params.ReturnValue;
};

// Function ProjectX.InterpComponent_X.DetachComponent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UActorComponent*         Component                      (CPF_Parm | CPF_EditInline)

void UInterpComponent_X::DetachComponent(class UActorComponent* Component)
{
	static UFunction* uFnDetachComponent = nullptr;

	if (!uFnDetachComponent)
	{
		uFnDetachComponent = UFunction::FindFunction("Function ProjectX.InterpComponent_X.DetachComponent");
	}

	UInterpComponent_X_execDetachComponent_Params DetachComponent_Params;
	memcpy_s(&DetachComponent_Params.Component, 0x8, &Component, 0x8);

	uFnDetachComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDetachComponent, &DetachComponent_Params, nullptr);

	uFnDetachComponent->FunctionFlags |= 0x400;
};

// Function ProjectX.InterpComponent_X.AttachComponent
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UActorComponent*         Component                      (CPF_Parm | CPF_EditInline)
// struct FVector                 RelativeLocation               (CPF_OptionalParm | CPF_Parm)
// struct FRotator                RelativeRotation               (CPF_OptionalParm | CPF_Parm)
// struct FVector                 RelativeScale                  (CPF_OptionalParm | CPF_Parm)

void UInterpComponent_X::AttachComponent(class UActorComponent* Component, struct FVector RelativeLocation, struct FRotator RelativeRotation, struct FVector RelativeScale)
{
	static UFunction* uFnAttachComponent = nullptr;

	if (!uFnAttachComponent)
	{
		uFnAttachComponent = UFunction::FindFunction("Function ProjectX.InterpComponent_X.AttachComponent");
	}

	UInterpComponent_X_execAttachComponent_Params AttachComponent_Params;
	memcpy_s(&AttachComponent_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&AttachComponent_Params.RelativeLocation, 0xC, &RelativeLocation, 0xC);
	memcpy_s(&AttachComponent_Params.RelativeRotation, 0xC, &RelativeRotation, 0xC);
	memcpy_s(&AttachComponent_Params.RelativeScale, 0xC, &RelativeScale, 0xC);

	uFnAttachComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAttachComponent, &AttachComponent_Params, nullptr);

	uFnAttachComponent->FunctionFlags |= 0x400;
};

// Function ProjectX.JsonTests_X.ToJsonAndBack
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 Target                         (CPF_Parm)

bool UJsonTests_X::ToJsonAndBack(class UObject* Target)
{
	static UFunction* uFnToJsonAndBack = nullptr;

	if (!uFnToJsonAndBack)
	{
		uFnToJsonAndBack = UFunction::FindFunction("Function ProjectX.JsonTests_X.ToJsonAndBack");
	}

	UJsonTests_X_execToJsonAndBack_Params ToJsonAndBack_Params;
	memcpy_s(&ToJsonAndBack_Params.Target, 0x8, &Target, 0x8);

	uFnToJsonAndBack->FunctionFlags |= ~0x400;

	UJsonTests_X::StaticClass()->ProcessEvent(uFnToJsonAndBack, &ToJsonAndBack_Params, nullptr);

	uFnToJsonAndBack->FunctionFlags |= 0x400;

	return ToJsonAndBack_Params.ReturnValue;
};

// Function ProjectX.JsonTests_X.RunJsonTests
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        RandomSeed                     (CPF_OptionalParm | CPF_Parm)

void UJsonTests_X::RunJsonTests(int32_t RandomSeed)
{
	static UFunction* uFnRunJsonTests = nullptr;

	if (!uFnRunJsonTests)
	{
		uFnRunJsonTests = UFunction::FindFunction("Function ProjectX.JsonTests_X.RunJsonTests");
	}

	UJsonTests_X_execRunJsonTests_Params RunJsonTests_Params;
	memcpy_s(&RunJsonTests_Params.RandomSeed, 0x4, &RandomSeed, 0x4);

	uFnRunJsonTests->FunctionFlags |= ~0x400;

	UJsonTests_X::StaticClass()->ProcessEvent(uFnRunJsonTests, &RunJsonTests_Params, nullptr);

	uFnRunJsonTests->FunctionFlags |= 0x400;
};

// Function ProjectX.LanBeacon_X.BroadcastMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 Message                        (CPF_Parm)

bool ULanBeacon_X::BroadcastMessage(class UObject* Message)
{
	static UFunction* uFnBroadcastMessage = nullptr;

	if (!uFnBroadcastMessage)
	{
		uFnBroadcastMessage = UFunction::FindFunction("Function ProjectX.LanBeacon_X.BroadcastMessage");
	}

	ULanBeacon_X_execBroadcastMessage_Params BroadcastMessage_Params;
	memcpy_s(&BroadcastMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnBroadcastMessage, &BroadcastMessage_Params, nullptr);

	return BroadcastMessage_Params.ReturnValue;
};

// Function ProjectX.LanBeacon_X.BroadcastData
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<uint8_t>                Data                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool ULanBeacon_X::BroadcastData(TArray<uint8_t>& Data)
{
	static UFunction* uFnBroadcastData = nullptr;

	if (!uFnBroadcastData)
	{
		uFnBroadcastData = UFunction::FindFunction("Function ProjectX.LanBeacon_X.BroadcastData");
	}

	ULanBeacon_X_execBroadcastData_Params BroadcastData_Params;
	memcpy_s(&BroadcastData_Params.Data, 0x10, &Data, 0x10);

	uFnBroadcastData->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnBroadcastData, &BroadcastData_Params, nullptr);

	uFnBroadcastData->FunctionFlags |= 0x400;

	memcpy_s(&Data, 0x10, &BroadcastData_Params.Data, 0x10);

	return BroadcastData_Params.ReturnValue;
};

// Function ProjectX.LanBeacon_X.Stop
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void ULanBeacon_X::Stop()
{
	static UFunction* uFnStop = nullptr;

	if (!uFnStop)
	{
		uFnStop = UFunction::FindFunction("Function ProjectX.LanBeacon_X.Stop");
	}

	ULanBeacon_X_execStop_Params Stop_Params;

	uFnStop->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnStop, &Stop_Params, nullptr);

	uFnStop->FunctionFlags |= 0x400;
};

// Function ProjectX.LanBeacon_X.Start
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        InitialState                   (CPF_Parm)

bool ULanBeacon_X::Start(uint8_t InitialState)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.LanBeacon_X.Start");
	}

	ULanBeacon_X_execStart_Params Start_Params;
	memcpy_s(&Start_Params.InitialState, 0x1, &InitialState, 0x1);

	uFnStart->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);

	uFnStart->FunctionFlags |= 0x400;

	return Start_Params.ReturnValue;
};

// Function ProjectX.LensFlareComponent_X.SetActorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// class AActor*                  Value                          (CPF_Parm)

void ULensFlareComponent_X::SetActorParameter(struct FName Key, class AActor* Value)
{
	static UFunction* uFnSetActorParameter = nullptr;

	if (!uFnSetActorParameter)
	{
		uFnSetActorParameter = UFunction::FindFunction("Function ProjectX.LensFlareComponent_X.SetActorParameter");
	}

	ULensFlareComponent_X_execSetActorParameter_Params SetActorParameter_Params;
	memcpy_s(&SetActorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetActorParameter_Params.Value, 0x8, &Value, 0x8);

	uFnSetActorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetActorParameter, &SetActorParameter_Params, nullptr);

	uFnSetActorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.LensFlareComponent_X.SetLinearColorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FLinearColor            Value                          (CPF_Parm)

void ULensFlareComponent_X::SetLinearColorParameter(struct FName Key, struct FLinearColor Value)
{
	static UFunction* uFnSetLinearColorParameter = nullptr;

	if (!uFnSetLinearColorParameter)
	{
		uFnSetLinearColorParameter = UFunction::FindFunction("Function ProjectX.LensFlareComponent_X.SetLinearColorParameter");
	}

	ULensFlareComponent_X_execSetLinearColorParameter_Params SetLinearColorParameter_Params;
	memcpy_s(&SetLinearColorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetLinearColorParameter_Params.Value, 0x10, &Value, 0x10);

	uFnSetLinearColorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetLinearColorParameter, &SetLinearColorParameter_Params, nullptr);

	uFnSetLinearColorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.LensFlareComponent_X.SetVectorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FVector                 Value                          (CPF_Parm)

void ULensFlareComponent_X::SetVectorParameter(struct FName Key, struct FVector Value)
{
	static UFunction* uFnSetVectorParameter = nullptr;

	if (!uFnSetVectorParameter)
	{
		uFnSetVectorParameter = UFunction::FindFunction("Function ProjectX.LensFlareComponent_X.SetVectorParameter");
	}

	ULensFlareComponent_X_execSetVectorParameter_Params SetVectorParameter_Params;
	memcpy_s(&SetVectorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetVectorParameter_Params.Value, 0xC, &Value, 0xC);

	uFnSetVectorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetVectorParameter, &SetVectorParameter_Params, nullptr);

	uFnSetVectorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.LensFlareComponent_X.SetFloatParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// float                          Value                          (CPF_Parm)

void ULensFlareComponent_X::SetFloatParameter(struct FName Key, float Value)
{
	static UFunction* uFnSetFloatParameter = nullptr;

	if (!uFnSetFloatParameter)
	{
		uFnSetFloatParameter = UFunction::FindFunction("Function ProjectX.LensFlareComponent_X.SetFloatParameter");
	}

	ULensFlareComponent_X_execSetFloatParameter_Params SetFloatParameter_Params;
	memcpy_s(&SetFloatParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetFloatParameter_Params.Value, 0x4, &Value, 0x4);

	uFnSetFloatParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetFloatParameter, &SetFloatParameter_Params, nullptr);

	uFnSetFloatParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.LensFlareComponent_X.SetNameParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FName                   Value                          (CPF_Parm)

void ULensFlareComponent_X::SetNameParameter(struct FName Key, struct FName Value)
{
	static UFunction* uFnSetNameParameter = nullptr;

	if (!uFnSetNameParameter)
	{
		uFnSetNameParameter = UFunction::FindFunction("Function ProjectX.LensFlareComponent_X.SetNameParameter");
	}

	ULensFlareComponent_X_execSetNameParameter_Params SetNameParameter_Params;
	memcpy_s(&SetNameParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetNameParameter_Params.Value, 0x8, &Value, 0x8);

	uFnSetNameParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetNameParameter, &SetNameParameter_Params, nullptr);

	uFnSetNameParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.LinkedAccountMap_X.Contains
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool ULinkedAccountMap_X::Contains(struct FUniqueNetId& Key)
{
	static UFunction* uFnContains = nullptr;

	if (!uFnContains)
	{
		uFnContains = UFunction::FindFunction("Function ProjectX.LinkedAccountMap_X.Contains");
	}

	ULinkedAccountMap_X_execContains_Params Contains_Params;
	memcpy_s(&Contains_Params.Key, 0x48, &Key, 0x48);

	uFnContains->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnContains, &Contains_Params, nullptr);

	uFnContains->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &Contains_Params.Key, 0x48);

	return Contains_Params.ReturnValue;
};

// Function ProjectX.LinkedAccountMap_X.Clear
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ExpectedElements               (CPF_OptionalParm | CPF_Parm)

void ULinkedAccountMap_X::Clear(int32_t ExpectedElements)
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function ProjectX.LinkedAccountMap_X.Clear");
	}

	ULinkedAccountMap_X_execClear_Params Clear_Params;
	memcpy_s(&Clear_Params.ExpectedElements, 0x4, &ExpectedElements, 0x4);

	uFnClear->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClear, &Clear_Params, nullptr);

	uFnClear->FunctionFlags |= 0x400;
};

// Function ProjectX.LinkedAccountMap_X.Remove
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void ULinkedAccountMap_X::Remove(struct FUniqueNetId& Key)
{
	static UFunction* uFnRemove = nullptr;

	if (!uFnRemove)
	{
		uFnRemove = UFunction::FindFunction("Function ProjectX.LinkedAccountMap_X.Remove");
	}

	ULinkedAccountMap_X_execRemove_Params Remove_Params;
	memcpy_s(&Remove_Params.Key, 0x48, &Key, 0x48);

	uFnRemove->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemove, &Remove_Params, nullptr);

	uFnRemove->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &Remove_Params.Key, 0x48);
};

// Function ProjectX.LinkedAccountMap_X.TryGet
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueNetId            OutValue                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool ULinkedAccountMap_X::TryGet(struct FUniqueNetId& Key, struct FUniqueNetId& OutValue)
{
	static UFunction* uFnTryGet = nullptr;

	if (!uFnTryGet)
	{
		uFnTryGet = UFunction::FindFunction("Function ProjectX.LinkedAccountMap_X.TryGet");
	}

	ULinkedAccountMap_X_execTryGet_Params TryGet_Params;
	memcpy_s(&TryGet_Params.Key, 0x48, &Key, 0x48);
	memcpy_s(&TryGet_Params.OutValue, 0x48, &OutValue, 0x48);

	uFnTryGet->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTryGet, &TryGet_Params, nullptr);

	uFnTryGet->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &TryGet_Params.Key, 0x48);
	memcpy_s(&OutValue, 0x48, &TryGet_Params.OutValue, 0x48);

	return TryGet_Params.ReturnValue;
};

// Function ProjectX.LinkedAccountMap_X.Get
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FUniqueNetId ULinkedAccountMap_X::Get(struct FUniqueNetId& Key)
{
	static UFunction* uFnGet = nullptr;

	if (!uFnGet)
	{
		uFnGet = UFunction::FindFunction("Function ProjectX.LinkedAccountMap_X.Get");
	}

	ULinkedAccountMap_X_execGet_Params Get_Params;
	memcpy_s(&Get_Params.Key, 0x48, &Key, 0x48);

	uFnGet->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGet, &Get_Params, nullptr);

	uFnGet->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &Get_Params.Key, 0x48);

	return Get_Params.ReturnValue;
};

// Function ProjectX.LinkedAccountMap_X.Set
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueNetId            Value                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void ULinkedAccountMap_X::Set(struct FUniqueNetId& Key, struct FUniqueNetId& Value)
{
	static UFunction* uFnSet = nullptr;

	if (!uFnSet)
	{
		uFnSet = UFunction::FindFunction("Function ProjectX.LinkedAccountMap_X.Set");
	}

	ULinkedAccountMap_X_execSet_Params Set_Params;
	memcpy_s(&Set_Params.Key, 0x48, &Key, 0x48);
	memcpy_s(&Set_Params.Value, 0x48, &Value, 0x48);

	uFnSet->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSet, &Set_Params, nullptr);

	uFnSet->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &Set_Params.Key, 0x48);
	memcpy_s(&Value, 0x48, &Set_Params.Value, 0x48);
};

// Function ProjectX.LinkedAccountMap_X.Count
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t ULinkedAccountMap_X::Count()
{
	static UFunction* uFnCount = nullptr;

	if (!uFnCount)
	{
		uFnCount = UFunction::FindFunction("Function ProjectX.LinkedAccountMap_X.Count");
	}

	ULinkedAccountMap_X_execCount_Params Count_Params;

	uFnCount->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCount, &Count_Params, nullptr);

	uFnCount->FunctionFlags |= 0x400;

	return Count_Params.ReturnValue;
};

// Function ProjectX.LinkedAccountMap_X.AllValues
// [0x00424405] (FUNC_Final | FUNC_BlueprintAuthorityOnly | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        StartIndex                     (CPF_OptionalParm | CPF_Parm)
// int32_t                        MaxValues                      (CPF_OptionalParm | CPF_Parm)
// struct FUniqueNetId            OutFriend                      (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void ULinkedAccountMap_X::AllValues(int32_t StartIndex, int32_t MaxValues, struct FUniqueNetId& OutFriend)
{
	static UFunction* uFnAllValues = nullptr;

	if (!uFnAllValues)
	{
		uFnAllValues = UFunction::FindFunction("Function ProjectX.LinkedAccountMap_X.AllValues");
	}

	ULinkedAccountMap_X_execAllValues_Params AllValues_Params;
	memcpy_s(&AllValues_Params.StartIndex, 0x4, &StartIndex, 0x4);
	memcpy_s(&AllValues_Params.MaxValues, 0x4, &MaxValues, 0x4);
	memcpy_s(&AllValues_Params.OutFriend, 0x48, &OutFriend, 0x48);

	uFnAllValues->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAllValues, &AllValues_Params, nullptr);

	uFnAllValues->FunctionFlags |= 0x400;

	memcpy_s(&OutFriend, 0x48, &AllValues_Params.OutFriend, 0x48);
};

// Function ProjectX.LocalCache_X.Delete
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Path                           (CPF_Parm | CPF_NeedCtorLink)

void ULocalCache_X::Delete(class FString Path)
{
	static UFunction* uFnDelete = nullptr;

	if (!uFnDelete)
	{
		uFnDelete = UFunction::FindFunction("Function ProjectX.LocalCache_X.Delete");
	}

	ULocalCache_X_execDelete_Params Delete_Params;
	memcpy_s(&Delete_Params.Path, 0x10, &Path, 0x10);

	uFnDelete->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDelete, &Delete_Params, nullptr);

	uFnDelete->FunctionFlags |= 0x400;
};

// Function ProjectX.LocalCache_X.Flush
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          TimeoutSeconds                 (CPF_Parm)

uint8_t ULocalCache_X::Flush(float TimeoutSeconds)
{
	static UFunction* uFnFlush = nullptr;

	if (!uFnFlush)
	{
		uFnFlush = UFunction::FindFunction("Function ProjectX.LocalCache_X.Flush");
	}

	ULocalCache_X_execFlush_Params Flush_Params;
	memcpy_s(&Flush_Params.TimeoutSeconds, 0x4, &TimeoutSeconds, 0x4);

	uFnFlush->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlush, &Flush_Params, nullptr);

	uFnFlush->FunctionFlags |= 0x400;

	return Flush_Params.ReturnValue;
};

// Function ProjectX.LocalCache_X.HasActiveTasks
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool ULocalCache_X::HasActiveTasks()
{
	static UFunction* uFnHasActiveTasks = nullptr;

	if (!uFnHasActiveTasks)
	{
		uFnHasActiveTasks = UFunction::FindFunction("Function ProjectX.LocalCache_X.HasActiveTasks");
	}

	ULocalCache_X_execHasActiveTasks_Params HasActiveTasks_Params;

	uFnHasActiveTasks->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHasActiveTasks, &HasActiveTasks_Params, nullptr);

	uFnHasActiveTasks->FunctionFlags |= 0x400;

	return HasActiveTasks_Params.ReturnValue;
};

// Function ProjectX.LocalCache_X.ExportObjectAsync
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 CacheObject                    (CPF_Parm)
// class FString                  Path                           (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void ULocalCache_X::ExportObjectAsync(class UObject* CacheObject, class FString Path, struct FScriptDelegate Callback)
{
	static UFunction* uFnExportObjectAsync = nullptr;

	if (!uFnExportObjectAsync)
	{
		uFnExportObjectAsync = UFunction::FindFunction("Function ProjectX.LocalCache_X.ExportObjectAsync");
	}

	ULocalCache_X_execExportObjectAsync_Params ExportObjectAsync_Params;
	memcpy_s(&ExportObjectAsync_Params.CacheObject, 0x8, &CacheObject, 0x8);
	memcpy_s(&ExportObjectAsync_Params.Path, 0x10, &Path, 0x10);
	memcpy_s(&ExportObjectAsync_Params.Callback, 0x18, &Callback, 0x18);

	uFnExportObjectAsync->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnExportObjectAsync, &ExportObjectAsync_Params, nullptr);

	uFnExportObjectAsync->FunctionFlags |= 0x400;
};

// Function ProjectX.LocalCache_X.ImportObjectAsync
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 CacheObject                    (CPF_Parm)
// class FString                  Path                           (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void ULocalCache_X::ImportObjectAsync(class UObject* CacheObject, class FString Path, struct FScriptDelegate Callback)
{
	static UFunction* uFnImportObjectAsync = nullptr;

	if (!uFnImportObjectAsync)
	{
		uFnImportObjectAsync = UFunction::FindFunction("Function ProjectX.LocalCache_X.ImportObjectAsync");
	}

	ULocalCache_X_execImportObjectAsync_Params ImportObjectAsync_Params;
	memcpy_s(&ImportObjectAsync_Params.CacheObject, 0x8, &CacheObject, 0x8);
	memcpy_s(&ImportObjectAsync_Params.Path, 0x10, &Path, 0x10);
	memcpy_s(&ImportObjectAsync_Params.Callback, 0x18, &Callback, 0x18);

	uFnImportObjectAsync->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnImportObjectAsync, &ImportObjectAsync_Params, nullptr);

	uFnImportObjectAsync->FunctionFlags |= 0x400;
};

// Function ProjectX.LocalCache_X.ImportObject
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 CacheObject                    (CPF_Parm)
// class FString                  Path                           (CPF_Parm | CPF_NeedCtorLink)

class UError* ULocalCache_X::ImportObject(class UObject* CacheObject, class FString Path)
{
	static UFunction* uFnImportObject = nullptr;

	if (!uFnImportObject)
	{
		uFnImportObject = UFunction::FindFunction("Function ProjectX.LocalCache_X.ImportObject");
	}

	ULocalCache_X_execImportObject_Params ImportObject_Params;
	memcpy_s(&ImportObject_Params.CacheObject, 0x8, &CacheObject, 0x8);
	memcpy_s(&ImportObject_Params.Path, 0x10, &Path, 0x10);

	uFnImportObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnImportObject, &ImportObject_Params, nullptr);

	uFnImportObject->FunctionFlags |= 0x400;

	return ImportObject_Params.ReturnValue;
};

// Function ProjectX.LocalCache_X.EventExportFinished
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class ULocalCache_X*           Cache                          (CPF_Parm)
// class UObject*                 CacheObject                    (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void ULocalCache_X::EventExportFinished(class ULocalCache_X* Cache, class UObject* CacheObject, class UError* Error)
{
	static UFunction* uFnEventExportFinished = nullptr;

	if (!uFnEventExportFinished)
	{
		uFnEventExportFinished = UFunction::FindFunction("Function ProjectX.LocalCache_X.EventExportFinished");
	}

	ULocalCache_X_execEventExportFinished_Params EventExportFinished_Params;
	memcpy_s(&EventExportFinished_Params.Cache, 0x8, &Cache, 0x8);
	memcpy_s(&EventExportFinished_Params.CacheObject, 0x8, &CacheObject, 0x8);
	memcpy_s(&EventExportFinished_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventExportFinished, &EventExportFinished_Params, nullptr);
};

// Function ProjectX.LocalCache_X.EventImportFinished
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class ULocalCache_X*           Cache                          (CPF_Parm)
// class UObject*                 CacheObject                    (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void ULocalCache_X::EventImportFinished(class ULocalCache_X* Cache, class UObject* CacheObject, class UError* Error)
{
	static UFunction* uFnEventImportFinished = nullptr;

	if (!uFnEventImportFinished)
	{
		uFnEventImportFinished = UFunction::FindFunction("Function ProjectX.LocalCache_X.EventImportFinished");
	}

	ULocalCache_X_execEventImportFinished_Params EventImportFinished_Params;
	memcpy_s(&EventImportFinished_Params.Cache, 0x8, &Cache, 0x8);
	memcpy_s(&EventImportFinished_Params.CacheObject, 0x8, &CacheObject, 0x8);
	memcpy_s(&EventImportFinished_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventImportFinished, &EventImportFinished_Params, nullptr);
};

// Function ProjectX.MapFlythroughProfiler_X.SetupPlayers
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void AMapFlythroughProfiler_X::SetupPlayers()
{
	static UFunction* uFnSetupPlayers = nullptr;

	if (!uFnSetupPlayers)
	{
		uFnSetupPlayers = UFunction::FindFunction("Function ProjectX.MapFlythroughProfiler_X.SetupPlayers");
	}

	AMapFlythroughProfiler_X_execSetupPlayers_Params SetupPlayers_Params;

	this->ProcessEvent(uFnSetupPlayers, &SetupPlayers_Params, nullptr);
};

// Function ProjectX.MapFlythroughProfiler_X.PostBeginPlay
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AMapFlythroughProfiler_X::eventPostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function ProjectX.MapFlythroughProfiler_X.PostBeginPlay");
	}

	AMapFlythroughProfiler_X_eventPostBeginPlay_Params PostBeginPlay_Params;

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function ProjectX.MapFlythroughProfiler_X.EventFinished
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AMapFlythroughProfiler_X* Profiler                       (CPF_Parm)

void AMapFlythroughProfiler_X::EventFinished(class AMapFlythroughProfiler_X* Profiler)
{
	static UFunction* uFnEventFinished = nullptr;

	if (!uFnEventFinished)
	{
		uFnEventFinished = UFunction::FindFunction("Function ProjectX.MapFlythroughProfiler_X.EventFinished");
	}

	AMapFlythroughProfiler_X_execEventFinished_Params EventFinished_Params;
	memcpy_s(&EventFinished_Params.Profiler, 0x8, &Profiler, 0x8);

	this->ProcessEvent(uFnEventFinished, &EventFinished_Params, nullptr);
};

// Function ProjectX.OnlineConfig_X.UnsubscribeModifiers
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineConfig_X::UnsubscribeModifiers()
{
	static UFunction* uFnUnsubscribeModifiers = nullptr;

	if (!uFnUnsubscribeModifiers)
	{
		uFnUnsubscribeModifiers = UFunction::FindFunction("Function ProjectX.OnlineConfig_X.UnsubscribeModifiers");
	}

	UOnlineConfig_X_execUnsubscribeModifiers_Params UnsubscribeModifiers_Params;

	this->ProcessEvent(uFnUnsubscribeModifiers, &UnsubscribeModifiers_Params, nullptr);
};

// Function ProjectX.OnlineConfig_X.ModifyObjects
// [0x00884003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ObjClass                       (CPF_Parm)
// struct FScriptDelegate         ApplyCallback                  (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ResetCallback                  (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineConfig_X::ModifyObjects(class UClass* ObjClass, struct FScriptDelegate ApplyCallback, struct FScriptDelegate ResetCallback)
{
	static UFunction* uFnModifyObjects = nullptr;

	if (!uFnModifyObjects)
	{
		uFnModifyObjects = UFunction::FindFunction("Function ProjectX.OnlineConfig_X.ModifyObjects");
	}

	UOnlineConfig_X_execModifyObjects_Params ModifyObjects_Params;
	memcpy_s(&ModifyObjects_Params.ObjClass, 0x8, &ObjClass, 0x8);
	memcpy_s(&ModifyObjects_Params.ApplyCallback, 0x18, &ApplyCallback, 0x18);
	memcpy_s(&ModifyObjects_Params.ResetCallback, 0x18, &ResetCallback, 0x18);

	this->ProcessEvent(uFnModifyObjects, &ModifyObjects_Params, nullptr);
};

// Function ProjectX.OnlineConfig_X.Undo
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineConfig_X::Undo()
{
	static UFunction* uFnUndo = nullptr;

	if (!uFnUndo)
	{
		uFnUndo = UFunction::FindFunction("Function ProjectX.OnlineConfig_X.Undo");
	}

	UOnlineConfig_X_execUndo_Params Undo_Params;

	this->ProcessEvent(uFnUndo, &Undo_Params, nullptr);
};

// Function ProjectX.OnlineConfig_X.Apply
// [0x00028000] (FUNC_UbergraphFunction | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.OnlineConfig_X.Apply");
	}

	UOnlineConfig_X_execApply_Params Apply_Params;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);
};

// Function ProjectX.ClassPropertyConfig_X.Apply
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UClassPropertyConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.ClassPropertyConfig_X.Apply");
	}

	UClassPropertyConfig_X_execApply_Params Apply_Params;

	uFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);

	uFnApply->FunctionFlags |= 0x400;
};

// Function ProjectX.ContentConfig_X.Undo
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UContentConfig_X::Undo()
{
	static UFunction* uFnUndo = nullptr;

	if (!uFnUndo)
	{
		uFnUndo = UFunction::FindFunction("Function ProjectX.ContentConfig_X.Undo");
	}

	UContentConfig_X_execUndo_Params Undo_Params;

	this->ProcessEvent(uFnUndo, &Undo_Params, nullptr);
};

// Function ProjectX.ContentConfig_X.Apply
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UContentConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.ContentConfig_X.Apply");
	}

	UContentConfig_X_execApply_Params Apply_Params;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);
};

// Function ProjectX.ContentConfig_X.IsEncryptionKeySetAtIndex
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FEncryptedKeyIndex      KeyIndex                       (CPF_Parm)

bool UContentConfig_X::IsEncryptionKeySetAtIndex(struct FEncryptedKeyIndex KeyIndex)
{
	static UFunction* uFnIsEncryptionKeySetAtIndex = nullptr;

	if (!uFnIsEncryptionKeySetAtIndex)
	{
		uFnIsEncryptionKeySetAtIndex = UFunction::FindFunction("Function ProjectX.ContentConfig_X.IsEncryptionKeySetAtIndex");
	}

	UContentConfig_X_execIsEncryptionKeySetAtIndex_Params IsEncryptionKeySetAtIndex_Params;
	memcpy_s(&IsEncryptionKeySetAtIndex_Params.KeyIndex, 0x4, &KeyIndex, 0x4);

	uFnIsEncryptionKeySetAtIndex->FunctionFlags |= ~0x400;

	UContentConfig_X::StaticClass()->ProcessEvent(uFnIsEncryptionKeySetAtIndex, &IsEncryptionKeySetAtIndex_Params, nullptr);

	uFnIsEncryptionKeySetAtIndex->FunctionFlags |= 0x400;

	return IsEncryptionKeySetAtIndex_Params.ReturnValue;
};

// Function ProjectX.ContentConfig_X.EncryptedKeyIndexIsValid
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FEncryptedKeyIndex      KeyIndex                       (CPF_Parm)

bool UContentConfig_X::EncryptedKeyIndexIsValid(struct FEncryptedKeyIndex KeyIndex)
{
	static UFunction* uFnEncryptedKeyIndexIsValid = nullptr;

	if (!uFnEncryptedKeyIndexIsValid)
	{
		uFnEncryptedKeyIndexIsValid = UFunction::FindFunction("Function ProjectX.ContentConfig_X.EncryptedKeyIndexIsValid");
	}

	UContentConfig_X_execEncryptedKeyIndexIsValid_Params EncryptedKeyIndexIsValid_Params;
	memcpy_s(&EncryptedKeyIndexIsValid_Params.KeyIndex, 0x4, &KeyIndex, 0x4);

	uFnEncryptedKeyIndexIsValid->FunctionFlags |= ~0x400;

	UContentConfig_X::StaticClass()->ProcessEvent(uFnEncryptedKeyIndexIsValid, &EncryptedKeyIndexIsValid_Params, nullptr);

	uFnEncryptedKeyIndexIsValid->FunctionFlags |= 0x400;

	return EncryptedKeyIndexIsValid_Params.ReturnValue;
};

// Function ProjectX.ContentConfig_X.FindKeyIndex
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FEncryptedKeyIndex      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   ContentKeyName                 (CPF_Parm)

struct FEncryptedKeyIndex UContentConfig_X::FindKeyIndex(struct FName ContentKeyName)
{
	static UFunction* uFnFindKeyIndex = nullptr;

	if (!uFnFindKeyIndex)
	{
		uFnFindKeyIndex = UFunction::FindFunction("Function ProjectX.ContentConfig_X.FindKeyIndex");
	}

	UContentConfig_X_execFindKeyIndex_Params FindKeyIndex_Params;
	memcpy_s(&FindKeyIndex_Params.ContentKeyName, 0x8, &ContentKeyName, 0x8);

	uFnFindKeyIndex->FunctionFlags |= ~0x400;

	UContentConfig_X::StaticClass()->ProcessEvent(uFnFindKeyIndex, &FindKeyIndex_Params, nullptr);

	uFnFindKeyIndex->FunctionFlags |= 0x400;

	return FindKeyIndex_Params.ReturnValue;
};

// Function ProjectX.ContentConfig_X.UndoNative
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UContentConfig_X::UndoNative()
{
	static UFunction* uFnUndoNative = nullptr;

	if (!uFnUndoNative)
	{
		uFnUndoNative = UFunction::FindFunction("Function ProjectX.ContentConfig_X.UndoNative");
	}

	UContentConfig_X_execUndoNative_Params UndoNative_Params;

	uFnUndoNative->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUndoNative, &UndoNative_Params, nullptr);

	uFnUndoNative->FunctionFlags |= 0x400;
};

// Function ProjectX.ContentConfig_X.ApplyNative
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UContentConfig_X::ApplyNative()
{
	static UFunction* uFnApplyNative = nullptr;

	if (!uFnApplyNative)
	{
		uFnApplyNative = UFunction::FindFunction("Function ProjectX.ContentConfig_X.ApplyNative");
	}

	UContentConfig_X_execApplyNative_Params ApplyNative_Params;

	uFnApplyNative->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnApplyNative, &ApplyNative_Params, nullptr);

	uFnApplyNative->FunctionFlags |= 0x400;
};

// Function ProjectX.CrossplayConfig_X.CanInteractWithCrossplayDisabled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Platform1                      (CPF_Parm)
// uint8_t                        Platform2                      (CPF_Parm)

bool UCrossplayConfig_X::CanInteractWithCrossplayDisabled(uint8_t Platform1, uint8_t Platform2)
{
	static UFunction* uFnCanInteractWithCrossplayDisabled = nullptr;

	if (!uFnCanInteractWithCrossplayDisabled)
	{
		uFnCanInteractWithCrossplayDisabled = UFunction::FindFunction("Function ProjectX.CrossplayConfig_X.CanInteractWithCrossplayDisabled");
	}

	UCrossplayConfig_X_execCanInteractWithCrossplayDisabled_Params CanInteractWithCrossplayDisabled_Params;
	memcpy_s(&CanInteractWithCrossplayDisabled_Params.Platform1, 0x1, &Platform1, 0x1);
	memcpy_s(&CanInteractWithCrossplayDisabled_Params.Platform2, 0x1, &Platform2, 0x1);

	this->ProcessEvent(uFnCanInteractWithCrossplayDisabled, &CanInteractWithCrossplayDisabled_Params, nullptr);

	return CanInteractWithCrossplayDisabled_Params.ReturnValue;
};

// Function ProjectX.CrossplayConfig_X.GetDisabledCrossplayGroup
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// TArray<uint8_t>                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint8_t                        PlayerPlatform                 (CPF_Parm)

TArray<uint8_t> UCrossplayConfig_X::GetDisabledCrossplayGroup(uint8_t PlayerPlatform)
{
	static UFunction* uFnGetDisabledCrossplayGroup = nullptr;

	if (!uFnGetDisabledCrossplayGroup)
	{
		uFnGetDisabledCrossplayGroup = UFunction::FindFunction("Function ProjectX.CrossplayConfig_X.GetDisabledCrossplayGroup");
	}

	UCrossplayConfig_X_execGetDisabledCrossplayGroup_Params GetDisabledCrossplayGroup_Params;
	memcpy_s(&GetDisabledCrossplayGroup_Params.PlayerPlatform, 0x1, &PlayerPlatform, 0x1);

	this->ProcessEvent(uFnGetDisabledCrossplayGroup, &GetDisabledCrossplayGroup_Params, nullptr);

	return GetDisabledCrossplayGroup_Params.ReturnValue;
};

// Function ProjectX.CrossplayConfig_X.PlatformsShareGroup
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Platform1                      (CPF_Parm)
// uint8_t                        Platform2                      (CPF_Parm)

bool UCrossplayConfig_X::PlatformsShareGroup(uint8_t Platform1, uint8_t Platform2)
{
	static UFunction* uFnPlatformsShareGroup = nullptr;

	if (!uFnPlatformsShareGroup)
	{
		uFnPlatformsShareGroup = UFunction::FindFunction("Function ProjectX.CrossplayConfig_X.PlatformsShareGroup");
	}

	UCrossplayConfig_X_execPlatformsShareGroup_Params PlatformsShareGroup_Params;
	memcpy_s(&PlatformsShareGroup_Params.Platform1, 0x1, &Platform1, 0x1);
	memcpy_s(&PlatformsShareGroup_Params.Platform2, 0x1, &Platform2, 0x1);

	this->ProcessEvent(uFnPlatformsShareGroup, &PlatformsShareGroup_Params, nullptr);

	return PlatformsShareGroup_Params.ReturnValue;
};

// Function ProjectX.LocalizationConfig_X.Apply
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void ULocalizationConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.LocalizationConfig_X.Apply");
	}

	ULocalizationConfig_X_execApply_Params Apply_Params;

	uFnApply->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);

	uFnApply->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetRetryConfig_X.FindReAuthDelay
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URetryDelay_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   Error                          (CPF_Parm)

class URetryDelay_X* UPsyNetRetryConfig_X::FindReAuthDelay(class FString Service, struct FName Error)
{
	static UFunction* uFnFindReAuthDelay = nullptr;

	if (!uFnFindReAuthDelay)
	{
		uFnFindReAuthDelay = UFunction::FindFunction("Function ProjectX.PsyNetRetryConfig_X.FindReAuthDelay");
	}

	UPsyNetRetryConfig_X_execFindReAuthDelay_Params FindReAuthDelay_Params;
	memcpy_s(&FindReAuthDelay_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&FindReAuthDelay_Params.Error, 0x8, &Error, 0x8);

	uFnFindReAuthDelay->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFindReAuthDelay, &FindReAuthDelay_Params, nullptr);

	uFnFindReAuthDelay->FunctionFlags |= 0x400;

	return FindReAuthDelay_Params.ReturnValue;
};

// Function ProjectX.PsyNetRetryConfig_X.FindRetryDelay
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URetryDelay_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   Error                          (CPF_Parm)

class URetryDelay_X* UPsyNetRetryConfig_X::FindRetryDelay(class FString Service, struct FName Error)
{
	static UFunction* uFnFindRetryDelay = nullptr;

	if (!uFnFindRetryDelay)
	{
		uFnFindRetryDelay = UFunction::FindFunction("Function ProjectX.PsyNetRetryConfig_X.FindRetryDelay");
	}

	UPsyNetRetryConfig_X_execFindRetryDelay_Params FindRetryDelay_Params;
	memcpy_s(&FindRetryDelay_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&FindRetryDelay_Params.Error, 0x8, &Error, 0x8);

	uFnFindRetryDelay->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFindRetryDelay, &FindRetryDelay_Params, nullptr);

	uFnFindRetryDelay->FunctionFlags |= 0x400;

	return FindRetryDelay_Params.ReturnValue;
};

// Function ProjectX.PsyNetRetryConfig_X.FindReAuthPolicy
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URetryPolicy_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   Error                          (CPF_Parm)

class URetryPolicy_X* UPsyNetRetryConfig_X::FindReAuthPolicy(class FString Service, struct FName Error)
{
	static UFunction* uFnFindReAuthPolicy = nullptr;

	if (!uFnFindReAuthPolicy)
	{
		uFnFindReAuthPolicy = UFunction::FindFunction("Function ProjectX.PsyNetRetryConfig_X.FindReAuthPolicy");
	}

	UPsyNetRetryConfig_X_execFindReAuthPolicy_Params FindReAuthPolicy_Params;
	memcpy_s(&FindReAuthPolicy_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&FindReAuthPolicy_Params.Error, 0x8, &Error, 0x8);

	uFnFindReAuthPolicy->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFindReAuthPolicy, &FindReAuthPolicy_Params, nullptr);

	uFnFindReAuthPolicy->FunctionFlags |= 0x400;

	return FindReAuthPolicy_Params.ReturnValue;
};

// Function ProjectX.PsyNetRetryConfig_X.FindRetryPolicy
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URetryPolicy_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   Error                          (CPF_Parm)

class URetryPolicy_X* UPsyNetRetryConfig_X::FindRetryPolicy(class FString Service, struct FName Error)
{
	static UFunction* uFnFindRetryPolicy = nullptr;

	if (!uFnFindRetryPolicy)
	{
		uFnFindRetryPolicy = UFunction::FindFunction("Function ProjectX.PsyNetRetryConfig_X.FindRetryPolicy");
	}

	UPsyNetRetryConfig_X_execFindRetryPolicy_Params FindRetryPolicy_Params;
	memcpy_s(&FindRetryPolicy_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&FindRetryPolicy_Params.Error, 0x8, &Error, 0x8);

	uFnFindRetryPolicy->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFindRetryPolicy, &FindRetryPolicy_Params, nullptr);

	uFnFindRetryPolicy->FunctionFlags |= 0x400;

	return FindRetryPolicy_Params.ReturnValue;
};

// Function ProjectX.RPCConfig_X.IsRPCDisabled
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URPC_X*                  RPC                            (CPF_Parm)

bool URPCConfig_X::IsRPCDisabled(class URPC_X* RPC)
{
	static UFunction* uFnIsRPCDisabled = nullptr;

	if (!uFnIsRPCDisabled)
	{
		uFnIsRPCDisabled = UFunction::FindFunction("Function ProjectX.RPCConfig_X.IsRPCDisabled");
	}

	URPCConfig_X_execIsRPCDisabled_Params IsRPCDisabled_Params;
	memcpy_s(&IsRPCDisabled_Params.RPC, 0x8, &RPC, 0x8);

	uFnIsRPCDisabled->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsRPCDisabled, &IsRPCDisabled_Params, nullptr);

	uFnIsRPCDisabled->FunctionFlags |= 0x400;

	return IsRPCDisabled_Params.ReturnValue;
};

// Function ProjectX.OnlineFriendMap_X.ValueArray
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FOnlineFriend>   OutArray                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineFriendMap_X::ValueArray(TArray<struct FOnlineFriend>& OutArray)
{
	static UFunction* uFnValueArray = nullptr;

	if (!uFnValueArray)
	{
		uFnValueArray = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.ValueArray");
	}

	UOnlineFriendMap_X_execValueArray_Params ValueArray_Params;
	memcpy_s(&ValueArray_Params.OutArray, 0x10, &OutArray, 0x10);

	uFnValueArray->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnValueArray, &ValueArray_Params, nullptr);

	uFnValueArray->FunctionFlags |= 0x400;

	memcpy_s(&OutArray, 0x10, &ValueArray_Params.OutArray, 0x10);
};

// Function ProjectX.OnlineFriendMap_X.AppendArray
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FOnlineFriend>   InArray                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineFriendMap_X::AppendArray(TArray<struct FOnlineFriend>& InArray)
{
	static UFunction* uFnAppendArray = nullptr;

	if (!uFnAppendArray)
	{
		uFnAppendArray = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.AppendArray");
	}

	UOnlineFriendMap_X_execAppendArray_Params AppendArray_Params;
	memcpy_s(&AppendArray_Params.InArray, 0x10, &InArray, 0x10);

	uFnAppendArray->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAppendArray, &AppendArray_Params, nullptr);

	uFnAppendArray->FunctionFlags |= 0x400;

	memcpy_s(&InArray, 0x10, &AppendArray_Params.InArray, 0x10);
};

// Function ProjectX.OnlineFriendMap_X.CopyArray
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FOnlineFriend>   InArray                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineFriendMap_X::CopyArray(TArray<struct FOnlineFriend>& InArray)
{
	static UFunction* uFnCopyArray = nullptr;

	if (!uFnCopyArray)
	{
		uFnCopyArray = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.CopyArray");
	}

	UOnlineFriendMap_X_execCopyArray_Params CopyArray_Params;
	memcpy_s(&CopyArray_Params.InArray, 0x10, &InArray, 0x10);

	uFnCopyArray->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCopyArray, &CopyArray_Params, nullptr);

	uFnCopyArray->FunctionFlags |= 0x400;

	memcpy_s(&InArray, 0x10, &CopyArray_Params.InArray, 0x10);
};

// Function ProjectX.OnlineFriendMap_X.Contains
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineFriendMap_X::Contains(struct FUniqueNetId& Key)
{
	static UFunction* uFnContains = nullptr;

	if (!uFnContains)
	{
		uFnContains = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.Contains");
	}

	UOnlineFriendMap_X_execContains_Params Contains_Params;
	memcpy_s(&Contains_Params.Key, 0x48, &Key, 0x48);

	uFnContains->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnContains, &Contains_Params, nullptr);

	uFnContains->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &Contains_Params.Key, 0x48);

	return Contains_Params.ReturnValue;
};

// Function ProjectX.OnlineFriendMap_X.Clear
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ExpectedElements               (CPF_OptionalParm | CPF_Parm)

void UOnlineFriendMap_X::Clear(int32_t ExpectedElements)
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.Clear");
	}

	UOnlineFriendMap_X_execClear_Params Clear_Params;
	memcpy_s(&Clear_Params.ExpectedElements, 0x4, &ExpectedElements, 0x4);

	uFnClear->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClear, &Clear_Params, nullptr);

	uFnClear->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineFriendMap_X.Remove
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineFriendMap_X::Remove(struct FUniqueNetId& Key)
{
	static UFunction* uFnRemove = nullptr;

	if (!uFnRemove)
	{
		uFnRemove = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.Remove");
	}

	UOnlineFriendMap_X_execRemove_Params Remove_Params;
	memcpy_s(&Remove_Params.Key, 0x48, &Key, 0x48);

	uFnRemove->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemove, &Remove_Params, nullptr);

	uFnRemove->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &Remove_Params.Key, 0x48);
};

// Function ProjectX.OnlineFriendMap_X.TryGet
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FOnlineFriend           OutValue                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineFriendMap_X::TryGet(struct FUniqueNetId& Key, struct FOnlineFriend& OutValue)
{
	static UFunction* uFnTryGet = nullptr;

	if (!uFnTryGet)
	{
		uFnTryGet = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.TryGet");
	}

	UOnlineFriendMap_X_execTryGet_Params TryGet_Params;
	memcpy_s(&TryGet_Params.Key, 0x48, &Key, 0x48);
	memcpy_s(&TryGet_Params.OutValue, 0x118, &OutValue, 0x118);

	uFnTryGet->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTryGet, &TryGet_Params, nullptr);

	uFnTryGet->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &TryGet_Params.Key, 0x48);
	memcpy_s(&OutValue, 0x118, &TryGet_Params.OutValue, 0x118);

	return TryGet_Params.ReturnValue;
};

// Function ProjectX.OnlineFriendMap_X.Set
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            Key                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FOnlineFriend           Value                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineFriendMap_X::Set(struct FUniqueNetId& Key, struct FOnlineFriend& Value)
{
	static UFunction* uFnSet = nullptr;

	if (!uFnSet)
	{
		uFnSet = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.Set");
	}

	UOnlineFriendMap_X_execSet_Params Set_Params;
	memcpy_s(&Set_Params.Key, 0x48, &Key, 0x48);
	memcpy_s(&Set_Params.Value, 0x118, &Value, 0x118);

	uFnSet->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSet, &Set_Params, nullptr);

	uFnSet->FunctionFlags |= 0x400;

	memcpy_s(&Key, 0x48, &Set_Params.Key, 0x48);
	memcpy_s(&Value, 0x118, &Set_Params.Value, 0x118);
};

// Function ProjectX.OnlineFriendMap_X.Count
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineFriendMap_X::Count()
{
	static UFunction* uFnCount = nullptr;

	if (!uFnCount)
	{
		uFnCount = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.Count");
	}

	UOnlineFriendMap_X_execCount_Params Count_Params;

	uFnCount->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCount, &Count_Params, nullptr);

	uFnCount->FunctionFlags |= 0x400;

	return Count_Params.ReturnValue;
};

// Function ProjectX.OnlineFriendMap_X.AllValues
// [0x00424405] (FUNC_Final | FUNC_BlueprintAuthorityOnly | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        StartIndex                     (CPF_OptionalParm | CPF_Parm)
// int32_t                        MaxValues                      (CPF_OptionalParm | CPF_Parm)
// struct FOnlineFriend           OutFriend                      (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineFriendMap_X::AllValues(int32_t StartIndex, int32_t MaxValues, struct FOnlineFriend& OutFriend)
{
	static UFunction* uFnAllValues = nullptr;

	if (!uFnAllValues)
	{
		uFnAllValues = UFunction::FindFunction("Function ProjectX.OnlineFriendMap_X.AllValues");
	}

	UOnlineFriendMap_X_execAllValues_Params AllValues_Params;
	memcpy_s(&AllValues_Params.StartIndex, 0x4, &StartIndex, 0x4);
	memcpy_s(&AllValues_Params.MaxValues, 0x4, &MaxValues, 0x4);
	memcpy_s(&AllValues_Params.OutFriend, 0x118, &OutFriend, 0x118);

	uFnAllValues->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAllValues, &AllValues_Params, nullptr);

	uFnAllValues->FunctionFlags |= 0x400;

	memcpy_s(&OutFriend, 0x118, &AllValues_Params.OutFriend, 0x118);
};

// Function ProjectX.OnlineGameSearch_X.GetStringProperty
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PropertyId                     (CPF_Parm)
// class FString                  Value                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameSearch_X::GetStringProperty(int32_t PropertyId, class FString& Value)
{
	static UFunction* uFnGetStringProperty = nullptr;

	if (!uFnGetStringProperty)
	{
		uFnGetStringProperty = UFunction::FindFunction("Function ProjectX.OnlineGameSearch_X.GetStringProperty");
	}

	UOnlineGameSearch_X_execGetStringProperty_Params GetStringProperty_Params;
	memcpy_s(&GetStringProperty_Params.PropertyId, 0x4, &PropertyId, 0x4);
	memcpy_s(&GetStringProperty_Params.Value, 0x10, &Value, 0x10);

	uFnGetStringProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetStringProperty, &GetStringProperty_Params, nullptr);

	uFnGetStringProperty->FunctionFlags |= 0x400;

	memcpy_s(&Value, 0x10, &GetStringProperty_Params.Value, 0x10);

	return GetStringProperty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSearch_X.GetExclusiveGameTags
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameSearch_X::eventGetExclusiveGameTags()
{
	static UFunction* uFnGetExclusiveGameTags = nullptr;

	if (!uFnGetExclusiveGameTags)
	{
		uFnGetExclusiveGameTags = UFunction::FindFunction("Function ProjectX.OnlineGameSearch_X.GetExclusiveGameTags");
	}

	UOnlineGameSearch_X_eventGetExclusiveGameTags_Params GetExclusiveGameTags_Params;

	this->ProcessEvent(uFnGetExclusiveGameTags, &GetExclusiveGameTags_Params, nullptr);

	return GetExclusiveGameTags_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSearch_X.GetInclusiveGameTags
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameSearch_X::eventGetInclusiveGameTags()
{
	static UFunction* uFnGetInclusiveGameTags = nullptr;

	if (!uFnGetInclusiveGameTags)
	{
		uFnGetInclusiveGameTags = UFunction::FindFunction("Function ProjectX.OnlineGameSearch_X.GetInclusiveGameTags");
	}

	UOnlineGameSearch_X_eventGetInclusiveGameTags_Params GetInclusiveGameTags_Params;

	this->ProcessEvent(uFnGetInclusiveGameTags, &GetInclusiveGameTags_Params, nullptr);

	return GetInclusiveGameTags_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSearch_X.SetMap
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  inMapName                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSearch_X::SetMap(class FString inMapName)
{
	static UFunction* uFnSetMap = nullptr;

	if (!uFnSetMap)
	{
		uFnSetMap = UFunction::FindFunction("Function ProjectX.OnlineGameSearch_X.SetMap");
	}

	UOnlineGameSearch_X_execSetMap_Params SetMap_Params;
	memcpy_s(&SetMap_Params.inMapName, 0x10, &inMapName, 0x10);

	this->ProcessEvent(uFnSetMap, &SetMap_Params, nullptr);
};

// Function ProjectX.OnlineGameSearch_X.SetExclusiveGameTags
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class FString>          inGameTagsArray                (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSearch_X::SetExclusiveGameTags(TArray<class FString> inGameTagsArray)
{
	static UFunction* uFnSetExclusiveGameTags = nullptr;

	if (!uFnSetExclusiveGameTags)
	{
		uFnSetExclusiveGameTags = UFunction::FindFunction("Function ProjectX.OnlineGameSearch_X.SetExclusiveGameTags");
	}

	UOnlineGameSearch_X_execSetExclusiveGameTags_Params SetExclusiveGameTags_Params;
	memcpy_s(&SetExclusiveGameTags_Params.inGameTagsArray, 0x10, &inGameTagsArray, 0x10);

	this->ProcessEvent(uFnSetExclusiveGameTags, &SetExclusiveGameTags_Params, nullptr);
};

// Function ProjectX.OnlineGameSearch_X.SetInclusiveGameTags
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class FString>          inGameTagsArray                (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSearch_X::SetInclusiveGameTags(TArray<class FString> inGameTagsArray)
{
	static UFunction* uFnSetInclusiveGameTags = nullptr;

	if (!uFnSetInclusiveGameTags)
	{
		uFnSetInclusiveGameTags = UFunction::FindFunction("Function ProjectX.OnlineGameSearch_X.SetInclusiveGameTags");
	}

	UOnlineGameSearch_X_execSetInclusiveGameTags_Params SetInclusiveGameTags_Params;
	memcpy_s(&SetInclusiveGameTags_Params.inGameTagsArray, 0x10, &inGameTagsArray, 0x10);

	this->ProcessEvent(uFnSetInclusiveGameTags, &SetInclusiveGameTags_Params, nullptr);
};

// Function ProjectX.OnlineGameSettings_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGameSettings_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.PrintDebugInfo");
	}

	UOnlineGameSettings_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameSettings_X.Equals
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UOnlineGameSettings_X*   OtherGameSettings              (CPF_Parm)

bool UOnlineGameSettings_X::Equals(class UOnlineGameSettings_X* OtherGameSettings)
{
	static UFunction* uFnEquals = nullptr;

	if (!uFnEquals)
	{
		uFnEquals = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.Equals");
	}

	UOnlineGameSettings_X_execEquals_Params Equals_Params;
	memcpy_s(&Equals_Params.OtherGameSettings, 0x8, &OtherGameSettings, 0x8);

	this->ProcessEvent(uFnEquals, &Equals_Params, nullptr);

	return Equals_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSettings_X.CalculateMinAndMaxNumPlayers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameSettings_X::CalculateMinAndMaxNumPlayers()
{
	static UFunction* uFnCalculateMinAndMaxNumPlayers = nullptr;

	if (!uFnCalculateMinAndMaxNumPlayers)
	{
		uFnCalculateMinAndMaxNumPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.CalculateMinAndMaxNumPlayers");
	}

	UOnlineGameSettings_X_execCalculateMinAndMaxNumPlayers_Params CalculateMinAndMaxNumPlayers_Params;

	this->ProcessEvent(uFnCalculateMinAndMaxNumPlayers, &CalculateMinAndMaxNumPlayers_Params, nullptr);
};

// Function ProjectX.OnlineGameSettings_X.CopyFrom
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameSettings_X*   OtherGameSettings              (CPF_Parm)

void UOnlineGameSettings_X::CopyFrom(class UOnlineGameSettings_X* OtherGameSettings)
{
	static UFunction* uFnCopyFrom = nullptr;

	if (!uFnCopyFrom)
	{
		uFnCopyFrom = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.CopyFrom");
	}

	UOnlineGameSettings_X_execCopyFrom_Params CopyFrom_Params;
	memcpy_s(&CopyFrom_Params.OtherGameSettings, 0x8, &OtherGameSettings, 0x8);

	this->ProcessEvent(uFnCopyFrom, &CopyFrom_Params, nullptr);
};

// Function ProjectX.OnlineGameSettings_X.GetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGameSettingPlaylist_X* UOnlineGameSettings_X::GetPlaylist()
{
	static UFunction* uFnGetPlaylist = nullptr;

	if (!uFnGetPlaylist)
	{
		uFnGetPlaylist = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.GetPlaylist");
	}

	UOnlineGameSettings_X_execGetPlaylist_Params GetPlaylist_Params;

	this->ProcessEvent(uFnGetPlaylist, &GetPlaylist_Params, nullptr);

	return GetPlaylist_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSettings_X.IsValid
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameSettings_X::IsValid()
{
	static UFunction* uFnIsValid = nullptr;

	if (!uFnIsValid)
	{
		uFnIsValid = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.IsValid");
	}

	UOnlineGameSettings_X_execIsValid_Params IsValid_Params;

	this->ProcessEvent(uFnIsValid, &IsValid_Params, nullptr);

	return IsValid_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSettings_X.RemoveMismatchedTags
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameSettings_X*   OtherGameSettings              (CPF_Parm)

void UOnlineGameSettings_X::RemoveMismatchedTags(class UOnlineGameSettings_X* OtherGameSettings)
{
	static UFunction* uFnRemoveMismatchedTags = nullptr;

	if (!uFnRemoveMismatchedTags)
	{
		uFnRemoveMismatchedTags = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.RemoveMismatchedTags");
	}

	UOnlineGameSettings_X_execRemoveMismatchedTags_Params RemoveMismatchedTags_Params;
	memcpy_s(&RemoveMismatchedTags_Params.OtherGameSettings, 0x8, &OtherGameSettings, 0x8);

	this->ProcessEvent(uFnRemoveMismatchedTags, &RemoveMismatchedTags_Params, nullptr);
};

// Function ProjectX.OnlineGameSettings_X.GetGameSettingCategoryByName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingCategory_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   CategoryName                   (CPF_Parm)

class UGameSettingCategory_X* UOnlineGameSettings_X::GetGameSettingCategoryByName(struct FName CategoryName)
{
	static UFunction* uFnGetGameSettingCategoryByName = nullptr;

	if (!uFnGetGameSettingCategoryByName)
	{
		uFnGetGameSettingCategoryByName = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.GetGameSettingCategoryByName");
	}

	UOnlineGameSettings_X_execGetGameSettingCategoryByName_Params GetGameSettingCategoryByName_Params;
	memcpy_s(&GetGameSettingCategoryByName_Params.CategoryName, 0x8, &CategoryName, 0x8);

	this->ProcessEvent(uFnGetGameSettingCategoryByName, &GetGameSettingCategoryByName_Params, nullptr);

	return GetGameSettingCategoryByName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSettings_X.SetIntProperty
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// int32_t                        PropertyId                     (CPF_Parm)
// int32_t                        Value                          (CPF_Parm)

void UOnlineGameSettings_X::SetIntProperty(int32_t PropertyId, int32_t Value)
{
	static UFunction* uFnSetIntProperty = nullptr;

	if (!uFnSetIntProperty)
	{
		uFnSetIntProperty = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.SetIntProperty");
	}

	UOnlineGameSettings_X_execSetIntProperty_Params SetIntProperty_Params;
	memcpy_s(&SetIntProperty_Params.PropertyId, 0x4, &PropertyId, 0x4);
	memcpy_s(&SetIntProperty_Params.Value, 0x4, &Value, 0x4);

	uFnSetIntProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetIntProperty, &SetIntProperty_Params, nullptr);

	uFnSetIntProperty->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineGameSettings_X.SetGameTag
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   NewGameTag                     (CPF_Parm)

void UOnlineGameSettings_X::SetGameTag(struct FName NewGameTag)
{
	static UFunction* uFnSetGameTag = nullptr;

	if (!uFnSetGameTag)
	{
		uFnSetGameTag = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.SetGameTag");
	}

	UOnlineGameSettings_X_execSetGameTag_Params SetGameTag_Params;
	memcpy_s(&SetGameTag_Params.NewGameTag, 0x8, &NewGameTag, 0x8);

	uFnSetGameTag->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetGameTag, &SetGameTag_Params, nullptr);

	uFnSetGameTag->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineGameSettings_X.UpdateFromURL
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AGameInfo*               Game                           (CPF_Parm)
// class FString                  URL                            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameSettings_X::UpdateFromURL(class AGameInfo* Game, class FString& URL)
{
	static UFunction* uFnUpdateFromURL = nullptr;

	if (!uFnUpdateFromURL)
	{
		uFnUpdateFromURL = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.UpdateFromURL");
	}

	UOnlineGameSettings_X_execUpdateFromURL_Params UpdateFromURL_Params;
	memcpy_s(&UpdateFromURL_Params.Game, 0x8, &Game, 0x8);
	memcpy_s(&UpdateFromURL_Params.URL, 0x10, &URL, 0x10);

	uFnUpdateFromURL->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUpdateFromURL, &UpdateFromURL_Params, nullptr);

	uFnUpdateFromURL->FunctionFlags |= 0x400;

	memcpy_s(&URL, 0x10, &UpdateFromURL_Params.URL, 0x10);
};

// Function ProjectX.OnlineGameSettings_X.HasSetting
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   SettingName                    (CPF_Parm)

bool UOnlineGameSettings_X::HasSetting(struct FName SettingName)
{
	static UFunction* uFnHasSetting = nullptr;

	if (!uFnHasSetting)
	{
		uFnHasSetting = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.HasSetting");
	}

	UOnlineGameSettings_X_execHasSetting_Params HasSetting_Params;
	memcpy_s(&HasSetting_Params.SettingName, 0x8, &SettingName, 0x8);

	uFnHasSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHasSetting, &HasSetting_Params, nullptr);

	uFnHasSetting->FunctionFlags |= 0x400;

	return HasSetting_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSettings_X.GetActiveGameSettings
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class UGameSetting_X*>  GameSettings                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameSettings_X::GetActiveGameSettings(TArray<class UGameSetting_X*>& GameSettings)
{
	static UFunction* uFnGetActiveGameSettings = nullptr;

	if (!uFnGetActiveGameSettings)
	{
		uFnGetActiveGameSettings = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.GetActiveGameSettings");
	}

	UOnlineGameSettings_X_execGetActiveGameSettings_Params GetActiveGameSettings_Params;
	memcpy_s(&GetActiveGameSettings_Params.GameSettings, 0x10, &GameSettings, 0x10);

	uFnGetActiveGameSettings->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetActiveGameSettings, &GetActiveGameSettings_Params, nullptr);

	uFnGetActiveGameSettings->FunctionFlags |= 0x400;

	memcpy_s(&GameSettings, 0x10, &GetActiveGameSettings_Params.GameSettings, 0x10);
};

// Function ProjectX.OnlineGameSettings_X.GetGameSetting
// [0x00424401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UGameSetting_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  SettingName                    (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)
// class UGameSettingCategory_X*  Category                       (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

class UGameSetting_X* UOnlineGameSettings_X::GetGameSetting(class FString SettingName, class UGameSettingCategory_X*& Category)
{
	static UFunction* uFnGetGameSetting = nullptr;

	if (!uFnGetGameSetting)
	{
		uFnGetGameSetting = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.GetGameSetting");
	}

	UOnlineGameSettings_X_execGetGameSetting_Params GetGameSetting_Params;
	memcpy_s(&GetGameSetting_Params.SettingName, 0x10, &SettingName, 0x10);
	memcpy_s(&GetGameSetting_Params.Category, 0x8, &Category, 0x8);

	uFnGetGameSetting->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetGameSetting, &GetGameSetting_Params, nullptr);

	uFnGetGameSetting->FunctionFlags |= 0x400;

	memcpy_s(&Category, 0x8, &GetGameSetting_Params.Category, 0x8);

	return GetGameSetting_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSettings_X.GetGameTags
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameSettings_X::GetGameTags()
{
	static UFunction* uFnGetGameTags = nullptr;

	if (!uFnGetGameTags)
	{
		uFnGetGameTags = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.GetGameTags");
	}

	UOnlineGameSettings_X_execGetGameTags_Params GetGameTags_Params;

	uFnGetGameTags->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetGameTags, &GetGameTags_Params, nullptr);

	uFnGetGameTags->FunctionFlags |= 0x400;

	return GetGameTags_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSettings_X.GetStringProperty
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PropertyId                     (CPF_Parm)
// class FString                  Value                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameSettings_X::GetStringProperty(int32_t PropertyId, class FString& Value)
{
	static UFunction* uFnGetStringProperty = nullptr;

	if (!uFnGetStringProperty)
	{
		uFnGetStringProperty = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.GetStringProperty");
	}

	UOnlineGameSettings_X_execGetStringProperty_Params GetStringProperty_Params;
	memcpy_s(&GetStringProperty_Params.PropertyId, 0x4, &PropertyId, 0x4);
	memcpy_s(&GetStringProperty_Params.Value, 0x10, &Value, 0x10);

	uFnGetStringProperty->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetStringProperty, &GetStringProperty_Params, nullptr);

	uFnGetStringProperty->FunctionFlags |= 0x400;

	memcpy_s(&Value, 0x10, &GetStringProperty_Params.Value, 0x10);

	return GetStringProperty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSettings_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameSettings_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.Init");
	}

	UOnlineGameSettings_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.OnlineGameSettings_X.EventNumPlayersUpdated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameSettings_X*   GameSettings                   (CPF_Parm)
// int32_t                        NewMinimumPlayersRequired      (CPF_Parm)

void UOnlineGameSettings_X::EventNumPlayersUpdated(class UOnlineGameSettings_X* GameSettings, int32_t NewMinimumPlayersRequired)
{
	static UFunction* uFnEventNumPlayersUpdated = nullptr;

	if (!uFnEventNumPlayersUpdated)
	{
		uFnEventNumPlayersUpdated = UFunction::FindFunction("Function ProjectX.OnlineGameSettings_X.EventNumPlayersUpdated");
	}

	UOnlineGameSettings_X_execEventNumPlayersUpdated_Params EventNumPlayersUpdated_Params;
	memcpy_s(&EventNumPlayersUpdated_Params.GameSettings, 0x8, &GameSettings, 0x8);
	memcpy_s(&EventNumPlayersUpdated_Params.NewMinimumPlayersRequired, 0x4, &NewMinimumPlayersRequired, 0x4);

	this->ProcessEvent(uFnEventNumPlayersUpdated, &EventNumPlayersUpdated_Params, nullptr);
};

// Function ProjectX.OnlineLegalText_X.__OnlineLegalText_X__Sync_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UUrlConfig_X*            UrlConfig                      (CPF_Parm)

void UOnlineLegalText_X::__OnlineLegalText_X__Sync_0x1(class UUrlConfig_X* UrlConfig)
{
	static UFunction* uFn__OnlineLegalText_X__Sync_0x1 = nullptr;

	if (!uFn__OnlineLegalText_X__Sync_0x1)
	{
		uFn__OnlineLegalText_X__Sync_0x1 = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.__OnlineLegalText_X__Sync_0x1");
	}

	UOnlineLegalText_X_exec__OnlineLegalText_X__Sync_0x1_Params __OnlineLegalText_X__Sync_0x1_Params;
	memcpy_s(&__OnlineLegalText_X__Sync_0x1_Params.UrlConfig, 0x8, &UrlConfig, 0x8);

	this->ProcessEvent(uFn__OnlineLegalText_X__Sync_0x1, &__OnlineLegalText_X__Sync_0x1_Params, nullptr);
};

// Function ProjectX.OnlineLegalText_X.HandleWebText
// [0x00080401] (FUNC_Final | FUNC_Native | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UCachedWebData_X*        InCachedData                   (CPF_Parm)

void UOnlineLegalText_X::HandleWebText(class UCachedWebData_X* InCachedData)
{
	static UFunction* uFnHandleWebText = nullptr;

	if (!uFnHandleWebText)
	{
		uFnHandleWebText = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.HandleWebText");
	}

	UOnlineLegalText_X_execHandleWebText_Params HandleWebText_Params;
	memcpy_s(&HandleWebText_Params.InCachedData, 0x8, &InCachedData, 0x8);

	uFnHandleWebText->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleWebText, &HandleWebText_Params, nullptr);

	uFnHandleWebText->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineLegalText_X.GetWebUrl
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UUrlConfig_X*            UrlConfig                      (CPF_Parm)

class FString UOnlineLegalText_X::GetWebUrl(class UUrlConfig_X* UrlConfig)
{
	static UFunction* uFnGetWebUrl = nullptr;

	if (!uFnGetWebUrl)
	{
		uFnGetWebUrl = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.GetWebUrl");
	}

	UOnlineLegalText_X_execGetWebUrl_Params GetWebUrl_Params;
	memcpy_s(&GetWebUrl_Params.UrlConfig, 0x8, &UrlConfig, 0x8);

	this->ProcessEvent(uFnGetWebUrl, &GetWebUrl_Params, nullptr);

	return GetWebUrl_Params.ReturnValue;
};

// Function ProjectX.OnlineLegalText_X.GetPlatformString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineLegalText_X::GetPlatformString()
{
	static UFunction* uFnGetPlatformString = nullptr;

	if (!uFnGetPlatformString)
	{
		uFnGetPlatformString = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.GetPlatformString");
	}

	UOnlineLegalText_X_execGetPlatformString_Params GetPlatformString_Params;

	this->ProcessEvent(uFnGetPlatformString, &GetPlatformString_Params, nullptr);

	return GetPlatformString_Params.ReturnValue;
};

// Function ProjectX.OnlineLegalText_X.GetRelativeUrl
// [0x00044003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// unsigned long                  bUseAppendedPath               (CPF_OptionalParm | CPF_Parm)

class FString UOnlineLegalText_X::GetRelativeUrl(unsigned long bUseAppendedPath)
{
	static UFunction* uFnGetRelativeUrl = nullptr;

	if (!uFnGetRelativeUrl)
	{
		uFnGetRelativeUrl = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.GetRelativeUrl");
	}

	UOnlineLegalText_X_execGetRelativeUrl_Params GetRelativeUrl_Params;
	GetRelativeUrl_Params.bUseAppendedPath = bUseAppendedPath;

	this->ProcessEvent(uFnGetRelativeUrl, &GetRelativeUrl_Params, nullptr);

	return GetRelativeUrl_Params.ReturnValue;
};

// Function ProjectX.OnlineLegalText_X.GetFileSystemUrl
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineLegalText_X::eventGetFileSystemUrl()
{
	static UFunction* uFnGetFileSystemUrl = nullptr;

	if (!uFnGetFileSystemUrl)
	{
		uFnGetFileSystemUrl = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.GetFileSystemUrl");
	}

	UOnlineLegalText_X_eventGetFileSystemUrl_Params GetFileSystemUrl_Params;

	this->ProcessEvent(uFnGetFileSystemUrl, &GetFileSystemUrl_Params, nullptr);

	return GetFileSystemUrl_Params.ReturnValue;
};

// Function ProjectX.OnlineLegalText_X.GetText
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineLegalText_X::GetText()
{
	static UFunction* uFnGetText = nullptr;

	if (!uFnGetText)
	{
		uFnGetText = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.GetText");
	}

	UOnlineLegalText_X_execGetText_Params GetText_Params;

	uFnGetText->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetText, &GetText_Params, nullptr);

	uFnGetText->FunctionFlags |= 0x400;

	return GetText_Params.ReturnValue;
};

// Function ProjectX.OnlineLegalText_X.ClearCache
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineLegalText_X::ClearCache()
{
	static UFunction* uFnClearCache = nullptr;

	if (!uFnClearCache)
	{
		uFnClearCache = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.ClearCache");
	}

	UOnlineLegalText_X_execClearCache_Params ClearCache_Params;

	this->ProcessEvent(uFnClearCache, &ClearCache_Params, nullptr);
};

// Function ProjectX.OnlineLegalText_X.Sync
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InAppendPath                   (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineLegalText_X::Sync(class FString InAppendPath)
{
	static UFunction* uFnSync = nullptr;

	if (!uFnSync)
	{
		uFnSync = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.Sync");
	}

	UOnlineLegalText_X_execSync_Params Sync_Params;
	memcpy_s(&Sync_Params.InAppendPath, 0x10, &InAppendPath, 0x10);

	this->ProcessEvent(uFnSync, &Sync_Params, nullptr);
};

// Function ProjectX.OnlineLegalText_X.EventNewText
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineLegalText_X*      Text                           (CPF_Parm | CPF_EditInline)

void UOnlineLegalText_X::EventNewText(class UOnlineLegalText_X* Text)
{
	static UFunction* uFnEventNewText = nullptr;

	if (!uFnEventNewText)
	{
		uFnEventNewText = UFunction::FindFunction("Function ProjectX.OnlineLegalText_X.EventNewText");
	}

	UOnlineLegalText_X_execEventNewText_Params EventNewText_Params;
	memcpy_s(&EventNewText_Params.Text, 0x8, &Text, 0x8);

	this->ProcessEvent(uFnEventNewText, &EventNewText_Params, nullptr);
};

// Function ProjectX.OnlineMessageComponent_X.EnableCompression
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)
// unsigned long                  bEnabled                       (CPF_Parm)

class UOnlineMessageComponent_X* UOnlineMessageComponent_X::EnableCompression(unsigned long bEnabled)
{
	static UFunction* uFnEnableCompression = nullptr;

	if (!uFnEnableCompression)
	{
		uFnEnableCompression = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.EnableCompression");
	}

	UOnlineMessageComponent_X_execEnableCompression_Params EnableCompression_Params;
	EnableCompression_Params.bEnabled = bEnabled;

	this->ProcessEvent(uFnEnableCompression, &EnableCompression_Params, nullptr);

	return EnableCompression_Params.ReturnValue;
};

// Function ProjectX.OnlineMessageComponent_X.SetSerializer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)
// class USerializer_X*           InSerializer                   (CPF_Parm)

class UOnlineMessageComponent_X* UOnlineMessageComponent_X::SetSerializer(class USerializer_X* InSerializer)
{
	static UFunction* uFnSetSerializer = nullptr;

	if (!uFnSetSerializer)
	{
		uFnSetSerializer = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.SetSerializer");
	}

	UOnlineMessageComponent_X_execSetSerializer_Params SetSerializer_Params;
	memcpy_s(&SetSerializer_Params.InSerializer, 0x8, &InSerializer, 0x8);

	this->ProcessEvent(uFnSetSerializer, &SetSerializer_Params, nullptr);

	return SetSerializer_Params.ReturnValue;
};

// Function ProjectX.OnlineMessageComponent_X.InvokeHandlers
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Message                        (CPF_Parm)

void UOnlineMessageComponent_X::InvokeHandlers(class UObject* Message)
{
	static UFunction* uFnInvokeHandlers = nullptr;

	if (!uFnInvokeHandlers)
	{
		uFnInvokeHandlers = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.InvokeHandlers");
	}

	UOnlineMessageComponent_X_execInvokeHandlers_Params InvokeHandlers_Params;
	memcpy_s(&InvokeHandlers_Params.Message, 0x8, &Message, 0x8);

	uFnInvokeHandlers->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInvokeHandlers, &InvokeHandlers_Params, nullptr);

	uFnInvokeHandlers->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineMessageComponent_X.DeserializeMessage
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  ExpectedMessageBaseClass       (CPF_Parm)
// class UObject*                 MessageOuter                   (CPF_Parm)
// TArray<uint8_t>                Data                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UObject* UOnlineMessageComponent_X::DeserializeMessage(class UClass* ExpectedMessageBaseClass, class UObject* MessageOuter, TArray<uint8_t>& Data)
{
	static UFunction* uFnDeserializeMessage = nullptr;

	if (!uFnDeserializeMessage)
	{
		uFnDeserializeMessage = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.DeserializeMessage");
	}

	UOnlineMessageComponent_X_execDeserializeMessage_Params DeserializeMessage_Params;
	memcpy_s(&DeserializeMessage_Params.ExpectedMessageBaseClass, 0x8, &ExpectedMessageBaseClass, 0x8);
	memcpy_s(&DeserializeMessage_Params.MessageOuter, 0x8, &MessageOuter, 0x8);
	memcpy_s(&DeserializeMessage_Params.Data, 0x10, &Data, 0x10);

	uFnDeserializeMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDeserializeMessage, &DeserializeMessage_Params, nullptr);

	uFnDeserializeMessage->FunctionFlags |= 0x400;

	memcpy_s(&Data, 0x10, &DeserializeMessage_Params.Data, 0x10);

	return DeserializeMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineMessageComponent_X.SerializeMessage
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 Message                        (CPF_Parm)
// TArray<uint8_t>                OutData                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineMessageComponent_X::SerializeMessage(class UObject* Message, TArray<uint8_t>& OutData)
{
	static UFunction* uFnSerializeMessage = nullptr;

	if (!uFnSerializeMessage)
	{
		uFnSerializeMessage = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.SerializeMessage");
	}

	UOnlineMessageComponent_X_execSerializeMessage_Params SerializeMessage_Params;
	memcpy_s(&SerializeMessage_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&SerializeMessage_Params.OutData, 0x10, &OutData, 0x10);

	uFnSerializeMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSerializeMessage, &SerializeMessage_Params, nullptr);

	uFnSerializeMessage->FunctionFlags |= 0x400;

	memcpy_s(&OutData, 0x10, &SerializeMessage_Params.OutData, 0x10);

	return SerializeMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineMessageComponent_X.CreateMessage
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessage_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  MessageClass                   (CPF_Parm)
// class UObject*                 MessageOuter                   (CPF_OptionalParm | CPF_Parm)

class UOnlineMessage_X* UOnlineMessageComponent_X::CreateMessage(class UClass* MessageClass, class UObject* MessageOuter)
{
	static UFunction* uFnCreateMessage = nullptr;

	if (!uFnCreateMessage)
	{
		uFnCreateMessage = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.CreateMessage");
	}

	UOnlineMessageComponent_X_execCreateMessage_Params CreateMessage_Params;
	memcpy_s(&CreateMessage_Params.MessageClass, 0x8, &MessageClass, 0x8);
	memcpy_s(&CreateMessage_Params.MessageOuter, 0x8, &MessageOuter, 0x8);

	uFnCreateMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCreateMessage, &CreateMessage_Params, nullptr);

	uFnCreateMessage->FunctionFlags |= 0x400;

	return CreateMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineMessageComponent_X.RemoveMessageHandler
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineMessageComponent_X::RemoveMessageHandler(struct FScriptDelegate Callback)
{
	static UFunction* uFnRemoveMessageHandler = nullptr;

	if (!uFnRemoveMessageHandler)
	{
		uFnRemoveMessageHandler = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.RemoveMessageHandler");
	}

	UOnlineMessageComponent_X_execRemoveMessageHandler_Params RemoveMessageHandler_Params;
	memcpy_s(&RemoveMessageHandler_Params.Callback, 0x18, &Callback, 0x18);

	uFnRemoveMessageHandler->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveMessageHandler, &RemoveMessageHandler_Params, nullptr);

	uFnRemoveMessageHandler->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineMessageComponent_X.AddMessageHandler
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClass*                  MessageClass                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineMessageComponent_X::AddMessageHandler(class UClass* MessageClass, struct FScriptDelegate Callback)
{
	static UFunction* uFnAddMessageHandler = nullptr;

	if (!uFnAddMessageHandler)
	{
		uFnAddMessageHandler = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.AddMessageHandler");
	}

	UOnlineMessageComponent_X_execAddMessageHandler_Params AddMessageHandler_Params;
	memcpy_s(&AddMessageHandler_Params.MessageClass, 0x8, &MessageClass, 0x8);
	memcpy_s(&AddMessageHandler_Params.Callback, 0x18, &Callback, 0x18);

	uFnAddMessageHandler->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddMessageHandler, &AddMessageHandler_Params, nullptr);

	uFnAddMessageHandler->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineMessageComponent_X.MessageReceivedDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineMessageComponent_X::MessageReceivedDelegate(class UOnlineMessageComponent_X* Component, class UObject* Message)
{
	static UFunction* uFnMessageReceivedDelegate = nullptr;

	if (!uFnMessageReceivedDelegate)
	{
		uFnMessageReceivedDelegate = UFunction::FindFunction("Function ProjectX.OnlineMessageComponent_X.MessageReceivedDelegate");
	}

	UOnlineMessageComponent_X_execMessageReceivedDelegate_Params MessageReceivedDelegate_Params;
	memcpy_s(&MessageReceivedDelegate_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&MessageReceivedDelegate_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnMessageReceivedDelegate, &MessageReceivedDelegate_Params, nullptr);
};

// Function ProjectX.ParameterDispenser_X.Inherit
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UParameterDispenser_X*   Other                          (CPF_Parm | CPF_EditInline)

void UParameterDispenser_X::Inherit(class UParameterDispenser_X* Other)
{
	static UFunction* uFnInherit = nullptr;

	if (!uFnInherit)
	{
		uFnInherit = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.Inherit");
	}

	UParameterDispenser_X_execInherit_Params Inherit_Params;
	memcpy_s(&Inherit_Params.Other, 0x8, &Other, 0x8);

	this->ProcessEvent(uFnInherit, &Inherit_Params, nullptr);
};

// Function ProjectX.ParameterDispenser_X.ResetMaterials
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UParameterDispenser_X::ResetMaterials()
{
	static UFunction* uFnResetMaterials = nullptr;

	if (!uFnResetMaterials)
	{
		uFnResetMaterials = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.ResetMaterials");
	}

	UParameterDispenser_X_execResetMaterials_Params ResetMaterials_Params;

	uFnResetMaterials->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnResetMaterials, &ResetMaterials_Params, nullptr);

	uFnResetMaterials->FunctionFlags |= 0x400;
};

// Function ProjectX.ParameterDispenser_X.ApplyAllParameters
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UISetParameter*          ActorComp                      (CPF_Parm)

void UParameterDispenser_X::ApplyAllParameters(class UISetParameter* ActorComp)
{
	static UFunction* uFnApplyAllParameters = nullptr;

	if (!uFnApplyAllParameters)
	{
		uFnApplyAllParameters = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.ApplyAllParameters");
	}

	UParameterDispenser_X_execApplyAllParameters_Params ApplyAllParameters_Params;
	memcpy_s(&ApplyAllParameters_Params.ActorComp, 0x10, &ActorComp, 0x10);

	uFnApplyAllParameters->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnApplyAllParameters, &ApplyAllParameters_Params, nullptr);

	uFnApplyAllParameters->FunctionFlags |= 0x400;
};

// Function ProjectX.ParameterDispenser_X.GetActorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   Key                            (CPF_Parm)

class AActor* UParameterDispenser_X::GetActorParameter(struct FName Key)
{
	static UFunction* uFnGetActorParameter = nullptr;

	if (!uFnGetActorParameter)
	{
		uFnGetActorParameter = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.GetActorParameter");
	}

	UParameterDispenser_X_execGetActorParameter_Params GetActorParameter_Params;
	memcpy_s(&GetActorParameter_Params.Key, 0x8, &Key, 0x8);

	uFnGetActorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetActorParameter, &GetActorParameter_Params, nullptr);

	uFnGetActorParameter->FunctionFlags |= 0x400;

	return GetActorParameter_Params.ReturnValue;
};

// Function ProjectX.ParameterDispenser_X.SetActorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// class AActor*                  Value                          (CPF_Parm)

void UParameterDispenser_X::SetActorParameter(struct FName Key, class AActor* Value)
{
	static UFunction* uFnSetActorParameter = nullptr;

	if (!uFnSetActorParameter)
	{
		uFnSetActorParameter = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.SetActorParameter");
	}

	UParameterDispenser_X_execSetActorParameter_Params SetActorParameter_Params;
	memcpy_s(&SetActorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetActorParameter_Params.Value, 0x8, &Value, 0x8);

	uFnSetActorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetActorParameter, &SetActorParameter_Params, nullptr);

	uFnSetActorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ParameterDispenser_X.SetLinearColorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FLinearColor            Value                          (CPF_Parm)

void UParameterDispenser_X::SetLinearColorParameter(struct FName Key, struct FLinearColor Value)
{
	static UFunction* uFnSetLinearColorParameter = nullptr;

	if (!uFnSetLinearColorParameter)
	{
		uFnSetLinearColorParameter = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.SetLinearColorParameter");
	}

	UParameterDispenser_X_execSetLinearColorParameter_Params SetLinearColorParameter_Params;
	memcpy_s(&SetLinearColorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetLinearColorParameter_Params.Value, 0x10, &Value, 0x10);

	uFnSetLinearColorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetLinearColorParameter, &SetLinearColorParameter_Params, nullptr);

	uFnSetLinearColorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ParameterDispenser_X.SetVectorParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FVector                 Value                          (CPF_Parm)

void UParameterDispenser_X::SetVectorParameter(struct FName Key, struct FVector Value)
{
	static UFunction* uFnSetVectorParameter = nullptr;

	if (!uFnSetVectorParameter)
	{
		uFnSetVectorParameter = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.SetVectorParameter");
	}

	UParameterDispenser_X_execSetVectorParameter_Params SetVectorParameter_Params;
	memcpy_s(&SetVectorParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetVectorParameter_Params.Value, 0xC, &Value, 0xC);

	uFnSetVectorParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetVectorParameter, &SetVectorParameter_Params, nullptr);

	uFnSetVectorParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ParameterDispenser_X.SetFloatParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// float                          Value                          (CPF_Parm)

void UParameterDispenser_X::SetFloatParameter(struct FName Key, float Value)
{
	static UFunction* uFnSetFloatParameter = nullptr;

	if (!uFnSetFloatParameter)
	{
		uFnSetFloatParameter = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.SetFloatParameter");
	}

	UParameterDispenser_X_execSetFloatParameter_Params SetFloatParameter_Params;
	memcpy_s(&SetFloatParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetFloatParameter_Params.Value, 0x4, &Value, 0x4);

	uFnSetFloatParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetFloatParameter, &SetFloatParameter_Params, nullptr);

	uFnSetFloatParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ParameterDispenser_X.SetNameParameter
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// struct FName                   Value                          (CPF_Parm)

void UParameterDispenser_X::SetNameParameter(struct FName Key, struct FName Value)
{
	static UFunction* uFnSetNameParameter = nullptr;

	if (!uFnSetNameParameter)
	{
		uFnSetNameParameter = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.SetNameParameter");
	}

	UParameterDispenser_X_execSetNameParameter_Params SetNameParameter_Params;
	memcpy_s(&SetNameParameter_Params.Key, 0x8, &Key, 0x8);
	memcpy_s(&SetNameParameter_Params.Value, 0x8, &Value, 0x8);

	uFnSetNameParameter->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetNameParameter, &SetNameParameter_Params, nullptr);

	uFnSetNameParameter->FunctionFlags |= 0x400;
};

// Function ProjectX.ParameterDispenser_X.RemoveComponent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UISetParameter*          ActorComp                      (CPF_Parm)

void UParameterDispenser_X::RemoveComponent(class UISetParameter* ActorComp)
{
	static UFunction* uFnRemoveComponent = nullptr;

	if (!uFnRemoveComponent)
	{
		uFnRemoveComponent = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.RemoveComponent");
	}

	UParameterDispenser_X_execRemoveComponent_Params RemoveComponent_Params;
	memcpy_s(&RemoveComponent_Params.ActorComp, 0x10, &ActorComp, 0x10);

	uFnRemoveComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveComponent, &RemoveComponent_Params, nullptr);

	uFnRemoveComponent->FunctionFlags |= 0x400;
};

// Function ProjectX.ParameterDispenser_X.AddComponent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UISetParameter*          ActorComp                      (CPF_Parm)

void UParameterDispenser_X::AddComponent(class UISetParameter* ActorComp)
{
	static UFunction* uFnAddComponent = nullptr;

	if (!uFnAddComponent)
	{
		uFnAddComponent = UFunction::FindFunction("Function ProjectX.ParameterDispenser_X.AddComponent");
	}

	UParameterDispenser_X_execAddComponent_Params AddComponent_Params;
	memcpy_s(&AddComponent_Params.ActorComp, 0x10, &ActorComp, 0x10);

	uFnAddComponent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddComponent, &AddComponent_Params, nullptr);

	uFnAddComponent->FunctionFlags |= 0x400;
};

// Function ProjectX.Pawn_X.IsSameTeam
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class APawn*                   Other                          (CPF_Parm)

bool APawn_X::eventIsSameTeam(class APawn* Other)
{
	static UFunction* uFnIsSameTeam = nullptr;

	if (!uFnIsSameTeam)
	{
		uFnIsSameTeam = UFunction::FindFunction("Function ProjectX.Pawn_X.IsSameTeam");
	}

	APawn_X_eventIsSameTeam_Params IsSameTeam_Params;
	memcpy_s(&IsSameTeam_Params.Other, 0x8, &Other, 0x8);

	this->ProcessEvent(uFnIsSameTeam, &IsSameTeam_Params, nullptr);

	return IsSameTeam_Params.ReturnValue;
};

// Function ProjectX.Pawn_X.Destroyed
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APawn_X::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function ProjectX.Pawn_X.Destroyed");
	}

	APawn_X_eventDestroyed_Params Destroyed_Params;

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function ProjectX.Pawn_X.GetGravityZ
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float APawn_X::GetGravityZ()
{
	static UFunction* uFnGetGravityZ = nullptr;

	if (!uFnGetGravityZ)
	{
		uFnGetGravityZ = UFunction::FindFunction("Function ProjectX.Pawn_X.GetGravityZ");
	}

	APawn_X_execGetGravityZ_Params GetGravityZ_Params;

	uFnGetGravityZ->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetGravityZ, &GetGravityZ_Params, nullptr);

	uFnGetGravityZ->FunctionFlags |= 0x400;

	return GetGravityZ_Params.ReturnValue;
};

// Function ProjectX.Pawn_X.OnAnimEnd
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAnimNodeSequence*       SeqNode                        (CPF_Parm)
// float                          PlayedTime                     (CPF_Parm)
// float                          ExcessTime                     (CPF_Parm)

void APawn_X::eventOnAnimEnd(class UAnimNodeSequence* SeqNode, float PlayedTime, float ExcessTime)
{
	static UFunction* uFnOnAnimEnd = nullptr;

	if (!uFnOnAnimEnd)
	{
		uFnOnAnimEnd = UFunction::FindFunction("Function ProjectX.Pawn_X.OnAnimEnd");
	}

	APawn_X_eventOnAnimEnd_Params OnAnimEnd_Params;
	memcpy_s(&OnAnimEnd_Params.SeqNode, 0x8, &SeqNode, 0x8);
	memcpy_s(&OnAnimEnd_Params.PlayedTime, 0x4, &PlayedTime, 0x4);
	memcpy_s(&OnAnimEnd_Params.ExcessTime, 0x4, &ExcessTime, 0x4);

	this->ProcessEvent(uFnOnAnimEnd, &OnAnimEnd_Params, nullptr);
};

// Function ProjectX.Pawn_X.OnControllerChanged
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void APawn_X::OnControllerChanged()
{
	static UFunction* uFnOnControllerChanged = nullptr;

	if (!uFnOnControllerChanged)
	{
		uFnOnControllerChanged = UFunction::FindFunction("Function ProjectX.Pawn_X.OnControllerChanged");
	}

	APawn_X_execOnControllerChanged_Params OnControllerChanged_Params;

	this->ProcessEvent(uFnOnControllerChanged, &OnControllerChanged_Params, nullptr);
};

// Function ProjectX.Pawn_X.PossessedBy
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AController*             C                              (CPF_Parm)

void APawn_X::PossessedBy(class AController* C)
{
	static UFunction* uFnPossessedBy = nullptr;

	if (!uFnPossessedBy)
	{
		uFnPossessedBy = UFunction::FindFunction("Function ProjectX.Pawn_X.PossessedBy");
	}

	APawn_X_execPossessedBy_Params PossessedBy_Params;
	memcpy_s(&PossessedBy_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnPossessedBy, &PossessedBy_Params, nullptr);
};

// Function ProjectX.Pawn_X.UpdateControllerRef
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void APawn_X::UpdateControllerRef()
{
	static UFunction* uFnUpdateControllerRef = nullptr;

	if (!uFnUpdateControllerRef)
	{
		uFnUpdateControllerRef = UFunction::FindFunction("Function ProjectX.Pawn_X.UpdateControllerRef");
	}

	APawn_X_execUpdateControllerRef_Params UpdateControllerRef_Params;

	this->ProcessEvent(uFnUpdateControllerRef, &UpdateControllerRef_Params, nullptr);
};

// Function ProjectX.Pawn_X.ReplicatedEvent
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FName                   VarName                        (CPF_Parm)

void APawn_X::eventReplicatedEvent(struct FName VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function ProjectX.Pawn_X.ReplicatedEvent");
	}

	APawn_X_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memcpy_s(&ReplicatedEvent_Params.VarName, 0x8, &VarName, 0x8);

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function ProjectX.Pawn_X.EventAnimEnd
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APawn_X*                 ForPawn                        (CPF_Parm)
// class UAnimNodeSequence*       SeqNode                        (CPF_Parm)

void APawn_X::EventAnimEnd(class APawn_X* ForPawn, class UAnimNodeSequence* SeqNode)
{
	static UFunction* uFnEventAnimEnd = nullptr;

	if (!uFnEventAnimEnd)
	{
		uFnEventAnimEnd = UFunction::FindFunction("Function ProjectX.Pawn_X.EventAnimEnd");
	}

	APawn_X_execEventAnimEnd_Params EventAnimEnd_Params;
	memcpy_s(&EventAnimEnd_Params.ForPawn, 0x8, &ForPawn, 0x8);
	memcpy_s(&EventAnimEnd_Params.SeqNode, 0x8, &SeqNode, 0x8);

	this->ProcessEvent(uFnEventAnimEnd, &EventAnimEnd_Params, nullptr);
};

// Function ProjectX.Pawn_X.EventDestroyed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APawn_X*                 Pawn                           (CPF_Parm)

void APawn_X::EventDestroyed(class APawn_X* Pawn)
{
	static UFunction* uFnEventDestroyed = nullptr;

	if (!uFnEventDestroyed)
	{
		uFnEventDestroyed = UFunction::FindFunction("Function ProjectX.Pawn_X.EventDestroyed");
	}

	APawn_X_execEventDestroyed_Params EventDestroyed_Params;
	memcpy_s(&EventDestroyed_Params.Pawn, 0x8, &Pawn, 0x8);

	this->ProcessEvent(uFnEventDestroyed, &EventDestroyed_Params, nullptr);
};

// Function ProjectX.PerCon_X.UseWebSocket
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bRpcWebSocket                  (CPF_Parm)

bool UPerCon_X::UseWebSocket(unsigned long bRpcWebSocket)
{
	static UFunction* uFnUseWebSocket = nullptr;

	if (!uFnUseWebSocket)
	{
		uFnUseWebSocket = UFunction::FindFunction("Function ProjectX.PerCon_X.UseWebSocket");
	}

	UPerCon_X_execUseWebSocket_Params UseWebSocket_Params;
	UseWebSocket_Params.bRpcWebSocket = bRpcWebSocket;

	UPerCon_X::StaticClass()->ProcessEvent(uFnUseWebSocket, &UseWebSocket_Params, nullptr);

	return UseWebSocket_Params.ReturnValue;
};

// Function ProjectX.PerCon_X.HandleConfigChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPerCon_X::HandleConfigChanged()
{
	static UFunction* uFnHandleConfigChanged = nullptr;

	if (!uFnHandleConfigChanged)
	{
		uFnHandleConfigChanged = UFunction::FindFunction("Function ProjectX.PerCon_X.HandleConfigChanged");
	}

	UPerCon_X_execHandleConfigChanged_Params HandleConfigChanged_Params;

	this->ProcessEvent(uFnHandleConfigChanged, &HandleConfigChanged_Params, nullptr);
};

// Function ProjectX.PerCon_X.SetStatus
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        InStatus                       (CPF_Parm)

void UPerCon_X::SetStatus(uint8_t InStatus)
{
	static UFunction* uFnSetStatus = nullptr;

	if (!uFnSetStatus)
	{
		uFnSetStatus = UFunction::FindFunction("Function ProjectX.PerCon_X.SetStatus");
	}

	UPerCon_X_execSetStatus_Params SetStatus_Params;
	memcpy_s(&SetStatus_Params.InStatus, 0x1, &InStatus, 0x1);

	this->ProcessEvent(uFnSetStatus, &SetStatus_Params, nullptr);
};

// Function ProjectX.PerCon_X.SetEnabled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bEnable                        (CPF_Parm)

void UPerCon_X::SetEnabled(unsigned long bEnable)
{
	static UFunction* uFnSetEnabled = nullptr;

	if (!uFnSetEnabled)
	{
		uFnSetEnabled = UFunction::FindFunction("Function ProjectX.PerCon_X.SetEnabled");
	}

	UPerCon_X_execSetEnabled_Params SetEnabled_Params;
	SetEnabled_Params.bEnable = bEnable;

	this->ProcessEvent(uFnSetEnabled, &SetEnabled_Params, nullptr);
};

// Function ProjectX.PerCon_X.EventStatusChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPerCon_X*               PerCon                         (CPF_Parm)

void UPerCon_X::EventStatusChanged(class UPerCon_X* PerCon)
{
	static UFunction* uFnEventStatusChanged = nullptr;

	if (!uFnEventStatusChanged)
	{
		uFnEventStatusChanged = UFunction::FindFunction("Function ProjectX.PerCon_X.EventStatusChanged");
	}

	UPerCon_X_execEventStatusChanged_Params EventStatusChanged_Params;
	memcpy_s(&EventStatusChanged_Params.PerCon, 0x8, &PerCon, 0x8);

	this->ProcessEvent(uFnEventStatusChanged, &EventStatusChanged_Params, nullptr);
};

// Function ProjectX.PlayerInput_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UPlayerInput_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.PlayerInput_X.PrintDebugInfo");
	}

	UPlayerInput_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.PlayerInput_X.GetKeyForActionArray
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   Action                         (CPF_Parm)
// TArray<struct FPlayerBinding>  PlayerBindings                 (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FName UPlayerInput_X::GetKeyForActionArray(struct FName Action, TArray<struct FPlayerBinding>& PlayerBindings)
{
	static UFunction* uFnGetKeyForActionArray = nullptr;

	if (!uFnGetKeyForActionArray)
	{
		uFnGetKeyForActionArray = UFunction::FindFunction("Function ProjectX.PlayerInput_X.GetKeyForActionArray");
	}

	UPlayerInput_X_execGetKeyForActionArray_Params GetKeyForActionArray_Params;
	memcpy_s(&GetKeyForActionArray_Params.Action, 0x8, &Action, 0x8);
	memcpy_s(&GetKeyForActionArray_Params.PlayerBindings, 0x10, &PlayerBindings, 0x10);

	UPlayerInput_X::StaticClass()->ProcessEvent(uFnGetKeyForActionArray, &GetKeyForActionArray_Params, nullptr);

	memcpy_s(&PlayerBindings, 0x10, &GetKeyForActionArray_Params.PlayerBindings, 0x10);

	return GetKeyForActionArray_Params.ReturnValue;
};

// Function ProjectX.PlayerInput_X.AbsorbCurrentKeyPress
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPlayerInput_X::AbsorbCurrentKeyPress()
{
	static UFunction* uFnAbsorbCurrentKeyPress = nullptr;

	if (!uFnAbsorbCurrentKeyPress)
	{
		uFnAbsorbCurrentKeyPress = UFunction::FindFunction("Function ProjectX.PlayerInput_X.AbsorbCurrentKeyPress");
	}

	UPlayerInput_X_execAbsorbCurrentKeyPress_Params AbsorbCurrentKeyPress_Params;

	uFnAbsorbCurrentKeyPress->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAbsorbCurrentKeyPress, &AbsorbCurrentKeyPress_Params, nullptr);

	uFnAbsorbCurrentKeyPress->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.SetBindings
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FPlayerBinding>  PC                             (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<struct FPlayerBinding>  Gamepad                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPlayerInput_X::SetBindings(TArray<struct FPlayerBinding>& PC, TArray<struct FPlayerBinding>& Gamepad)
{
	static UFunction* uFnSetBindings = nullptr;

	if (!uFnSetBindings)
	{
		uFnSetBindings = UFunction::FindFunction("Function ProjectX.PlayerInput_X.SetBindings");
	}

	UPlayerInput_X_execSetBindings_Params SetBindings_Params;
	memcpy_s(&SetBindings_Params.PC, 0x10, &PC, 0x10);
	memcpy_s(&SetBindings_Params.Gamepad, 0x10, &Gamepad, 0x10);

	uFnSetBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetBindings, &SetBindings_Params, nullptr);

	uFnSetBindings->FunctionFlags |= 0x400;

	memcpy_s(&PC, 0x10, &SetBindings_Params.PC, 0x10);
	memcpy_s(&Gamepad, 0x10, &SetBindings_Params.Gamepad, 0x10);
};

// Function ProjectX.PlayerInput_X.ClearDisableActionUntilNextUseList
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPlayerInput_X::ClearDisableActionUntilNextUseList()
{
	static UFunction* uFnClearDisableActionUntilNextUseList = nullptr;

	if (!uFnClearDisableActionUntilNextUseList)
	{
		uFnClearDisableActionUntilNextUseList = UFunction::FindFunction("Function ProjectX.PlayerInput_X.ClearDisableActionUntilNextUseList");
	}

	UPlayerInput_X_execClearDisableActionUntilNextUseList_Params ClearDisableActionUntilNextUseList_Params;

	uFnClearDisableActionUntilNextUseList->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClearDisableActionUntilNextUseList, &ClearDisableActionUntilNextUseList_Params, nullptr);

	uFnClearDisableActionUntilNextUseList->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.DisableActionUntilNextUse
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ActionName                     (CPF_Parm)

void UPlayerInput_X::DisableActionUntilNextUse(struct FName ActionName)
{
	static UFunction* uFnDisableActionUntilNextUse = nullptr;

	if (!uFnDisableActionUntilNextUse)
	{
		uFnDisableActionUntilNextUse = UFunction::FindFunction("Function ProjectX.PlayerInput_X.DisableActionUntilNextUse");
	}

	UPlayerInput_X_execDisableActionUntilNextUse_Params DisableActionUntilNextUse_Params;
	memcpy_s(&DisableActionUntilNextUse_Params.ActionName, 0x8, &ActionName, 0x8);

	uFnDisableActionUntilNextUse->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDisableActionUntilNextUse, &DisableActionUntilNextUse_Params, nullptr);

	uFnDisableActionUntilNextUse->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.ClearDisabledActions
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPlayerInput_X::ClearDisabledActions()
{
	static UFunction* uFnClearDisabledActions = nullptr;

	if (!uFnClearDisabledActions)
	{
		uFnClearDisabledActions = UFunction::FindFunction("Function ProjectX.PlayerInput_X.ClearDisabledActions");
	}

	UPlayerInput_X_execClearDisabledActions_Params ClearDisabledActions_Params;

	uFnClearDisabledActions->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClearDisabledActions, &ClearDisabledActions_Params, nullptr);

	uFnClearDisabledActions->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.RemoveFromDisabledActions
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ActionName                     (CPF_Parm)

void UPlayerInput_X::RemoveFromDisabledActions(struct FName ActionName)
{
	static UFunction* uFnRemoveFromDisabledActions = nullptr;

	if (!uFnRemoveFromDisabledActions)
	{
		uFnRemoveFromDisabledActions = UFunction::FindFunction("Function ProjectX.PlayerInput_X.RemoveFromDisabledActions");
	}

	UPlayerInput_X_execRemoveFromDisabledActions_Params RemoveFromDisabledActions_Params;
	memcpy_s(&RemoveFromDisabledActions_Params.ActionName, 0x8, &ActionName, 0x8);

	uFnRemoveFromDisabledActions->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRemoveFromDisabledActions, &RemoveFromDisabledActions_Params, nullptr);

	uFnRemoveFromDisabledActions->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.AddToDisabledActions
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ActionName                     (CPF_Parm)

void UPlayerInput_X::AddToDisabledActions(struct FName ActionName)
{
	static UFunction* uFnAddToDisabledActions = nullptr;

	if (!uFnAddToDisabledActions)
	{
		uFnAddToDisabledActions = UFunction::FindFunction("Function ProjectX.PlayerInput_X.AddToDisabledActions");
	}

	UPlayerInput_X_execAddToDisabledActions_Params AddToDisabledActions_Params;
	memcpy_s(&AddToDisabledActions_Params.ActionName, 0x8, &ActionName, 0x8);

	uFnAddToDisabledActions->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddToDisabledActions, &AddToDisabledActions_Params, nullptr);

	uFnAddToDisabledActions->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.ReleaseKey
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Key                            (CPF_Parm)
// unsigned long                  bTriggerEvents                 (CPF_OptionalParm | CPF_Parm)

void UPlayerInput_X::ReleaseKey(struct FName Key, unsigned long bTriggerEvents)
{
	static UFunction* uFnReleaseKey = nullptr;

	if (!uFnReleaseKey)
	{
		uFnReleaseKey = UFunction::FindFunction("Function ProjectX.PlayerInput_X.ReleaseKey");
	}

	UPlayerInput_X_execReleaseKey_Params ReleaseKey_Params;
	memcpy_s(&ReleaseKey_Params.Key, 0x8, &Key, 0x8);
	ReleaseKey_Params.bTriggerEvents = bTriggerEvents;

	uFnReleaseKey->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnReleaseKey, &ReleaseKey_Params, nullptr);

	uFnReleaseKey->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.GetUIKey
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FName                   KeyName                        (CPF_Parm)

class FString UPlayerInput_X::GetUIKey(struct FName KeyName)
{
	static UFunction* uFnGetUIKey = nullptr;

	if (!uFnGetUIKey)
	{
		uFnGetUIKey = UFunction::FindFunction("Function ProjectX.PlayerInput_X.GetUIKey");
	}

	UPlayerInput_X_execGetUIKey_Params GetUIKey_Params;
	memcpy_s(&GetUIKey_Params.KeyName, 0x8, &KeyName, 0x8);

	UPlayerInput_X::StaticClass()->ProcessEvent(uFnGetUIKey, &GetUIKey_Params, nullptr);

	return GetUIKey_Params.ReturnValue;
};

// Function ProjectX.PlayerInput_X.ShutdownInputSystem
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPlayerInput_X::ShutdownInputSystem()
{
	static UFunction* uFnShutdownInputSystem = nullptr;

	if (!uFnShutdownInputSystem)
	{
		uFnShutdownInputSystem = UFunction::FindFunction("Function ProjectX.PlayerInput_X.ShutdownInputSystem");
	}

	UPlayerInput_X_execShutdownInputSystem_Params ShutdownInputSystem_Params;

	this->ProcessEvent(uFnShutdownInputSystem, &ShutdownInputSystem_Params, nullptr);
};

// Function ProjectX.PlayerInput_X.InitInputSystem
// [0x400028400] (FUNC_Native | FUNC_UbergraphFunction | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPlayerInput_X::InitInputSystem()
{
	static UFunction* uFnInitInputSystem = nullptr;

	if (!uFnInitInputSystem)
	{
		uFnInitInputSystem = UFunction::FindFunction("Function ProjectX.PlayerInput_X.InitInputSystem");
	}

	UPlayerInput_X_execInitInputSystem_Params InitInputSystem_Params;

	uFnInitInputSystem->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitInputSystem, &InitInputSystem_Params, nullptr);

	uFnInitInputSystem->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.ResetInput
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPlayerInput_X::ResetInput()
{
	static UFunction* uFnResetInput = nullptr;

	if (!uFnResetInput)
	{
		uFnResetInput = UFunction::FindFunction("Function ProjectX.PlayerInput_X.ResetInput");
	}

	UPlayerInput_X_execResetInput_Params ResetInput_Params;

	uFnResetInput->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnResetInput, &ResetInput_Params, nullptr);

	uFnResetInput->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.GetRawSplitAxisValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   AxisNegative                   (CPF_Parm)
// struct FName                   AxisPositive                   (CPF_Parm)

float UPlayerInput_X::GetRawSplitAxisValue(struct FName AxisNegative, struct FName AxisPositive)
{
	static UFunction* uFnGetRawSplitAxisValue = nullptr;

	if (!uFnGetRawSplitAxisValue)
	{
		uFnGetRawSplitAxisValue = UFunction::FindFunction("Function ProjectX.PlayerInput_X.GetRawSplitAxisValue");
	}

	UPlayerInput_X_execGetRawSplitAxisValue_Params GetRawSplitAxisValue_Params;
	memcpy_s(&GetRawSplitAxisValue_Params.AxisNegative, 0x8, &AxisNegative, 0x8);
	memcpy_s(&GetRawSplitAxisValue_Params.AxisPositive, 0x8, &AxisPositive, 0x8);

	uFnGetRawSplitAxisValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetRawSplitAxisValue, &GetRawSplitAxisValue_Params, nullptr);

	uFnGetRawSplitAxisValue->FunctionFlags |= 0x400;

	return GetRawSplitAxisValue_Params.ReturnValue;
};

// Function ProjectX.PlayerInput_X.GetRawAxisValue
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   AxisName                       (CPF_Parm)

float UPlayerInput_X::GetRawAxisValue(struct FName AxisName)
{
	static UFunction* uFnGetRawAxisValue = nullptr;

	if (!uFnGetRawAxisValue)
	{
		uFnGetRawAxisValue = UFunction::FindFunction("Function ProjectX.PlayerInput_X.GetRawAxisValue");
	}

	UPlayerInput_X_execGetRawAxisValue_Params GetRawAxisValue_Params;
	memcpy_s(&GetRawAxisValue_Params.AxisName, 0x8, &AxisName, 0x8);

	uFnGetRawAxisValue->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetRawAxisValue, &GetRawAxisValue_Params, nullptr);

	uFnGetRawAxisValue->FunctionFlags |= 0x400;

	return GetRawAxisValue_Params.ReturnValue;
};

// Function ProjectX.PlayerInput_X.GetControlPreset
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UControlPreset_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PresetName                     (CPF_Parm)

class UControlPreset_X* UPlayerInput_X::GetControlPreset(struct FName PresetName)
{
	static UFunction* uFnGetControlPreset = nullptr;

	if (!uFnGetControlPreset)
	{
		uFnGetControlPreset = UFunction::FindFunction("Function ProjectX.PlayerInput_X.GetControlPreset");
	}

	UPlayerInput_X_execGetControlPreset_Params GetControlPreset_Params;
	memcpy_s(&GetControlPreset_Params.PresetName, 0x8, &PresetName, 0x8);

	uFnGetControlPreset->FunctionFlags |= ~0x400;

	UPlayerInput_X::StaticClass()->ProcessEvent(uFnGetControlPreset, &GetControlPreset_Params, nullptr);

	uFnGetControlPreset->FunctionFlags |= 0x400;

	return GetControlPreset_Params.ReturnValue;
};

// Function ProjectX.PlayerInput_X.SetControlPreset
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   PresetName                     (CPF_Parm)

void UPlayerInput_X::SetControlPreset(struct FName PresetName)
{
	static UFunction* uFnSetControlPreset = nullptr;

	if (!uFnSetControlPreset)
	{
		uFnSetControlPreset = UFunction::FindFunction("Function ProjectX.PlayerInput_X.SetControlPreset");
	}

	UPlayerInput_X_execSetControlPreset_Params SetControlPreset_Params;
	memcpy_s(&SetControlPreset_Params.PresetName, 0x8, &PresetName, 0x8);

	uFnSetControlPreset->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetControlPreset, &SetControlPreset_Params, nullptr);

	uFnSetControlPreset->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.ResetActiveBindingsToProfileBindings
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPlayerInput_X::ResetActiveBindingsToProfileBindings()
{
	static UFunction* uFnResetActiveBindingsToProfileBindings = nullptr;

	if (!uFnResetActiveBindingsToProfileBindings)
	{
		uFnResetActiveBindingsToProfileBindings = UFunction::FindFunction("Function ProjectX.PlayerInput_X.ResetActiveBindingsToProfileBindings");
	}

	UPlayerInput_X_execResetActiveBindingsToProfileBindings_Params ResetActiveBindingsToProfileBindings_Params;

	uFnResetActiveBindingsToProfileBindings->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnResetActiveBindingsToProfileBindings, &ResetActiveBindingsToProfileBindings_Params, nullptr);

	uFnResetActiveBindingsToProfileBindings->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.ResetBindingsToDefault
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPlayerInput_X::ResetBindingsToDefault()
{
	static UFunction* uFnResetBindingsToDefault = nullptr;

	if (!uFnResetBindingsToDefault)
	{
		uFnResetBindingsToDefault = UFunction::FindFunction("Function ProjectX.PlayerInput_X.ResetBindingsToDefault");
	}

	UPlayerInput_X_execResetBindingsToDefault_Params ResetBindingsToDefault_Params;

	uFnResetBindingsToDefault->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnResetBindingsToDefault, &ResetBindingsToDefault_Params, nullptr);

	uFnResetBindingsToDefault->FunctionFlags |= 0x400;
};

// Function ProjectX.PlayerInput_X.EventInitialized
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPlayerInput_X*          PlayerInput                    (CPF_Parm)

void UPlayerInput_X::EventInitialized(class UPlayerInput_X* PlayerInput)
{
	static UFunction* uFnEventInitialized = nullptr;

	if (!uFnEventInitialized)
	{
		uFnEventInitialized = UFunction::FindFunction("Function ProjectX.PlayerInput_X.EventInitialized");
	}

	UPlayerInput_X_execEventInitialized_Params EventInitialized_Params;
	memcpy_s(&EventInitialized_Params.PlayerInput, 0x8, &PlayerInput, 0x8);

	this->ProcessEvent(uFnEventInitialized, &EventInitialized_Params, nullptr);
};

// Function ProjectX.PlayerInput_X.EventSetBindingsToUserBindings
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPlayerInput_X*          PlayerInput                    (CPF_Parm)

void UPlayerInput_X::EventSetBindingsToUserBindings(class UPlayerInput_X* PlayerInput)
{
	static UFunction* uFnEventSetBindingsToUserBindings = nullptr;

	if (!uFnEventSetBindingsToUserBindings)
	{
		uFnEventSetBindingsToUserBindings = UFunction::FindFunction("Function ProjectX.PlayerInput_X.EventSetBindingsToUserBindings");
	}

	UPlayerInput_X_execEventSetBindingsToUserBindings_Params EventSetBindingsToUserBindings_Params;
	memcpy_s(&EventSetBindingsToUserBindings_Params.PlayerInput, 0x8, &PlayerInput, 0x8);

	this->ProcessEvent(uFnEventSetBindingsToUserBindings, &EventSetBindingsToUserBindings_Params, nullptr);
};

// Function ProjectX.PlayerInput_X.EventBindingsChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPlayerInput_X*          PlayerInput                    (CPF_Parm)

void UPlayerInput_X::EventBindingsChanged(class UPlayerInput_X* PlayerInput)
{
	static UFunction* uFnEventBindingsChanged = nullptr;

	if (!uFnEventBindingsChanged)
	{
		uFnEventBindingsChanged = UFunction::FindFunction("Function ProjectX.PlayerInput_X.EventBindingsChanged");
	}

	UPlayerInput_X_execEventBindingsChanged_Params EventBindingsChanged_Params;
	memcpy_s(&EventBindingsChanged_Params.PlayerInput, 0x8, &PlayerInput, 0x8);

	this->ProcessEvent(uFnEventBindingsChanged, &EventBindingsChanged_Params, nullptr);
};

// Function ProjectX.PlayerInput_X.EventActionToggled
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPlayerInput_X*          PlayerInput                    (CPF_Parm)
// struct FName                   ActionName                     (CPF_Parm)
// unsigned long                  bEnabled                       (CPF_Parm)

void UPlayerInput_X::EventActionToggled(class UPlayerInput_X* PlayerInput, struct FName ActionName, unsigned long bEnabled)
{
	static UFunction* uFnEventActionToggled = nullptr;

	if (!uFnEventActionToggled)
	{
		uFnEventActionToggled = UFunction::FindFunction("Function ProjectX.PlayerInput_X.EventActionToggled");
	}

	UPlayerInput_X_execEventActionToggled_Params EventActionToggled_Params;
	memcpy_s(&EventActionToggled_Params.PlayerInput, 0x8, &PlayerInput, 0x8);
	memcpy_s(&EventActionToggled_Params.ActionName, 0x8, &ActionName, 0x8);
	EventActionToggled_Params.bEnabled = bEnabled;

	this->ProcessEvent(uFnEventActionToggled, &EventActionToggled_Params, nullptr);
};

// Function ProjectX.PsyNet_X.ReportCheater
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            Id                             (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Reason                         (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

void UPsyNet_X::ReportCheater(struct FUniqueNetId Id, class FString Reason)
{
	static UFunction* uFnReportCheater = nullptr;

	if (!uFnReportCheater)
	{
		uFnReportCheater = UFunction::FindFunction("Function ProjectX.PsyNet_X.ReportCheater");
	}

	UPsyNet_X_execReportCheater_Params ReportCheater_Params;
	memcpy_s(&ReportCheater_Params.Id, 0x48, &Id, 0x48);
	memcpy_s(&ReportCheater_Params.Reason, 0x10, &Reason, 0x10);

	UPsyNet_X::StaticClass()->ProcessEvent(uFnReportCheater, &ReportCheater_Params, nullptr);
};

// Function ProjectX.PsyNet_X.AssignQWordToString
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint64_t                       Q                              (CPF_Parm)

class FString UPsyNet_X::AssignQWordToString(uint64_t Q)
{
	static UFunction* uFnAssignQWordToString = nullptr;

	if (!uFnAssignQWordToString)
	{
		uFnAssignQWordToString = UFunction::FindFunction("Function ProjectX.PsyNet_X.AssignQWordToString");
	}

	UPsyNet_X_execAssignQWordToString_Params AssignQWordToString_Params;
	AssignQWordToString_Params.Q = Q;

	uFnAssignQWordToString->FunctionFlags |= ~0x400;

	UPsyNet_X::StaticClass()->ProcessEvent(uFnAssignQWordToString, &AssignQWordToString_Params, nullptr);

	uFnAssignQWordToString->FunctionFlags |= 0x400;

	return AssignQWordToString_Params.ReturnValue;
};

// Function ProjectX.PsyNet_X.AssignStringToQWord
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint64_t                       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  S                              (CPF_Parm | CPF_NeedCtorLink)

uint64_t UPsyNet_X::AssignStringToQWord(class FString S)
{
	static UFunction* uFnAssignStringToQWord = nullptr;

	if (!uFnAssignStringToQWord)
	{
		uFnAssignStringToQWord = UFunction::FindFunction("Function ProjectX.PsyNet_X.AssignStringToQWord");
	}

	UPsyNet_X_execAssignStringToQWord_Params AssignStringToQWord_Params;
	memcpy_s(&AssignStringToQWord_Params.S, 0x10, &S, 0x10);

	uFnAssignStringToQWord->FunctionFlags |= ~0x400;

	UPsyNet_X::StaticClass()->ProcessEvent(uFnAssignStringToQWord, &AssignStringToQWord_Params, nullptr);

	uFnAssignStringToQWord->FunctionFlags |= 0x400;

	return AssignStringToQWord_Params.ReturnValue;
};

// Function ProjectX.PsyNet_X.GetRetryDelay
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Failures                       (CPF_Parm)
// TArray<float>                  Delays                         (CPF_Parm | CPF_NeedCtorLink)

float UPsyNet_X::GetRetryDelay(int32_t Failures, TArray<float> Delays)
{
	static UFunction* uFnGetRetryDelay = nullptr;

	if (!uFnGetRetryDelay)
	{
		uFnGetRetryDelay = UFunction::FindFunction("Function ProjectX.PsyNet_X.GetRetryDelay");
	}

	UPsyNet_X_execGetRetryDelay_Params GetRetryDelay_Params;
	memcpy_s(&GetRetryDelay_Params.Failures, 0x4, &Failures, 0x4);
	memcpy_s(&GetRetryDelay_Params.Delays, 0x10, &Delays, 0x10);

	uFnGetRetryDelay->FunctionFlags |= ~0x400;

	UPsyNet_X::StaticClass()->ProcessEvent(uFnGetRetryDelay, &GetRetryDelay_Params, nullptr);

	uFnGetRetryDelay->FunctionFlags |= 0x400;

	return GetRetryDelay_Params.ReturnValue;
};

// Function ProjectX.PsyNet_X.ConnectionChangedIP
// [0x00022803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UPsyNet_X::eventConnectionChangedIP(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnConnectionChangedIP = nullptr;

	if (!uFnConnectionChangedIP)
	{
		uFnConnectionChangedIP = UFunction::FindFunction("Function ProjectX.PsyNet_X.ConnectionChangedIP");
	}

	UPsyNet_X_eventConnectionChangedIP_Params ConnectionChangedIP_Params;
	memcpy_s(&ConnectionChangedIP_Params.PlayerID, 0x48, &PlayerID, 0x48);

	UPsyNet_X::StaticClass()->ProcessEvent(uFnConnectionChangedIP, &ConnectionChangedIP_Params, nullptr);
};

// Function ProjectX.PsyNet_X.NetworkError
// [0x00022803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UPsyNet_X::eventNetworkError(struct FUniqueNetId PlayerID, class FString Reason)
{
	static UFunction* uFnNetworkError = nullptr;

	if (!uFnNetworkError)
	{
		uFnNetworkError = UFunction::FindFunction("Function ProjectX.PsyNet_X.NetworkError");
	}

	UPsyNet_X_eventNetworkError_Params NetworkError_Params;
	memcpy_s(&NetworkError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&NetworkError_Params.Reason, 0x10, &Reason, 0x10);

	UPsyNet_X::StaticClass()->ProcessEvent(uFnNetworkError, &NetworkError_Params, nullptr);
};

// Function ProjectX.PsyNet_X.InitHeaders
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNet_X::InitHeaders()
{
	static UFunction* uFnInitHeaders = nullptr;

	if (!uFnInitHeaders)
	{
		uFnInitHeaders = UFunction::FindFunction("Function ProjectX.PsyNet_X.InitHeaders");
	}

	UPsyNet_X_execInitHeaders_Params InitHeaders_Params;

	uFnInitHeaders->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitHeaders, &InitHeaders_Params, nullptr);

	uFnInitHeaders->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNet_X.NotifyWhenLoggedIn
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LoginCallback                  (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         LogoutCallback                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UPsyNet_X::NotifyWhenLoggedIn(struct FScriptDelegate LoginCallback, struct FScriptDelegate LogoutCallback)
{
	static UFunction* uFnNotifyWhenLoggedIn = nullptr;

	if (!uFnNotifyWhenLoggedIn)
	{
		uFnNotifyWhenLoggedIn = UFunction::FindFunction("Function ProjectX.PsyNet_X.NotifyWhenLoggedIn");
	}

	UPsyNet_X_execNotifyWhenLoggedIn_Params NotifyWhenLoggedIn_Params;
	memcpy_s(&NotifyWhenLoggedIn_Params.LoginCallback, 0x18, &LoginCallback, 0x18);
	memcpy_s(&NotifyWhenLoggedIn_Params.LogoutCallback, 0x18, &LogoutCallback, 0x18);

	this->ProcessEvent(uFnNotifyWhenLoggedIn, &NotifyWhenLoggedIn_Params, nullptr);
};

// Function ProjectX.PsyNet_X.NotifyWhenPrimaryConnectionEnabled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         EnabledCallback                (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         DisabledCallback               (CPF_Parm | CPF_NeedCtorLink)

void UPsyNet_X::NotifyWhenPrimaryConnectionEnabled(struct FScriptDelegate EnabledCallback, struct FScriptDelegate DisabledCallback)
{
	static UFunction* uFnNotifyWhenPrimaryConnectionEnabled = nullptr;

	if (!uFnNotifyWhenPrimaryConnectionEnabled)
	{
		uFnNotifyWhenPrimaryConnectionEnabled = UFunction::FindFunction("Function ProjectX.PsyNet_X.NotifyWhenPrimaryConnectionEnabled");
	}

	UPsyNet_X_execNotifyWhenPrimaryConnectionEnabled_Params NotifyWhenPrimaryConnectionEnabled_Params;
	memcpy_s(&NotifyWhenPrimaryConnectionEnabled_Params.EnabledCallback, 0x18, &EnabledCallback, 0x18);
	memcpy_s(&NotifyWhenPrimaryConnectionEnabled_Params.DisabledCallback, 0x18, &DisabledCallback, 0x18);

	this->ProcessEvent(uFnNotifyWhenPrimaryConnectionEnabled, &NotifyWhenPrimaryConnectionEnabled_Params, nullptr);
};

// Function ProjectX.PsyNet_X.SetPrimaryAuthedConnection
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNet_X::SetPrimaryAuthedConnection(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnSetPrimaryAuthedConnection = nullptr;

	if (!uFnSetPrimaryAuthedConnection)
	{
		uFnSetPrimaryAuthedConnection = UFunction::FindFunction("Function ProjectX.PsyNet_X.SetPrimaryAuthedConnection");
	}

	UPsyNet_X_execSetPrimaryAuthedConnection_Params SetPrimaryAuthedConnection_Params;
	memcpy_s(&SetPrimaryAuthedConnection_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnSetPrimaryAuthedConnection, &SetPrimaryAuthedConnection_Params, nullptr);
};

// Function ProjectX.PsyNet_X.SetPrimaryEnabledConnection
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNet_X::SetPrimaryEnabledConnection(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnSetPrimaryEnabledConnection = nullptr;

	if (!uFnSetPrimaryEnabledConnection)
	{
		uFnSetPrimaryEnabledConnection = UFunction::FindFunction("Function ProjectX.PsyNet_X.SetPrimaryEnabledConnection");
	}

	UPsyNet_X_execSetPrimaryEnabledConnection_Params SetPrimaryEnabledConnection_Params;
	memcpy_s(&SetPrimaryEnabledConnection_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnSetPrimaryEnabledConnection, &SetPrimaryEnabledConnection_Params, nullptr);
};

// Function ProjectX.PsyNet_X.HandleConnectionChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNet_X::HandleConnectionChanged(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnHandleConnectionChanged = nullptr;

	if (!uFnHandleConnectionChanged)
	{
		uFnHandleConnectionChanged = UFunction::FindFunction("Function ProjectX.PsyNet_X.HandleConnectionChanged");
	}

	UPsyNet_X_execHandleConnectionChanged_Params HandleConnectionChanged_Params;
	memcpy_s(&HandleConnectionChanged_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnHandleConnectionChanged, &HandleConnectionChanged_Params, nullptr);
};

// Function ProjectX.PsyNet_X.GetPrimaryConnection
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPsyNetConnection_X* UPsyNet_X::GetPrimaryConnection()
{
	static UFunction* uFnGetPrimaryConnection = nullptr;

	if (!uFnGetPrimaryConnection)
	{
		uFnGetPrimaryConnection = UFunction::FindFunction("Function ProjectX.PsyNet_X.GetPrimaryConnection");
	}

	UPsyNet_X_execGetPrimaryConnection_Params GetPrimaryConnection_Params;

	uFnGetPrimaryConnection->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetPrimaryConnection, &GetPrimaryConnection_Params, nullptr);

	uFnGetPrimaryConnection->FunctionFlags |= 0x400;

	return GetPrimaryConnection_Params.ReturnValue;
};

// Function ProjectX.PsyNet_X.HandleServiceExecuted
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetServiceProvider_X* P                              (CPF_Parm)
// class UPsyNetClientService_X*  Service                        (CPF_Parm)

void UPsyNet_X::HandleServiceExecuted(class UPsyNetServiceProvider_X* P, class UPsyNetClientService_X* Service)
{
	static UFunction* uFnHandleServiceExecuted = nullptr;

	if (!uFnHandleServiceExecuted)
	{
		uFnHandleServiceExecuted = UFunction::FindFunction("Function ProjectX.PsyNet_X.HandleServiceExecuted");
	}

	UPsyNet_X_execHandleServiceExecuted_Params HandleServiceExecuted_Params;
	memcpy_s(&HandleServiceExecuted_Params.P, 0x8, &P, 0x8);
	memcpy_s(&HandleServiceExecuted_Params.Service, 0x8, &Service, 0x8);

	this->ProcessEvent(uFnHandleServiceExecuted, &HandleServiceExecuted_Params, nullptr);
};

// Function ProjectX.PsyNet_X.Init
// [0x00080803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UPsyNet_X::eventInit()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PsyNet_X.Init");
	}

	UPsyNet_X_eventInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.PsyNet_X.Flush
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          TimeoutSeconds                 (CPF_Parm)

void UPsyNet_X::Flush(float TimeoutSeconds)
{
	static UFunction* uFnFlush = nullptr;

	if (!uFnFlush)
	{
		uFnFlush = UFunction::FindFunction("Function ProjectX.PsyNet_X.Flush");
	}

	UPsyNet_X_execFlush_Params Flush_Params;
	memcpy_s(&Flush_Params.TimeoutSeconds, 0x4, &TimeoutSeconds, 0x4);

	uFnFlush->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlush, &Flush_Params, nullptr);

	uFnFlush->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNet_X.QueueRPC
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class URPC_X*                  RPC                            (CPF_Parm)

class URPC_X* UPsyNet_X::QueueRPC(class URPC_X* RPC)
{
	static UFunction* uFnQueueRPC = nullptr;

	if (!uFnQueueRPC)
	{
		uFnQueueRPC = UFunction::FindFunction("Function ProjectX.PsyNet_X.QueueRPC");
	}

	UPsyNet_X_execQueueRPC_Params QueueRPC_Params;
	memcpy_s(&QueueRPC_Params.RPC, 0x8, &RPC, 0x8);

	uFnQueueRPC->FunctionFlags |= ~0x400;

	UPsyNet_X::StaticClass()->ProcessEvent(uFnQueueRPC, &QueueRPC_Params, nullptr);

	uFnQueueRPC->FunctionFlags |= 0x400;

	return QueueRPC_Params.ReturnValue;
};

// Function ProjectX.PsyNet_X.RPC
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  RPCClass                       (CPF_Parm)

class URPC_X* UPsyNet_X::RPC(class UClass* RPCClass)
{
	static UFunction* uFnRPC = nullptr;

	if (!uFnRPC)
	{
		uFnRPC = UFunction::FindFunction("Function ProjectX.PsyNet_X.RPC");
	}

	UPsyNet_X_execRPC_Params RPC_Params;
	memcpy_s(&RPC_Params.RPCClass, 0x8, &RPCClass, 0x8);

	uFnRPC->FunctionFlags |= ~0x400;

	UPsyNet_X::StaticClass()->ProcessEvent(uFnRPC, &RPC_Params, nullptr);

	uFnRPC->FunctionFlags |= 0x400;

	return RPC_Params.ReturnValue;
};

// Function ProjectX.PsyNet_X.GetInstance
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNet_X*               ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPsyNet_X* UPsyNet_X::GetInstance()
{
	static UFunction* uFnGetInstance = nullptr;

	if (!uFnGetInstance)
	{
		uFnGetInstance = UFunction::FindFunction("Function ProjectX.PsyNet_X.GetInstance");
	}

	UPsyNet_X_execGetInstance_Params GetInstance_Params;

	uFnGetInstance->FunctionFlags |= ~0x400;

	UPsyNet_X::StaticClass()->ProcessEvent(uFnGetInstance, &GetInstance_Params, nullptr);

	uFnGetInstance->FunctionFlags |= 0x400;

	return GetInstance_Params.ReturnValue;
};

// Function ProjectX.PsyNet_X.EventCheaterReported
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UPsyNet_X::EventCheaterReported()
{
	static UFunction* uFnEventCheaterReported = nullptr;

	if (!uFnEventCheaterReported)
	{
		uFnEventCheaterReported = UFunction::FindFunction("Function ProjectX.PsyNet_X.EventCheaterReported");
	}

	UPsyNet_X_execEventCheaterReported_Params EventCheaterReported_Params;

	this->ProcessEvent(uFnEventCheaterReported, &EventCheaterReported_Params, nullptr);
};

// Function ProjectX.PsyNet_X.EventPrimaryPlayerLoggedOut
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UPsyNet_X::EventPrimaryPlayerLoggedOut()
{
	static UFunction* uFnEventPrimaryPlayerLoggedOut = nullptr;

	if (!uFnEventPrimaryPlayerLoggedOut)
	{
		uFnEventPrimaryPlayerLoggedOut = UFunction::FindFunction("Function ProjectX.PsyNet_X.EventPrimaryPlayerLoggedOut");
	}

	UPsyNet_X_execEventPrimaryPlayerLoggedOut_Params EventPrimaryPlayerLoggedOut_Params;

	this->ProcessEvent(uFnEventPrimaryPlayerLoggedOut, &EventPrimaryPlayerLoggedOut_Params, nullptr);
};

// Function ProjectX.PsyNet_X.EventPrimaryPlayerLoggedIn
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UPsyNet_X::EventPrimaryPlayerLoggedIn()
{
	static UFunction* uFnEventPrimaryPlayerLoggedIn = nullptr;

	if (!uFnEventPrimaryPlayerLoggedIn)
	{
		uFnEventPrimaryPlayerLoggedIn = UFunction::FindFunction("Function ProjectX.PsyNet_X.EventPrimaryPlayerLoggedIn");
	}

	UPsyNet_X_execEventPrimaryPlayerLoggedIn_Params EventPrimaryPlayerLoggedIn_Params;

	this->ProcessEvent(uFnEventPrimaryPlayerLoggedIn, &EventPrimaryPlayerLoggedIn_Params, nullptr);
};

// Function ProjectX.PsyNet_X.EventPrimaryConnectionDisabled
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UPsyNet_X::EventPrimaryConnectionDisabled()
{
	static UFunction* uFnEventPrimaryConnectionDisabled = nullptr;

	if (!uFnEventPrimaryConnectionDisabled)
	{
		uFnEventPrimaryConnectionDisabled = UFunction::FindFunction("Function ProjectX.PsyNet_X.EventPrimaryConnectionDisabled");
	}

	UPsyNet_X_execEventPrimaryConnectionDisabled_Params EventPrimaryConnectionDisabled_Params;

	this->ProcessEvent(uFnEventPrimaryConnectionDisabled, &EventPrimaryConnectionDisabled_Params, nullptr);
};

// Function ProjectX.PsyNet_X.EventPrimaryConnectionEnabled
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UPsyNet_X::EventPrimaryConnectionEnabled()
{
	static UFunction* uFnEventPrimaryConnectionEnabled = nullptr;

	if (!uFnEventPrimaryConnectionEnabled)
	{
		uFnEventPrimaryConnectionEnabled = UFunction::FindFunction("Function ProjectX.PsyNet_X.EventPrimaryConnectionEnabled");
	}

	UPsyNet_X_execEventPrimaryConnectionEnabled_Params EventPrimaryConnectionEnabled_Params;

	this->ProcessEvent(uFnEventPrimaryConnectionEnabled, &EventPrimaryConnectionEnabled_Params, nullptr);
};

// Function ProjectX.PsyNetClientService_X.Execute
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetClientService_X::Execute()
{
	static UFunction* uFnExecute = nullptr;

	if (!uFnExecute)
	{
		uFnExecute = UFunction::FindFunction("Function ProjectX.PsyNetClientService_X.Execute");
	}

	UPsyNetClientService_X_execExecute_Params Execute_Params;

	this->ProcessEvent(uFnExecute, &Execute_Params, nullptr);
};

// Function ProjectX.PsyNetClientService_X.SetError
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  InError                        (CPF_Parm)

void UPsyNetClientService_X::SetError(class UError* InError)
{
	static UFunction* uFnSetError = nullptr;

	if (!uFnSetError)
	{
		uFnSetError = UFunction::FindFunction("Function ProjectX.PsyNetClientService_X.SetError");
	}

	UPsyNetClientService_X_execSetError_Params SetError_Params;
	memcpy_s(&SetError_Params.InError, 0x8, &InError, 0x8);

	uFnSetError->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetError, &SetError_Params, nullptr);

	uFnSetError->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetClientServiceCollection_X.GetServiceArchetype
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ServiceName                    (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Version                        (CPF_Parm)

class UPsyNetClientService_X* UPsyNetClientServiceCollection_X::GetServiceArchetype(class FString ServiceName, int32_t Version)
{
	static UFunction* uFnGetServiceArchetype = nullptr;

	if (!uFnGetServiceArchetype)
	{
		uFnGetServiceArchetype = UFunction::FindFunction("Function ProjectX.PsyNetClientServiceCollection_X.GetServiceArchetype");
	}

	UPsyNetClientServiceCollection_X_execGetServiceArchetype_Params GetServiceArchetype_Params;
	memcpy_s(&GetServiceArchetype_Params.ServiceName, 0x10, &ServiceName, 0x10);
	memcpy_s(&GetServiceArchetype_Params.Version, 0x4, &Version, 0x4);

	uFnGetServiceArchetype->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetServiceArchetype, &GetServiceArchetype_Params, nullptr);

	uFnGetServiceArchetype->FunctionFlags |= 0x400;

	return GetServiceArchetype_Params.ReturnValue;
};

// Function ProjectX.PsyNetClientServiceCollection_X.CollectServiceArchetypes
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetClientServiceCollection_X::CollectServiceArchetypes()
{
	static UFunction* uFnCollectServiceArchetypes = nullptr;

	if (!uFnCollectServiceArchetypes)
	{
		uFnCollectServiceArchetypes = UFunction::FindFunction("Function ProjectX.PsyNetClientServiceCollection_X.CollectServiceArchetypes");
	}

	UPsyNetClientServiceCollection_X_execCollectServiceArchetypes_Params CollectServiceArchetypes_Params;

	uFnCollectServiceArchetypes->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCollectServiceArchetypes, &CollectServiceArchetypes_Params, nullptr);

	uFnCollectServiceArchetypes->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetClientServiceCollection_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPsyNetClientServiceCollection_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.PsyNetClientServiceCollection_X.Construct");
	}

	UPsyNetClientServiceCollection_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.SendPingMessage
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::eventSendPingMessage()
{
	static UFunction* uFnSendPingMessage = nullptr;

	if (!uFnSendPingMessage)
	{
		uFnSendPingMessage = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.SendPingMessage");
	}

	UPsyNetConnection_X_eventSendPingMessage_Params SendPingMessage_Params;

	this->ProcessEvent(uFnSendPingMessage, &SendPingMessage_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.WatchPerConConnection
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         OnConnected                    (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnDisconnected                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UPsyNetConnection_X::WatchPerConConnection(struct FScriptDelegate OnConnected, struct FScriptDelegate OnDisconnected)
{
	static UFunction* uFnWatchPerConConnection = nullptr;

	if (!uFnWatchPerConConnection)
	{
		uFnWatchPerConConnection = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.WatchPerConConnection");
	}

	UPsyNetConnection_X_execWatchPerConConnection_Params WatchPerConConnection_Params;
	memcpy_s(&WatchPerConConnection_Params.OnConnected, 0x18, &OnConnected, 0x18);
	memcpy_s(&WatchPerConConnection_Params.OnDisconnected, 0x18, &OnDisconnected, 0x18);

	this->ProcessEvent(uFnWatchPerConConnection, &WatchPerConConnection_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.StopWatchConnection
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         OnConnected                    (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnDisconnected                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UPsyNetConnection_X::StopWatchConnection(struct FScriptDelegate OnConnected, struct FScriptDelegate OnDisconnected)
{
	static UFunction* uFnStopWatchConnection = nullptr;

	if (!uFnStopWatchConnection)
	{
		uFnStopWatchConnection = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.StopWatchConnection");
	}

	UPsyNetConnection_X_execStopWatchConnection_Params StopWatchConnection_Params;
	memcpy_s(&StopWatchConnection_Params.OnConnected, 0x18, &OnConnected, 0x18);
	memcpy_s(&StopWatchConnection_Params.OnDisconnected, 0x18, &OnDisconnected, 0x18);

	this->ProcessEvent(uFnStopWatchConnection, &StopWatchConnection_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.WatchConnection
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         OnConnected                    (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnDisconnected                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UPsyNetConnection_X::WatchConnection(struct FScriptDelegate OnConnected, struct FScriptDelegate OnDisconnected)
{
	static UFunction* uFnWatchConnection = nullptr;

	if (!uFnWatchConnection)
	{
		uFnWatchConnection = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.WatchConnection");
	}

	UPsyNetConnection_X_execWatchConnection_Params WatchConnection_Params;
	memcpy_s(&WatchConnection_Params.OnConnected, 0x18, &OnConnected, 0x18);
	memcpy_s(&WatchConnection_Params.OnDisconnected, 0x18, &OnDisconnected, 0x18);

	this->ProcessEvent(uFnWatchConnection, &WatchConnection_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.WatchEnabled
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         OnEnabled                      (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnDisabled                     (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UPsyNetConnection_X::WatchEnabled(struct FScriptDelegate OnEnabled, struct FScriptDelegate OnDisabled)
{
	static UFunction* uFnWatchEnabled = nullptr;

	if (!uFnWatchEnabled)
	{
		uFnWatchEnabled = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.WatchEnabled");
	}

	UPsyNetConnection_X_execWatchEnabled_Params WatchEnabled_Params;
	memcpy_s(&WatchEnabled_Params.OnEnabled, 0x18, &OnEnabled, 0x18);
	memcpy_s(&WatchEnabled_Params.OnDisabled, 0x18, &OnDisabled, 0x18);

	this->ProcessEvent(uFnWatchEnabled, &WatchEnabled_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.Dispose
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::eventDispose()
{
	static UFunction* uFnDispose = nullptr;

	if (!uFnDispose)
	{
		uFnDispose = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.Dispose");
	}

	UPsyNetConnection_X_eventDispose_Params Dispose_Params;

	this->ProcessEvent(uFnDispose, &Dispose_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.UpdateLinkConnection
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bHasConnection                 (CPF_Parm)

void UPsyNetConnection_X::UpdateLinkConnection(unsigned long bHasConnection)
{
	static UFunction* uFnUpdateLinkConnection = nullptr;

	if (!uFnUpdateLinkConnection)
	{
		uFnUpdateLinkConnection = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.UpdateLinkConnection");
	}

	UPsyNetConnection_X_execUpdateLinkConnection_Params UpdateLinkConnection_Params;
	UpdateLinkConnection_Params.bHasConnection = bHasConnection;

	this->ProcessEvent(uFnUpdateLinkConnection, &UpdateLinkConnection_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.ClearDuplicateLoginError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::ClearDuplicateLoginError()
{
	static UFunction* uFnClearDuplicateLoginError = nullptr;

	if (!uFnClearDuplicateLoginError)
	{
		uFnClearDuplicateLoginError = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.ClearDuplicateLoginError");
	}

	UPsyNetConnection_X_execClearDuplicateLoginError_Params ClearDuplicateLoginError_Params;

	this->ProcessEvent(uFnClearDuplicateLoginError, &ClearDuplicateLoginError_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.OnDuplicateLogin
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::OnDuplicateLogin()
{
	static UFunction* uFnOnDuplicateLogin = nullptr;

	if (!uFnOnDuplicateLogin)
	{
		uFnOnDuplicateLogin = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.OnDuplicateLogin");
	}

	UPsyNetConnection_X_execOnDuplicateLogin_Params OnDuplicateLogin_Params;

	this->ProcessEvent(uFnOnDuplicateLogin, &OnDuplicateLogin_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.HandleDuplicateLoginMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  Service                        (CPF_Parm)

void UPsyNetConnection_X::HandleDuplicateLoginMessage(class UPsyNetClientService_X* Service)
{
	static UFunction* uFnHandleDuplicateLoginMessage = nullptr;

	if (!uFnHandleDuplicateLoginMessage)
	{
		uFnHandleDuplicateLoginMessage = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.HandleDuplicateLoginMessage");
	}

	UPsyNetConnection_X_execHandleDuplicateLoginMessage_Params HandleDuplicateLoginMessage_Params;
	memcpy_s(&HandleDuplicateLoginMessage_Params.Service, 0x8, &Service, 0x8);

	this->ProcessEvent(uFnHandleDuplicateLoginMessage, &HandleDuplicateLoginMessage_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.HandleWebSocketDisconnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* WS                             (CPF_Parm)
// int32_t                        Code                           (CPF_Parm)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetConnection_X::HandleWebSocketDisconnect(class UPsyNetMessengerWebSocket_X* WS, int32_t Code, class FString Reason)
{
	static UFunction* uFnHandleWebSocketDisconnect = nullptr;

	if (!uFnHandleWebSocketDisconnect)
	{
		uFnHandleWebSocketDisconnect = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.HandleWebSocketDisconnect");
	}

	UPsyNetConnection_X_execHandleWebSocketDisconnect_Params HandleWebSocketDisconnect_Params;
	memcpy_s(&HandleWebSocketDisconnect_Params.WS, 0x8, &WS, 0x8);
	memcpy_s(&HandleWebSocketDisconnect_Params.Code, 0x4, &Code, 0x4);
	memcpy_s(&HandleWebSocketDisconnect_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnHandleWebSocketDisconnect, &HandleWebSocketDisconnect_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.HandleWebSocketConnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* WS                             (CPF_Parm)

void UPsyNetConnection_X::HandleWebSocketConnect(class UPsyNetMessengerWebSocket_X* WS)
{
	static UFunction* uFnHandleWebSocketConnect = nullptr;

	if (!uFnHandleWebSocketConnect)
	{
		uFnHandleWebSocketConnect = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.HandleWebSocketConnect");
	}

	UPsyNetConnection_X_execHandleWebSocketConnect_Params HandleWebSocketConnect_Params;
	memcpy_s(&HandleWebSocketConnect_Params.WS, 0x8, &WS, 0x8);

	this->ProcessEvent(uFnHandleWebSocketConnect, &HandleWebSocketConnect_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.HandleWebSocketStartConnectFail
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* WS                             (CPF_Parm)

void UPsyNetConnection_X::HandleWebSocketStartConnectFail(class UPsyNetMessengerWebSocket_X* WS)
{
	static UFunction* uFnHandleWebSocketStartConnectFail = nullptr;

	if (!uFnHandleWebSocketStartConnectFail)
	{
		uFnHandleWebSocketStartConnectFail = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.HandleWebSocketStartConnectFail");
	}

	UPsyNetConnection_X_execHandleWebSocketStartConnectFail_Params HandleWebSocketStartConnectFail_Params;
	memcpy_s(&HandleWebSocketStartConnectFail_Params.WS, 0x8, &WS, 0x8);

	this->ProcessEvent(uFnHandleWebSocketStartConnectFail, &HandleWebSocketStartConnectFail_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.UpdateConnectionState
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::UpdateConnectionState()
{
	static UFunction* uFnUpdateConnectionState = nullptr;

	if (!uFnUpdateConnectionState)
	{
		uFnUpdateConnectionState = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.UpdateConnectionState");
	}

	UPsyNetConnection_X_execUpdateConnectionState_Params UpdateConnectionState_Params;

	this->ProcessEvent(uFnUpdateConnectionState, &UpdateConnectionState_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.ClearAuthDisabledError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::ClearAuthDisabledError()
{
	static UFunction* uFnClearAuthDisabledError = nullptr;

	if (!uFnClearAuthDisabledError)
	{
		uFnClearAuthDisabledError = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.ClearAuthDisabledError");
	}

	UPsyNetConnection_X_execClearAuthDisabledError_Params ClearAuthDisabledError_Params;

	this->ProcessEvent(uFnClearAuthDisabledError, &ClearAuthDisabledError_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.SetAuthDisabledError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UPsyNetConnection_X::SetAuthDisabledError(class UError* Error)
{
	static UFunction* uFnSetAuthDisabledError = nullptr;

	if (!uFnSetAuthDisabledError)
	{
		uFnSetAuthDisabledError = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.SetAuthDisabledError");
	}

	UPsyNetConnection_X_execSetAuthDisabledError_Params SetAuthDisabledError_Params;
	memcpy_s(&SetAuthDisabledError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnSetAuthDisabledError, &SetAuthDisabledError_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.ConditionalSetAuthRetryDelay
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UPsyNetConnection_X::ConditionalSetAuthRetryDelay(class FString Service, class UError* Error)
{
	static UFunction* uFnConditionalSetAuthRetryDelay = nullptr;

	if (!uFnConditionalSetAuthRetryDelay)
	{
		uFnConditionalSetAuthRetryDelay = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.ConditionalSetAuthRetryDelay");
	}

	UPsyNetConnection_X_execConditionalSetAuthRetryDelay_Params ConditionalSetAuthRetryDelay_Params;
	memcpy_s(&ConditionalSetAuthRetryDelay_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&ConditionalSetAuthRetryDelay_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnConditionalSetAuthRetryDelay, &ConditionalSetAuthRetryDelay_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.HandleErrorRPC
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPCQueue_X*             InQueue                        (CPF_Parm | CPF_EditInline)
// class URPC_X*                  InRPC                          (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UPsyNetConnection_X::HandleErrorRPC(class URPCQueue_X* InQueue, class URPC_X* InRPC, class UError* Error)
{
	static UFunction* uFnHandleErrorRPC = nullptr;

	if (!uFnHandleErrorRPC)
	{
		uFnHandleErrorRPC = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.HandleErrorRPC");
	}

	UPsyNetConnection_X_execHandleErrorRPC_Params HandleErrorRPC_Params;
	memcpy_s(&HandleErrorRPC_Params.InQueue, 0x8, &InQueue, 0x8);
	memcpy_s(&HandleErrorRPC_Params.InRPC, 0x8, &InRPC, 0x8);
	memcpy_s(&HandleErrorRPC_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleErrorRPC, &HandleErrorRPC_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.IsEnabled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPsyNetConnection_X::IsEnabled()
{
	static UFunction* uFnIsEnabled = nullptr;

	if (!uFnIsEnabled)
	{
		uFnIsEnabled = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.IsEnabled");
	}

	UPsyNetConnection_X_execIsEnabled_Params IsEnabled_Params;

	this->ProcessEvent(uFnIsEnabled, &IsEnabled_Params, nullptr);

	return IsEnabled_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.UpdateDisabledError
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UErrorType*              Type                           (CPF_Parm)
// unsigned long                  bIsError                       (CPF_Parm)
// class UError*                  Error                          (CPF_Parm | CPF_OutParm)

void UPsyNetConnection_X::UpdateDisabledError(class UErrorType* Type, unsigned long bIsError, class UError*& Error)
{
	static UFunction* uFnUpdateDisabledError = nullptr;

	if (!uFnUpdateDisabledError)
	{
		uFnUpdateDisabledError = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.UpdateDisabledError");
	}

	UPsyNetConnection_X_execUpdateDisabledError_Params UpdateDisabledError_Params;
	memcpy_s(&UpdateDisabledError_Params.Type, 0x8, &Type, 0x8);
	UpdateDisabledError_Params.bIsError = bIsError;
	memcpy_s(&UpdateDisabledError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnUpdateDisabledError, &UpdateDisabledError_Params, nullptr);

	memcpy_s(&Error, 0x8, &UpdateDisabledError_Params.Error, 0x8);
};

// Function ProjectX.PsyNetConnection_X.AddDisabledError
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UPsyNetConnection_X::eventAddDisabledError(class UError* Error)
{
	static UFunction* uFnAddDisabledError = nullptr;

	if (!uFnAddDisabledError)
	{
		uFnAddDisabledError = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.AddDisabledError");
	}

	UPsyNetConnection_X_eventAddDisabledError_Params AddDisabledError_Params;
	memcpy_s(&AddDisabledError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnAddDisabledError, &AddDisabledError_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.RemoveDisabledError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UPsyNetConnection_X::RemoveDisabledError(class UError* Error)
{
	static UFunction* uFnRemoveDisabledError = nullptr;

	if (!uFnRemoveDisabledError)
	{
		uFnRemoveDisabledError = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.RemoveDisabledError");
	}

	UPsyNetConnection_X_execRemoveDisabledError_Params RemoveDisabledError_Params;
	memcpy_s(&RemoveDisabledError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnRemoveDisabledError, &RemoveDisabledError_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.Flush
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          TimeoutSeconds                 (CPF_Parm)

uint8_t UPsyNetConnection_X::Flush(float TimeoutSeconds)
{
	static UFunction* uFnFlush = nullptr;

	if (!uFnFlush)
	{
		uFnFlush = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.Flush");
	}

	UPsyNetConnection_X_execFlush_Params Flush_Params;
	memcpy_s(&Flush_Params.TimeoutSeconds, 0x4, &TimeoutSeconds, 0x4);

	uFnFlush->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFlush, &Flush_Params, nullptr);

	uFnFlush->FunctionFlags |= 0x400;

	return Flush_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.QueueRPC
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URPC_X*                  RPC                            (CPF_Parm)

class URPC_X* UPsyNetConnection_X::QueueRPC(class URPC_X* RPC)
{
	static UFunction* uFnQueueRPC = nullptr;

	if (!uFnQueueRPC)
	{
		uFnQueueRPC = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.QueueRPC");
	}

	UPsyNetConnection_X_execQueueRPC_Params QueueRPC_Params;
	memcpy_s(&QueueRPC_Params.RPC, 0x8, &RPC, 0x8);

	uFnQueueRPC->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnQueueRPC, &QueueRPC_Params, nullptr);

	uFnQueueRPC->FunctionFlags |= 0x400;

	return QueueRPC_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.RPC
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_CoerceParm)
// class UClass*                  RPCClass                       (CPF_Parm)

class URPC_X* UPsyNetConnection_X::RPC(class UClass* RPCClass)
{
	static UFunction* uFnRPC = nullptr;

	if (!uFnRPC)
	{
		uFnRPC = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.RPC");
	}

	UPsyNetConnection_X_execRPC_Params RPC_Params;
	memcpy_s(&RPC_Params.RPCClass, 0x8, &RPCClass, 0x8);

	uFnRPC->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnRPC, &RPC_Params, nullptr);

	uFnRPC->FunctionFlags |= 0x400;

	return RPC_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.ProcessServiceCall
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

bool UPsyNetConnection_X::ProcessServiceCall(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnProcessServiceCall = nullptr;

	if (!uFnProcessServiceCall)
	{
		uFnProcessServiceCall = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.ProcessServiceCall");
	}

	UPsyNetConnection_X_execProcessServiceCall_Params ProcessServiceCall_Params;
	memcpy_s(&ProcessServiceCall_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnProcessServiceCall, &ProcessServiceCall_Params, nullptr);

	return ProcessServiceCall_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.ProcessMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

void UPsyNetConnection_X::ProcessMessage(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnProcessMessage = nullptr;

	if (!uFnProcessMessage)
	{
		uFnProcessMessage = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.ProcessMessage");
	}

	UPsyNetConnection_X_execProcessMessage_Params ProcessMessage_Params;
	memcpy_s(&ProcessMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnProcessMessage, &ProcessMessage_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.UpdatePsyTime
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

void UPsyNetConnection_X::UpdatePsyTime(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnUpdatePsyTime = nullptr;

	if (!uFnUpdatePsyTime)
	{
		uFnUpdatePsyTime = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.UpdatePsyTime");
	}

	UPsyNetConnection_X_execUpdatePsyTime_Params UpdatePsyTime_Params;
	memcpy_s(&UpdatePsyTime_Params.Message, 0x8, &Message, 0x8);

	uFnUpdatePsyTime->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUpdatePsyTime, &UpdatePsyTime_Params, nullptr);

	uFnUpdatePsyTime->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetConnection_X.ReceiveMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

void UPsyNetConnection_X::ReceiveMessage(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnReceiveMessage = nullptr;

	if (!uFnReceiveMessage)
	{
		uFnReceiveMessage = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.ReceiveMessage");
	}

	UPsyNetConnection_X_execReceiveMessage_Params ReceiveMessage_Params;
	memcpy_s(&ReceiveMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnReceiveMessage, &ReceiveMessage_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.SendRequest
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// class UPsyNetMessage_X*        Request                        (CPF_Parm)

class UTAsyncResult__PsyNetMessage_X* UPsyNetConnection_X::SendRequest(class FString Service, class UPsyNetMessage_X* Request)
{
	static UFunction* uFnSendRequest = nullptr;

	if (!uFnSendRequest)
	{
		uFnSendRequest = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.SendRequest");
	}

	UPsyNetConnection_X_execSendRequest_Params SendRequest_Params;
	memcpy_s(&SendRequest_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&SendRequest_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFnSendRequest, &SendRequest_Params, nullptr);

	return SendRequest_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.SendMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UAsyncTask* UPsyNetConnection_X::SendMessageW(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnSendMessageW = nullptr;

	if (!uFnSendMessageW)
	{
		uFnSendMessageW = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.SendMessage");
	}

	UPsyNetConnection_X_execSendMessageW_Params SendMessageW_Params;
	memcpy_s(&SendMessageW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageW, &SendMessageW_Params, nullptr);

	return SendMessageW_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.RemoveHeader
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetConnection_X::RemoveHeader(class FString Key)
{
	static UFunction* uFnRemoveHeader = nullptr;

	if (!uFnRemoveHeader)
	{
		uFnRemoveHeader = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.RemoveHeader");
	}

	UPsyNetConnection_X_execRemoveHeader_Params RemoveHeader_Params;
	memcpy_s(&RemoveHeader_Params.Key, 0x10, &Key, 0x10);

	this->ProcessEvent(uFnRemoveHeader, &RemoveHeader_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.SetHeader
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetConnection_X::SetHeader(class FString Key, class FString Value)
{
	static UFunction* uFnSetHeader = nullptr;

	if (!uFnSetHeader)
	{
		uFnSetHeader = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.SetHeader");
	}

	UPsyNetConnection_X_execSetHeader_Params SetHeader_Params;
	memcpy_s(&SetHeader_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&SetHeader_Params.Value, 0x10, &Value, 0x10);

	this->ProcessEvent(uFnSetHeader, &SetHeader_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.SetAuthorized
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bAuth                          (CPF_Parm)

void UPsyNetConnection_X::SetAuthorized(unsigned long bAuth)
{
	static UFunction* uFnSetAuthorized = nullptr;

	if (!uFnSetAuthorized)
	{
		uFnSetAuthorized = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.SetAuthorized");
	}

	UPsyNetConnection_X_execSetAuthorized_Params SetAuthorized_Params;
	SetAuthorized_Params.bAuth = bAuth;

	this->ProcessEvent(uFnSetAuthorized, &SetAuthorized_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.BuildHandshakeHeaders
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UStringMap*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UStringMap* UPsyNetConnection_X::BuildHandshakeHeaders()
{
	static UFunction* uFnBuildHandshakeHeaders = nullptr;

	if (!uFnBuildHandshakeHeaders)
	{
		uFnBuildHandshakeHeaders = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.BuildHandshakeHeaders");
	}

	UPsyNetConnection_X_execBuildHandshakeHeaders_Params BuildHandshakeHeaders_Params;

	this->ProcessEvent(uFnBuildHandshakeHeaders, &BuildHandshakeHeaders_Params, nullptr);

	return BuildHandshakeHeaders_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.GetMessenger
// [0x00040803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessenger_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPsyNetMessenger_X* UPsyNetConnection_X::eventGetMessenger()
{
	static UFunction* uFnGetMessenger = nullptr;

	if (!uFnGetMessenger)
	{
		uFnGetMessenger = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.GetMessenger");
	}

	UPsyNetConnection_X_eventGetMessenger_Params GetMessenger_Params;

	this->ProcessEvent(uFnGetMessenger, &GetMessenger_Params, nullptr);

	return GetMessenger_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.CreatePerConMessenger
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::CreatePerConMessenger()
{
	static UFunction* uFnCreatePerConMessenger = nullptr;

	if (!uFnCreatePerConMessenger)
	{
		uFnCreatePerConMessenger = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.CreatePerConMessenger");
	}

	UPsyNetConnection_X_execCreatePerConMessenger_Params CreatePerConMessenger_Params;

	this->ProcessEvent(uFnCreatePerConMessenger, &CreatePerConMessenger_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.CreateHttpMessenger
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  InURL                          (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetConnection_X::CreateHttpMessenger(class FString InURL)
{
	static UFunction* uFnCreateHttpMessenger = nullptr;

	if (!uFnCreateHttpMessenger)
	{
		uFnCreateHttpMessenger = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.CreateHttpMessenger");
	}

	UPsyNetConnection_X_execCreateHttpMessenger_Params CreateHttpMessenger_Params;
	memcpy_s(&CreateHttpMessenger_Params.InURL, 0x10, &InURL, 0x10);

	this->ProcessEvent(uFnCreateHttpMessenger, &CreateHttpMessenger_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.KillPerConMessenger
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::KillPerConMessenger()
{
	static UFunction* uFnKillPerConMessenger = nullptr;

	if (!uFnKillPerConMessenger)
	{
		uFnKillPerConMessenger = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.KillPerConMessenger");
	}

	UPsyNetConnection_X_execKillPerConMessenger_Params KillPerConMessenger_Params;

	this->ProcessEvent(uFnKillPerConMessenger, &KillPerConMessenger_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.KillHttpMessenger
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::KillHttpMessenger()
{
	static UFunction* uFnKillHttpMessenger = nullptr;

	if (!uFnKillHttpMessenger)
	{
		uFnKillHttpMessenger = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.KillHttpMessenger");
	}

	UPsyNetConnection_X_execKillHttpMessenger_Params KillHttpMessenger_Params;

	this->ProcessEvent(uFnKillHttpMessenger, &KillHttpMessenger_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.KillMessengers
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::KillMessengers()
{
	static UFunction* uFnKillMessengers = nullptr;

	if (!uFnKillMessengers)
	{
		uFnKillMessengers = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.KillMessengers");
	}

	UPsyNetConnection_X_execKillMessengers_Params KillMessengers_Params;

	this->ProcessEvent(uFnKillMessengers, &KillMessengers_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.CreateMessengers
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::CreateMessengers()
{
	static UFunction* uFnCreateMessengers = nullptr;

	if (!uFnCreateMessengers)
	{
		uFnCreateMessengers = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.CreateMessengers");
	}

	UPsyNetConnection_X_execCreateMessengers_Params CreateMessengers_Params;

	this->ProcessEvent(uFnCreateMessengers, &CreateMessengers_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.InitMessengers
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::InitMessengers()
{
	static UFunction* uFnInitMessengers = nullptr;

	if (!uFnInitMessengers)
	{
		uFnInitMessengers = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.InitMessengers");
	}

	UPsyNetConnection_X_execInitMessengers_Params InitMessengers_Params;

	this->ProcessEvent(uFnInitMessengers, &InitMessengers_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.InitServiceProvider
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::InitServiceProvider()
{
	static UFunction* uFnInitServiceProvider = nullptr;

	if (!uFnInitServiceProvider)
	{
		uFnInitServiceProvider = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.InitServiceProvider");
	}

	UPsyNetConnection_X_execInitServiceProvider_Params InitServiceProvider_Params;

	this->ProcessEvent(uFnInitServiceProvider, &InitServiceProvider_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.HandlePerConStatusChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPerCon_X*               P                              (CPF_Parm)

void UPsyNetConnection_X::HandlePerConStatusChanged(class UPerCon_X* P)
{
	static UFunction* uFnHandlePerConStatusChanged = nullptr;

	if (!uFnHandlePerConStatusChanged)
	{
		uFnHandlePerConStatusChanged = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.HandlePerConStatusChanged");
	}

	UPsyNetConnection_X_execHandlePerConStatusChanged_Params HandlePerConStatusChanged_Params;
	memcpy_s(&HandlePerConStatusChanged_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFnHandlePerConStatusChanged, &HandlePerConStatusChanged_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.InitPerCon
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::InitPerCon()
{
	static UFunction* uFnInitPerCon = nullptr;

	if (!uFnInitPerCon)
	{
		uFnInitPerCon = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.InitPerCon");
	}

	UPsyNetConnection_X_execInitPerCon_Params InitPerCon_Params;

	this->ProcessEvent(uFnInitPerCon, &InitPerCon_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.InitRPCQueue
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::InitRPCQueue()
{
	static UFunction* uFnInitRPCQueue = nullptr;

	if (!uFnInitRPCQueue)
	{
		uFnInitRPCQueue = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.InitRPCQueue");
	}

	UPsyNetConnection_X_execInitRPCQueue_Params InitRPCQueue_Params;

	this->ProcessEvent(uFnInitRPCQueue, &InitRPCQueue_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.InitRequestQue
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::InitRequestQue()
{
	static UFunction* uFnInitRequestQue = nullptr;

	if (!uFnInitRequestQue)
	{
		uFnInitRequestQue = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.InitRequestQue");
	}

	UPsyNetConnection_X_execInitRequestQue_Params InitRequestQue_Params;

	this->ProcessEvent(uFnInitRequestQue, &InitRequestQue_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.InitHeaders
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::InitHeaders()
{
	static UFunction* uFnInitHeaders = nullptr;

	if (!uFnInitHeaders)
	{
		uFnInitHeaders = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.InitHeaders");
	}

	UPsyNetConnection_X_execInitHeaders_Params InitHeaders_Params;

	this->ProcessEvent(uFnInitHeaders, &InitHeaders_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.UpdateNoUrlError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::UpdateNoUrlError()
{
	static UFunction* uFnUpdateNoUrlError = nullptr;

	if (!uFnUpdateNoUrlError)
	{
		uFnUpdateNoUrlError = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.UpdateNoUrlError");
	}

	UPsyNetConnection_X_execUpdateNoUrlError_Params UpdateNoUrlError_Params;

	this->ProcessEvent(uFnUpdateNoUrlError, &UpdateNoUrlError_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.HandleUrlChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::HandleUrlChanged()
{
	static UFunction* uFnHandleUrlChanged = nullptr;

	if (!uFnHandleUrlChanged)
	{
		uFnHandleUrlChanged = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.HandleUrlChanged");
	}

	UPsyNetConnection_X_execHandleUrlChanged_Params HandleUrlChanged_Params;

	this->ProcessEvent(uFnHandleUrlChanged, &HandleUrlChanged_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.GetPsyNetURL
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UPsyNetConnection_X::GetPsyNetURL()
{
	static UFunction* uFnGetPsyNetURL = nullptr;

	if (!uFnGetPsyNetURL)
	{
		uFnGetPsyNetURL = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.GetPsyNetURL");
	}

	UPsyNetConnection_X_execGetPsyNetURL_Params GetPsyNetURL_Params;

	this->ProcessEvent(uFnGetPsyNetURL, &GetPsyNetURL_Params, nullptr);

	return GetPsyNetURL_Params.ReturnValue;
};

// Function ProjectX.PsyNetConnection_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPsyNetConnection_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.Construct");
	}

	UPsyNetConnection_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.EventDisabled
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNetConnection_X::EventDisabled(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnEventDisabled = nullptr;

	if (!uFnEventDisabled)
	{
		uFnEventDisabled = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.EventDisabled");
	}

	UPsyNetConnection_X_execEventDisabled_Params EventDisabled_Params;
	memcpy_s(&EventDisabled_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventDisabled, &EventDisabled_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.EventEnabled
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNetConnection_X::EventEnabled(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnEventEnabled = nullptr;

	if (!uFnEventEnabled)
	{
		uFnEventEnabled = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.EventEnabled");
	}

	UPsyNetConnection_X_execEventEnabled_Params EventEnabled_Params;
	memcpy_s(&EventEnabled_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventEnabled, &EventEnabled_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.EventPerConDisconnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNetConnection_X::EventPerConDisconnected(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnEventPerConDisconnected = nullptr;

	if (!uFnEventPerConDisconnected)
	{
		uFnEventPerConDisconnected = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.EventPerConDisconnected");
	}

	UPsyNetConnection_X_execEventPerConDisconnected_Params EventPerConDisconnected_Params;
	memcpy_s(&EventPerConDisconnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventPerConDisconnected, &EventPerConDisconnected_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.EventPerConConnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNetConnection_X::EventPerConConnected(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnEventPerConConnected = nullptr;

	if (!uFnEventPerConConnected)
	{
		uFnEventPerConConnected = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.EventPerConConnected");
	}

	UPsyNetConnection_X_execEventPerConConnected_Params EventPerConConnected_Params;
	memcpy_s(&EventPerConConnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventPerConConnected, &EventPerConConnected_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.EventConnectFailed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNetConnection_X::EventConnectFailed(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnEventConnectFailed = nullptr;

	if (!uFnEventConnectFailed)
	{
		uFnEventConnectFailed = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.EventConnectFailed");
	}

	UPsyNetConnection_X_execEventConnectFailed_Params EventConnectFailed_Params;
	memcpy_s(&EventConnectFailed_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventConnectFailed, &EventConnectFailed_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.EventDisconnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNetConnection_X::EventDisconnected(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnEventDisconnected = nullptr;

	if (!uFnEventDisconnected)
	{
		uFnEventDisconnected = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.EventDisconnected");
	}

	UPsyNetConnection_X_execEventDisconnected_Params EventDisconnected_Params;
	memcpy_s(&EventDisconnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventDisconnected, &EventDisconnected_Params, nullptr);
};

// Function ProjectX.PsyNetConnection_X.EventConnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UPsyNetConnection_X::EventConnected(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnEventConnected = nullptr;

	if (!uFnEventConnected)
	{
		uFnEventConnected = UFunction::FindFunction("Function ProjectX.PsyNetConnection_X.EventConnected");
	}

	UPsyNetConnection_X_execEventConnected_Params EventConnected_Params;
	memcpy_s(&EventConnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventConnected, &EventConnected_Params, nullptr);
};

// Function ProjectX.PsyNetMessage_X.GetBodyText
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UPsyNetMessage_X::GetBodyText()
{
	static UFunction* uFnGetBodyText = nullptr;

	if (!uFnGetBodyText)
	{
		uFnGetBodyText = UFunction::FindFunction("Function ProjectX.PsyNetMessage_X.GetBodyText");
	}

	UPsyNetMessage_X_execGetBodyText_Params GetBodyText_Params;

	uFnGetBodyText->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetBodyText, &GetBodyText_Params, nullptr);

	uFnGetBodyText->FunctionFlags |= 0x400;

	return GetBodyText_Params.ReturnValue;
};

// Function ProjectX.PsyNetMessage_X.SetBodyText
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetMessage_X::SetBodyText(class FString Value)
{
	static UFunction* uFnSetBodyText = nullptr;

	if (!uFnSetBodyText)
	{
		uFnSetBodyText = UFunction::FindFunction("Function ProjectX.PsyNetMessage_X.SetBodyText");
	}

	UPsyNetMessage_X_execSetBodyText_Params SetBodyText_Params;
	memcpy_s(&SetBodyText_Params.Value, 0x10, &Value, 0x10);

	uFnSetBodyText->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetBodyText, &SetBodyText_Params, nullptr);

	uFnSetBodyText->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetMessage_X.SetBody
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<uint8_t>                Value                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPsyNetMessage_X::SetBody(TArray<uint8_t>& Value)
{
	static UFunction* uFnSetBody = nullptr;

	if (!uFnSetBody)
	{
		uFnSetBody = UFunction::FindFunction("Function ProjectX.PsyNetMessage_X.SetBody");
	}

	UPsyNetMessage_X_execSetBody_Params SetBody_Params;
	memcpy_s(&SetBody_Params.Value, 0x10, &Value, 0x10);

	uFnSetBody->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetBody, &SetBody_Params, nullptr);

	uFnSetBody->FunctionFlags |= 0x400;

	memcpy_s(&Value, 0x10, &SetBody_Params.Value, 0x10);
};

// Function ProjectX.PsyNetMessenger_X.Dispose
// [0x00020800] (FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetMessenger_X::eventDispose()
{
	static UFunction* uFnDispose = nullptr;

	if (!uFnDispose)
	{
		uFnDispose = UFunction::FindFunction("Function ProjectX.PsyNetMessenger_X.Dispose");
	}

	UPsyNetMessenger_X_eventDispose_Params Dispose_Params;

	this->ProcessEvent(uFnDispose, &Dispose_Params, nullptr);
};

// Function ProjectX.PsyNetMessenger_X.EventMessageReceived
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

void UPsyNetMessenger_X::EventMessageReceived(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnEventMessageReceived = nullptr;

	if (!uFnEventMessageReceived)
	{
		uFnEventMessageReceived = UFunction::FindFunction("Function ProjectX.PsyNetMessenger_X.EventMessageReceived");
	}

	UPsyNetMessenger_X_execEventMessageReceived_Params EventMessageReceived_Params;
	memcpy_s(&EventMessageReceived_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnEventMessageReceived, &EventMessageReceived_Params, nullptr);
};

// Function ProjectX.PsyNetMessenger_X.SendMessage
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UAsyncTask* UPsyNetMessenger_X::SendMessageW(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnSendMessageW = nullptr;

	if (!uFnSendMessageW)
	{
		uFnSendMessageW = UFunction::FindFunction("Function ProjectX.PsyNetMessenger_X.SendMessage");
	}

	UPsyNetMessenger_X_execSendMessageW_Params SendMessageW_Params;
	memcpy_s(&SendMessageW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageW, &SendMessageW_Params, nullptr);

	return SendMessageW_Params.ReturnValue;
};

// Function ProjectX.PsyNetMessenger_X.Connect
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetMessenger_X::Connect()
{
	static UFunction* uFnConnect = nullptr;

	if (!uFnConnect)
	{
		uFnConnect = UFunction::FindFunction("Function ProjectX.PsyNetMessenger_X.Connect");
	}

	UPsyNetMessenger_X_execConnect_Params Connect_Params;

	this->ProcessEvent(uFnConnect, &Connect_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerHttp_X.CopyHeadersToMessage
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           From                           (CPF_Parm)
// class UPsyNetMessage_X*        To                             (CPF_Parm)

void UPsyNetMessengerHttp_X::CopyHeadersToMessage(class UWebRequest_X* From, class UPsyNetMessage_X* To)
{
	static UFunction* uFnCopyHeadersToMessage = nullptr;

	if (!uFnCopyHeadersToMessage)
	{
		uFnCopyHeadersToMessage = UFunction::FindFunction("Function ProjectX.PsyNetMessengerHttp_X.CopyHeadersToMessage");
	}

	UPsyNetMessengerHttp_X_execCopyHeadersToMessage_Params CopyHeadersToMessage_Params;
	memcpy_s(&CopyHeadersToMessage_Params.From, 0x8, &From, 0x8);
	memcpy_s(&CopyHeadersToMessage_Params.To, 0x8, &To, 0x8);

	uFnCopyHeadersToMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCopyHeadersToMessage, &CopyHeadersToMessage_Params, nullptr);

	uFnCopyHeadersToMessage->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetMessengerHttp_X.CopyHeadersToRequest
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        From                           (CPF_Parm)
// class UWebRequest_X*           To                             (CPF_Parm)

void UPsyNetMessengerHttp_X::CopyHeadersToRequest(class UPsyNetMessage_X* From, class UWebRequest_X* To)
{
	static UFunction* uFnCopyHeadersToRequest = nullptr;

	if (!uFnCopyHeadersToRequest)
	{
		uFnCopyHeadersToRequest = UFunction::FindFunction("Function ProjectX.PsyNetMessengerHttp_X.CopyHeadersToRequest");
	}

	UPsyNetMessengerHttp_X_execCopyHeadersToRequest_Params CopyHeadersToRequest_Params;
	memcpy_s(&CopyHeadersToRequest_Params.From, 0x8, &From, 0x8);
	memcpy_s(&CopyHeadersToRequest_Params.To, 0x8, &To, 0x8);

	uFnCopyHeadersToRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCopyHeadersToRequest, &CopyHeadersToRequest_Params, nullptr);

	uFnCopyHeadersToRequest->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetMessengerHttp_X.HandleWebRequestComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  PsyRequestID                   (CPF_Parm | CPF_NeedCtorLink)
// class UWebRequest_X*           Request                        (CPF_Parm)
// class UAsyncTask*              Task                           (CPF_Parm)

void UPsyNetMessengerHttp_X::HandleWebRequestComplete(class FString PsyRequestID, class UWebRequest_X* Request, class UAsyncTask* Task)
{
	static UFunction* uFnHandleWebRequestComplete = nullptr;

	if (!uFnHandleWebRequestComplete)
	{
		uFnHandleWebRequestComplete = UFunction::FindFunction("Function ProjectX.PsyNetMessengerHttp_X.HandleWebRequestComplete");
	}

	UPsyNetMessengerHttp_X_execHandleWebRequestComplete_Params HandleWebRequestComplete_Params;
	memcpy_s(&HandleWebRequestComplete_Params.PsyRequestID, 0x10, &PsyRequestID, 0x10);
	memcpy_s(&HandleWebRequestComplete_Params.Request, 0x8, &Request, 0x8);
	memcpy_s(&HandleWebRequestComplete_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnHandleWebRequestComplete, &HandleWebRequestComplete_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerHttp_X.SendMessage
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UAsyncTask* UPsyNetMessengerHttp_X::SendMessageW(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnSendMessageW = nullptr;

	if (!uFnSendMessageW)
	{
		uFnSendMessageW = UFunction::FindFunction("Function ProjectX.PsyNetMessengerHttp_X.SendMessage");
	}

	UPsyNetMessengerHttp_X_execSendMessageW_Params SendMessageW_Params;
	memcpy_s(&SendMessageW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageW, &SendMessageW_Params, nullptr);

	return SendMessageW_Params.ReturnValue;
};

// Function ProjectX.PsyNetMessengerWebSocket_X.__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FQueuedPsyNetMessage    QueuedMessage                  (CPF_Parm)

void UPsyNetMessengerWebSocket_X::__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1(struct FQueuedPsyNetMessage QueuedMessage)
{
	static UFunction* uFn__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1 = nullptr;

	if (!uFn__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1)
	{
		uFn__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1 = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1");
	}

	UPsyNetMessengerWebSocket_X_exec__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1_Params __PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1_Params;
	memcpy_s(&__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1_Params.QueuedMessage, 0x18, &QueuedMessage, 0x18);

	this->ProcessEvent(uFn__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1, &__PsyNetMessengerWebSocket_X__SendQueuedMessages_0x1_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.Dispose
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPsyNetMessengerWebSocket_X::eventDispose()
{
	static UFunction* uFnDispose = nullptr;

	if (!uFnDispose)
	{
		uFnDispose = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.Dispose");
	}

	UPsyNetMessengerWebSocket_X_eventDispose_Params Dispose_Params;

	this->ProcessEvent(uFnDispose, &Dispose_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.HandleReceivedBunch
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UTcpConnection*          C                              (CPF_Parm)

void UPsyNetMessengerWebSocket_X::HandleReceivedBunch(class UTcpConnection* C)
{
	static UFunction* uFnHandleReceivedBunch = nullptr;

	if (!uFnHandleReceivedBunch)
	{
		uFnHandleReceivedBunch = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.HandleReceivedBunch");
	}

	UPsyNetMessengerWebSocket_X_execHandleReceivedBunch_Params HandleReceivedBunch_Params;
	memcpy_s(&HandleReceivedBunch_Params.C, 0x8, &C, 0x8);

	uFnHandleReceivedBunch->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleReceivedBunch, &HandleReceivedBunch_Params, nullptr);

	uFnHandleReceivedBunch->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetMessengerWebSocket_X.SerializeMessage
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

void UPsyNetMessengerWebSocket_X::SerializeMessage(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnSerializeMessage = nullptr;

	if (!uFnSerializeMessage)
	{
		uFnSerializeMessage = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.SerializeMessage");
	}

	UPsyNetMessengerWebSocket_X_execSerializeMessage_Params SerializeMessage_Params;
	memcpy_s(&SerializeMessage_Params.Message, 0x8, &Message, 0x8);

	uFnSerializeMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSerializeMessage, &SerializeMessage_Params, nullptr);

	uFnSerializeMessage->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetMessengerWebSocket_X.FailQueuedMessages
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UPsyNetMessengerWebSocket_X::FailQueuedMessages(class UError* Error)
{
	static UFunction* uFnFailQueuedMessages = nullptr;

	if (!uFnFailQueuedMessages)
	{
		uFnFailQueuedMessages = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.FailQueuedMessages");
	}

	UPsyNetMessengerWebSocket_X_execFailQueuedMessages_Params FailQueuedMessages_Params;
	memcpy_s(&FailQueuedMessages_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnFailQueuedMessages, &FailQueuedMessages_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.TimeoutQueuedMessages
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetMessengerWebSocket_X::TimeoutQueuedMessages()
{
	static UFunction* uFnTimeoutQueuedMessages = nullptr;

	if (!uFnTimeoutQueuedMessages)
	{
		uFnTimeoutQueuedMessages = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.TimeoutQueuedMessages");
	}

	UPsyNetMessengerWebSocket_X_execTimeoutQueuedMessages_Params TimeoutQueuedMessages_Params;

	this->ProcessEvent(uFnTimeoutQueuedMessages, &TimeoutQueuedMessages_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.SendMessageWithTask
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)
// class UAsyncTask*              Task                           (CPF_Parm)

void UPsyNetMessengerWebSocket_X::SendMessageWithTaskW(class UPsyNetMessage_X* Message, class UAsyncTask* Task)
{
	static UFunction* uFnSendMessageWithTaskW = nullptr;

	if (!uFnSendMessageWithTaskW)
	{
		uFnSendMessageWithTaskW = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.SendMessageWithTask");
	}

	UPsyNetMessengerWebSocket_X_execSendMessageWithTaskW_Params SendMessageWithTaskW_Params;
	memcpy_s(&SendMessageWithTaskW_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&SendMessageWithTaskW_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnSendMessageWithTaskW, &SendMessageWithTaskW_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.SendQueuedMessages
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetMessengerWebSocket_X::SendQueuedMessages()
{
	static UFunction* uFnSendQueuedMessages = nullptr;

	if (!uFnSendQueuedMessages)
	{
		uFnSendQueuedMessages = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.SendQueuedMessages");
	}

	UPsyNetMessengerWebSocket_X_execSendQueuedMessages_Params SendQueuedMessages_Params;

	this->ProcessEvent(uFnSendQueuedMessages, &SendQueuedMessages_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.QueueMessage
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)
// class UAsyncTask*              Task                           (CPF_Parm)

void UPsyNetMessengerWebSocket_X::QueueMessage(class UPsyNetMessage_X* Message, class UAsyncTask* Task)
{
	static UFunction* uFnQueueMessage = nullptr;

	if (!uFnQueueMessage)
	{
		uFnQueueMessage = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.QueueMessage");
	}

	UPsyNetMessengerWebSocket_X_execQueueMessage_Params QueueMessage_Params;
	memcpy_s(&QueueMessage_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&QueueMessage_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnQueueMessage, &QueueMessage_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.StripHandshakeHeaders
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

void UPsyNetMessengerWebSocket_X::StripHandshakeHeaders(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnStripHandshakeHeaders = nullptr;

	if (!uFnStripHandshakeHeaders)
	{
		uFnStripHandshakeHeaders = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.StripHandshakeHeaders");
	}

	UPsyNetMessengerWebSocket_X_execStripHandshakeHeaders_Params StripHandshakeHeaders_Params;
	memcpy_s(&StripHandshakeHeaders_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnStripHandshakeHeaders, &StripHandshakeHeaders_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.SendMessage
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UAsyncTask* UPsyNetMessengerWebSocket_X::SendMessageW(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnSendMessageW = nullptr;

	if (!uFnSendMessageW)
	{
		uFnSendMessageW = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.SendMessage");
	}

	UPsyNetMessengerWebSocket_X_execSendMessageW_Params SendMessageW_Params;
	memcpy_s(&SendMessageW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageW, &SendMessageW_Params, nullptr);

	return SendMessageW_Params.ReturnValue;
};

// Function ProjectX.PsyNetMessengerWebSocket_X.HandleDisconnected
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UWebSocketConnection_X*  InConnection                   (CPF_Parm)

void UPsyNetMessengerWebSocket_X::HandleDisconnected(class UWebSocketConnection_X* InConnection)
{
	static UFunction* uFnHandleDisconnected = nullptr;

	if (!uFnHandleDisconnected)
	{
		uFnHandleDisconnected = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.HandleDisconnected");
	}

	UPsyNetMessengerWebSocket_X_execHandleDisconnected_Params HandleDisconnected_Params;
	memcpy_s(&HandleDisconnected_Params.InConnection, 0x8, &InConnection, 0x8);

	this->ProcessEvent(uFnHandleDisconnected, &HandleDisconnected_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.HandleConnected
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UWebSocketConnection_X*  InConnection                   (CPF_Parm)

void UPsyNetMessengerWebSocket_X::HandleConnected(class UWebSocketConnection_X* InConnection)
{
	static UFunction* uFnHandleConnected = nullptr;

	if (!uFnHandleConnected)
	{
		uFnHandleConnected = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.HandleConnected");
	}

	UPsyNetMessengerWebSocket_X_execHandleConnected_Params HandleConnected_Params;
	memcpy_s(&HandleConnected_Params.InConnection, 0x8, &InConnection, 0x8);

	this->ProcessEvent(uFnHandleConnected, &HandleConnected_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.Disconnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetMessengerWebSocket_X::Disconnect()
{
	static UFunction* uFnDisconnect = nullptr;

	if (!uFnDisconnect)
	{
		uFnDisconnect = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.Disconnect");
	}

	UPsyNetMessengerWebSocket_X_execDisconnect_Params Disconnect_Params;

	this->ProcessEvent(uFnDisconnect, &Disconnect_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.Connect
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPsyNetMessengerWebSocket_X::Connect()
{
	static UFunction* uFnConnect = nullptr;

	if (!uFnConnect)
	{
		uFnConnect = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.Connect");
	}

	UPsyNetMessengerWebSocket_X_execConnect_Params Connect_Params;

	this->ProcessEvent(uFnConnect, &Connect_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.IsConnected
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPsyNetMessengerWebSocket_X::IsConnected()
{
	static UFunction* uFnIsConnected = nullptr;

	if (!uFnIsConnected)
	{
		uFnIsConnected = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.IsConnected");
	}

	UPsyNetMessengerWebSocket_X_execIsConnected_Params IsConnected_Params;

	this->ProcessEvent(uFnIsConnected, &IsConnected_Params, nullptr);

	return IsConnected_Params.ReturnValue;
};

// Function ProjectX.PsyNetMessengerWebSocket_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InURL                          (CPF_Parm | CPF_NeedCtorLink)
// class UStringMap*              InHandshakeHeaders             (CPF_Parm | CPF_EditInline)

void UPsyNetMessengerWebSocket_X::Init(class FString InURL, class UStringMap* InHandshakeHeaders)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.Init");
	}

	UPsyNetMessengerWebSocket_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.InURL, 0x10, &InURL, 0x10);
	memcpy_s(&Init_Params.InHandshakeHeaders, 0x8, &InHandshakeHeaders, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.EventInvalidMessageReceived
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Messenger                      (CPF_Parm)
// class FString                  MessageSubstring               (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetMessengerWebSocket_X::EventInvalidMessageReceived(class UPsyNetMessengerWebSocket_X* Messenger, class FString MessageSubstring)
{
	static UFunction* uFnEventInvalidMessageReceived = nullptr;

	if (!uFnEventInvalidMessageReceived)
	{
		uFnEventInvalidMessageReceived = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.EventInvalidMessageReceived");
	}

	UPsyNetMessengerWebSocket_X_execEventInvalidMessageReceived_Params EventInvalidMessageReceived_Params;
	memcpy_s(&EventInvalidMessageReceived_Params.Messenger, 0x8, &Messenger, 0x8);
	memcpy_s(&EventInvalidMessageReceived_Params.MessageSubstring, 0x10, &MessageSubstring, 0x10);

	this->ProcessEvent(uFnEventInvalidMessageReceived, &EventInvalidMessageReceived_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.EventDisconnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Messenger                      (CPF_Parm)
// int32_t                        Code                           (CPF_Parm)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetMessengerWebSocket_X::EventDisconnected(class UPsyNetMessengerWebSocket_X* Messenger, int32_t Code, class FString Reason)
{
	static UFunction* uFnEventDisconnected = nullptr;

	if (!uFnEventDisconnected)
	{
		uFnEventDisconnected = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.EventDisconnected");
	}

	UPsyNetMessengerWebSocket_X_execEventDisconnected_Params EventDisconnected_Params;
	memcpy_s(&EventDisconnected_Params.Messenger, 0x8, &Messenger, 0x8);
	memcpy_s(&EventDisconnected_Params.Code, 0x4, &Code, 0x4);
	memcpy_s(&EventDisconnected_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnEventDisconnected, &EventDisconnected_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.EventConnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Messenger                      (CPF_Parm)

void UPsyNetMessengerWebSocket_X::EventConnected(class UPsyNetMessengerWebSocket_X* Messenger)
{
	static UFunction* uFnEventConnected = nullptr;

	if (!uFnEventConnected)
	{
		uFnEventConnected = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.EventConnected");
	}

	UPsyNetMessengerWebSocket_X_execEventConnected_Params EventConnected_Params;
	memcpy_s(&EventConnected_Params.Messenger, 0x8, &Messenger, 0x8);

	this->ProcessEvent(uFnEventConnected, &EventConnected_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.EventStartConnectFail
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Messenger                      (CPF_Parm)

void UPsyNetMessengerWebSocket_X::EventStartConnectFail(class UPsyNetMessengerWebSocket_X* Messenger)
{
	static UFunction* uFnEventStartConnectFail = nullptr;

	if (!uFnEventStartConnectFail)
	{
		uFnEventStartConnectFail = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.EventStartConnectFail");
	}

	UPsyNetMessengerWebSocket_X_execEventStartConnectFail_Params EventStartConnectFail_Params;
	memcpy_s(&EventStartConnectFail_Params.Messenger, 0x8, &Messenger, 0x8);

	this->ProcessEvent(uFnEventStartConnectFail, &EventStartConnectFail_Params, nullptr);
};

// Function ProjectX.PsyNetMessengerWebSocket_X.EventStartConnect
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Messenger                      (CPF_Parm)

void UPsyNetMessengerWebSocket_X::EventStartConnect(class UPsyNetMessengerWebSocket_X* Messenger)
{
	static UFunction* uFnEventStartConnect = nullptr;

	if (!uFnEventStartConnect)
	{
		uFnEventStartConnect = UFunction::FindFunction("Function ProjectX.PsyNetMessengerWebSocket_X.EventStartConnect");
	}

	UPsyNetMessengerWebSocket_X_execEventStartConnect_Params EventStartConnect_Params;
	memcpy_s(&EventStartConnect_Params.Messenger, 0x8, &Messenger, 0x8);

	this->ProcessEvent(uFnEventStartConnect, &EventStartConnect_Params, nullptr);
};

// Function ProjectX.PsyNetServiceSerializer_X.SerializeResponse
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UPsyNetClientService_X*  Service                        (CPF_Parm)

class FString UPsyNetServiceSerializer_X::SerializeResponse(class UPsyNetClientService_X* Service)
{
	static UFunction* uFnSerializeResponse = nullptr;

	if (!uFnSerializeResponse)
	{
		uFnSerializeResponse = UFunction::FindFunction("Function ProjectX.PsyNetServiceSerializer_X.SerializeResponse");
	}

	UPsyNetServiceSerializer_X_execSerializeResponse_Params SerializeResponse_Params;
	memcpy_s(&SerializeResponse_Params.Service, 0x8, &Service, 0x8);

	uFnSerializeResponse->FunctionFlags |= ~0x400;

	UPsyNetServiceSerializer_X::StaticClass()->ProcessEvent(uFnSerializeResponse, &SerializeResponse_Params, nullptr);

	uFnSerializeResponse->FunctionFlags |= 0x400;

	return SerializeResponse_Params.ReturnValue;
};

// Function ProjectX.PsyNetServiceSerializer_X.DeserializeRequest
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  JSON                           (CPF_Parm | CPF_NeedCtorLink)
// class UPsyNetClientService_X*  Service                        (CPF_Parm)

void UPsyNetServiceSerializer_X::DeserializeRequest(class FString JSON, class UPsyNetClientService_X* Service)
{
	static UFunction* uFnDeserializeRequest = nullptr;

	if (!uFnDeserializeRequest)
	{
		uFnDeserializeRequest = UFunction::FindFunction("Function ProjectX.PsyNetServiceSerializer_X.DeserializeRequest");
	}

	UPsyNetServiceSerializer_X_execDeserializeRequest_Params DeserializeRequest_Params;
	memcpy_s(&DeserializeRequest_Params.JSON, 0x10, &JSON, 0x10);
	memcpy_s(&DeserializeRequest_Params.Service, 0x8, &Service, 0x8);

	uFnDeserializeRequest->FunctionFlags |= ~0x400;

	UPsyNetServiceSerializer_X::StaticClass()->ProcessEvent(uFnDeserializeRequest, &DeserializeRequest_Params, nullptr);

	uFnDeserializeRequest->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetServiceSubscriptions_X.NotifyServiceExecuted
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  Service                        (CPF_Parm)

void UPsyNetServiceSubscriptions_X::NotifyServiceExecuted(class UPsyNetClientService_X* Service)
{
	static UFunction* uFnNotifyServiceExecuted = nullptr;

	if (!uFnNotifyServiceExecuted)
	{
		uFnNotifyServiceExecuted = UFunction::FindFunction("Function ProjectX.PsyNetServiceSubscriptions_X.NotifyServiceExecuted");
	}

	UPsyNetServiceSubscriptions_X_execNotifyServiceExecuted_Params NotifyServiceExecuted_Params;
	memcpy_s(&NotifyServiceExecuted_Params.Service, 0x8, &Service, 0x8);

	this->ProcessEvent(uFnNotifyServiceExecuted, &NotifyServiceExecuted_Params, nullptr);
};

// Function ProjectX.PsyNetServiceSubscriptions_X.UnsubscribeAll
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Listener                       (CPF_Parm)

void UPsyNetServiceSubscriptions_X::UnsubscribeAll(class UObject* Listener)
{
	static UFunction* uFnUnsubscribeAll = nullptr;

	if (!uFnUnsubscribeAll)
	{
		uFnUnsubscribeAll = UFunction::FindFunction("Function ProjectX.PsyNetServiceSubscriptions_X.UnsubscribeAll");
	}

	UPsyNetServiceSubscriptions_X_execUnsubscribeAll_Params UnsubscribeAll_Params;
	memcpy_s(&UnsubscribeAll_Params.Listener, 0x8, &Listener, 0x8);

	uFnUnsubscribeAll->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUnsubscribeAll, &UnsubscribeAll_Params, nullptr);

	uFnUnsubscribeAll->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetServiceSubscriptions_X.Unsubscribe
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetServiceSubscriptions_X::Unsubscribe(struct FScriptDelegate Callback)
{
	static UFunction* uFnUnsubscribe = nullptr;

	if (!uFnUnsubscribe)
	{
		uFnUnsubscribe = UFunction::FindFunction("Function ProjectX.PsyNetServiceSubscriptions_X.Unsubscribe");
	}

	UPsyNetServiceSubscriptions_X_execUnsubscribe_Params Unsubscribe_Params;
	memcpy_s(&Unsubscribe_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnUnsubscribe, &Unsubscribe_Params, nullptr);
};

// Function ProjectX.PsyNetServiceSubscriptions_X.Subscribe
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ServiceClass                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetServiceSubscriptions_X::Subscribe(class UClass* ServiceClass, struct FScriptDelegate Callback)
{
	static UFunction* uFnSubscribe = nullptr;

	if (!uFnSubscribe)
	{
		uFnSubscribe = UFunction::FindFunction("Function ProjectX.PsyNetServiceSubscriptions_X.Subscribe");
	}

	UPsyNetServiceSubscriptions_X_execSubscribe_Params Subscribe_Params;
	memcpy_s(&Subscribe_Params.ServiceClass, 0x8, &ServiceClass, 0x8);
	memcpy_s(&Subscribe_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSubscribe, &Subscribe_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.__PsyNetStaticData_X__Init_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UObject*                 _                              (CPF_Parm)

void UPsyNetStaticData_X::__PsyNetStaticData_X__Init_0x2(class UObject* _)
{
	static UFunction* uFn__PsyNetStaticData_X__Init_0x2 = nullptr;

	if (!uFn__PsyNetStaticData_X__Init_0x2)
	{
		uFn__PsyNetStaticData_X__Init_0x2 = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.__PsyNetStaticData_X__Init_0x2");
	}

	UPsyNetStaticData_X_exec__PsyNetStaticData_X__Init_0x2_Params __PsyNetStaticData_X__Init_0x2_Params;
	memcpy_s(&__PsyNetStaticData_X__Init_0x2_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__PsyNetStaticData_X__Init_0x2, &__PsyNetStaticData_X__Init_0x2_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.__PsyNetStaticData_X__Init_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UObject*                 _                              (CPF_Parm)

void UPsyNetStaticData_X::__PsyNetStaticData_X__Init_0x1(class UObject* _)
{
	static UFunction* uFn__PsyNetStaticData_X__Init_0x1 = nullptr;

	if (!uFn__PsyNetStaticData_X__Init_0x1)
	{
		uFn__PsyNetStaticData_X__Init_0x1 = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.__PsyNetStaticData_X__Init_0x1");
	}

	UPsyNetStaticData_X_exec__PsyNetStaticData_X__Init_0x1_Params __PsyNetStaticData_X__Init_0x1_Params;
	memcpy_s(&__PsyNetStaticData_X__Init_0x1_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__PsyNetStaticData_X__Init_0x1, &__PsyNetStaticData_X__Init_0x1_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.__PsyNetStaticData_X__BlockUntilSyncFinished_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UOnlineResource_X*       _                              (CPF_Parm | CPF_EditInline)

void UPsyNetStaticData_X::__PsyNetStaticData_X__BlockUntilSyncFinished_0x1(class UOnlineResource_X* _)
{
	static UFunction* uFn__PsyNetStaticData_X__BlockUntilSyncFinished_0x1 = nullptr;

	if (!uFn__PsyNetStaticData_X__BlockUntilSyncFinished_0x1)
	{
		uFn__PsyNetStaticData_X__BlockUntilSyncFinished_0x1 = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.__PsyNetStaticData_X__BlockUntilSyncFinished_0x1");
	}

	UPsyNetStaticData_X_exec__PsyNetStaticData_X__BlockUntilSyncFinished_0x1_Params __PsyNetStaticData_X__BlockUntilSyncFinished_0x1_Params;
	memcpy_s(&__PsyNetStaticData_X__BlockUntilSyncFinished_0x1_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__PsyNetStaticData_X__BlockUntilSyncFinished_0x1, &__PsyNetStaticData_X__BlockUntilSyncFinished_0x1_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.DisableConnection
// [0x100042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)
// class UStaticDataError_X*      InError                        (CPF_Parm)

void UPsyNetStaticData_X::DisableConnection(class UOnlinePlayer_X* Player, class UStaticDataError_X* InError)
{
	static UFunction* uFnDisableConnection = nullptr;

	if (!uFnDisableConnection)
	{
		uFnDisableConnection = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.DisableConnection");
	}

	UPsyNetStaticData_X_execDisableConnection_Params DisableConnection_Params;
	memcpy_s(&DisableConnection_Params.Player, 0x8, &Player, 0x8);
	memcpy_s(&DisableConnection_Params.InError, 0x8, &InError, 0x8);

	UPsyNetStaticData_X::StaticClass()->ProcessEvent(uFnDisableConnection, &DisableConnection_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.HandleStaticDataError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineResource_X*       DataSync                       (CPF_Parm | CPF_EditInline)
// class UError*                  InError                        (CPF_Parm)

void UPsyNetStaticData_X::HandleStaticDataError(class UOnlineResource_X* DataSync, class UError* InError)
{
	static UFunction* uFnHandleStaticDataError = nullptr;

	if (!uFnHandleStaticDataError)
	{
		uFnHandleStaticDataError = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.HandleStaticDataError");
	}

	UPsyNetStaticData_X_execHandleStaticDataError_Params HandleStaticDataError_Params;
	memcpy_s(&HandleStaticDataError_Params.DataSync, 0x8, &DataSync, 0x8);
	memcpy_s(&HandleStaticDataError_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnHandleStaticDataError, &HandleStaticDataError_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.GetMetrics
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetStaticDataMetrics_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UPsyNetStaticDataMetrics_X* UPsyNetStaticData_X::GetMetrics()
{
	static UFunction* uFnGetMetrics = nullptr;

	if (!uFnGetMetrics)
	{
		uFnGetMetrics = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.GetMetrics");
	}

	UPsyNetStaticData_X_execGetMetrics_Params GetMetrics_Params;

	this->ProcessEvent(uFnGetMetrics, &GetMetrics_Params, nullptr);

	return GetMetrics_Params.ReturnValue;
};

// Function ProjectX.PsyNetStaticData_X.UpdateRegisteredObjects
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::UpdateRegisteredObjects()
{
	static UFunction* uFnUpdateRegisteredObjects = nullptr;

	if (!uFnUpdateRegisteredObjects)
	{
		uFnUpdateRegisteredObjects = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.UpdateRegisteredObjects");
	}

	UPsyNetStaticData_X_execUpdateRegisteredObjects_Params UpdateRegisteredObjects_Params;

	uFnUpdateRegisteredObjects->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUpdateRegisteredObjects, &UpdateRegisteredObjects_Params, nullptr);

	uFnUpdateRegisteredObjects->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetStaticData_X.LoadFromUTF8
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<uint8_t>                SignedData                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UPsyNetStaticData_X::LoadFromUTF8(TArray<uint8_t>& SignedData)
{
	static UFunction* uFnLoadFromUTF8 = nullptr;

	if (!uFnLoadFromUTF8)
	{
		uFnLoadFromUTF8 = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.LoadFromUTF8");
	}

	UPsyNetStaticData_X_execLoadFromUTF8_Params LoadFromUTF8_Params;
	memcpy_s(&LoadFromUTF8_Params.SignedData, 0x10, &SignedData, 0x10);

	uFnLoadFromUTF8->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnLoadFromUTF8, &LoadFromUTF8_Params, nullptr);

	uFnLoadFromUTF8->FunctionFlags |= 0x400;

	memcpy_s(&SignedData, 0x10, &LoadFromUTF8_Params.SignedData, 0x10);

	return LoadFromUTF8_Params.ReturnValue;
};

// Function ProjectX.PsyNetStaticData_X.LoadFromSignedUTF8WithSignature
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Signature                      (CPF_Parm | CPF_NeedCtorLink)
// TArray<uint8_t>                SignedData                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UPsyNetStaticData_X::LoadFromSignedUTF8WithSignature(class FString Signature, TArray<uint8_t>& SignedData)
{
	static UFunction* uFnLoadFromSignedUTF8WithSignature = nullptr;

	if (!uFnLoadFromSignedUTF8WithSignature)
	{
		uFnLoadFromSignedUTF8WithSignature = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.LoadFromSignedUTF8WithSignature");
	}

	UPsyNetStaticData_X_execLoadFromSignedUTF8WithSignature_Params LoadFromSignedUTF8WithSignature_Params;
	memcpy_s(&LoadFromSignedUTF8WithSignature_Params.Signature, 0x10, &Signature, 0x10);
	memcpy_s(&LoadFromSignedUTF8WithSignature_Params.SignedData, 0x10, &SignedData, 0x10);

	uFnLoadFromSignedUTF8WithSignature->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnLoadFromSignedUTF8WithSignature, &LoadFromSignedUTF8WithSignature_Params, nullptr);

	uFnLoadFromSignedUTF8WithSignature->FunctionFlags |= 0x400;

	memcpy_s(&SignedData, 0x10, &LoadFromSignedUTF8WithSignature_Params.SignedData, 0x10);

	return LoadFromSignedUTF8WithSignature_Params.ReturnValue;
};

// Function ProjectX.PsyNetStaticData_X.LoadFromSignedUTF8
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<uint8_t>                SignedData                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UPsyNetStaticData_X::LoadFromSignedUTF8(TArray<uint8_t>& SignedData)
{
	static UFunction* uFnLoadFromSignedUTF8 = nullptr;

	if (!uFnLoadFromSignedUTF8)
	{
		uFnLoadFromSignedUTF8 = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.LoadFromSignedUTF8");
	}

	UPsyNetStaticData_X_execLoadFromSignedUTF8_Params LoadFromSignedUTF8_Params;
	memcpy_s(&LoadFromSignedUTF8_Params.SignedData, 0x10, &SignedData, 0x10);

	uFnLoadFromSignedUTF8->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnLoadFromSignedUTF8, &LoadFromSignedUTF8_Params, nullptr);

	uFnLoadFromSignedUTF8->FunctionFlags |= 0x400;

	memcpy_s(&SignedData, 0x10, &LoadFromSignedUTF8_Params.SignedData, 0x10);

	return LoadFromSignedUTF8_Params.ReturnValue;
};

// Function ProjectX.PsyNetStaticData_X.InstantiateObjects
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::InstantiateObjects()
{
	static UFunction* uFnInstantiateObjects = nullptr;

	if (!uFnInstantiateObjects)
	{
		uFnInstantiateObjects = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.InstantiateObjects");
	}

	UPsyNetStaticData_X_execInstantiateObjects_Params InstantiateObjects_Params;

	uFnInstantiateObjects->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInstantiateObjects, &InstantiateObjects_Params, nullptr);

	uFnInstantiateObjects->FunctionFlags |= 0x400;
};

// Function ProjectX.PsyNetStaticData_X.HandleDataChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineResource_X*       Resource                       (CPF_Parm | CPF_EditInline)

void UPsyNetStaticData_X::HandleDataChanged(class UOnlineResource_X* Resource)
{
	static UFunction* uFnHandleDataChanged = nullptr;

	if (!uFnHandleDataChanged)
	{
		uFnHandleDataChanged = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.HandleDataChanged");
	}

	UPsyNetStaticData_X_execHandleDataChanged_Params HandleDataChanged_Params;
	memcpy_s(&HandleDataChanged_Params.Resource, 0x8, &Resource, 0x8);

	this->ProcessEvent(uFnHandleDataChanged, &HandleDataChanged_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.GetPlatform
// [0x00042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UPsyNetStaticData_X::GetPlatform()
{
	static UFunction* uFnGetPlatform = nullptr;

	if (!uFnGetPlatform)
	{
		uFnGetPlatform = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.GetPlatform");
	}

	UPsyNetStaticData_X_execGetPlatform_Params GetPlatform_Params;

	UPsyNetStaticData_X::StaticClass()->ProcessEvent(uFnGetPlatform, &GetPlatform_Params, nullptr);

	return GetPlatform_Params.ReturnValue;
};

// Function ProjectX.PsyNetStaticData_X.GetPsyConfigUrl
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  Template                       (CPF_Parm | CPF_NeedCtorLink)

class FString UPsyNetStaticData_X::GetPsyConfigUrl(class FString Template)
{
	static UFunction* uFnGetPsyConfigUrl = nullptr;

	if (!uFnGetPsyConfigUrl)
	{
		uFnGetPsyConfigUrl = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.GetPsyConfigUrl");
	}

	UPsyNetStaticData_X_execGetPsyConfigUrl_Params GetPsyConfigUrl_Params;
	memcpy_s(&GetPsyConfigUrl_Params.Template, 0x10, &Template, 0x10);

	this->ProcessEvent(uFnGetPsyConfigUrl, &GetPsyConfigUrl_Params, nullptr);

	return GetPsyConfigUrl_Params.ReturnValue;
};

// Function ProjectX.PsyNetStaticData_X.UpdateBlockingSyncElapsedTime
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::UpdateBlockingSyncElapsedTime()
{
	static UFunction* uFnUpdateBlockingSyncElapsedTime = nullptr;

	if (!uFnUpdateBlockingSyncElapsedTime)
	{
		uFnUpdateBlockingSyncElapsedTime = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.UpdateBlockingSyncElapsedTime");
	}

	UPsyNetStaticData_X_execUpdateBlockingSyncElapsedTime_Params UpdateBlockingSyncElapsedTime_Params;

	this->ProcessEvent(uFnUpdateBlockingSyncElapsedTime, &UpdateBlockingSyncElapsedTime_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.BlockUntilSyncFinished
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::BlockUntilSyncFinished()
{
	static UFunction* uFnBlockUntilSyncFinished = nullptr;

	if (!uFnBlockUntilSyncFinished)
	{
		uFnBlockUntilSyncFinished = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.BlockUntilSyncFinished");
	}

	UPsyNetStaticData_X_execBlockUntilSyncFinished_Params BlockUntilSyncFinished_Params;

	this->ProcessEvent(uFnBlockUntilSyncFinished, &BlockUntilSyncFinished_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.HandleGetURL
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetStaticData_X::HandleGetURL(class FString URL)
{
	static UFunction* uFnHandleGetURL = nullptr;

	if (!uFnHandleGetURL)
	{
		uFnHandleGetURL = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.HandleGetURL");
	}

	UPsyNetStaticData_X_execHandleGetURL_Params HandleGetURL_Params;
	memcpy_s(&HandleGetURL_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnHandleGetURL, &HandleGetURL_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.Sync
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::Sync()
{
	static UFunction* uFnSync = nullptr;

	if (!uFnSync)
	{
		uFnSync = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.Sync");
	}

	UPsyNetStaticData_X_execSync_Params Sync_Params;

	this->ProcessEvent(uFnSync, &Sync_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.ForceFullBlockingSync
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::ForceFullBlockingSync()
{
	static UFunction* uFnForceFullBlockingSync = nullptr;

	if (!uFnForceFullBlockingSync)
	{
		uFnForceFullBlockingSync = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.ForceFullBlockingSync");
	}

	UPsyNetStaticData_X_execForceFullBlockingSync_Params ForceFullBlockingSync_Params;

	this->ProcessEvent(uFnForceFullBlockingSync, &ForceFullBlockingSync_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.HandleCacheExpired
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UCacheTimer_X*           Timer                          (CPF_Parm | CPF_EditInline)

void UPsyNetStaticData_X::HandleCacheExpired(class UCacheTimer_X* Timer)
{
	static UFunction* uFnHandleCacheExpired = nullptr;

	if (!uFnHandleCacheExpired)
	{
		uFnHandleCacheExpired = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.HandleCacheExpired");
	}

	UPsyNetStaticData_X_execHandleCacheExpired_Params HandleCacheExpired_Params;
	memcpy_s(&HandleCacheExpired_Params.Timer, 0x8, &Timer, 0x8);

	this->ProcessEvent(uFnHandleCacheExpired, &HandleCacheExpired_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.UpdateLinkConnection
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bHasConnection                 (CPF_Parm)

void UPsyNetStaticData_X::UpdateLinkConnection(unsigned long bHasConnection)
{
	static UFunction* uFnUpdateLinkConnection = nullptr;

	if (!uFnUpdateLinkConnection)
	{
		uFnUpdateLinkConnection = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.UpdateLinkConnection");
	}

	UPsyNetStaticData_X_execUpdateLinkConnection_Params UpdateLinkConnection_Params;
	UpdateLinkConnection_Params.bHasConnection = bHasConnection;

	this->ProcessEvent(uFnUpdateLinkConnection, &UpdateLinkConnection_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.UpdateCacheTimerEnabled
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::UpdateCacheTimerEnabled()
{
	static UFunction* uFnUpdateCacheTimerEnabled = nullptr;

	if (!uFnUpdateCacheTimerEnabled)
	{
		uFnUpdateCacheTimerEnabled = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.UpdateCacheTimerEnabled");
	}

	UPsyNetStaticData_X_execUpdateCacheTimerEnabled_Params UpdateCacheTimerEnabled_Params;

	this->ProcessEvent(uFnUpdateCacheTimerEnabled, &UpdateCacheTimerEnabled_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.ShouldEnableCacheTimer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPsyNetStaticData_X::ShouldEnableCacheTimer()
{
	static UFunction* uFnShouldEnableCacheTimer = nullptr;

	if (!uFnShouldEnableCacheTimer)
	{
		uFnShouldEnableCacheTimer = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.ShouldEnableCacheTimer");
	}

	UPsyNetStaticData_X_execShouldEnableCacheTimer_Params ShouldEnableCacheTimer_Params;

	this->ProcessEvent(uFnShouldEnableCacheTimer, &ShouldEnableCacheTimer_Params, nullptr);

	return ShouldEnableCacheTimer_Params.ReturnValue;
};

// Function ProjectX.PsyNetStaticData_X.HandleWebConfigChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::HandleWebConfigChanged()
{
	static UFunction* uFnHandleWebConfigChanged = nullptr;

	if (!uFnHandleWebConfigChanged)
	{
		uFnHandleWebConfigChanged = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.HandleWebConfigChanged");
	}

	UPsyNetStaticData_X_execHandleWebConfigChanged_Params HandleWebConfigChanged_Params;

	this->ProcessEvent(uFnHandleWebConfigChanged, &HandleWebConfigChanged_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.AddQueryParam
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  Param                          (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetStaticData_X::AddQueryParam(class FString Param)
{
	static UFunction* uFnAddQueryParam = nullptr;

	if (!uFnAddQueryParam)
	{
		uFnAddQueryParam = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.AddQueryParam");
	}

	UPsyNetStaticData_X_execAddQueryParam_Params AddQueryParam_Params;
	memcpy_s(&AddQueryParam_Params.Param, 0x10, &Param, 0x10);

	this->ProcessEvent(uFnAddQueryParam, &AddQueryParam_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.SetSyncPaused
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bPause                         (CPF_Parm)
// class UPauseStaticDataSync_X*  Instance                       (CPF_Parm)

void UPsyNetStaticData_X::SetSyncPaused(unsigned long bPause, class UPauseStaticDataSync_X* Instance)
{
	static UFunction* uFnSetSyncPaused = nullptr;

	if (!uFnSetSyncPaused)
	{
		uFnSetSyncPaused = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.SetSyncPaused");
	}

	UPsyNetStaticData_X_execSetSyncPaused_Params SetSyncPaused_Params;
	SetSyncPaused_Params.bPause = bPause;
	memcpy_s(&SetSyncPaused_Params.Instance, 0x8, &Instance, 0x8);

	UPsyNetStaticData_X::StaticClass()->ProcessEvent(uFnSetSyncPaused, &SetSyncPaused_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.Init
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetStaticData_X::eventInit()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.Init");
	}

	UPsyNetStaticData_X_eventInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.PsyNetStaticData_X.EventLoaded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetStaticData_X*     Data                           (CPF_Parm | CPF_EditInline)

void UPsyNetStaticData_X::EventLoaded(class UPsyNetStaticData_X* Data)
{
	static UFunction* uFnEventLoaded = nullptr;

	if (!uFnEventLoaded)
	{
		uFnEventLoaded = UFunction::FindFunction("Function ProjectX.PsyNetStaticData_X.EventLoaded");
	}

	UPsyNetStaticData_X_execEventLoaded_Params EventLoaded_Params;
	memcpy_s(&EventLoaded_Params.Data, 0x8, &Data, 0x8);

	this->ProcessEvent(uFnEventLoaded, &EventLoaded_Params, nullptr);
};

// Function ProjectX.PsyNetUrl_X.GetURL
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint8_t                        Environment                    (CPF_Parm)

class FString UPsyNetUrl_X::GetURL(uint8_t Environment)
{
	static UFunction* uFnGetURL = nullptr;

	if (!uFnGetURL)
	{
		uFnGetURL = UFunction::FindFunction("Function ProjectX.PsyNetUrl_X.GetURL");
	}

	UPsyNetUrl_X_execGetURL_Params GetURL_Params;
	memcpy_s(&GetURL_Params.Environment, 0x1, &Environment, 0x1);

	uFnGetURL->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetURL, &GetURL_Params, nullptr);

	uFnGetURL->FunctionFlags |= 0x400;

	return GetURL_Params.ReturnValue;
};

// Function ProjectX.RandomStream_X.SetCurrentSeed
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        NewSeed                        (CPF_Parm)

void URandomStream_X::SetCurrentSeed(int32_t NewSeed)
{
	static UFunction* uFnSetCurrentSeed = nullptr;

	if (!uFnSetCurrentSeed)
	{
		uFnSetCurrentSeed = UFunction::FindFunction("Function ProjectX.RandomStream_X.SetCurrentSeed");
	}

	URandomStream_X_execSetCurrentSeed_Params SetCurrentSeed_Params;
	memcpy_s(&SetCurrentSeed_Params.NewSeed, 0x4, &NewSeed, 0x4);

	uFnSetCurrentSeed->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetCurrentSeed, &SetCurrentSeed_Params, nullptr);

	uFnSetCurrentSeed->FunctionFlags |= 0x400;
};

// Function ProjectX.RandomStream_X.GetNextIntRange
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        MinValue                       (CPF_Parm)
// int32_t                        MaxValue                       (CPF_Parm)

int32_t URandomStream_X::GetNextIntRange(int32_t MinValue, int32_t MaxValue)
{
	static UFunction* uFnGetNextIntRange = nullptr;

	if (!uFnGetNextIntRange)
	{
		uFnGetNextIntRange = UFunction::FindFunction("Function ProjectX.RandomStream_X.GetNextIntRange");
	}

	URandomStream_X_execGetNextIntRange_Params GetNextIntRange_Params;
	memcpy_s(&GetNextIntRange_Params.MinValue, 0x4, &MinValue, 0x4);
	memcpy_s(&GetNextIntRange_Params.MaxValue, 0x4, &MaxValue, 0x4);

	uFnGetNextIntRange->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetNextIntRange, &GetNextIntRange_Params, nullptr);

	uFnGetNextIntRange->FunctionFlags |= 0x400;

	return GetNextIntRange_Params.ReturnValue;
};

// Function ProjectX.RandomStream_X.GetNextFloat
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float URandomStream_X::GetNextFloat()
{
	static UFunction* uFnGetNextFloat = nullptr;

	if (!uFnGetNextFloat)
	{
		uFnGetNextFloat = UFunction::FindFunction("Function ProjectX.RandomStream_X.GetNextFloat");
	}

	URandomStream_X_execGetNextFloat_Params GetNextFloat_Params;

	uFnGetNextFloat->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetNextFloat, &GetNextFloat_Params, nullptr);

	uFnGetNextFloat->FunctionFlags |= 0x400;

	return GetNextFloat_Params.ReturnValue;
};

// Function ProjectX.RemoteAvatarPermissions_X.__RemoteAvatarPermissions_X__TimerSendRPC_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class URemoteAvatarPermissionsRequest_X* Request                        (CPF_Parm)

struct FUniqueNetId URemoteAvatarPermissions_X::__RemoteAvatarPermissions_X__TimerSendRPC_0x1(class URemoteAvatarPermissionsRequest_X* Request)
{
	static UFunction* uFn__RemoteAvatarPermissions_X__TimerSendRPC_0x1 = nullptr;

	if (!uFn__RemoteAvatarPermissions_X__TimerSendRPC_0x1)
	{
		uFn__RemoteAvatarPermissions_X__TimerSendRPC_0x1 = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.__RemoteAvatarPermissions_X__TimerSendRPC_0x1");
	}

	URemoteAvatarPermissions_X_exec__RemoteAvatarPermissions_X__TimerSendRPC_0x1_Params __RemoteAvatarPermissions_X__TimerSendRPC_0x1_Params;
	memcpy_s(&__RemoteAvatarPermissions_X__TimerSendRPC_0x1_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFn__RemoteAvatarPermissions_X__TimerSendRPC_0x1, &__RemoteAvatarPermissions_X__TimerSendRPC_0x1_Params, nullptr);

	return __RemoteAvatarPermissions_X__TimerSendRPC_0x1_Params.ReturnValue;
};

// Function ProjectX.RemoteAvatarPermissions_X.HandleRequestFail
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_CanShowAvatar_X*    RPC                            (CPF_Parm)

void URemoteAvatarPermissions_X::HandleRequestFail(class URPC_CanShowAvatar_X* RPC)
{
	static UFunction* uFnHandleRequestFail = nullptr;

	if (!uFnHandleRequestFail)
	{
		uFnHandleRequestFail = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.HandleRequestFail");
	}

	URemoteAvatarPermissions_X_execHandleRequestFail_Params HandleRequestFail_Params;
	memcpy_s(&HandleRequestFail_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleRequestFail, &HandleRequestFail_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissions_X.HandleRequestSuccess
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_CanShowAvatar_X*    RPC                            (CPF_Parm)

void URemoteAvatarPermissions_X::HandleRequestSuccess(class URPC_CanShowAvatar_X* RPC)
{
	static UFunction* uFnHandleRequestSuccess = nullptr;

	if (!uFnHandleRequestSuccess)
	{
		uFnHandleRequestSuccess = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.HandleRequestSuccess");
	}

	URemoteAvatarPermissions_X_execHandleRequestSuccess_Params HandleRequestSuccess_Params;
	memcpy_s(&HandleRequestSuccess_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleRequestSuccess, &HandleRequestSuccess_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissions_X.TimerSendRPC
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void URemoteAvatarPermissions_X::TimerSendRPC()
{
	static UFunction* uFnTimerSendRPC = nullptr;

	if (!uFnTimerSendRPC)
	{
		uFnTimerSendRPC = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.TimerSendRPC");
	}

	URemoteAvatarPermissions_X_execTimerSendRPC_Params TimerSendRPC_Params;

	this->ProcessEvent(uFnTimerSendRPC, &TimerSendRPC_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissions_X.GetPermission
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         AllowedCallback                (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         DisallowedCallback             (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void URemoteAvatarPermissions_X::GetPermission(struct FUniqueNetId PlayerID, struct FScriptDelegate AllowedCallback, struct FScriptDelegate DisallowedCallback)
{
	static UFunction* uFnGetPermission = nullptr;

	if (!uFnGetPermission)
	{
		uFnGetPermission = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.GetPermission");
	}

	URemoteAvatarPermissions_X_execGetPermission_Params GetPermission_Params;
	memcpy_s(&GetPermission_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPermission_Params.AllowedCallback, 0x18, &AllowedCallback, 0x18);
	memcpy_s(&GetPermission_Params.DisallowedCallback, 0x18, &DisallowedCallback, 0x18);

	this->ProcessEvent(uFnGetPermission, &GetPermission_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissions_X.GetPermissions
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         OnAllowed                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnDisallowed                   (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FUniqueNetId>    PlayerIds                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void URemoteAvatarPermissions_X::GetPermissions(struct FScriptDelegate OnAllowed, struct FScriptDelegate OnDisallowed, TArray<struct FUniqueNetId>& PlayerIds)
{
	static UFunction* uFnGetPermissions = nullptr;

	if (!uFnGetPermissions)
	{
		uFnGetPermissions = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.GetPermissions");
	}

	URemoteAvatarPermissions_X_execGetPermissions_Params GetPermissions_Params;
	memcpy_s(&GetPermissions_Params.OnAllowed, 0x18, &OnAllowed, 0x18);
	memcpy_s(&GetPermissions_Params.OnDisallowed, 0x18, &OnDisallowed, 0x18);
	memcpy_s(&GetPermissions_Params.PlayerIds, 0x10, &PlayerIds, 0x10);

	this->ProcessEvent(uFnGetPermissions, &GetPermissions_Params, nullptr);

	memcpy_s(&PlayerIds, 0x10, &GetPermissions_Params.PlayerIds, 0x10);
};

// Function ProjectX.RemoteAvatarPermissions_X.SetAvatarPermission
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        PermissionStatus               (CPF_Parm)

void URemoteAvatarPermissions_X::SetAvatarPermission(struct FUniqueNetId PlayerID, uint8_t PermissionStatus)
{
	static UFunction* uFnSetAvatarPermission = nullptr;

	if (!uFnSetAvatarPermission)
	{
		uFnSetAvatarPermission = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.SetAvatarPermission");
	}

	URemoteAvatarPermissions_X_execSetAvatarPermission_Params SetAvatarPermission_Params;
	memcpy_s(&SetAvatarPermission_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&SetAvatarPermission_Params.PermissionStatus, 0x1, &PermissionStatus, 0x1);

	this->ProcessEvent(uFnSetAvatarPermission, &SetAvatarPermission_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissions_X.SendRPC
// [0x00120003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class URPC_CanShowAvatar_X*    RPC                            (CPF_Parm)

void URemoteAvatarPermissions_X::SendRPC(class URPC_CanShowAvatar_X* RPC)
{
	static UFunction* uFnSendRPC = nullptr;

	if (!uFnSendRPC)
	{
		uFnSendRPC = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.SendRPC");
	}

	URemoteAvatarPermissions_X_execSendRPC_Params SendRPC_Params;
	memcpy_s(&SendRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnSendRPC, &SendRPC_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissions_X.OnAvatarPermissionSet
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        PermissionStatus               (CPF_Parm)

void URemoteAvatarPermissions_X::OnAvatarPermissionSet(struct FUniqueNetId PlayerID, uint8_t PermissionStatus)
{
	static UFunction* uFnOnAvatarPermissionSet = nullptr;

	if (!uFnOnAvatarPermissionSet)
	{
		uFnOnAvatarPermissionSet = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.OnAvatarPermissionSet");
	}

	URemoteAvatarPermissions_X_execOnAvatarPermissionSet_Params OnAvatarPermissionSet_Params;
	memcpy_s(&OnAvatarPermissionSet_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&OnAvatarPermissionSet_Params.PermissionStatus, 0x1, &PermissionStatus, 0x1);

	this->ProcessEvent(uFnOnAvatarPermissionSet, &OnAvatarPermissionSet_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissions_X.FindRequest
// [0x00440401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class URemoteAvatarPermissionsRequest_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class URemoteAvatarPermissionsRequest_X* URemoteAvatarPermissions_X::FindRequest(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnFindRequest = nullptr;

	if (!uFnFindRequest)
	{
		uFnFindRequest = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.FindRequest");
	}

	URemoteAvatarPermissions_X_execFindRequest_Params FindRequest_Params;
	memcpy_s(&FindRequest_Params.PlayerID, 0x48, &PlayerID, 0x48);

	uFnFindRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFindRequest, &FindRequest_Params, nullptr);

	uFnFindRequest->FunctionFlags |= 0x400;

	memcpy_s(&PlayerID, 0x48, &FindRequest_Params.PlayerID, 0x48);

	return FindRequest_Params.ReturnValue;
};

// Function ProjectX.RemoteAvatarPermissions_X.Contains
// [0x00440401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool URemoteAvatarPermissions_X::Contains(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnContains = nullptr;

	if (!uFnContains)
	{
		uFnContains = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.Contains");
	}

	URemoteAvatarPermissions_X_execContains_Params Contains_Params;
	memcpy_s(&Contains_Params.PlayerID, 0x48, &PlayerID, 0x48);

	uFnContains->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnContains, &Contains_Params, nullptr);

	uFnContains->FunctionFlags |= 0x400;

	memcpy_s(&PlayerID, 0x48, &Contains_Params.PlayerID, 0x48);

	return Contains_Params.ReturnValue;
};

// Function ProjectX.RemoteAvatarPermissions_X.TryGet
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

uint8_t URemoteAvatarPermissions_X::TryGet(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnTryGet = nullptr;

	if (!uFnTryGet)
	{
		uFnTryGet = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.TryGet");
	}

	URemoteAvatarPermissions_X_execTryGet_Params TryGet_Params;
	memcpy_s(&TryGet_Params.PlayerID, 0x48, &PlayerID, 0x48);

	uFnTryGet->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTryGet, &TryGet_Params, nullptr);

	uFnTryGet->FunctionFlags |= 0x400;

	memcpy_s(&PlayerID, 0x48, &TryGet_Params.PlayerID, 0x48);

	return TryGet_Params.ReturnValue;
};

// Function ProjectX.RemoteAvatarPermissions_X.AvatarPermissionToTryGetResult
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        InPermission                   (CPF_Parm)

uint8_t URemoteAvatarPermissions_X::AvatarPermissionToTryGetResult(uint8_t InPermission)
{
	static UFunction* uFnAvatarPermissionToTryGetResult = nullptr;

	if (!uFnAvatarPermissionToTryGetResult)
	{
		uFnAvatarPermissionToTryGetResult = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.AvatarPermissionToTryGetResult");
	}

	URemoteAvatarPermissions_X_execAvatarPermissionToTryGetResult_Params AvatarPermissionToTryGetResult_Params;
	memcpy_s(&AvatarPermissionToTryGetResult_Params.InPermission, 0x1, &InPermission, 0x1);

	uFnAvatarPermissionToTryGetResult->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAvatarPermissionToTryGetResult, &AvatarPermissionToTryGetResult_Params, nullptr);

	uFnAvatarPermissionToTryGetResult->FunctionFlags |= 0x400;

	return AvatarPermissionToTryGetResult_Params.ReturnValue;
};

// Function ProjectX.RemoteAvatarPermissions_X.CacheResult
// [0x00440401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// uint8_t                        PermissionStatus               (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void URemoteAvatarPermissions_X::CacheResult(uint8_t PermissionStatus, struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnCacheResult = nullptr;

	if (!uFnCacheResult)
	{
		uFnCacheResult = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissions_X.CacheResult");
	}

	URemoteAvatarPermissions_X_execCacheResult_Params CacheResult_Params;
	memcpy_s(&CacheResult_Params.PermissionStatus, 0x1, &PermissionStatus, 0x1);
	memcpy_s(&CacheResult_Params.PlayerID, 0x48, &PlayerID, 0x48);

	uFnCacheResult->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnCacheResult, &CacheResult_Params, nullptr);

	uFnCacheResult->FunctionFlags |= 0x400;

	memcpy_s(&PlayerID, 0x48, &CacheResult_Params.PlayerID, 0x48);
};

// Function ProjectX.RemoteAvatarPermissionsRequest_X.EventDisallowed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            DisallowedPlayerId             (CPF_Parm | CPF_NeedCtorLink)

void URemoteAvatarPermissionsRequest_X::EventDisallowed(struct FUniqueNetId DisallowedPlayerId)
{
	static UFunction* uFnEventDisallowed = nullptr;

	if (!uFnEventDisallowed)
	{
		uFnEventDisallowed = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissionsRequest_X.EventDisallowed");
	}

	URemoteAvatarPermissionsRequest_X_execEventDisallowed_Params EventDisallowed_Params;
	memcpy_s(&EventDisallowed_Params.DisallowedPlayerId, 0x48, &DisallowedPlayerId, 0x48);

	this->ProcessEvent(uFnEventDisallowed, &EventDisallowed_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissionsRequest_X.EventAllowed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            AllowedPlayerId                (CPF_Parm | CPF_NeedCtorLink)

void URemoteAvatarPermissionsRequest_X::EventAllowed(struct FUniqueNetId AllowedPlayerId)
{
	static UFunction* uFnEventAllowed = nullptr;

	if (!uFnEventAllowed)
	{
		uFnEventAllowed = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissionsRequest_X.EventAllowed");
	}

	URemoteAvatarPermissionsRequest_X_execEventAllowed_Params EventAllowed_Params;
	memcpy_s(&EventAllowed_Params.AllowedPlayerId, 0x48, &AllowedPlayerId, 0x48);

	this->ProcessEvent(uFnEventAllowed, &EventAllowed_Params, nullptr);
};

// Function ProjectX.RenderProfiler_X.SetupPlayers
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void ARenderProfiler_X::SetupPlayers()
{
	static UFunction* uFnSetupPlayers = nullptr;

	if (!uFnSetupPlayers)
	{
		uFnSetupPlayers = UFunction::FindFunction("Function ProjectX.RenderProfiler_X.SetupPlayers");
	}

	ARenderProfiler_X_execSetupPlayers_Params SetupPlayers_Params;

	this->ProcessEvent(uFnSetupPlayers, &SetupPlayers_Params, nullptr);
};

// Function ProjectX.RenderProfiler_X.PostBeginPlay
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void ARenderProfiler_X::eventPostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function ProjectX.RenderProfiler_X.PostBeginPlay");
	}

	ARenderProfiler_X_eventPostBeginPlay_Params PostBeginPlay_Params;

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function ProjectX.RenderProfiler_X.EventFinished
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class ARenderProfiler_X*       Profiler                       (CPF_Parm)

void ARenderProfiler_X::EventFinished(class ARenderProfiler_X* Profiler)
{
	static UFunction* uFnEventFinished = nullptr;

	if (!uFnEventFinished)
	{
		uFnEventFinished = UFunction::FindFunction("Function ProjectX.RenderProfiler_X.EventFinished");
	}

	ARenderProfiler_X_execEventFinished_Params EventFinished_Params;
	memcpy_s(&EventFinished_Params.Profiler, 0x8, &Profiler, 0x8);

	this->ProcessEvent(uFnEventFinished, &EventFinished_Params, nullptr);
};

// Function ProjectX.RetryPolicy_X.AppliesTo
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   Error                          (CPF_Parm)

bool URetryPolicy_X::AppliesTo(class FString Service, struct FName Error)
{
	static UFunction* uFnAppliesTo = nullptr;

	if (!uFnAppliesTo)
	{
		uFnAppliesTo = UFunction::FindFunction("Function ProjectX.RetryPolicy_X.AppliesTo");
	}

	URetryPolicy_X_execAppliesTo_Params AppliesTo_Params;
	memcpy_s(&AppliesTo_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&AppliesTo_Params.Error, 0x8, &Error, 0x8);

	uFnAppliesTo->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAppliesTo, &AppliesTo_Params, nullptr);

	uFnAppliesTo->FunctionFlags |= 0x400;

	return AppliesTo_Params.ReturnValue;
};

// Function ProjectX.RPC_X.NotifySuccess
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URPC_X::NotifySuccess()
{
	static UFunction* uFnNotifySuccess = nullptr;

	if (!uFnNotifySuccess)
	{
		uFnNotifySuccess = UFunction::FindFunction("Function ProjectX.RPC_X.NotifySuccess");
	}

	URPC_X_execNotifySuccess_Params NotifySuccess_Params;

	uFnNotifySuccess->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnNotifySuccess, &NotifySuccess_Params, nullptr);

	uFnNotifySuccess->FunctionFlags |= 0x400;
};

// Function ProjectX.RPC_X.NotifyError
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  InError                        (CPF_Parm)

void URPC_X::NotifyError(class UError* InError)
{
	static UFunction* uFnNotifyError = nullptr;

	if (!uFnNotifyError)
	{
		uFnNotifyError = UFunction::FindFunction("Function ProjectX.RPC_X.NotifyError");
	}

	URPC_X_execNotifyError_Params NotifyError_Params;
	memcpy_s(&NotifyError_Params.InError, 0x8, &InError, 0x8);

	uFnNotifyError->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnNotifyError, &NotifyError_Params, nullptr);

	uFnNotifyError->FunctionFlags |= 0x400;
};

// Function ProjectX.RPC_X.OverrideErrorType
// [0x00080800] (FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UErrorType*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UErrorType*              ErrorType                      (CPF_Parm)

class UErrorType* URPC_X::eventOverrideErrorType(class UErrorType* ErrorType)
{
	static UFunction* uFnOverrideErrorType = nullptr;

	if (!uFnOverrideErrorType)
	{
		uFnOverrideErrorType = UFunction::FindFunction("Function ProjectX.RPC_X.OverrideErrorType");
	}

	URPC_X_eventOverrideErrorType_Params OverrideErrorType_Params;
	memcpy_s(&OverrideErrorType_Params.ErrorType, 0x8, &ErrorType, 0x8);

	this->ProcessEvent(uFnOverrideErrorType, &OverrideErrorType_Params, nullptr);

	return OverrideErrorType_Params.ReturnValue;
};

// Function ProjectX.RPC_X.OnComplete
// [0x00080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void URPC_X::eventOnComplete()
{
	static UFunction* uFnOnComplete = nullptr;

	if (!uFnOnComplete)
	{
		uFnOnComplete = UFunction::FindFunction("Function ProjectX.RPC_X.OnComplete");
	}

	URPC_X_eventOnComplete_Params OnComplete_Params;

	this->ProcessEvent(uFnOnComplete, &OnComplete_Params, nullptr);
};

// Function ProjectX.RPC_X.OnFail
// [0x00080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void URPC_X::eventOnFail()
{
	static UFunction* uFnOnFail = nullptr;

	if (!uFnOnFail)
	{
		uFnOnFail = UFunction::FindFunction("Function ProjectX.RPC_X.OnFail");
	}

	URPC_X_eventOnFail_Params OnFail_Params;

	this->ProcessEvent(uFnOnFail, &OnFail_Params, nullptr);
};

// Function ProjectX.RPC_X.OnSuccess
// [0x00080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void URPC_X::eventOnSuccess()
{
	static UFunction* uFnOnSuccess = nullptr;

	if (!uFnOnSuccess)
	{
		uFnOnSuccess = UFunction::FindFunction("Function ProjectX.RPC_X.OnSuccess");
	}

	URPC_X_eventOnSuccess_Params OnSuccess_Params;

	this->ProcessEvent(uFnOnSuccess, &OnSuccess_Params, nullptr);
};

// Function ProjectX.RPC_X.Dispose
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URPC_X::eventDispose()
{
	static UFunction* uFnDispose = nullptr;

	if (!uFnDispose)
	{
		uFnDispose = UFunction::FindFunction("Function ProjectX.RPC_X.Dispose");
	}

	URPC_X_eventDispose_Params Dispose_Params;

	this->ProcessEvent(uFnDispose, &Dispose_Params, nullptr);
};

// Function ProjectX.RPC_X.CreateTask
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         InCallback                     (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* URPC_X::CreateTask(struct FScriptDelegate InCallback)
{
	static UFunction* uFnCreateTask = nullptr;

	if (!uFnCreateTask)
	{
		uFnCreateTask = UFunction::FindFunction("Function ProjectX.RPC_X.CreateTask");
	}

	URPC_X_execCreateTask_Params CreateTask_Params;
	memcpy_s(&CreateTask_Params.InCallback, 0x18, &InCallback, 0x18);

	this->ProcessEvent(uFnCreateTask, &CreateTask_Params, nullptr);

	return CreateTask_Params.ReturnValue;
};

// Function ProjectX.RPC_X.NotifyOnComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class URPC_X* URPC_X::NotifyOnComplete(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnComplete = nullptr;

	if (!uFnNotifyOnComplete)
	{
		uFnNotifyOnComplete = UFunction::FindFunction("Function ProjectX.RPC_X.NotifyOnComplete");
	}

	URPC_X_execNotifyOnComplete_Params NotifyOnComplete_Params;
	memcpy_s(&NotifyOnComplete_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnComplete, &NotifyOnComplete_Params, nullptr);

	return NotifyOnComplete_Params.ReturnValue;
};

// Function ProjectX.RPC_X.NotifyOnFail
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class URPC_X* URPC_X::NotifyOnFail(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnFail = nullptr;

	if (!uFnNotifyOnFail)
	{
		uFnNotifyOnFail = UFunction::FindFunction("Function ProjectX.RPC_X.NotifyOnFail");
	}

	URPC_X_execNotifyOnFail_Params NotifyOnFail_Params;
	memcpy_s(&NotifyOnFail_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnFail, &NotifyOnFail_Params, nullptr);

	return NotifyOnFail_Params.ReturnValue;
};

// Function ProjectX.RPC_X.NotifyOnSuccess
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class URPC_X* URPC_X::NotifyOnSuccess(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnSuccess = nullptr;

	if (!uFnNotifyOnSuccess)
	{
		uFnNotifyOnSuccess = UFunction::FindFunction("Function ProjectX.RPC_X.NotifyOnSuccess");
	}

	URPC_X_execNotifyOnSuccess_Params NotifyOnSuccess_Params;
	memcpy_s(&NotifyOnSuccess_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnSuccess, &NotifyOnSuccess_Params, nullptr);

	return NotifyOnSuccess_Params.ReturnValue;
};

// Function ProjectX.RPC_X.GetResponseObject
// [0x00020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UObject* URPC_X::eventGetResponseObject()
{
	static UFunction* uFnGetResponseObject = nullptr;

	if (!uFnGetResponseObject)
	{
		uFnGetResponseObject = UFunction::FindFunction("Function ProjectX.RPC_X.GetResponseObject");
	}

	URPC_X_eventGetResponseObject_Params GetResponseObject_Params;

	this->ProcessEvent(uFnGetResponseObject, &GetResponseObject_Params, nullptr);

	return GetResponseObject_Params.ReturnValue;
};

// Function ProjectX.RPC_X.EventComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void URPC_X::EventComplete(class URPC_X* RPC)
{
	static UFunction* uFnEventComplete = nullptr;

	if (!uFnEventComplete)
	{
		uFnEventComplete = UFunction::FindFunction("Function ProjectX.RPC_X.EventComplete");
	}

	URPC_X_execEventComplete_Params EventComplete_Params;
	memcpy_s(&EventComplete_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnEventComplete, &EventComplete_Params, nullptr);
};

// Function ProjectX.RPC_X.EventFail
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void URPC_X::EventFail(class URPC_X* RPC)
{
	static UFunction* uFnEventFail = nullptr;

	if (!uFnEventFail)
	{
		uFnEventFail = UFunction::FindFunction("Function ProjectX.RPC_X.EventFail");
	}

	URPC_X_execEventFail_Params EventFail_Params;
	memcpy_s(&EventFail_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnEventFail, &EventFail_Params, nullptr);
};

// Function ProjectX.RPC_X.EventSuccess
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void URPC_X::EventSuccess(class URPC_X* RPC)
{
	static UFunction* uFnEventSuccess = nullptr;

	if (!uFnEventSuccess)
	{
		uFnEventSuccess = UFunction::FindFunction("Function ProjectX.RPC_X.EventSuccess");
	}

	URPC_X_execEventSuccess_Params EventSuccess_Params;
	memcpy_s(&EventSuccess_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnEventSuccess, &EventSuccess_Params, nullptr);
};

// Function ProjectX.RPCQueue_X.__RPCQueue_X__CreateBatch_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FPendingRPC             P                              (CPF_Parm)

class FString URPCQueue_X::__RPCQueue_X__CreateBatch_0x1(struct FPendingRPC P)
{
	static UFunction* uFn__RPCQueue_X__CreateBatch_0x1 = nullptr;

	if (!uFn__RPCQueue_X__CreateBatch_0x1)
	{
		uFn__RPCQueue_X__CreateBatch_0x1 = UFunction::FindFunction("Function ProjectX.RPCQueue_X.__RPCQueue_X__CreateBatch_0x1");
	}

	URPCQueue_X_exec__RPCQueue_X__CreateBatch_0x1_Params __RPCQueue_X__CreateBatch_0x1_Params;
	memcpy_s(&__RPCQueue_X__CreateBatch_0x1_Params.P, 0x20, &P, 0x20);

	this->ProcessEvent(uFn__RPCQueue_X__CreateBatch_0x1, &__RPCQueue_X__CreateBatch_0x1_Params, nullptr);

	return __RPCQueue_X__CreateBatch_0x1_Params.ReturnValue;
};

// Function ProjectX.RPCQueue_X.OnError
// [0x00040803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void URPCQueue_X::eventOnError(class URPC_X* RPC, class UError* Error)
{
	static UFunction* uFnOnError = nullptr;

	if (!uFnOnError)
	{
		uFnOnError = UFunction::FindFunction("Function ProjectX.RPCQueue_X.OnError");
	}

	URPCQueue_X_eventOnError_Params OnError_Params;
	memcpy_s(&OnError_Params.RPC, 0x8, &RPC, 0x8);
	memcpy_s(&OnError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnOnError, &OnError_Params, nullptr);
};

// Function ProjectX.RPCQueue_X.GetPsyNetMetrics
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMetrics_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UPsyNetMetrics_X* URPCQueue_X::GetPsyNetMetrics()
{
	static UFunction* uFnGetPsyNetMetrics = nullptr;

	if (!uFnGetPsyNetMetrics)
	{
		uFnGetPsyNetMetrics = UFunction::FindFunction("Function ProjectX.RPCQueue_X.GetPsyNetMetrics");
	}

	URPCQueue_X_execGetPsyNetMetrics_Params GetPsyNetMetrics_Params;

	this->ProcessEvent(uFnGetPsyNetMetrics, &GetPsyNetMetrics_Params, nullptr);

	return GetPsyNetMetrics_Params.ReturnValue;
};

// Function ProjectX.RPCQueue_X.RecordBatchMetrics
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPCBatch_X*             Batch                          (CPF_Parm)

void URPCQueue_X::RecordBatchMetrics(class URPCBatch_X* Batch)
{
	static UFunction* uFnRecordBatchMetrics = nullptr;

	if (!uFnRecordBatchMetrics)
	{
		uFnRecordBatchMetrics = UFunction::FindFunction("Function ProjectX.RPCQueue_X.RecordBatchMetrics");
	}

	URPCQueue_X_execRecordBatchMetrics_Params RecordBatchMetrics_Params;
	memcpy_s(&RecordBatchMetrics_Params.Batch, 0x8, &Batch, 0x8);

	this->ProcessEvent(uFnRecordBatchMetrics, &RecordBatchMetrics_Params, nullptr);
};

// Function ProjectX.RPCQueue_X.HandleBatchComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPCBatch_X*             Batch                          (CPF_Parm)
// class UPsyNetMessage_X*        Response                       (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void URPCQueue_X::HandleBatchComplete(class URPCBatch_X* Batch, class UPsyNetMessage_X* Response, class UError* Error)
{
	static UFunction* uFnHandleBatchComplete = nullptr;

	if (!uFnHandleBatchComplete)
	{
		uFnHandleBatchComplete = UFunction::FindFunction("Function ProjectX.RPCQueue_X.HandleBatchComplete");
	}

	URPCQueue_X_execHandleBatchComplete_Params HandleBatchComplete_Params;
	memcpy_s(&HandleBatchComplete_Params.Batch, 0x8, &Batch, 0x8);
	memcpy_s(&HandleBatchComplete_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HandleBatchComplete_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleBatchComplete, &HandleBatchComplete_Params, nullptr);
};

// Function ProjectX.RPCQueue_X.CreateBatchSingleRPC
// [0x00440803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)
// struct FPendingRPC             RPC                            (CPF_Const | CPF_Parm | CPF_OutParm)

void URPCQueue_X::eventCreateBatchSingleRPC(class UPsyNetMessage_X* Message, struct FPendingRPC& RPC)
{
	static UFunction* uFnCreateBatchSingleRPC = nullptr;

	if (!uFnCreateBatchSingleRPC)
	{
		uFnCreateBatchSingleRPC = UFunction::FindFunction("Function ProjectX.RPCQueue_X.CreateBatchSingleRPC");
	}

	URPCQueue_X_eventCreateBatchSingleRPC_Params CreateBatchSingleRPC_Params;
	memcpy_s(&CreateBatchSingleRPC_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&CreateBatchSingleRPC_Params.RPC, 0x20, &RPC, 0x20);

	this->ProcessEvent(uFnCreateBatchSingleRPC, &CreateBatchSingleRPC_Params, nullptr);

	memcpy_s(&RPC, 0x20, &CreateBatchSingleRPC_Params.RPC, 0x20);
};

// Function ProjectX.RPCQueue_X.CreateBatch
// [0x00440803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Message                        (CPF_Parm)
// TArray<struct FPendingRPC>     BatchRPCs                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void URPCQueue_X::eventCreateBatch(class UPsyNetMessage_X* Message, TArray<struct FPendingRPC>& BatchRPCs)
{
	static UFunction* uFnCreateBatch = nullptr;

	if (!uFnCreateBatch)
	{
		uFnCreateBatch = UFunction::FindFunction("Function ProjectX.RPCQueue_X.CreateBatch");
	}

	URPCQueue_X_eventCreateBatch_Params CreateBatch_Params;
	memcpy_s(&CreateBatch_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&CreateBatch_Params.BatchRPCs, 0x10, &BatchRPCs, 0x10);

	this->ProcessEvent(uFnCreateBatch, &CreateBatch_Params, nullptr);

	memcpy_s(&BatchRPCs, 0x10, &CreateBatch_Params.BatchRPCs, 0x10);
};

// Function ProjectX.RPCQueue_X.SignatureMismatch
// [0x00022803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ServiceID                      (CPF_Parm)

void URPCQueue_X::eventSignatureMismatch(int32_t ServiceID)
{
	static UFunction* uFnSignatureMismatch = nullptr;

	if (!uFnSignatureMismatch)
	{
		uFnSignatureMismatch = UFunction::FindFunction("Function ProjectX.RPCQueue_X.SignatureMismatch");
	}

	URPCQueue_X_eventSignatureMismatch_Params SignatureMismatch_Params;
	memcpy_s(&SignatureMismatch_Params.ServiceID, 0x4, &ServiceID, 0x4);

	URPCQueue_X::StaticClass()->ProcessEvent(uFnSignatureMismatch, &SignatureMismatch_Params, nullptr);
};

// Function ProjectX.RPCQueue_X.FailAllPending
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void URPCQueue_X::FailAllPending(class UError* Error)
{
	static UFunction* uFnFailAllPending = nullptr;

	if (!uFnFailAllPending)
	{
		uFnFailAllPending = UFunction::FindFunction("Function ProjectX.RPCQueue_X.FailAllPending");
	}

	URPCQueue_X_execFailAllPending_Params FailAllPending_Params;
	memcpy_s(&FailAllPending_Params.Error, 0x8, &Error, 0x8);

	uFnFailAllPending->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFailAllPending, &FailAllPending_Params, nullptr);

	uFnFailAllPending->FunctionFlags |= 0x400;
};

// Function ProjectX.RPCQueue_X.FailPending
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void URPCQueue_X::FailPending(class URPC_X* RPC, class UError* Error)
{
	static UFunction* uFnFailPending = nullptr;

	if (!uFnFailPending)
	{
		uFnFailPending = UFunction::FindFunction("Function ProjectX.RPCQueue_X.FailPending");
	}

	URPCQueue_X_execFailPending_Params FailPending_Params;
	memcpy_s(&FailPending_Params.RPC, 0x8, &RPC, 0x8);
	memcpy_s(&FailPending_Params.Error, 0x8, &Error, 0x8);

	uFnFailPending->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnFailPending, &FailPending_Params, nullptr);

	uFnFailPending->FunctionFlags |= 0x400;
};

// Function ProjectX.RPCQueue_X.TickReceive
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URPCQueue_X::TickReceive()
{
	static UFunction* uFnTickReceive = nullptr;

	if (!uFnTickReceive)
	{
		uFnTickReceive = UFunction::FindFunction("Function ProjectX.RPCQueue_X.TickReceive");
	}

	URPCQueue_X_execTickReceive_Params TickReceive_Params;

	uFnTickReceive->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTickReceive, &TickReceive_Params, nullptr);

	uFnTickReceive->FunctionFlags |= 0x400;
};

// Function ProjectX.RPCQueue_X.TickSend
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URPCQueue_X::TickSend()
{
	static UFunction* uFnTickSend = nullptr;

	if (!uFnTickSend)
	{
		uFnTickSend = UFunction::FindFunction("Function ProjectX.RPCQueue_X.TickSend");
	}

	URPCQueue_X_execTickSend_Params TickSend_Params;

	uFnTickSend->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTickSend, &TickSend_Params, nullptr);

	uFnTickSend->FunctionFlags |= 0x400;
};

// Function ProjectX.RPCQueue_X.QueueRPC
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void URPCQueue_X::QueueRPC(class URPC_X* RPC)
{
	static UFunction* uFnQueueRPC = nullptr;

	if (!uFnQueueRPC)
	{
		uFnQueueRPC = UFunction::FindFunction("Function ProjectX.RPCQueue_X.QueueRPC");
	}

	URPCQueue_X_execQueueRPC_Params QueueRPC_Params;
	memcpy_s(&QueueRPC_Params.RPC, 0x8, &RPC, 0x8);

	uFnQueueRPC->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnQueueRPC, &QueueRPC_Params, nullptr);

	uFnQueueRPC->FunctionFlags |= 0x400;
};

// Function ProjectX.RPCQueue_X.SendRequestDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UTAsyncResult__PsyNetMessage_X* URPCQueue_X::SendRequestDelegate(class FString Service, class UPsyNetMessage_X* Message)
{
	static UFunction* uFnSendRequestDelegate = nullptr;

	if (!uFnSendRequestDelegate)
	{
		uFnSendRequestDelegate = UFunction::FindFunction("Function ProjectX.RPCQueue_X.SendRequestDelegate");
	}

	URPCQueue_X_execSendRequestDelegate_Params SendRequestDelegate_Params;
	memcpy_s(&SendRequestDelegate_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&SendRequestDelegate_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendRequestDelegate, &SendRequestDelegate_Params, nullptr);

	return SendRequestDelegate_Params.ReturnValue;
};

// Function ProjectX.RPCQueue_X.EventBatchError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class URPCQueue_X*             RPCQueue                       (CPF_Parm | CPF_EditInline)
// class UError*                  Error                          (CPF_Parm)

void URPCQueue_X::EventBatchError(class URPCQueue_X* RPCQueue, class UError* Error)
{
	static UFunction* uFnEventBatchError = nullptr;

	if (!uFnEventBatchError)
	{
		uFnEventBatchError = UFunction::FindFunction("Function ProjectX.RPCQueue_X.EventBatchError");
	}

	URPCQueue_X_execEventBatchError_Params EventBatchError_Params;
	memcpy_s(&EventBatchError_Params.RPCQueue, 0x8, &RPCQueue, 0x8);
	memcpy_s(&EventBatchError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventBatchError, &EventBatchError_Params, nullptr);
};

// Function ProjectX.RPCQueue_X.EventRPCError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class URPCQueue_X*             RPCQueue                       (CPF_Parm | CPF_EditInline)
// class URPC_X*                  RPC                            (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void URPCQueue_X::EventRPCError(class URPCQueue_X* RPCQueue, class URPC_X* RPC, class UError* Error)
{
	static UFunction* uFnEventRPCError = nullptr;

	if (!uFnEventRPCError)
	{
		uFnEventRPCError = UFunction::FindFunction("Function ProjectX.RPCQueue_X.EventRPCError");
	}

	URPCQueue_X_execEventRPCError_Params EventRPCError_Params;
	memcpy_s(&EventRPCError_Params.RPCQueue, 0x8, &RPCQueue, 0x8);
	memcpy_s(&EventRPCError_Params.RPC, 0x8, &RPC, 0x8);
	memcpy_s(&EventRPCError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventRPCError, &EventRPCError_Params, nullptr);
};

// Function ProjectX.RPCQueue_X.EventRPCSuccess
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class URPCQueue_X*             RPCQueue                       (CPF_Parm | CPF_EditInline)
// class URPC_X*                  RPC                            (CPF_Parm)

void URPCQueue_X::EventRPCSuccess(class URPCQueue_X* RPCQueue, class URPC_X* RPC)
{
	static UFunction* uFnEventRPCSuccess = nullptr;

	if (!uFnEventRPCSuccess)
	{
		uFnEventRPCSuccess = UFunction::FindFunction("Function ProjectX.RPCQueue_X.EventRPCSuccess");
	}

	URPCQueue_X_execEventRPCSuccess_Params EventRPCSuccess_Params;
	memcpy_s(&EventRPCSuccess_Params.RPCQueue, 0x8, &RPCQueue, 0x8);
	memcpy_s(&EventRPCSuccess_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnEventRPCSuccess, &EventRPCSuccess_Params, nullptr);
};

// Function ProjectX.SeqAct_NonNativeUpdate_X.Update
// [0x00020801] (FUNC_Final | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          dt                             (CPF_Parm)

bool USeqAct_NonNativeUpdate_X::eventUpdate(float dt)
{
	static UFunction* uFnUpdate = nullptr;

	if (!uFnUpdate)
	{
		uFnUpdate = UFunction::FindFunction("Function ProjectX.SeqAct_NonNativeUpdate_X.Update");
	}

	USeqAct_NonNativeUpdate_X_eventUpdate_Params Update_Params;
	memcpy_s(&Update_Params.dt, 0x4, &dt, 0x4);

	this->ProcessEvent(uFnUpdate, &Update_Params, nullptr);

	return Update_Params.ReturnValue;
};

// Function ProjectX.SequenceCondition_X.Activated
// [0x400020800] (FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void USequenceCondition_X::eventActivated()
{
	static UFunction* uFnActivated = nullptr;

	if (!uFnActivated)
	{
		uFnActivated = UFunction::FindFunction("Function ProjectX.SequenceCondition_X.Activated");
	}

	USequenceCondition_X_eventActivated_Params Activated_Params;

	this->ProcessEvent(uFnActivated, &Activated_Params, nullptr);
};

// Function ProjectX.Serializer_X.DeserializeObject
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Target                         (CPF_Parm)
// TArray<uint8_t>                InData                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USerializer_X::DeserializeObject(class UObject* Target, TArray<uint8_t>& InData)
{
	static UFunction* uFnDeserializeObject = nullptr;

	if (!uFnDeserializeObject)
	{
		uFnDeserializeObject = UFunction::FindFunction("Function ProjectX.Serializer_X.DeserializeObject");
	}

	USerializer_X_execDeserializeObject_Params DeserializeObject_Params;
	memcpy_s(&DeserializeObject_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&DeserializeObject_Params.InData, 0x10, &InData, 0x10);

	uFnDeserializeObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDeserializeObject, &DeserializeObject_Params, nullptr);

	uFnDeserializeObject->FunctionFlags |= 0x400;

	memcpy_s(&InData, 0x10, &DeserializeObject_Params.InData, 0x10);
};

// Function ProjectX.Serializer_X.SerializeObject
// [0x00420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Target                         (CPF_Parm)
// TArray<uint8_t>                OutData                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USerializer_X::SerializeObject(class UObject* Target, TArray<uint8_t>& OutData)
{
	static UFunction* uFnSerializeObject = nullptr;

	if (!uFnSerializeObject)
	{
		uFnSerializeObject = UFunction::FindFunction("Function ProjectX.Serializer_X.SerializeObject");
	}

	USerializer_X_execSerializeObject_Params SerializeObject_Params;
	memcpy_s(&SerializeObject_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&SerializeObject_Params.OutData, 0x10, &OutData, 0x10);

	uFnSerializeObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSerializeObject, &SerializeObject_Params, nullptr);

	uFnSerializeObject->FunctionFlags |= 0x400;

	memcpy_s(&OutData, 0x10, &SerializeObject_Params.OutData, 0x10);
};

// Function ProjectX.JSONSerializer_X.Validate
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Stream                         (CPF_Parm | CPF_NeedCtorLink)

bool UJSONSerializer_X::Validate(class FString Stream)
{
	static UFunction* uFnValidate = nullptr;

	if (!uFnValidate)
	{
		uFnValidate = UFunction::FindFunction("Function ProjectX.JSONSerializer_X.Validate");
	}

	UJSONSerializer_X_execValidate_Params Validate_Params;
	memcpy_s(&Validate_Params.Stream, 0x10, &Stream, 0x10);

	uFnValidate->FunctionFlags |= ~0x400;

	UJSONSerializer_X::StaticClass()->ProcessEvent(uFnValidate, &Validate_Params, nullptr);

	uFnValidate->FunctionFlags |= 0x400;

	return Validate_Params.ReturnValue;
};

// Function ProjectX.JSONSerializer_X.func
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UJSONSerializer_X::func()
{
	static UFunction* uFnfunc = nullptr;

	if (!uFnfunc)
	{
		uFnfunc = UFunction::FindFunction("Function ProjectX.JSONSerializer_X.func");
	}

	UJSONSerializer_X_execfunc_Params func_Params;

	uFnfunc->FunctionFlags |= ~0x400;

	UJSONSerializer_X::StaticClass()->ProcessEvent(uFnfunc, &func_Params, nullptr);

	uFnfunc->FunctionFlags |= 0x400;

	return func_Params.ReturnValue;
};

// Function ProjectX.JSONSerializer_X.DecodeObject
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Target                         (CPF_Parm)
// class FString                  Stream                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UJSONSerializer_X::DecodeObject(class UObject* Target, class FString& Stream)
{
	static UFunction* uFnDecodeObject = nullptr;

	if (!uFnDecodeObject)
	{
		uFnDecodeObject = UFunction::FindFunction("Function ProjectX.JSONSerializer_X.DecodeObject");
	}

	UJSONSerializer_X_execDecodeObject_Params DecodeObject_Params;
	memcpy_s(&DecodeObject_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&DecodeObject_Params.Stream, 0x10, &Stream, 0x10);

	uFnDecodeObject->FunctionFlags |= ~0x400;

	UJSONSerializer_X::StaticClass()->ProcessEvent(uFnDecodeObject, &DecodeObject_Params, nullptr);

	uFnDecodeObject->FunctionFlags |= 0x400;

	memcpy_s(&Stream, 0x10, &DecodeObject_Params.Stream, 0x10);
};

// Function ProjectX.JSONSerializer_X.EncodeObject
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Target                         (CPF_Parm)
// class FString                  Stream                         (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UJSONSerializer_X::EncodeObject(class UObject* Target, class FString& Stream)
{
	static UFunction* uFnEncodeObject = nullptr;

	if (!uFnEncodeObject)
	{
		uFnEncodeObject = UFunction::FindFunction("Function ProjectX.JSONSerializer_X.EncodeObject");
	}

	UJSONSerializer_X_execEncodeObject_Params EncodeObject_Params;
	memcpy_s(&EncodeObject_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&EncodeObject_Params.Stream, 0x10, &Stream, 0x10);

	uFnEncodeObject->FunctionFlags |= ~0x400;

	UJSONSerializer_X::StaticClass()->ProcessEvent(uFnEncodeObject, &EncodeObject_Params, nullptr);

	uFnEncodeObject->FunctionFlags |= 0x400;

	memcpy_s(&Stream, 0x10, &EncodeObject_Params.Stream, 0x10);
};

// Function ProjectX.JSONSerializer_X.DeserializeObject
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Target                         (CPF_Parm)
// TArray<uint8_t>                InData                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UJSONSerializer_X::DeserializeObject(class UObject* Target, TArray<uint8_t>& InData)
{
	static UFunction* uFnDeserializeObject = nullptr;

	if (!uFnDeserializeObject)
	{
		uFnDeserializeObject = UFunction::FindFunction("Function ProjectX.JSONSerializer_X.DeserializeObject");
	}

	UJSONSerializer_X_execDeserializeObject_Params DeserializeObject_Params;
	memcpy_s(&DeserializeObject_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&DeserializeObject_Params.InData, 0x10, &InData, 0x10);

	uFnDeserializeObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDeserializeObject, &DeserializeObject_Params, nullptr);

	uFnDeserializeObject->FunctionFlags |= 0x400;

	memcpy_s(&InData, 0x10, &DeserializeObject_Params.InData, 0x10);
};

// Function ProjectX.JSONSerializer_X.SerializeObject
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Target                         (CPF_Parm)
// TArray<uint8_t>                OutData                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UJSONSerializer_X::SerializeObject(class UObject* Target, TArray<uint8_t>& OutData)
{
	static UFunction* uFnSerializeObject = nullptr;

	if (!uFnSerializeObject)
	{
		uFnSerializeObject = UFunction::FindFunction("Function ProjectX.JSONSerializer_X.SerializeObject");
	}

	UJSONSerializer_X_execSerializeObject_Params SerializeObject_Params;
	memcpy_s(&SerializeObject_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&SerializeObject_Params.OutData, 0x10, &OutData, 0x10);

	uFnSerializeObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSerializeObject, &SerializeObject_Params, nullptr);

	uFnSerializeObject->FunctionFlags |= 0x400;

	memcpy_s(&OutData, 0x10, &SerializeObject_Params.OutData, 0x10);
};

// Function ProjectX.ObjectSerializer_X.DeserializeObject
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Target                         (CPF_Parm)
// TArray<uint8_t>                InData                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UObjectSerializer_X::DeserializeObject(class UObject* Target, TArray<uint8_t>& InData)
{
	static UFunction* uFnDeserializeObject = nullptr;

	if (!uFnDeserializeObject)
	{
		uFnDeserializeObject = UFunction::FindFunction("Function ProjectX.ObjectSerializer_X.DeserializeObject");
	}

	UObjectSerializer_X_execDeserializeObject_Params DeserializeObject_Params;
	memcpy_s(&DeserializeObject_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&DeserializeObject_Params.InData, 0x10, &InData, 0x10);

	uFnDeserializeObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDeserializeObject, &DeserializeObject_Params, nullptr);

	uFnDeserializeObject->FunctionFlags |= 0x400;

	memcpy_s(&InData, 0x10, &DeserializeObject_Params.InData, 0x10);
};

// Function ProjectX.ObjectSerializer_X.SerializeObject
// [0x400420400] (FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Target                         (CPF_Parm)
// TArray<uint8_t>                OutData                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UObjectSerializer_X::SerializeObject(class UObject* Target, TArray<uint8_t>& OutData)
{
	static UFunction* uFnSerializeObject = nullptr;

	if (!uFnSerializeObject)
	{
		uFnSerializeObject = UFunction::FindFunction("Function ProjectX.ObjectSerializer_X.SerializeObject");
	}

	UObjectSerializer_X_execSerializeObject_Params SerializeObject_Params;
	memcpy_s(&SerializeObject_Params.Target, 0x8, &Target, 0x8);
	memcpy_s(&SerializeObject_Params.OutData, 0x10, &OutData, 0x10);

	uFnSerializeObject->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSerializeObject, &SerializeObject_Params, nullptr);

	uFnSerializeObject->FunctionFlags |= 0x400;

	memcpy_s(&OutData, 0x10, &SerializeObject_Params.OutData, 0x10);
};

// Function ProjectX.OnlineGame_Base_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGame_Base_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.PrintDebugInfo");
	}

	UOnlineGame_Base_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.HasInternetConnection
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGame_Base_X::HasInternetConnection()
{
	static UFunction* uFnHasInternetConnection = nullptr;

	if (!uFnHasInternetConnection)
	{
		uFnHasInternetConnection = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.HasInternetConnection");
	}

	UOnlineGame_Base_X_execHasInternetConnection_Params HasInternetConnection_Params;

	this->ProcessEvent(uFnHasInternetConnection, &HasInternetConnection_Params, nullptr);

	return HasInternetConnection_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.GetBeaconPort
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGame_Base_X::GetBeaconPort()
{
	static UFunction* uFnGetBeaconPort = nullptr;

	if (!uFnGetBeaconPort)
	{
		uFnGetBeaconPort = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.GetBeaconPort");
	}

	UOnlineGame_Base_X_execGetBeaconPort_Params GetBeaconPort_Params;

	uFnGetBeaconPort->FunctionFlags |= ~0x400;

	UOnlineGame_Base_X::StaticClass()->ProcessEvent(uFnGetBeaconPort, &GetBeaconPort_Params, nullptr);

	uFnGetBeaconPort->FunctionFlags |= 0x400;

	return GetBeaconPort_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.GetBeaconExternalHostAddress
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// unsigned long                  bWithPort                      (CPF_OptionalParm | CPF_Parm)

class FString UOnlineGame_Base_X::GetBeaconExternalHostAddress(unsigned long bWithPort)
{
	static UFunction* uFnGetBeaconExternalHostAddress = nullptr;

	if (!uFnGetBeaconExternalHostAddress)
	{
		uFnGetBeaconExternalHostAddress = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.GetBeaconExternalHostAddress");
	}

	UOnlineGame_Base_X_execGetBeaconExternalHostAddress_Params GetBeaconExternalHostAddress_Params;
	GetBeaconExternalHostAddress_Params.bWithPort = bWithPort;

	uFnGetBeaconExternalHostAddress->FunctionFlags |= ~0x400;

	UOnlineGame_Base_X::StaticClass()->ProcessEvent(uFnGetBeaconExternalHostAddress, &GetBeaconExternalHostAddress_Params, nullptr);

	uFnGetBeaconExternalHostAddress->FunctionFlags |= 0x400;

	return GetBeaconExternalHostAddress_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.GetBeaconLocalHostAddress
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// unsigned long                  bWithPort                      (CPF_OptionalParm | CPF_Parm)

class FString UOnlineGame_Base_X::GetBeaconLocalHostAddress(unsigned long bWithPort)
{
	static UFunction* uFnGetBeaconLocalHostAddress = nullptr;

	if (!uFnGetBeaconLocalHostAddress)
	{
		uFnGetBeaconLocalHostAddress = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.GetBeaconLocalHostAddress");
	}

	UOnlineGame_Base_X_execGetBeaconLocalHostAddress_Params GetBeaconLocalHostAddress_Params;
	GetBeaconLocalHostAddress_Params.bWithPort = bWithPort;

	uFnGetBeaconLocalHostAddress->FunctionFlags |= ~0x400;

	UOnlineGame_Base_X::StaticClass()->ProcessEvent(uFnGetBeaconLocalHostAddress, &GetBeaconLocalHostAddress_Params, nullptr);

	uFnGetBeaconLocalHostAddress->FunctionFlags |= 0x400;

	return GetBeaconLocalHostAddress_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.GetUdpPort
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGame_Base_X::GetUdpPort()
{
	static UFunction* uFnGetUdpPort = nullptr;

	if (!uFnGetUdpPort)
	{
		uFnGetUdpPort = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.GetUdpPort");
	}

	UOnlineGame_Base_X_execGetUdpPort_Params GetUdpPort_Params;

	uFnGetUdpPort->FunctionFlags |= ~0x400;

	UOnlineGame_Base_X::StaticClass()->ProcessEvent(uFnGetUdpPort, &GetUdpPort_Params, nullptr);

	uFnGetUdpPort->FunctionFlags |= 0x400;

	return GetUdpPort_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.GetUdpExternalHostAddress
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// unsigned long                  bWithPort                      (CPF_OptionalParm | CPF_Parm)

class FString UOnlineGame_Base_X::GetUdpExternalHostAddress(unsigned long bWithPort)
{
	static UFunction* uFnGetUdpExternalHostAddress = nullptr;

	if (!uFnGetUdpExternalHostAddress)
	{
		uFnGetUdpExternalHostAddress = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.GetUdpExternalHostAddress");
	}

	UOnlineGame_Base_X_execGetUdpExternalHostAddress_Params GetUdpExternalHostAddress_Params;
	GetUdpExternalHostAddress_Params.bWithPort = bWithPort;

	uFnGetUdpExternalHostAddress->FunctionFlags |= ~0x400;

	UOnlineGame_Base_X::StaticClass()->ProcessEvent(uFnGetUdpExternalHostAddress, &GetUdpExternalHostAddress_Params, nullptr);

	uFnGetUdpExternalHostAddress->FunctionFlags |= 0x400;

	return GetUdpExternalHostAddress_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.GetUdpLocalHostAddress
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// unsigned long                  bWithPort                      (CPF_OptionalParm | CPF_Parm)

class FString UOnlineGame_Base_X::GetUdpLocalHostAddress(unsigned long bWithPort)
{
	static UFunction* uFnGetUdpLocalHostAddress = nullptr;

	if (!uFnGetUdpLocalHostAddress)
	{
		uFnGetUdpLocalHostAddress = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.GetUdpLocalHostAddress");
	}

	UOnlineGame_Base_X_execGetUdpLocalHostAddress_Params GetUdpLocalHostAddress_Params;
	GetUdpLocalHostAddress_Params.bWithPort = bWithPort;

	uFnGetUdpLocalHostAddress->FunctionFlags |= ~0x400;

	UOnlineGame_Base_X::StaticClass()->ProcessEvent(uFnGetUdpLocalHostAddress, &GetUdpLocalHostAddress_Params, nullptr);

	uFnGetUdpLocalHostAddress->FunctionFlags |= 0x400;

	return GetUdpLocalHostAddress_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.HandleInternetConnectionChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bConnected                     (CPF_Parm)

void UOnlineGame_Base_X::HandleInternetConnectionChanged(unsigned long bConnected)
{
	static UFunction* uFnHandleInternetConnectionChanged = nullptr;

	if (!uFnHandleInternetConnectionChanged)
	{
		uFnHandleInternetConnectionChanged = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.HandleInternetConnectionChanged");
	}

	UOnlineGame_Base_X_execHandleInternetConnectionChanged_Params HandleInternetConnectionChanged_Params;
	HandleInternetConnectionChanged_Params.bConnected = bConnected;

	this->ProcessEvent(uFnHandleInternetConnectionChanged, &HandleInternetConnectionChanged_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.HandleConnectionStatusChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ConnectionStatus               (CPF_Parm)

void UOnlineGame_Base_X::HandleConnectionStatusChanged(uint8_t ConnectionStatus)
{
	static UFunction* uFnHandleConnectionStatusChanged = nullptr;

	if (!uFnHandleConnectionStatusChanged)
	{
		uFnHandleConnectionStatusChanged = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.HandleConnectionStatusChanged");
	}

	UOnlineGame_Base_X_execHandleConnectionStatusChanged_Params HandleConnectionStatusChanged_Params;
	memcpy_s(&HandleConnectionStatusChanged_Params.ConnectionStatus, 0x1, &ConnectionStatus, 0x1);

	this->ProcessEvent(uFnHandleConnectionStatusChanged, &HandleConnectionStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.SetDefaultSearchType
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UClass*                  OnlineSearchClass              (CPF_Parm)

void UOnlineGame_Base_X::SetDefaultSearchType(class UClass* OnlineSearchClass)
{
	static UFunction* uFnSetDefaultSearchType = nullptr;

	if (!uFnSetDefaultSearchType)
	{
		uFnSetDefaultSearchType = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.SetDefaultSearchType");
	}

	UOnlineGame_Base_X_execSetDefaultSearchType_Params SetDefaultSearchType_Params;
	memcpy_s(&SetDefaultSearchType_Params.OnlineSearchClass, 0x8, &OnlineSearchClass, 0x8);

	uFnSetDefaultSearchType->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetDefaultSearchType, &SetDefaultSearchType_Params, nullptr);

	uFnSetDefaultSearchType->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineGame_Base_X.KickAllPlayers
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Reason                         (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGame_Base_X::KickAllPlayers(class FString Reason)
{
	static UFunction* uFnKickAllPlayers = nullptr;

	if (!uFnKickAllPlayers)
	{
		uFnKickAllPlayers = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.KickAllPlayers");
	}

	UOnlineGame_Base_X_execKickAllPlayers_Params KickAllPlayers_Params;
	memcpy_s(&KickAllPlayers_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnKickAllPlayers, &KickAllPlayers_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.DelayedShutdownServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGame_Base_X::DelayedShutdownServer()
{
	static UFunction* uFnDelayedShutdownServer = nullptr;

	if (!uFnDelayedShutdownServer)
	{
		uFnDelayedShutdownServer = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.DelayedShutdownServer");
	}

	UOnlineGame_Base_X_execDelayedShutdownServer_Params DelayedShutdownServer_Params;

	this->ProcessEvent(uFnDelayedShutdownServer, &DelayedShutdownServer_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.OnExit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGame_Base_X::OnExit()
{
	static UFunction* uFnOnExit = nullptr;

	if (!uFnOnExit)
	{
		uFnOnExit = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.OnExit");
	}

	UOnlineGame_Base_X_execOnExit_Params OnExit_Params;

	this->ProcessEvent(uFnOnExit, &OnExit_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.GetPlaylistPlayerCount
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGameSettingPlaylist_X*  Playlist                       (CPF_Parm)

int32_t UOnlineGame_Base_X::GetPlaylistPlayerCount(class UGameSettingPlaylist_X* Playlist)
{
	static UFunction* uFnGetPlaylistPlayerCount = nullptr;

	if (!uFnGetPlaylistPlayerCount)
	{
		uFnGetPlaylistPlayerCount = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.GetPlaylistPlayerCount");
	}

	UOnlineGame_Base_X_execGetPlaylistPlayerCount_Params GetPlaylistPlayerCount_Params;
	memcpy_s(&GetPlaylistPlayerCount_Params.Playlist, 0x8, &Playlist, 0x8);

	this->ProcessEvent(uFnGetPlaylistPlayerCount, &GetPlaylistPlayerCount_Params, nullptr);

	return GetPlaylistPlayerCount_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.OnNewSettingsChosen
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlaylistId                     (CPF_Parm)

void UOnlineGame_Base_X::OnNewSettingsChosen(int32_t PlaylistId)
{
	static UFunction* uFnOnNewSettingsChosen = nullptr;

	if (!uFnOnNewSettingsChosen)
	{
		uFnOnNewSettingsChosen = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.OnNewSettingsChosen");
	}

	UOnlineGame_Base_X_execOnNewSettingsChosen_Params OnNewSettingsChosen_Params;
	memcpy_s(&OnNewSettingsChosen_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnOnNewSettingsChosen, &OnNewSettingsChosen_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.UpdateGameSettingsPlayerCount
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        NumPlayers                     (CPF_Parm)

void UOnlineGame_Base_X::UpdateGameSettingsPlayerCount(int32_t NumPlayers)
{
	static UFunction* uFnUpdateGameSettingsPlayerCount = nullptr;

	if (!uFnUpdateGameSettingsPlayerCount)
	{
		uFnUpdateGameSettingsPlayerCount = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.UpdateGameSettingsPlayerCount");
	}

	UOnlineGame_Base_X_execUpdateGameSettingsPlayerCount_Params UpdateGameSettingsPlayerCount_Params;
	memcpy_s(&UpdateGameSettingsPlayerCount_Params.NumPlayers, 0x4, &NumPlayers, 0x4);

	this->ProcessEvent(uFnUpdateGameSettingsPlayerCount, &UpdateGameSettingsPlayerCount_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.UpdateGameSettings
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameSettings_X*   InGameSettings                 (CPF_Parm)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGame_Base_X::UpdateGameSettings(class UOnlineGameSettings_X* InGameSettings, class FString Options)
{
	static UFunction* uFnUpdateGameSettings = nullptr;

	if (!uFnUpdateGameSettings)
	{
		uFnUpdateGameSettings = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.UpdateGameSettings");
	}

	UOnlineGame_Base_X_execUpdateGameSettings_Params UpdateGameSettings_Params;
	memcpy_s(&UpdateGameSettings_Params.InGameSettings, 0x8, &InGameSettings, 0x8);
	memcpy_s(&UpdateGameSettings_Params.Options, 0x10, &Options, 0x10);

	this->ProcessEvent(uFnUpdateGameSettings, &UpdateGameSettings_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.CreateOnlineGameSettings
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameSettings_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Options                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class UOnlineGameSettings_X* UOnlineGame_Base_X::CreateOnlineGameSettings(class FString Options)
{
	static UFunction* uFnCreateOnlineGameSettings = nullptr;

	if (!uFnCreateOnlineGameSettings)
	{
		uFnCreateOnlineGameSettings = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.CreateOnlineGameSettings");
	}

	UOnlineGame_Base_X_execCreateOnlineGameSettings_Params CreateOnlineGameSettings_Params;
	memcpy_s(&CreateOnlineGameSettings_Params.Options, 0x10, &Options, 0x10);

	this->ProcessEvent(uFnCreateOnlineGameSettings, &CreateOnlineGameSettings_Params, nullptr);

	return CreateOnlineGameSettings_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_Base_X.OnNewGameInfoCreated
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             Game                           (CPF_Parm)

void UOnlineGame_Base_X::OnNewGameInfoCreated(class AGameInfo_X* Game)
{
	static UFunction* uFnOnNewGameInfoCreated = nullptr;

	if (!uFnOnNewGameInfoCreated)
	{
		uFnOnNewGameInfoCreated = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.OnNewGameInfoCreated");
	}

	UOnlineGame_Base_X_execOnNewGameInfoCreated_Params OnNewGameInfoCreated_Params;
	memcpy_s(&OnNewGameInfoCreated_Params.Game, 0x8, &Game, 0x8);

	this->ProcessEvent(uFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.InitOnlineSubsystemInterfaces
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGame_Base_X::InitOnlineSubsystemInterfaces()
{
	static UFunction* uFnInitOnlineSubsystemInterfaces = nullptr;

	if (!uFnInitOnlineSubsystemInterfaces)
	{
		uFnInitOnlineSubsystemInterfaces = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.InitOnlineSubsystemInterfaces");
	}

	UOnlineGame_Base_X_execInitOnlineSubsystemInterfaces_Params InitOnlineSubsystemInterfaces_Params;

	uFnInitOnlineSubsystemInterfaces->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitOnlineSubsystemInterfaces, &InitOnlineSubsystemInterfaces_Params, nullptr);

	uFnInitOnlineSubsystemInterfaces->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineGame_Base_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGame_Base_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.OnInit");
	}

	UOnlineGame_Base_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGame_Base_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.Construct");
	}

	UOnlineGame_Base_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.OnlineGame_Base_X.EventInternetConnectionChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bConnected                     (CPF_Parm)

void UOnlineGame_Base_X::EventInternetConnectionChanged(unsigned long bConnected)
{
	static UFunction* uFnEventInternetConnectionChanged = nullptr;

	if (!uFnEventInternetConnectionChanged)
	{
		uFnEventInternetConnectionChanged = UFunction::FindFunction("Function ProjectX.OnlineGame_Base_X.EventInternetConnectionChanged");
	}

	UOnlineGame_Base_X_execEventInternetConnectionChanged_Params EventInternetConnectionChanged_Params;
	EventInternetConnectionChanged_Params.bConnected = bConnected;

	this->ProcessEvent(uFnEventInternetConnectionChanged, &EventInternetConnectionChanged_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGame_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGame_X.PrintDebugInfo");
	}

	UOnlineGame_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.GetOnlinePlayerFromEpicId
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  EpicAccountId                  (CPF_Parm | CPF_NeedCtorLink)

class UOnlinePlayer_X* UOnlineGame_X::GetOnlinePlayerFromEpicId(class FString EpicAccountId)
{
	static UFunction* uFnGetOnlinePlayerFromEpicId = nullptr;

	if (!uFnGetOnlinePlayerFromEpicId)
	{
		uFnGetOnlinePlayerFromEpicId = UFunction::FindFunction("Function ProjectX.OnlineGame_X.GetOnlinePlayerFromEpicId");
	}

	UOnlineGame_X_execGetOnlinePlayerFromEpicId_Params GetOnlinePlayerFromEpicId_Params;
	memcpy_s(&GetOnlinePlayerFromEpicId_Params.EpicAccountId, 0x10, &EpicAccountId, 0x10);

	this->ProcessEvent(uFnGetOnlinePlayerFromEpicId, &GetOnlinePlayerFromEpicId_Params, nullptr);

	return GetOnlinePlayerFromEpicId_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.HandlePublicIPComplete
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPublicIP_X*      RPC                            (CPF_Parm)

void UOnlineGame_X::HandlePublicIPComplete(class URPC_GetPublicIP_X* RPC)
{
	static UFunction* uFnHandlePublicIPComplete = nullptr;

	if (!uFnHandlePublicIPComplete)
	{
		uFnHandlePublicIPComplete = UFunction::FindFunction("Function ProjectX.OnlineGame_X.HandlePublicIPComplete");
	}

	UOnlineGame_X_execHandlePublicIPComplete_Params HandlePublicIPComplete_Params;
	memcpy_s(&HandlePublicIPComplete_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandlePublicIPComplete, &HandlePublicIPComplete_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.HandlePsyNetLogin
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UOnlineGame_X::HandlePsyNetLogin(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnHandlePsyNetLogin = nullptr;

	if (!uFnHandlePsyNetLogin)
	{
		uFnHandlePsyNetLogin = UFunction::FindFunction("Function ProjectX.OnlineGame_X.HandlePsyNetLogin");
	}

	UOnlineGame_X_execHandlePsyNetLogin_Params HandlePsyNetLogin_Params;
	memcpy_s(&HandlePsyNetLogin_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnHandlePsyNetLogin, &HandlePsyNetLogin_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.NotifyPlayerPsyNetLogout
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGame_X::NotifyPlayerPsyNetLogout(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyPlayerPsyNetLogout = nullptr;

	if (!uFnNotifyPlayerPsyNetLogout)
	{
		uFnNotifyPlayerPsyNetLogout = UFunction::FindFunction("Function ProjectX.OnlineGame_X.NotifyPlayerPsyNetLogout");
	}

	UOnlineGame_X_execNotifyPlayerPsyNetLogout_Params NotifyPlayerPsyNetLogout_Params;
	memcpy_s(&NotifyPlayerPsyNetLogout_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyPlayerPsyNetLogout, &NotifyPlayerPsyNetLogout_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.NotifyPlayerPsyNetLogin
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGame_X::NotifyPlayerPsyNetLogin(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyPlayerPsyNetLogin = nullptr;

	if (!uFnNotifyPlayerPsyNetLogin)
	{
		uFnNotifyPlayerPsyNetLogin = UFunction::FindFunction("Function ProjectX.OnlineGame_X.NotifyPlayerPsyNetLogin");
	}

	UOnlineGame_X_execNotifyPlayerPsyNetLogin_Params NotifyPlayerPsyNetLogin_Params;
	memcpy_s(&NotifyPlayerPsyNetLogin_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyPlayerPsyNetLogin, &NotifyPlayerPsyNetLogin_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.IsSignedIn
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ControllerId                   (CPF_Parm)

bool UOnlineGame_X::IsSignedIn(int32_t ControllerId)
{
	static UFunction* uFnIsSignedIn = nullptr;

	if (!uFnIsSignedIn)
	{
		uFnIsSignedIn = UFunction::FindFunction("Function ProjectX.OnlineGame_X.IsSignedIn");
	}

	UOnlineGame_X_execIsSignedIn_Params IsSignedIn_Params;
	memcpy_s(&IsSignedIn_Params.ControllerId, 0x4, &ControllerId, 0x4);

	this->ProcessEvent(uFnIsSignedIn, &IsSignedIn_Params, nullptr);

	return IsSignedIn_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.CheckUpToDate
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  Error                          (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool UOnlineGame_X::CheckUpToDate(class UError*& Error)
{
	static UFunction* uFnCheckUpToDate = nullptr;

	if (!uFnCheckUpToDate)
	{
		uFnCheckUpToDate = UFunction::FindFunction("Function ProjectX.OnlineGame_X.CheckUpToDate");
	}

	UOnlineGame_X_execCheckUpToDate_Params CheckUpToDate_Params;
	memcpy_s(&CheckUpToDate_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnCheckUpToDate, &CheckUpToDate_Params, nullptr);

	memcpy_s(&Error, 0x8, &CheckUpToDate_Params.Error, 0x8);

	return CheckUpToDate_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.CheckNotTooYoung
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  Error                          (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool UOnlineGame_X::CheckNotTooYoung(class UError*& Error)
{
	static UFunction* uFnCheckNotTooYoung = nullptr;

	if (!uFnCheckNotTooYoung)
	{
		uFnCheckNotTooYoung = UFunction::FindFunction("Function ProjectX.OnlineGame_X.CheckNotTooYoung");
	}

	UOnlineGame_X_execCheckNotTooYoung_Params CheckNotTooYoung_Params;
	memcpy_s(&CheckNotTooYoung_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnCheckNotTooYoung, &CheckNotTooYoung_Params, nullptr);

	memcpy_s(&Error, 0x8, &CheckNotTooYoung_Params.Error, 0x8);

	return CheckNotTooYoung_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.GetPsyNetLoginError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UOnlinePlayer_X*         OnlinePlayer                   (CPF_Parm)

class UError* UOnlineGame_X::GetPsyNetLoginError(class UOnlinePlayer_X* OnlinePlayer)
{
	static UFunction* uFnGetPsyNetLoginError = nullptr;

	if (!uFnGetPsyNetLoginError)
	{
		uFnGetPsyNetLoginError = UFunction::FindFunction("Function ProjectX.OnlineGame_X.GetPsyNetLoginError");
	}

	UOnlineGame_X_execGetPsyNetLoginError_Params GetPsyNetLoginError_Params;
	memcpy_s(&GetPsyNetLoginError_Params.OnlinePlayer, 0x8, &OnlinePlayer, 0x8);

	this->ProcessEvent(uFnGetPsyNetLoginError, &GetPsyNetLoginError_Params, nullptr);

	return GetPsyNetLoginError_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.HandleLoginCompleted
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)
// class UAsyncTask*              Task                           (CPF_Parm)

void UOnlineGame_X::HandleLoginCompleted(class UOnlinePlayerAuthentication_X* Auth, class UAsyncTask* Task)
{
	static UFunction* uFnHandleLoginCompleted = nullptr;

	if (!uFnHandleLoginCompleted)
	{
		uFnHandleLoginCompleted = UFunction::FindFunction("Function ProjectX.OnlineGame_X.HandleLoginCompleted");
	}

	UOnlineGame_X_execHandleLoginCompleted_Params HandleLoginCompleted_Params;
	memcpy_s(&HandleLoginCompleted_Params.Auth, 0x8, &Auth, 0x8);
	memcpy_s(&HandleLoginCompleted_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnHandleLoginCompleted, &HandleLoginCompleted_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.CheckPsyNetConnection
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAsyncTask* UOnlineGame_X::CheckPsyNetConnection()
{
	static UFunction* uFnCheckPsyNetConnection = nullptr;

	if (!uFnCheckPsyNetConnection)
	{
		uFnCheckPsyNetConnection = UFunction::FindFunction("Function ProjectX.OnlineGame_X.CheckPsyNetConnection");
	}

	UOnlineGame_X_execCheckPsyNetConnection_Params CheckPsyNetConnection_Params;

	this->ProcessEvent(uFnCheckPsyNetConnection, &CheckPsyNetConnection_Params, nullptr);

	return CheckPsyNetConnection_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.RequiresSystemNetworkErrorHandling
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGame_X::RequiresSystemNetworkErrorHandling()
{
	static UFunction* uFnRequiresSystemNetworkErrorHandling = nullptr;

	if (!uFnRequiresSystemNetworkErrorHandling)
	{
		uFnRequiresSystemNetworkErrorHandling = UFunction::FindFunction("Function ProjectX.OnlineGame_X.RequiresSystemNetworkErrorHandling");
	}

	UOnlineGame_X_execRequiresSystemNetworkErrorHandling_Params RequiresSystemNetworkErrorHandling_Params;

	this->ProcessEvent(uFnRequiresSystemNetworkErrorHandling, &RequiresSystemNetworkErrorHandling_Params, nullptr);

	return RequiresSystemNetworkErrorHandling_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.ValidateUserOnlineAccount
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGame_X::ValidateUserOnlineAccount()
{
	static UFunction* uFnValidateUserOnlineAccount = nullptr;

	if (!uFnValidateUserOnlineAccount)
	{
		uFnValidateUserOnlineAccount = UFunction::FindFunction("Function ProjectX.OnlineGame_X.ValidateUserOnlineAccount");
	}

	UOnlineGame_X_execValidateUserOnlineAccount_Params ValidateUserOnlineAccount_Params;

	this->ProcessEvent(uFnValidateUserOnlineAccount, &ValidateUserOnlineAccount_Params, nullptr);

	return ValidateUserOnlineAccount_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.CheckInternetConnection
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  Error                          (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool UOnlineGame_X::CheckInternetConnection(class UError*& Error)
{
	static UFunction* uFnCheckInternetConnection = nullptr;

	if (!uFnCheckInternetConnection)
	{
		uFnCheckInternetConnection = UFunction::FindFunction("Function ProjectX.OnlineGame_X.CheckInternetConnection");
	}

	UOnlineGame_X_execCheckInternetConnection_Params CheckInternetConnection_Params;
	memcpy_s(&CheckInternetConnection_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnCheckInternetConnection, &CheckInternetConnection_Params, nullptr);

	memcpy_s(&Error, 0x8, &CheckInternetConnection_Params.Error, 0x8);

	return CheckInternetConnection_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.IsOnlinePlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGame_X::IsOnlinePlayerID(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnIsOnlinePlayerID = nullptr;

	if (!uFnIsOnlinePlayerID)
	{
		uFnIsOnlinePlayerID = UFunction::FindFunction("Function ProjectX.OnlineGame_X.IsOnlinePlayerID");
	}

	UOnlineGame_X_execIsOnlinePlayerID_Params IsOnlinePlayerID_Params;
	memcpy_s(&IsOnlinePlayerID_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnIsOnlinePlayerID, &IsOnlinePlayerID_Params, nullptr);

	return IsOnlinePlayerID_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.GetOnlinePlayerByID
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UOnlinePlayer_X* UOnlineGame_X::eventGetOnlinePlayerByID(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetOnlinePlayerByID = nullptr;

	if (!uFnGetOnlinePlayerByID)
	{
		uFnGetOnlinePlayerByID = UFunction::FindFunction("Function ProjectX.OnlineGame_X.GetOnlinePlayerByID");
	}

	UOnlineGame_X_eventGetOnlinePlayerByID_Params GetOnlinePlayerByID_Params;
	memcpy_s(&GetOnlinePlayerByID_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetOnlinePlayerByID, &GetOnlinePlayerByID_Params, nullptr);

	return GetOnlinePlayerByID_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.OnNewSettingsChosen
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlaylistId                     (CPF_Parm)

void UOnlineGame_X::OnNewSettingsChosen(int32_t PlaylistId)
{
	static UFunction* uFnOnNewSettingsChosen = nullptr;

	if (!uFnOnNewSettingsChosen)
	{
		uFnOnNewSettingsChosen = UFunction::FindFunction("Function ProjectX.OnlineGame_X.OnNewSettingsChosen");
	}

	UOnlineGame_X_execOnNewSettingsChosen_Params OnNewSettingsChosen_Params;
	memcpy_s(&OnNewSettingsChosen_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnOnNewSettingsChosen, &OnNewSettingsChosen_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.GetPrimaryPlayerID
// [0x00820803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGame_X::eventGetPrimaryPlayerID()
{
	static UFunction* uFnGetPrimaryPlayerID = nullptr;

	if (!uFnGetPrimaryPlayerID)
	{
		uFnGetPrimaryPlayerID = UFunction::FindFunction("Function ProjectX.OnlineGame_X.GetPrimaryPlayerID");
	}

	UOnlineGame_X_eventGetPrimaryPlayerID_Params GetPrimaryPlayerID_Params;

	this->ProcessEvent(uFnGetPrimaryPlayerID, &GetPrimaryPlayerID_Params, nullptr);

	return GetPrimaryPlayerID_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.GetPrimaryPlayer
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlinePlayer_X* UOnlineGame_X::eventGetPrimaryPlayer()
{
	static UFunction* uFnGetPrimaryPlayer = nullptr;

	if (!uFnGetPrimaryPlayer)
	{
		uFnGetPrimaryPlayer = UFunction::FindFunction("Function ProjectX.OnlineGame_X.GetPrimaryPlayer");
	}

	UOnlineGame_X_eventGetPrimaryPlayer_Params GetPrimaryPlayer_Params;

	this->ProcessEvent(uFnGetPrimaryPlayer, &GetPrimaryPlayer_Params, nullptr);

	return GetPrimaryPlayer_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.RemoveOnlinePlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer_X*          LocalPlayer                    (CPF_Parm)

void UOnlineGame_X::RemoveOnlinePlayer(class ULocalPlayer_X* LocalPlayer)
{
	static UFunction* uFnRemoveOnlinePlayer = nullptr;

	if (!uFnRemoveOnlinePlayer)
	{
		uFnRemoveOnlinePlayer = UFunction::FindFunction("Function ProjectX.OnlineGame_X.RemoveOnlinePlayer");
	}

	UOnlineGame_X_execRemoveOnlinePlayer_Params RemoveOnlinePlayer_Params;
	memcpy_s(&RemoveOnlinePlayer_Params.LocalPlayer, 0x8, &LocalPlayer, 0x8);

	this->ProcessEvent(uFnRemoveOnlinePlayer, &RemoveOnlinePlayer_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.AddOnlinePlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         OnlinePlayer                   (CPF_Parm)

void UOnlineGame_X::AddOnlinePlayer(class UOnlinePlayer_X* OnlinePlayer)
{
	static UFunction* uFnAddOnlinePlayer = nullptr;

	if (!uFnAddOnlinePlayer)
	{
		uFnAddOnlinePlayer = UFunction::FindFunction("Function ProjectX.OnlineGame_X.AddOnlinePlayer");
	}

	UOnlineGame_X_execAddOnlinePlayer_Params AddOnlinePlayer_Params;
	memcpy_s(&AddOnlinePlayer_Params.OnlinePlayer, 0x8, &OnlinePlayer, 0x8);

	this->ProcessEvent(uFnAddOnlinePlayer, &AddOnlinePlayer_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.CreateOnlinePlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULocalPlayer_X*          LocalPlayer                    (CPF_Parm)

class UOnlinePlayer_X* UOnlineGame_X::CreateOnlinePlayer(class ULocalPlayer_X* LocalPlayer)
{
	static UFunction* uFnCreateOnlinePlayer = nullptr;

	if (!uFnCreateOnlinePlayer)
	{
		uFnCreateOnlinePlayer = UFunction::FindFunction("Function ProjectX.OnlineGame_X.CreateOnlinePlayer");
	}

	UOnlineGame_X_execCreateOnlinePlayer_Params CreateOnlinePlayer_Params;
	memcpy_s(&CreateOnlinePlayer_Params.LocalPlayer, 0x8, &LocalPlayer, 0x8);

	this->ProcessEvent(uFnCreateOnlinePlayer, &CreateOnlinePlayer_Params, nullptr);

	return CreateOnlinePlayer_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.SetPlayedWith
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGame_X::SetPlayedWith(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSetPlayedWith = nullptr;

	if (!uFnSetPlayedWith)
	{
		uFnSetPlayedWith = UFunction::FindFunction("Function ProjectX.OnlineGame_X.SetPlayedWith");
	}

	UOnlineGame_X_execSetPlayedWith_Params SetPlayedWith_Params;
	memcpy_s(&SetPlayedWith_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSetPlayedWith, &SetPlayedWith_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.GetPlayerAvatar
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ReadOnlineAvatarCompleteDelegate (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_OptionalParm | CPF_Parm)

void UOnlineGame_X::GetPlayerAvatar(struct FUniqueNetId PlayerID, struct FScriptDelegate ReadOnlineAvatarCompleteDelegate, uint8_t Size)
{
	static UFunction* uFnGetPlayerAvatar = nullptr;

	if (!uFnGetPlayerAvatar)
	{
		uFnGetPlayerAvatar = UFunction::FindFunction("Function ProjectX.OnlineGame_X.GetPlayerAvatar");
	}

	UOnlineGame_X_execGetPlayerAvatar_Params GetPlayerAvatar_Params;
	memcpy_s(&GetPlayerAvatar_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPlayerAvatar_Params.ReadOnlineAvatarCompleteDelegate, 0x18, &ReadOnlineAvatarCompleteDelegate, 0x18);
	memcpy_s(&GetPlayerAvatar_Params.Size, 0x1, &Size, 0x1);

	this->ProcessEvent(uFnGetPlayerAvatar, &GetPlayerAvatar_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.GetPlayerAvatars
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         ReadOnlineAvatarCompleteDelegate (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_OptionalParm | CPF_Parm)
// TArray<struct FUniqueNetId>    PlayerIds                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGame_X::GetPlayerAvatars(struct FScriptDelegate ReadOnlineAvatarCompleteDelegate, uint8_t Size, TArray<struct FUniqueNetId>& PlayerIds)
{
	static UFunction* uFnGetPlayerAvatars = nullptr;

	if (!uFnGetPlayerAvatars)
	{
		uFnGetPlayerAvatars = UFunction::FindFunction("Function ProjectX.OnlineGame_X.GetPlayerAvatars");
	}

	UOnlineGame_X_execGetPlayerAvatars_Params GetPlayerAvatars_Params;
	memcpy_s(&GetPlayerAvatars_Params.ReadOnlineAvatarCompleteDelegate, 0x18, &ReadOnlineAvatarCompleteDelegate, 0x18);
	memcpy_s(&GetPlayerAvatars_Params.Size, 0x1, &Size, 0x1);
	memcpy_s(&GetPlayerAvatars_Params.PlayerIds, 0x10, &PlayerIds, 0x10);

	this->ProcessEvent(uFnGetPlayerAvatars, &GetPlayerAvatars_Params, nullptr);

	memcpy_s(&PlayerIds, 0x10, &GetPlayerAvatars_Params.PlayerIds, 0x10);
};

// Function ProjectX.OnlineGame_X.ClearPendingAvatarDownloads
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGame_X::ClearPendingAvatarDownloads()
{
	static UFunction* uFnClearPendingAvatarDownloads = nullptr;

	if (!uFnClearPendingAvatarDownloads)
	{
		uFnClearPendingAvatarDownloads = UFunction::FindFunction("Function ProjectX.OnlineGame_X.ClearPendingAvatarDownloads");
	}

	UOnlineGame_X_execClearPendingAvatarDownloads_Params ClearPendingAvatarDownloads_Params;

	this->ProcessEvent(uFnClearPendingAvatarDownloads, &ClearPendingAvatarDownloads_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.SetVoiceVolume
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          NewValue                       (CPF_Parm)

void UOnlineGame_X::SetVoiceVolume(float NewValue)
{
	static UFunction* uFnSetVoiceVolume = nullptr;

	if (!uFnSetVoiceVolume)
	{
		uFnSetVoiceVolume = UFunction::FindFunction("Function ProjectX.OnlineGame_X.SetVoiceVolume");
	}

	UOnlineGame_X_execSetVoiceVolume_Params SetVoiceVolume_Params;
	memcpy_s(&SetVoiceVolume_Params.NewValue, 0x4, &NewValue, 0x4);

	this->ProcessEvent(uFnSetVoiceVolume, &SetVoiceVolume_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.OnNewGameInfoCreated
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             Game                           (CPF_Parm)

void UOnlineGame_X::OnNewGameInfoCreated(class AGameInfo_X* Game)
{
	static UFunction* uFnOnNewGameInfoCreated = nullptr;

	if (!uFnOnNewGameInfoCreated)
	{
		uFnOnNewGameInfoCreated = UFunction::FindFunction("Function ProjectX.OnlineGame_X.OnNewGameInfoCreated");
	}

	UOnlineGame_X_execOnNewGameInfoCreated_Params OnNewGameInfoCreated_Params;
	memcpy_s(&OnNewGameInfoCreated_Params.Game, 0x8, &Game, 0x8);

	this->ProcessEvent(uFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.OnMainMenuOpened
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGame_X::OnMainMenuOpened()
{
	static UFunction* uFnOnMainMenuOpened = nullptr;

	if (!uFnOnMainMenuOpened)
	{
		uFnOnMainMenuOpened = UFunction::FindFunction("Function ProjectX.OnlineGame_X.OnMainMenuOpened");
	}

	UOnlineGame_X_execOnMainMenuOpened_Params OnMainMenuOpened_Params;

	this->ProcessEvent(uFnOnMainMenuOpened, &OnMainMenuOpened_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.HandlePlayerLogin
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         OnlinePlayer                   (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGame_X::HandlePlayerLogin(class UOnlinePlayer_X* OnlinePlayer, class UError* Error)
{
	static UFunction* uFnHandlePlayerLogin = nullptr;

	if (!uFnHandlePlayerLogin)
	{
		uFnHandlePlayerLogin = UFunction::FindFunction("Function ProjectX.OnlineGame_X.HandlePlayerLogin");
	}

	UOnlineGame_X_execHandlePlayerLogin_Params HandlePlayerLogin_Params;
	memcpy_s(&HandlePlayerLogin_Params.OnlinePlayer, 0x8, &OnlinePlayer, 0x8);
	memcpy_s(&HandlePlayerLogin_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandlePlayerLogin, &HandlePlayerLogin_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.HandlePsyNetLoginChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlineGame_X::HandlePsyNetLoginChanged(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnHandlePsyNetLoginChanged = nullptr;

	if (!uFnHandlePsyNetLoginChanged)
	{
		uFnHandlePsyNetLoginChanged = UFunction::FindFunction("Function ProjectX.OnlineGame_X.HandlePsyNetLoginChanged");
	}

	UOnlineGame_X_execHandlePsyNetLoginChanged_Params HandlePsyNetLoginChanged_Params;
	memcpy_s(&HandlePsyNetLoginChanged_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnHandlePsyNetLoginChanged, &HandlePsyNetLoginChanged_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.SyncLegal
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InAppendedPath                 (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGame_X::SyncLegal(class FString InAppendedPath)
{
	static UFunction* uFnSyncLegal = nullptr;

	if (!uFnSyncLegal)
	{
		uFnSyncLegal = UFunction::FindFunction("Function ProjectX.OnlineGame_X.SyncLegal");
	}

	UOnlineGame_X_execSyncLegal_Params SyncLegal_Params;
	memcpy_s(&SyncLegal_Params.InAppendedPath, 0x10, &InAppendedPath, 0x10);

	this->ProcessEvent(uFnSyncLegal, &SyncLegal_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.IsLoggedInToPsyNet
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UOnlinePlayer_X*         OnlinePlayer                   (CPF_Parm)

bool UOnlineGame_X::IsLoggedInToPsyNet(class UOnlinePlayer_X* OnlinePlayer)
{
	static UFunction* uFnIsLoggedInToPsyNet = nullptr;

	if (!uFnIsLoggedInToPsyNet)
	{
		uFnIsLoggedInToPsyNet = UFunction::FindFunction("Function ProjectX.OnlineGame_X.IsLoggedInToPsyNet");
	}

	UOnlineGame_X_execIsLoggedInToPsyNet_Params IsLoggedInToPsyNet_Params;
	memcpy_s(&IsLoggedInToPsyNet_Params.OnlinePlayer, 0x8, &OnlinePlayer, 0x8);

	this->ProcessEvent(uFnIsLoggedInToPsyNet, &IsLoggedInToPsyNet_Params, nullptr);

	return IsLoggedInToPsyNet_Params.ReturnValue;
};

// Function ProjectX.OnlineGame_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGame_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGame_X.OnInit");
	}

	UOnlineGame_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.EventPlayerPsyNetLogout
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlineGame_X::EventPlayerPsyNetLogout(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventPlayerPsyNetLogout = nullptr;

	if (!uFnEventPlayerPsyNetLogout)
	{
		uFnEventPlayerPsyNetLogout = UFunction::FindFunction("Function ProjectX.OnlineGame_X.EventPlayerPsyNetLogout");
	}

	UOnlineGame_X_execEventPlayerPsyNetLogout_Params EventPlayerPsyNetLogout_Params;
	memcpy_s(&EventPlayerPsyNetLogout_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventPlayerPsyNetLogout, &EventPlayerPsyNetLogout_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.EventPlayerPsyNetLogin
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlineGame_X::EventPlayerPsyNetLogin(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventPlayerPsyNetLogin = nullptr;

	if (!uFnEventPlayerPsyNetLogin)
	{
		uFnEventPlayerPsyNetLogin = UFunction::FindFunction("Function ProjectX.OnlineGame_X.EventPlayerPsyNetLogin");
	}

	UOnlineGame_X_execEventPlayerPsyNetLogin_Params EventPlayerPsyNetLogin_Params;
	memcpy_s(&EventPlayerPsyNetLogin_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventPlayerPsyNetLogin, &EventPlayerPsyNetLogin_Params, nullptr);
};

// Function ProjectX.OnlineGame_X.EventConnectionError
// [0x00124001] (FUNC_Final | FUNC_NetMulticast | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)
// class UOnlinePlayer_X*         Player                         (CPF_OptionalParm | CPF_Parm)

void UOnlineGame_X::EventConnectionError(class UError* Error, class UOnlinePlayer_X* Player)
{
	static UFunction* uFnEventConnectionError = nullptr;

	if (!uFnEventConnectionError)
	{
		uFnEventConnectionError = UFunction::FindFunction("Function ProjectX.OnlineGame_X.EventConnectionError");
	}

	UOnlineGame_X_execEventConnectionError_Params EventConnectionError_Params;
	memcpy_s(&EventConnectionError_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&EventConnectionError_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnEventConnectionError, &EventConnectionError_Params, nullptr);
};

// Function ProjectX.OnlineGameServer_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameServer_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameServer_X.OnInit");
	}

	UOnlineGameServer_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.HandlePsyNetDataLoaded
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetStaticData_X*     D                              (CPF_Parm | CPF_EditInline)

void UOnlineGameDedicatedServer_X::HandlePsyNetDataLoaded(class UPsyNetStaticData_X* D)
{
	static UFunction* uFnHandlePsyNetDataLoaded = nullptr;

	if (!uFnHandlePsyNetDataLoaded)
	{
		uFnHandlePsyNetDataLoaded = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.HandlePsyNetDataLoaded");
	}

	UOnlineGameDedicatedServer_X_execHandlePsyNetDataLoaded_Params HandlePsyNetDataLoaded_Params;
	memcpy_s(&HandlePsyNetDataLoaded_Params.D, 0x8, &D, 0x8);

	this->ProcessEvent(uFnHandlePsyNetDataLoaded, &HandlePsyNetDataLoaded_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGameDedicatedServer_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.PrintDebugInfo");
	}

	UOnlineGameDedicatedServer_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.SendRecordMatchRPC
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class URPC_RecordMatch_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class URPC_RecordMatch_X* UOnlineGameDedicatedServer_X::SendRecordMatchRPC()
{
	static UFunction* uFnSendRecordMatchRPC = nullptr;

	if (!uFnSendRecordMatchRPC)
	{
		uFnSendRecordMatchRPC = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.SendRecordMatchRPC");
	}

	UOnlineGameDedicatedServer_X_execSendRecordMatchRPC_Params SendRecordMatchRPC_Params;

	this->ProcessEvent(uFnSendRecordMatchRPC, &SendRecordMatchRPC_Params, nullptr);

	return SendRecordMatchRPC_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.ReportMatch
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::ReportMatch()
{
	static UFunction* uFnReportMatch = nullptr;

	if (!uFnReportMatch)
	{
		uFnReportMatch = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.ReportMatch");
	}

	UOnlineGameDedicatedServer_X_execReportMatch_Params ReportMatch_Params;

	this->ProcessEvent(uFnReportMatch, &ReportMatch_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.HandleTrackerPlayerRemoved
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UServerPlayerTracker_X*  Tracker                        (CPF_Parm | CPF_EditInline)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::HandleTrackerPlayerRemoved(class UServerPlayerTracker_X* Tracker, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnHandleTrackerPlayerRemoved = nullptr;

	if (!uFnHandleTrackerPlayerRemoved)
	{
		uFnHandleTrackerPlayerRemoved = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.HandleTrackerPlayerRemoved");
	}

	UOnlineGameDedicatedServer_X_execHandleTrackerPlayerRemoved_Params HandleTrackerPlayerRemoved_Params;
	memcpy_s(&HandleTrackerPlayerRemoved_Params.Tracker, 0x8, &Tracker, 0x8);
	memcpy_s(&HandleTrackerPlayerRemoved_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnHandleTrackerPlayerRemoved, &HandleTrackerPlayerRemoved_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.CreateMatchRecorder
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::CreateMatchRecorder()
{
	static UFunction* uFnCreateMatchRecorder = nullptr;

	if (!uFnCreateMatchRecorder)
	{
		uFnCreateMatchRecorder = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.CreateMatchRecorder");
	}

	UOnlineGameDedicatedServer_X_execCreateMatchRecorder_Params CreateMatchRecorder_Params;

	this->ProcessEvent(uFnCreateMatchRecorder, &CreateMatchRecorder_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.HandleTrackerPlayerAdded
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UServerPlayerTracker_X*  Tracker                        (CPF_Parm | CPF_EditInline)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::HandleTrackerPlayerAdded(class UServerPlayerTracker_X* Tracker, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnHandleTrackerPlayerAdded = nullptr;

	if (!uFnHandleTrackerPlayerAdded)
	{
		uFnHandleTrackerPlayerAdded = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.HandleTrackerPlayerAdded");
	}

	UOnlineGameDedicatedServer_X_execHandleTrackerPlayerAdded_Params HandleTrackerPlayerAdded_Params;
	memcpy_s(&HandleTrackerPlayerAdded_Params.Tracker, 0x8, &Tracker, 0x8);
	memcpy_s(&HandleTrackerPlayerAdded_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnHandleTrackerPlayerAdded, &HandleTrackerPlayerAdded_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.MatchGuid
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameDedicatedServer_X::MatchGuid()
{
	static UFunction* uFnMatchGuid = nullptr;

	if (!uFnMatchGuid)
	{
		uFnMatchGuid = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.MatchGuid");
	}

	UOnlineGameDedicatedServer_X_execMatchGuid_Params MatchGuid_Params;

	this->ProcessEvent(uFnMatchGuid, &MatchGuid_Params, nullptr);

	return MatchGuid_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetCurrentMapName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UOnlineGameDedicatedServer_X::GetCurrentMapName()
{
	static UFunction* uFnGetCurrentMapName = nullptr;

	if (!uFnGetCurrentMapName)
	{
		uFnGetCurrentMapName = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetCurrentMapName");
	}

	UOnlineGameDedicatedServer_X_execGetCurrentMapName_Params GetCurrentMapName_Params;

	this->ProcessEvent(uFnGetCurrentMapName, &GetCurrentMapName_Params, nullptr);

	return GetCurrentMapName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.ClearMatchmakingBan
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::ClearMatchmakingBan(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnClearMatchmakingBan = nullptr;

	if (!uFnClearMatchmakingBan)
	{
		uFnClearMatchmakingBan = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.ClearMatchmakingBan");
	}

	UOnlineGameDedicatedServer_X_execClearMatchmakingBan_Params ClearMatchmakingBan_Params;
	memcpy_s(&ClearMatchmakingBan_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnClearMatchmakingBan, &ClearMatchmakingBan_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.IssueMatchmakingBan
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::IssueMatchmakingBan(struct FUniqueNetId PlayerID, class FString Reason)
{
	static UFunction* uFnIssueMatchmakingBan = nullptr;

	if (!uFnIssueMatchmakingBan)
	{
		uFnIssueMatchmakingBan = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.IssueMatchmakingBan");
	}

	UOnlineGameDedicatedServer_X_execIssueMatchmakingBan_Params IssueMatchmakingBan_Params;
	memcpy_s(&IssueMatchmakingBan_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&IssueMatchmakingBan_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnIssueMatchmakingBan, &IssueMatchmakingBan_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetTeamNum
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

uint8_t UOnlineGameDedicatedServer_X::GetTeamNum(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetTeamNum = nullptr;

	if (!uFnGetTeamNum)
	{
		uFnGetTeamNum = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetTeamNum");
	}

	UOnlineGameDedicatedServer_X_execGetTeamNum_Params GetTeamNum_Params;
	memcpy_s(&GetTeamNum_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetTeamNum, &GetTeamNum_Params, nullptr);

	return GetTeamNum_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.KickPlayersOnGameEventDestroyed
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::KickPlayersOnGameEventDestroyed()
{
	static UFunction* uFnKickPlayersOnGameEventDestroyed = nullptr;

	if (!uFnKickPlayersOnGameEventDestroyed)
	{
		uFnKickPlayersOnGameEventDestroyed = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.KickPlayersOnGameEventDestroyed");
	}

	UOnlineGameDedicatedServer_X_execKickPlayersOnGameEventDestroyed_Params KickPlayersOnGameEventDestroyed_Params;

	this->ProcessEvent(uFnKickPlayersOnGameEventDestroyed, &KickPlayersOnGameEventDestroyed_Params, nullptr);

	return KickPlayersOnGameEventDestroyed_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.IsBotMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::IsBotMatch()
{
	static UFunction* uFnIsBotMatch = nullptr;

	if (!uFnIsBotMatch)
	{
		uFnIsBotMatch = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.IsBotMatch");
	}

	UOnlineGameDedicatedServer_X_execIsBotMatch_Params IsBotMatch_Params;

	this->ProcessEvent(uFnIsBotMatch, &IsBotMatch_Params, nullptr);

	return IsBotMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.CanIssueMatchmakingBan
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::CanIssueMatchmakingBan()
{
	static UFunction* uFnCanIssueMatchmakingBan = nullptr;

	if (!uFnCanIssueMatchmakingBan)
	{
		uFnCanIssueMatchmakingBan = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.CanIssueMatchmakingBan");
	}

	UOnlineGameDedicatedServer_X_execCanIssueMatchmakingBan_Params CanIssueMatchmakingBan_Params;

	this->ProcessEvent(uFnCanIssueMatchmakingBan, &CanIssueMatchmakingBan_Params, nullptr);

	return CanIssueMatchmakingBan_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.IsRankedMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::IsRankedMatch()
{
	static UFunction* uFnIsRankedMatch = nullptr;

	if (!uFnIsRankedMatch)
	{
		uFnIsRankedMatch = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.IsRankedMatch");
	}

	UOnlineGameDedicatedServer_X_execIsRankedMatch_Params IsRankedMatch_Params;

	this->ProcessEvent(uFnIsRankedMatch, &IsRankedMatch_Params, nullptr);

	return IsRankedMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGameSettingPlaylist_X* UOnlineGameDedicatedServer_X::GetPlaylist()
{
	static UFunction* uFnGetPlaylist = nullptr;

	if (!uFnGetPlaylist)
	{
		uFnGetPlaylist = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetPlaylist");
	}

	UOnlineGameDedicatedServer_X_execGetPlaylist_Params GetPlaylist_Params;

	this->ProcessEvent(uFnGetPlaylist, &GetPlaylist_Params, nullptr);

	return GetPlaylist_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.OnExit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::OnExit()
{
	static UFunction* uFnOnExit = nullptr;

	if (!uFnOnExit)
	{
		uFnOnExit = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.OnExit");
	}

	UOnlineGameDedicatedServer_X_execOnExit_Params OnExit_Params;

	this->ProcessEvent(uFnOnExit, &OnExit_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.OnMigrationStarted
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::OnMigrationStarted()
{
	static UFunction* uFnOnMigrationStarted = nullptr;

	if (!uFnOnMigrationStarted)
	{
		uFnOnMigrationStarted = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.OnMigrationStarted");
	}

	UOnlineGameDedicatedServer_X_execOnMigrationStarted_Params OnMigrationStarted_Params;

	this->ProcessEvent(uFnOnMigrationStarted, &OnMigrationStarted_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.DidRematchVotePass
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::DidRematchVotePass()
{
	static UFunction* uFnDidRematchVotePass = nullptr;

	if (!uFnDidRematchVotePass)
	{
		uFnDidRematchVotePass = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.DidRematchVotePass");
	}

	UOnlineGameDedicatedServer_X_execDidRematchVotePass_Params DidRematchVotePass_Params;

	this->ProcessEvent(uFnDidRematchVotePass, &DidRematchVotePass_Params, nullptr);

	return DidRematchVotePass_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.HandleNewServerIPRPC
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_CheckReplacementDedicatedServer_X* RPC                            (CPF_Parm)

void UOnlineGameDedicatedServer_X::HandleNewServerIPRPC(class URPC_CheckReplacementDedicatedServer_X* RPC)
{
	static UFunction* uFnHandleNewServerIPRPC = nullptr;

	if (!uFnHandleNewServerIPRPC)
	{
		uFnHandleNewServerIPRPC = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.HandleNewServerIPRPC");
	}

	UOnlineGameDedicatedServer_X_execHandleNewServerIPRPC_Params HandleNewServerIPRPC_Params;
	memcpy_s(&HandleNewServerIPRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleNewServerIPRPC, &HandleNewServerIPRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.CheckNewServerIP
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::CheckNewServerIP()
{
	static UFunction* uFnCheckNewServerIP = nullptr;

	if (!uFnCheckNewServerIP)
	{
		uFnCheckNewServerIP = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.CheckNewServerIP");
	}

	UOnlineGameDedicatedServer_X_execCheckNewServerIP_Params CheckNewServerIP_Params;

	this->ProcessEvent(uFnCheckNewServerIP, &CheckNewServerIP_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.CheckNewServerTimeout
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::CheckNewServerTimeout()
{
	static UFunction* uFnCheckNewServerTimeout = nullptr;

	if (!uFnCheckNewServerTimeout)
	{
		uFnCheckNewServerTimeout = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.CheckNewServerTimeout");
	}

	UOnlineGameDedicatedServer_X_execCheckNewServerTimeout_Params CheckNewServerTimeout_Params;

	this->ProcessEvent(uFnCheckNewServerTimeout, &CheckNewServerTimeout_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.CheckStartShutdown
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        GameTimeRemaining              (CPF_Parm)

void UOnlineGameDedicatedServer_X::CheckStartShutdown(int32_t GameTimeRemaining)
{
	static UFunction* uFnCheckStartShutdown = nullptr;

	if (!uFnCheckStartShutdown)
	{
		uFnCheckStartShutdown = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.CheckStartShutdown");
	}

	UOnlineGameDedicatedServer_X_execCheckStartShutdown_Params CheckStartShutdown_Params;
	memcpy_s(&CheckStartShutdown_Params.GameTimeRemaining, 0x4, &GameTimeRemaining, 0x4);

	this->ProcessEvent(uFnCheckStartShutdown, &CheckStartShutdown_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.AllowServerMigration
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::AllowServerMigration()
{
	static UFunction* uFnAllowServerMigration = nullptr;

	if (!uFnAllowServerMigration)
	{
		uFnAllowServerMigration = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.AllowServerMigration");
	}

	UOnlineGameDedicatedServer_X_execAllowServerMigration_Params AllowServerMigration_Params;

	this->ProcessEvent(uFnAllowServerMigration, &AllowServerMigration_Params, nullptr);

	return AllowServerMigration_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.UpdateGameTime
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        TimeSeconds                    (CPF_Parm)

void UOnlineGameDedicatedServer_X::UpdateGameTime(int32_t TimeSeconds)
{
	static UFunction* uFnUpdateGameTime = nullptr;

	if (!uFnUpdateGameTime)
	{
		uFnUpdateGameTime = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.UpdateGameTime");
	}

	UOnlineGameDedicatedServer_X_execUpdateGameTime_Params UpdateGameTime_Params;
	memcpy_s(&UpdateGameTime_Params.TimeSeconds, 0x4, &TimeSeconds, 0x4);

	this->ProcessEvent(uFnUpdateGameTime, &UpdateGameTime_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.FindNewDedicatedServerForPlayers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         InDelegate                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::FindNewDedicatedServerForPlayers(struct FScriptDelegate InDelegate)
{
	static UFunction* uFnFindNewDedicatedServerForPlayers = nullptr;

	if (!uFnFindNewDedicatedServerForPlayers)
	{
		uFnFindNewDedicatedServerForPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.FindNewDedicatedServerForPlayers");
	}

	UOnlineGameDedicatedServer_X_execFindNewDedicatedServerForPlayers_Params FindNewDedicatedServerForPlayers_Params;
	memcpy_s(&FindNewDedicatedServerForPlayers_Params.InDelegate, 0x18, &InDelegate, 0x18);

	this->ProcessEvent(uFnFindNewDedicatedServerForPlayers, &FindNewDedicatedServerForPlayers_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.IsInactive
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::IsInactive()
{
	static UFunction* uFnIsInactive = nullptr;

	if (!uFnIsInactive)
	{
		uFnIsInactive = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.IsInactive");
	}

	UOnlineGameDedicatedServer_X_execIsInactive_Params IsInactive_Params;

	this->ProcessEvent(uFnIsInactive, &IsInactive_Params, nullptr);

	return IsInactive_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetTeamScore
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TeamIdx                        (CPF_Parm)

int32_t UOnlineGameDedicatedServer_X::GetTeamScore(int32_t TeamIdx)
{
	static UFunction* uFnGetTeamScore = nullptr;

	if (!uFnGetTeamScore)
	{
		uFnGetTeamScore = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetTeamScore");
	}

	UOnlineGameDedicatedServer_X_execGetTeamScore_Params GetTeamScore_Params;
	memcpy_s(&GetTeamScore_Params.TeamIdx, 0x4, &TeamIdx, 0x4);

	this->ProcessEvent(uFnGetTeamScore, &GetTeamScore_Params, nullptr);

	return GetTeamScore_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.IsInPostGameLobby
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::IsInPostGameLobby()
{
	static UFunction* uFnIsInPostGameLobby = nullptr;

	if (!uFnIsInPostGameLobby)
	{
		uFnIsInPostGameLobby = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.IsInPostGameLobby");
	}

	UOnlineGameDedicatedServer_X_execIsInPostGameLobby_Params IsInPostGameLobby_Params;

	this->ProcessEvent(uFnIsInPostGameLobby, &IsInPostGameLobby_Params, nullptr);

	return IsInPostGameLobby_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.UpdateOnlineGame
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::UpdateOnlineGame()
{
	static UFunction* uFnUpdateOnlineGame = nullptr;

	if (!uFnUpdateOnlineGame)
	{
		uFnUpdateOnlineGame = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.UpdateOnlineGame");
	}

	UOnlineGameDedicatedServer_X_execUpdateOnlineGame_Params UpdateOnlineGame_Params;

	this->ProcessEvent(uFnUpdateOnlineGame, &UpdateOnlineGame_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.AllowSplitscreenJoinRankedMatch
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::AllowSplitscreenJoinRankedMatch()
{
	static UFunction* uFnAllowSplitscreenJoinRankedMatch = nullptr;

	if (!uFnAllowSplitscreenJoinRankedMatch)
	{
		uFnAllowSplitscreenJoinRankedMatch = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.AllowSplitscreenJoinRankedMatch");
	}

	UOnlineGameDedicatedServer_X_execAllowSplitscreenJoinRankedMatch_Params AllowSplitscreenJoinRankedMatch_Params;

	this->ProcessEvent(uFnAllowSplitscreenJoinRankedMatch, &AllowSplitscreenJoinRankedMatch_Params, nullptr);

	return AllowSplitscreenJoinRankedMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.AllowSplitscreenJoin
// [0x00420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PrimaryPlayerId                (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Error                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameDedicatedServer_X::AllowSplitscreenJoin(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId PlayerID, class FString PlayerName, class FString& Error)
{
	static UFunction* uFnAllowSplitscreenJoin = nullptr;

	if (!uFnAllowSplitscreenJoin)
	{
		uFnAllowSplitscreenJoin = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.AllowSplitscreenJoin");
	}

	UOnlineGameDedicatedServer_X_execAllowSplitscreenJoin_Params AllowSplitscreenJoin_Params;
	memcpy_s(&AllowSplitscreenJoin_Params.PrimaryPlayerId, 0x48, &PrimaryPlayerId, 0x48);
	memcpy_s(&AllowSplitscreenJoin_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AllowSplitscreenJoin_Params.PlayerName, 0x10, &PlayerName, 0x10);
	memcpy_s(&AllowSplitscreenJoin_Params.Error, 0x10, &Error, 0x10);

	this->ProcessEvent(uFnAllowSplitscreenJoin, &AllowSplitscreenJoin_Params, nullptr);

	memcpy_s(&Error, 0x10, &AllowSplitscreenJoin_Params.Error, 0x10);

	return AllowSplitscreenJoin_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.PlayerLoggedOut
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

void UOnlineGameDedicatedServer_X::PlayerLoggedOut(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnPlayerLoggedOut = nullptr;

	if (!uFnPlayerLoggedOut)
	{
		uFnPlayerLoggedOut = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.PlayerLoggedOut");
	}

	UOnlineGameDedicatedServer_X_execPlayerLoggedOut_Params PlayerLoggedOut_Params;
	memcpy_s(&PlayerLoggedOut_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnPlayerLoggedOut, &PlayerLoggedOut_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.PlayerLoggedIn
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

void UOnlineGameDedicatedServer_X::PlayerLoggedIn(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnPlayerLoggedIn = nullptr;

	if (!uFnPlayerLoggedIn)
	{
		uFnPlayerLoggedIn = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.PlayerLoggedIn");
	}

	UOnlineGameDedicatedServer_X_execPlayerLoggedIn_Params PlayerLoggedIn_Params;
	memcpy_s(&PlayerLoggedIn_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnPlayerLoggedIn, &PlayerLoggedIn_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.AllowPlayerLogin
// [0x00420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ErrorMessage                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::AllowPlayerLogin(class FString Options, struct FUniqueNetId PlayerID, class FString& ErrorMessage)
{
	static UFunction* uFnAllowPlayerLogin = nullptr;

	if (!uFnAllowPlayerLogin)
	{
		uFnAllowPlayerLogin = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.AllowPlayerLogin");
	}

	UOnlineGameDedicatedServer_X_execAllowPlayerLogin_Params AllowPlayerLogin_Params;
	memcpy_s(&AllowPlayerLogin_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&AllowPlayerLogin_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AllowPlayerLogin_Params.ErrorMessage, 0x10, &ErrorMessage, 0x10);

	this->ProcessEvent(uFnAllowPlayerLogin, &AllowPlayerLogin_Params, nullptr);

	memcpy_s(&ErrorMessage, 0x10, &AllowPlayerLogin_Params.ErrorMessage, 0x10);
};

// Function ProjectX.OnlineGameDedicatedServer_X.OnNewGameInfoCreated
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             Game                           (CPF_Parm)

void UOnlineGameDedicatedServer_X::OnNewGameInfoCreated(class AGameInfo_X* Game)
{
	static UFunction* uFnOnNewGameInfoCreated = nullptr;

	if (!uFnOnNewGameInfoCreated)
	{
		uFnOnNewGameInfoCreated = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.OnNewGameInfoCreated");
	}

	UOnlineGameDedicatedServer_X_execOnNewGameInfoCreated_Params OnNewGameInfoCreated_Params;
	memcpy_s(&OnNewGameInfoCreated_Params.Game, 0x8, &Game, 0x8);

	this->ProcessEvent(uFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.AllPlayersHaveNetworkIssues
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServer_X::AllPlayersHaveNetworkIssues()
{
	static UFunction* uFnAllPlayersHaveNetworkIssues = nullptr;

	if (!uFnAllPlayersHaveNetworkIssues)
	{
		uFnAllPlayersHaveNetworkIssues = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.AllPlayersHaveNetworkIssues");
	}

	UOnlineGameDedicatedServer_X_execAllPlayersHaveNetworkIssues_Params AllPlayersHaveNetworkIssues_Params;

	this->ProcessEvent(uFnAllPlayersHaveNetworkIssues, &AllPlayersHaveNetworkIssues_Params, nullptr);

	return AllPlayersHaveNetworkIssues_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.TravelToMap
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerCommand                  (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::TravelToMap(class FString ServerCommand)
{
	static UFunction* uFnTravelToMap = nullptr;

	if (!uFnTravelToMap)
	{
		uFnTravelToMap = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.TravelToMap");
	}

	UOnlineGameDedicatedServer_X_execTravelToMap_Params TravelToMap_Params;
	memcpy_s(&TravelToMap_Params.ServerCommand, 0x10, &ServerCommand, 0x10);

	this->ProcessEvent(uFnTravelToMap, &TravelToMap_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.GotoPrivateMatchMap
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   MapName                        (CPF_Parm)
// int32_t                        GameMode                       (CPF_Parm)
// class FString                  GameTags                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::GotoPrivateMatchMap(struct FName MapName, int32_t GameMode, class FString GameTags)
{
	static UFunction* uFnGotoPrivateMatchMap = nullptr;

	if (!uFnGotoPrivateMatchMap)
	{
		uFnGotoPrivateMatchMap = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GotoPrivateMatchMap");
	}

	UOnlineGameDedicatedServer_X_execGotoPrivateMatchMap_Params GotoPrivateMatchMap_Params;
	memcpy_s(&GotoPrivateMatchMap_Params.MapName, 0x8, &MapName, 0x8);
	memcpy_s(&GotoPrivateMatchMap_Params.GameMode, 0x4, &GameMode, 0x4);
	memcpy_s(&GotoPrivateMatchMap_Params.GameTags, 0x10, &GameTags, 0x10);

	this->ProcessEvent(uFnGotoPrivateMatchMap, &GotoPrivateMatchMap_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.GotoNextPrivateMatchMap
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::GotoNextPrivateMatchMap()
{
	static UFunction* uFnGotoNextPrivateMatchMap = nullptr;

	if (!uFnGotoNextPrivateMatchMap)
	{
		uFnGotoNextPrivateMatchMap = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GotoNextPrivateMatchMap");
	}

	UOnlineGameDedicatedServer_X_execGotoNextPrivateMatchMap_Params GotoNextPrivateMatchMap_Params;

	this->ProcessEvent(uFnGotoNextPrivateMatchMap, &GotoNextPrivateMatchMap_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.OnPrivateEventDestroyed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::OnPrivateEventDestroyed()
{
	static UFunction* uFnOnPrivateEventDestroyed = nullptr;

	if (!uFnOnPrivateEventDestroyed)
	{
		uFnOnPrivateEventDestroyed = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.OnPrivateEventDestroyed");
	}

	UOnlineGameDedicatedServer_X_execOnPrivateEventDestroyed_Params OnPrivateEventDestroyed_Params;

	this->ProcessEvent(uFnOnPrivateEventDestroyed, &OnPrivateEventDestroyed_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.GoInactive
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::GoInactive()
{
	static UFunction* uFnGoInactive = nullptr;

	if (!uFnGoInactive)
	{
		uFnGoInactive = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GoInactive");
	}

	UOnlineGameDedicatedServer_X_execGoInactive_Params GoInactive_Params;

	this->ProcessEvent(uFnGoInactive, &GoInactive_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetStartServerCommand
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameDedicatedServer_X::GetStartServerCommand()
{
	static UFunction* uFnGetStartServerCommand = nullptr;

	if (!uFnGetStartServerCommand)
	{
		uFnGetStartServerCommand = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetStartServerCommand");
	}

	UOnlineGameDedicatedServer_X_execGetStartServerCommand_Params GetStartServerCommand_Params;

	this->ProcessEvent(uFnGetStartServerCommand, &GetStartServerCommand_Params, nullptr);

	return GetStartServerCommand_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetNextRandomMapName
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameMode                       (CPF_Parm)
// unsigned long                  bStandardOnly                  (CPF_Parm)
// unsigned long                  bRocketLabsMedleyOnly          (CPF_Parm)

struct FName UOnlineGameDedicatedServer_X::GetNextRandomMapName(int32_t GameMode, unsigned long bStandardOnly, unsigned long bRocketLabsMedleyOnly)
{
	static UFunction* uFnGetNextRandomMapName = nullptr;

	if (!uFnGetNextRandomMapName)
	{
		uFnGetNextRandomMapName = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetNextRandomMapName");
	}

	UOnlineGameDedicatedServer_X_execGetNextRandomMapName_Params GetNextRandomMapName_Params;
	memcpy_s(&GetNextRandomMapName_Params.GameMode, 0x4, &GameMode, 0x4);
	GetNextRandomMapName_Params.bStandardOnly = bStandardOnly;
	GetNextRandomMapName_Params.bRocketLabsMedleyOnly = bRocketLabsMedleyOnly;

	this->ProcessEvent(uFnGetNextRandomMapName, &GetNextRandomMapName_Params, nullptr);

	return GetNextRandomMapName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetNextMapName
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        GameMode                       (CPF_OptionalParm | CPF_Parm)
// unsigned long                  bStandardOnly                  (CPF_OptionalParm | CPF_Parm)
// unsigned long                  bRocketLabsMedleyOnly          (CPF_OptionalParm | CPF_Parm)

struct FName UOnlineGameDedicatedServer_X::GetNextMapName(int32_t GameMode, unsigned long bStandardOnly, unsigned long bRocketLabsMedleyOnly)
{
	static UFunction* uFnGetNextMapName = nullptr;

	if (!uFnGetNextMapName)
	{
		uFnGetNextMapName = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetNextMapName");
	}

	UOnlineGameDedicatedServer_X_execGetNextMapName_Params GetNextMapName_Params;
	memcpy_s(&GetNextMapName_Params.GameMode, 0x4, &GameMode, 0x4);
	GetNextMapName_Params.bStandardOnly = bStandardOnly;
	GetNextMapName_Params.bRocketLabsMedleyOnly = bRocketLabsMedleyOnly;

	this->ProcessEvent(uFnGetNextMapName, &GetNextMapName_Params, nullptr);

	return GetNextMapName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetCustomMatchSettings
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FCustomMatchSettings    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FCustomMatchSettings UOnlineGameDedicatedServer_X::GetCustomMatchSettings()
{
	static UFunction* uFnGetCustomMatchSettings = nullptr;

	if (!uFnGetCustomMatchSettings)
	{
		uFnGetCustomMatchSettings = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetCustomMatchSettings");
	}

	UOnlineGameDedicatedServer_X_execGetCustomMatchSettings_Params GetCustomMatchSettings_Params;

	this->ProcessEvent(uFnGetCustomMatchSettings, &GetCustomMatchSettings_Params, nullptr);

	return GetCustomMatchSettings_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetCustomMatchOwner
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameDedicatedServer_X::GetCustomMatchOwner()
{
	static UFunction* uFnGetCustomMatchOwner = nullptr;

	if (!uFnGetCustomMatchOwner)
	{
		uFnGetCustomMatchOwner = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetCustomMatchOwner");
	}

	UOnlineGameDedicatedServer_X_execGetCustomMatchOwner_Params GetCustomMatchOwner_Params;

	this->ProcessEvent(uFnGetCustomMatchOwner, &GetCustomMatchOwner_Params, nullptr);

	return GetCustomMatchOwner_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.UpdateCustomMatchOwner
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            NewOwner                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::UpdateCustomMatchOwner(struct FUniqueNetId NewOwner)
{
	static UFunction* uFnUpdateCustomMatchOwner = nullptr;

	if (!uFnUpdateCustomMatchOwner)
	{
		uFnUpdateCustomMatchOwner = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.UpdateCustomMatchOwner");
	}

	UOnlineGameDedicatedServer_X_execUpdateCustomMatchOwner_Params UpdateCustomMatchOwner_Params;
	memcpy_s(&UpdateCustomMatchOwner_Params.NewOwner, 0x48, &NewOwner, 0x48);

	this->ProcessEvent(uFnUpdateCustomMatchOwner, &UpdateCustomMatchOwner_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.SetCustomSettings
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FCustomMatchSettings    Settings                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::SetCustomSettings(struct FCustomMatchSettings Settings)
{
	static UFunction* uFnSetCustomSettings = nullptr;

	if (!uFnSetCustomSettings)
	{
		uFnSetCustomSettings = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.SetCustomSettings");
	}

	UOnlineGameDedicatedServer_X_execSetCustomSettings_Params SetCustomSettings_Params;
	memcpy_s(&SetCustomSettings_Params.Settings, 0x90, &Settings, 0x90);

	this->ProcessEvent(uFnSetCustomSettings, &SetCustomSettings_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.SetupPrivateMatch
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FCustomMatchSettings    Settings                       (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            Creator                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::SetupPrivateMatch(struct FCustomMatchSettings Settings, struct FUniqueNetId Creator)
{
	static UFunction* uFnSetupPrivateMatch = nullptr;

	if (!uFnSetupPrivateMatch)
	{
		uFnSetupPrivateMatch = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.SetupPrivateMatch");
	}

	UOnlineGameDedicatedServer_X_execSetupPrivateMatch_Params SetupPrivateMatch_Params;
	memcpy_s(&SetupPrivateMatch_Params.Settings, 0x90, &Settings, 0x90);
	memcpy_s(&SetupPrivateMatch_Params.Creator, 0x48, &Creator, 0x48);

	this->ProcessEvent(uFnSetupPrivateMatch, &SetupPrivateMatch_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.GoToNextMap
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::GoToNextMap()
{
	static UFunction* uFnGoToNextMap = nullptr;

	if (!uFnGoToNextMap)
	{
		uFnGoToNextMap = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GoToNextMap");
	}

	UOnlineGameDedicatedServer_X_execGoToNextMap_Params GoToNextMap_Params;

	this->ProcessEvent(uFnGoToNextMap, &GoToNextMap_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetNextMutatorMapName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UOnlineGameDedicatedServer_X::GetNextMutatorMapName()
{
	static UFunction* uFnGetNextMutatorMapName = nullptr;

	if (!uFnGetNextMutatorMapName)
	{
		uFnGetNextMutatorMapName = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetNextMutatorMapName");
	}

	UOnlineGameDedicatedServer_X_execGetNextMutatorMapName_Params GetNextMutatorMapName_Params;

	this->ProcessEvent(uFnGetNextMutatorMapName, &GetNextMutatorMapName_Params, nullptr);

	return GetNextMutatorMapName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.GoToMap
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  MapName                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::GoToMap(class FString MapName)
{
	static UFunction* uFnGoToMap = nullptr;

	if (!uFnGoToMap)
	{
		uFnGoToMap = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GoToMap");
	}

	UOnlineGameDedicatedServer_X_execGoToMap_Params GoToMap_Params;
	memcpy_s(&GoToMap_Params.MapName, 0x10, &MapName, 0x10);

	this->ProcessEvent(uFnGoToMap, &GoToMap_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.GetPlaylistTags
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameDedicatedServer_X::GetPlaylistTags()
{
	static UFunction* uFnGetPlaylistTags = nullptr;

	if (!uFnGetPlaylistTags)
	{
		uFnGetPlaylistTags = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.GetPlaylistTags");
	}

	UOnlineGameDedicatedServer_X_execGetPlaylistTags_Params GetPlaylistTags_Params;

	this->ProcessEvent(uFnGetPlaylistTags, &GetPlaylistTags_Params, nullptr);

	return GetPlaylistTags_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServer_X.UpdateAverageMMR
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::UpdateAverageMMR()
{
	static UFunction* uFnUpdateAverageMMR = nullptr;

	if (!uFnUpdateAverageMMR)
	{
		uFnUpdateAverageMMR = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.UpdateAverageMMR");
	}

	UOnlineGameDedicatedServer_X_execUpdateAverageMMR_Params UpdateAverageMMR_Params;

	this->ProcessEvent(uFnUpdateAverageMMR, &UpdateAverageMMR_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.SetCustomMatchClubID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint64_t                       InClubID                       (CPF_Parm)

void UOnlineGameDedicatedServer_X::SetCustomMatchClubID(uint64_t InClubID)
{
	static UFunction* uFnSetCustomMatchClubID = nullptr;

	if (!uFnSetCustomMatchClubID)
	{
		uFnSetCustomMatchClubID = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.SetCustomMatchClubID");
	}

	UOnlineGameDedicatedServer_X_execSetCustomMatchClubID_Params SetCustomMatchClubID_Params;
	SetCustomMatchClubID_Params.InClubID = InClubID;

	this->ProcessEvent(uFnSetCustomMatchClubID, &SetCustomMatchClubID_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.ClearSettings
// [0x00880002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::ClearSettings()
{
	static UFunction* uFnClearSettings = nullptr;

	if (!uFnClearSettings)
	{
		uFnClearSettings = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.ClearSettings");
	}

	UOnlineGameDedicatedServer_X_execClearSettings_Params ClearSettings_Params;

	this->ProcessEvent(uFnClearSettings, &ClearSettings_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.SetPlaylist
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlaylistId                     (CPF_Parm)

void UOnlineGameDedicatedServer_X::SetPlaylist(int32_t PlaylistId)
{
	static UFunction* uFnSetPlaylist = nullptr;

	if (!uFnSetPlaylist)
	{
		uFnSetPlaylist = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.SetPlaylist");
	}

	UOnlineGameDedicatedServer_X_execSetPlaylist_Params SetPlaylist_Params;
	memcpy_s(&SetPlaylist_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnSetPlaylist, &SetPlaylist_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.HandleReservationsUpdated
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::HandleReservationsUpdated()
{
	static UFunction* uFnHandleReservationsUpdated = nullptr;

	if (!uFnHandleReservationsUpdated)
	{
		uFnHandleReservationsUpdated = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.HandleReservationsUpdated");
	}

	UOnlineGameDedicatedServer_X_execHandleReservationsUpdated_Params HandleReservationsUpdated_Params;

	this->ProcessEvent(uFnHandleReservationsUpdated, &HandleReservationsUpdated_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.InitClanforge
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::InitClanforge()
{
	static UFunction* uFnInitClanforge = nullptr;

	if (!uFnInitClanforge)
	{
		uFnInitClanforge = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.InitClanforge");
	}

	UOnlineGameDedicatedServer_X_execInitClanforge_Params InitClanforge_Params;

	this->ProcessEvent(uFnInitClanforge, &InitClanforge_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServer_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.OnInit");
	}

	UOnlineGameDedicatedServer_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.EventMatchGUIDChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)

void UOnlineGameDedicatedServer_X::EventMatchGUIDChanged(class UOnlineGameDedicatedServer_X* Server)
{
	static UFunction* uFnEventMatchGUIDChanged = nullptr;

	if (!uFnEventMatchGUIDChanged)
	{
		uFnEventMatchGUIDChanged = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.EventMatchGUIDChanged");
	}

	UOnlineGameDedicatedServer_X_execEventMatchGUIDChanged_Params EventMatchGUIDChanged_Params;
	memcpy_s(&EventMatchGUIDChanged_Params.Server, 0x8, &Server, 0x8);

	this->ProcessEvent(uFnEventMatchGUIDChanged, &EventMatchGUIDChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.EventActive
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)

void UOnlineGameDedicatedServer_X::EventActive(class UOnlineGameDedicatedServer_X* Server)
{
	static UFunction* uFnEventActive = nullptr;

	if (!uFnEventActive)
	{
		uFnEventActive = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.EventActive");
	}

	UOnlineGameDedicatedServer_X_execEventActive_Params EventActive_Params;
	memcpy_s(&EventActive_Params.Server, 0x8, &Server, 0x8);

	this->ProcessEvent(uFnEventActive, &EventActive_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.EventInactive
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)

void UOnlineGameDedicatedServer_X::EventInactive(class UOnlineGameDedicatedServer_X* Server)
{
	static UFunction* uFnEventInactive = nullptr;

	if (!uFnEventInactive)
	{
		uFnEventInactive = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.EventInactive");
	}

	UOnlineGameDedicatedServer_X_execEventInactive_Params EventInactive_Params;
	memcpy_s(&EventInactive_Params.Server, 0x8, &Server, 0x8);

	this->ProcessEvent(uFnEventInactive, &EventInactive_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.EventPrivateMatchSettingsChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)
// struct FCustomMatchSettings    NewSettings                    (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServer_X::EventPrivateMatchSettingsChanged(class UOnlineGameDedicatedServer_X* Server, struct FCustomMatchSettings NewSettings)
{
	static UFunction* uFnEventPrivateMatchSettingsChanged = nullptr;

	if (!uFnEventPrivateMatchSettingsChanged)
	{
		uFnEventPrivateMatchSettingsChanged = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.EventPrivateMatchSettingsChanged");
	}

	UOnlineGameDedicatedServer_X_execEventPrivateMatchSettingsChanged_Params EventPrivateMatchSettingsChanged_Params;
	memcpy_s(&EventPrivateMatchSettingsChanged_Params.Server, 0x8, &Server, 0x8);
	memcpy_s(&EventPrivateMatchSettingsChanged_Params.NewSettings, 0x90, &NewSettings, 0x90);

	this->ProcessEvent(uFnEventPrivateMatchSettingsChanged, &EventPrivateMatchSettingsChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.EventPlaylistSet
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)

void UOnlineGameDedicatedServer_X::EventPlaylistSet(class UOnlineGameDedicatedServer_X* Server)
{
	static UFunction* uFnEventPlaylistSet = nullptr;

	if (!uFnEventPlaylistSet)
	{
		uFnEventPlaylistSet = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.EventPlaylistSet");
	}

	UOnlineGameDedicatedServer_X_execEventPlaylistSet_Params EventPlaylistSet_Params;
	memcpy_s(&EventPlaylistSet_Params.Server, 0x8, &Server, 0x8);

	this->ProcessEvent(uFnEventPlaylistSet, &EventPlaylistSet_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.EventAverageMMRChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)

void UOnlineGameDedicatedServer_X::EventAverageMMRChanged(class UOnlineGameDedicatedServer_X* Server)
{
	static UFunction* uFnEventAverageMMRChanged = nullptr;

	if (!uFnEventAverageMMRChanged)
	{
		uFnEventAverageMMRChanged = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.EventAverageMMRChanged");
	}

	UOnlineGameDedicatedServer_X_execEventAverageMMRChanged_Params EventAverageMMRChanged_Params;
	memcpy_s(&EventAverageMMRChanged_Params.Server, 0x8, &Server, 0x8);

	this->ProcessEvent(uFnEventAverageMMRChanged, &EventAverageMMRChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServer_X.EventFoundNewDedicatedServerForPlayers
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UConnectionInfoMessage_X* Message                        (CPF_Parm)

void UOnlineGameDedicatedServer_X::EventFoundNewDedicatedServerForPlayers(class UConnectionInfoMessage_X* Message)
{
	static UFunction* uFnEventFoundNewDedicatedServerForPlayers = nullptr;

	if (!uFnEventFoundNewDedicatedServerForPlayers)
	{
		uFnEventFoundNewDedicatedServerForPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServer_X.EventFoundNewDedicatedServerForPlayers");
	}

	UOnlineGameDedicatedServer_X_execEventFoundNewDedicatedServerForPlayers_Params EventFoundNewDedicatedServerForPlayers_Params;
	memcpy_s(&EventFoundNewDedicatedServerForPlayers_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnEventFoundNewDedicatedServerForPlayers, &EventFoundNewDedicatedServerForPlayers_Params, nullptr);
};

// Function ProjectX.OnlineGameDLC_X.DoesPlayerOwnDLC
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FName                   DLCName                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UOnlineGameDLC_X::DoesPlayerOwnDLC(struct FUniqueNetId& PlayerID, struct FName& DLCName)
{
	static UFunction* uFnDoesPlayerOwnDLC = nullptr;

	if (!uFnDoesPlayerOwnDLC)
	{
		uFnDoesPlayerOwnDLC = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.DoesPlayerOwnDLC");
	}

	UOnlineGameDLC_X_execDoesPlayerOwnDLC_Params DoesPlayerOwnDLC_Params;
	memcpy_s(&DoesPlayerOwnDLC_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&DoesPlayerOwnDLC_Params.DLCName, 0x8, &DLCName, 0x8);

	uFnDoesPlayerOwnDLC->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDoesPlayerOwnDLC, &DoesPlayerOwnDLC_Params, nullptr);

	uFnDoesPlayerOwnDLC->FunctionFlags |= 0x400;

	memcpy_s(&PlayerID, 0x48, &DoesPlayerOwnDLC_Params.PlayerID, 0x48);
	memcpy_s(&DLCName, 0x8, &DoesPlayerOwnDLC_Params.DLCName, 0x8);

	return DoesPlayerOwnDLC_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDLC_X.HandleGetPublisherAppOwnership
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           Request                        (CPF_Const | CPF_Parm)

void UOnlineGameDLC_X::HandleGetPublisherAppOwnership(class UWebRequest_X* Request)
{
	static UFunction* uFnHandleGetPublisherAppOwnership = nullptr;

	if (!uFnHandleGetPublisherAppOwnership)
	{
		uFnHandleGetPublisherAppOwnership = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.HandleGetPublisherAppOwnership");
	}

	UOnlineGameDLC_X_execHandleGetPublisherAppOwnership_Params HandleGetPublisherAppOwnership_Params;
	memcpy_s(&HandleGetPublisherAppOwnership_Params.Request, 0x8, &Request, 0x8);

	uFnHandleGetPublisherAppOwnership->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleGetPublisherAppOwnership, &HandleGetPublisherAppOwnership_Params, nullptr);

	uFnHandleGetPublisherAppOwnership->FunctionFlags |= 0x400;
};

// Function ProjectX.OnlineGameDLC_X.PlatformRequiresDLCVerification
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Platform                       (CPF_Parm)

bool UOnlineGameDLC_X::PlatformRequiresDLCVerification(uint8_t Platform)
{
	static UFunction* uFnPlatformRequiresDLCVerification = nullptr;

	if (!uFnPlatformRequiresDLCVerification)
	{
		uFnPlatformRequiresDLCVerification = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.PlatformRequiresDLCVerification");
	}

	UOnlineGameDLC_X_execPlatformRequiresDLCVerification_Params PlatformRequiresDLCVerification_Params;
	memcpy_s(&PlatformRequiresDLCVerification_Params.Platform, 0x1, &Platform, 0x1);

	UOnlineGameDLC_X::StaticClass()->ProcessEvent(uFnPlatformRequiresDLCVerification, &PlatformRequiresDLCVerification_Params, nullptr);

	return PlatformRequiresDLCVerification_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDLC_X.OnMatchFinished
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDLC_X::OnMatchFinished()
{
	static UFunction* uFnOnMatchFinished = nullptr;

	if (!uFnOnMatchFinished)
	{
		uFnOnMatchFinished = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.OnMatchFinished");
	}

	UOnlineGameDLC_X_execOnMatchFinished_Params OnMatchFinished_Params;

	this->ProcessEvent(uFnOnMatchFinished, &OnMatchFinished_Params, nullptr);
};

// Function ProjectX.OnlineGameDLC_X.SyncPlayerDLC
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDLC_X::SyncPlayerDLC(struct FUniqueNetId PlayerID, struct FScriptDelegate Callback)
{
	static UFunction* uFnSyncPlayerDLC = nullptr;

	if (!uFnSyncPlayerDLC)
	{
		uFnSyncPlayerDLC = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.SyncPlayerDLC");
	}

	UOnlineGameDLC_X_execSyncPlayerDLC_Params SyncPlayerDLC_Params;
	memcpy_s(&SyncPlayerDLC_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&SyncPlayerDLC_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSyncPlayerDLC, &SyncPlayerDLC_Params, nullptr);
};

// Function ProjectX.OnlineGameDLC_X.UpdatePlayerDLCInfo
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlayerInfoIndex                (CPF_Parm)

void UOnlineGameDLC_X::UpdatePlayerDLCInfo(int32_t PlayerInfoIndex)
{
	static UFunction* uFnUpdatePlayerDLCInfo = nullptr;

	if (!uFnUpdatePlayerDLCInfo)
	{
		uFnUpdatePlayerDLCInfo = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.UpdatePlayerDLCInfo");
	}

	UOnlineGameDLC_X_execUpdatePlayerDLCInfo_Params UpdatePlayerDLCInfo_Params;
	memcpy_s(&UpdatePlayerDLCInfo_Params.PlayerInfoIndex, 0x4, &PlayerInfoIndex, 0x4);

	this->ProcessEvent(uFnUpdatePlayerDLCInfo, &UpdatePlayerDLCInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameDLC_X.CreatePlayerDLCInfo
// [0x00C40003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UOnlineGameDLC_X::CreatePlayerDLCInfo(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnCreatePlayerDLCInfo = nullptr;

	if (!uFnCreatePlayerDLCInfo)
	{
		uFnCreatePlayerDLCInfo = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.CreatePlayerDLCInfo");
	}

	UOnlineGameDLC_X_execCreatePlayerDLCInfo_Params CreatePlayerDLCInfo_Params;
	memcpy_s(&CreatePlayerDLCInfo_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnCreatePlayerDLCInfo, &CreatePlayerDLCInfo_Params, nullptr);

	memcpy_s(&PlayerID, 0x48, &CreatePlayerDLCInfo_Params.PlayerID, 0x48);

	return CreatePlayerDLCInfo_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDLC_X.IsPlayerReadyForValidation
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameDLC_X::IsPlayerReadyForValidation(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnIsPlayerReadyForValidation = nullptr;

	if (!uFnIsPlayerReadyForValidation)
	{
		uFnIsPlayerReadyForValidation = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.IsPlayerReadyForValidation");
	}

	UOnlineGameDLC_X_execIsPlayerReadyForValidation_Params IsPlayerReadyForValidation_Params;
	memcpy_s(&IsPlayerReadyForValidation_Params.PlayerID, 0x48, &PlayerID, 0x48);

	uFnIsPlayerReadyForValidation->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsPlayerReadyForValidation, &IsPlayerReadyForValidation_Params, nullptr);

	uFnIsPlayerReadyForValidation->FunctionFlags |= 0x400;

	memcpy_s(&PlayerID, 0x48, &IsPlayerReadyForValidation_Params.PlayerID, 0x48);

	return IsPlayerReadyForValidation_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDLC_X.EventValidationReady
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDLC_X::EventValidationReady()
{
	static UFunction* uFnEventValidationReady = nullptr;

	if (!uFnEventValidationReady)
	{
		uFnEventValidationReady = UFunction::FindFunction("Function ProjectX.OnlineGameDLC_X.EventValidationReady");
	}

	UOnlineGameDLC_X_execEventValidationReady_Params EventValidationReady_Params;

	this->ProcessEvent(uFnEventValidationReady, &EventValidationReady_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void UOnlineGameLeaderboards_X::__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1(class URPC_X* RPC)
{
	static UFunction* uFn__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1 = nullptr;

	if (!uFn__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1)
	{
		uFn__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1");
	}

	UOnlineGameLeaderboards_X_exec__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1_Params __OnlineGameLeaderboards_X__ClearPreviousTasks_0x1_Params;
	memcpy_s(&__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1, &__OnlineGameLeaderboards_X__ClearPreviousTasks_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.ClearPreviousTasks
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameLeaderboards_X::ClearPreviousTasks()
{
	static UFunction* uFnClearPreviousTasks = nullptr;

	if (!uFnClearPreviousTasks)
	{
		uFnClearPreviousTasks = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.ClearPreviousTasks");
	}

	UOnlineGameLeaderboards_X_execClearPreviousTasks_Params ClearPreviousTasks_Params;

	this->ProcessEvent(uFnClearPreviousTasks, &ClearPreviousTasks_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.IsSkillLeaderboard
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  NewLeaderboardID               (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

bool UOnlineGameLeaderboards_X::IsSkillLeaderboard(class FString NewLeaderboardID, int32_t& Playlist)
{
	static UFunction* uFnIsSkillLeaderboard = nullptr;

	if (!uFnIsSkillLeaderboard)
	{
		uFnIsSkillLeaderboard = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.IsSkillLeaderboard");
	}

	UOnlineGameLeaderboards_X_execIsSkillLeaderboard_Params IsSkillLeaderboard_Params;
	memcpy_s(&IsSkillLeaderboard_Params.NewLeaderboardID, 0x10, &NewLeaderboardID, 0x10);
	memcpy_s(&IsSkillLeaderboard_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnIsSkillLeaderboard, &IsSkillLeaderboard_Params, nullptr);

	memcpy_s(&Playlist, 0x4, &IsSkillLeaderboard_Params.Playlist, 0x4);

	return IsSkillLeaderboard_Params.ReturnValue;
};

// Function ProjectX.OnlineGameLeaderboards_X.SortLeaderboardDataMMR
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FLeaderboardData> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// TArray<struct FLeaderboardData> Leaderboard                    (CPF_Parm | CPF_NeedCtorLink)

TArray<struct FLeaderboardData> UOnlineGameLeaderboards_X::SortLeaderboardDataMMR(TArray<struct FLeaderboardData> Leaderboard)
{
	static UFunction* uFnSortLeaderboardDataMMR = nullptr;

	if (!uFnSortLeaderboardDataMMR)
	{
		uFnSortLeaderboardDataMMR = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.SortLeaderboardDataMMR");
	}

	UOnlineGameLeaderboards_X_execSortLeaderboardDataMMR_Params SortLeaderboardDataMMR_Params;
	memcpy_s(&SortLeaderboardDataMMR_Params.Leaderboard, 0x10, &Leaderboard, 0x10);

	uFnSortLeaderboardDataMMR->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSortLeaderboardDataMMR, &SortLeaderboardDataMMR_Params, nullptr);

	uFnSortLeaderboardDataMMR->FunctionFlags |= 0x400;

	return SortLeaderboardDataMMR_Params.ReturnValue;
};

// Function ProjectX.OnlineGameLeaderboards_X.SortLeaderboardData
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FLeaderboardData> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// TArray<struct FLeaderboardData> Leaderboard                    (CPF_Parm | CPF_NeedCtorLink)

TArray<struct FLeaderboardData> UOnlineGameLeaderboards_X::SortLeaderboardData(TArray<struct FLeaderboardData> Leaderboard)
{
	static UFunction* uFnSortLeaderboardData = nullptr;

	if (!uFnSortLeaderboardData)
	{
		uFnSortLeaderboardData = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.SortLeaderboardData");
	}

	UOnlineGameLeaderboards_X_execSortLeaderboardData_Params SortLeaderboardData_Params;
	memcpy_s(&SortLeaderboardData_Params.Leaderboard, 0x10, &Leaderboard, 0x10);

	uFnSortLeaderboardData->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSortLeaderboardData, &SortLeaderboardData_Params, nullptr);

	uFnSortLeaderboardData->FunctionFlags |= 0x400;

	return SortLeaderboardData_Params.ReturnValue;
};

// Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardFriendsRPC
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboardRankForUsersBase_X* RPC                            (CPF_Parm)

void UOnlineGameLeaderboards_X::HandleGetLeaderboardFriendsRPC(class URPC_GetLeaderboardRankForUsersBase_X* RPC)
{
	static UFunction* uFnHandleGetLeaderboardFriendsRPC = nullptr;

	if (!uFnHandleGetLeaderboardFriendsRPC)
	{
		uFnHandleGetLeaderboardFriendsRPC = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardFriendsRPC");
	}

	UOnlineGameLeaderboards_X_execHandleGetLeaderboardFriendsRPC_Params HandleGetLeaderboardFriendsRPC_Params;
	memcpy_s(&HandleGetLeaderboardFriendsRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleGetLeaderboardFriendsRPC, &HandleGetLeaderboardFriendsRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.DispatchLeaderboardFriendsRequest
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineGameLeaderboards_X::DispatchLeaderboardFriendsRequest()
{
	static UFunction* uFnDispatchLeaderboardFriendsRequest = nullptr;

	if (!uFnDispatchLeaderboardFriendsRequest)
	{
		uFnDispatchLeaderboardFriendsRequest = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.DispatchLeaderboardFriendsRequest");
	}

	UOnlineGameLeaderboards_X_execDispatchLeaderboardFriendsRequest_Params DispatchLeaderboardFriendsRequest_Params;

	this->ProcessEvent(uFnDispatchLeaderboardFriendsRequest, &DispatchLeaderboardFriendsRequest_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardsForAllFriends
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FName                   LeaderboardId                  (CPF_Parm)

void UOnlineGameLeaderboards_X::GetLeaderboardsForAllFriends(struct FName LeaderboardId)
{
	static UFunction* uFnGetLeaderboardsForAllFriends = nullptr;

	if (!uFnGetLeaderboardsForAllFriends)
	{
		uFnGetLeaderboardsForAllFriends = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardsForAllFriends");
	}

	UOnlineGameLeaderboards_X_execGetLeaderboardsForAllFriends_Params GetLeaderboardsForAllFriends_Params;
	memcpy_s(&GetLeaderboardsForAllFriends_Params.LeaderboardId, 0x8, &LeaderboardId, 0x8);

	this->ProcessEvent(uFnGetLeaderboardsForAllFriends, &GetLeaderboardsForAllFriends_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardFriends
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         OnlinePlayer                   (CPF_Parm)
// struct FName                   NewLeaderboardID               (CPF_Parm)
// struct FScriptDelegate         NewDelegate                    (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         FailedDelegate                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameLeaderboards_X::GetLeaderboardFriends(class UOnlinePlayer_X* OnlinePlayer, struct FName NewLeaderboardID, struct FScriptDelegate NewDelegate, struct FScriptDelegate FailedDelegate)
{
	static UFunction* uFnGetLeaderboardFriends = nullptr;

	if (!uFnGetLeaderboardFriends)
	{
		uFnGetLeaderboardFriends = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardFriends");
	}

	UOnlineGameLeaderboards_X_execGetLeaderboardFriends_Params GetLeaderboardFriends_Params;
	memcpy_s(&GetLeaderboardFriends_Params.OnlinePlayer, 0x8, &OnlinePlayer, 0x8);
	memcpy_s(&GetLeaderboardFriends_Params.NewLeaderboardID, 0x8, &NewLeaderboardID, 0x8);
	memcpy_s(&GetLeaderboardFriends_Params.NewDelegate, 0x18, &NewDelegate, 0x18);
	memcpy_s(&GetLeaderboardFriends_Params.FailedDelegate, 0x18, &FailedDelegate, 0x18);

	this->ProcessEvent(uFnGetLeaderboardFriends, &GetLeaderboardFriends_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.RequestClearPendingAvatarDownloads
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameLeaderboards_X::RequestClearPendingAvatarDownloads()
{
	static UFunction* uFnRequestClearPendingAvatarDownloads = nullptr;

	if (!uFnRequestClearPendingAvatarDownloads)
	{
		uFnRequestClearPendingAvatarDownloads = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.RequestClearPendingAvatarDownloads");
	}

	UOnlineGameLeaderboards_X_execRequestClearPendingAvatarDownloads_Params RequestClearPendingAvatarDownloads_Params;

	this->ProcessEvent(uFnRequestClearPendingAvatarDownloads, &RequestClearPendingAvatarDownloads_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardRPC
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboardBase_X* RPC                            (CPF_Parm)

void UOnlineGameLeaderboards_X::HandleGetLeaderboardRPC(class URPC_GetLeaderboardBase_X* RPC)
{
	static UFunction* uFnHandleGetLeaderboardRPC = nullptr;

	if (!uFnHandleGetLeaderboardRPC)
	{
		uFnHandleGetLeaderboardRPC = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardRPC");
	}

	UOnlineGameLeaderboards_X_execHandleGetLeaderboardRPC_Params HandleGetLeaderboardRPC_Params;
	memcpy_s(&HandleGetLeaderboardRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleGetLeaderboardRPC, &HandleGetLeaderboardRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboard
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   NewLeaderboardID               (CPF_Parm)
// unsigned long                  bGlobal                        (CPF_Parm)
// struct FScriptDelegate         NewDelegate                    (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         FailedDelegate                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameLeaderboards_X::GetLeaderboard(struct FName NewLeaderboardID, unsigned long bGlobal, struct FScriptDelegate NewDelegate, struct FScriptDelegate FailedDelegate)
{
	static UFunction* uFnGetLeaderboard = nullptr;

	if (!uFnGetLeaderboard)
	{
		uFnGetLeaderboard = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboard");
	}

	UOnlineGameLeaderboards_X_execGetLeaderboard_Params GetLeaderboard_Params;
	memcpy_s(&GetLeaderboard_Params.NewLeaderboardID, 0x8, &NewLeaderboardID, 0x8);
	GetLeaderboard_Params.bGlobal = bGlobal;
	memcpy_s(&GetLeaderboard_Params.NewDelegate, 0x18, &NewDelegate, 0x18);
	memcpy_s(&GetLeaderboard_Params.FailedDelegate, 0x18, &FailedDelegate, 0x18);

	this->ProcessEvent(uFnGetLeaderboard, &GetLeaderboard_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.GetCachedLeaderboardData
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   LeaderboardId                  (CPF_Parm)
// TArray<struct FLeaderboardData> LeaderboardDataList            (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameLeaderboards_X::GetCachedLeaderboardData(struct FName LeaderboardId, TArray<struct FLeaderboardData>& LeaderboardDataList)
{
	static UFunction* uFnGetCachedLeaderboardData = nullptr;

	if (!uFnGetCachedLeaderboardData)
	{
		uFnGetCachedLeaderboardData = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.GetCachedLeaderboardData");
	}

	UOnlineGameLeaderboards_X_execGetCachedLeaderboardData_Params GetCachedLeaderboardData_Params;
	memcpy_s(&GetCachedLeaderboardData_Params.LeaderboardId, 0x8, &LeaderboardId, 0x8);
	memcpy_s(&GetCachedLeaderboardData_Params.LeaderboardDataList, 0x10, &LeaderboardDataList, 0x10);

	this->ProcessEvent(uFnGetCachedLeaderboardData, &GetCachedLeaderboardData_Params, nullptr);

	memcpy_s(&LeaderboardDataList, 0x10, &GetCachedLeaderboardData_Params.LeaderboardDataList, 0x10);

	return GetCachedLeaderboardData_Params.ReturnValue;
};

// Function ProjectX.OnlineGameLeaderboards_X.CalcDivision
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          TopValue                       (CPF_Parm)
// float                          Value                          (CPF_Parm)

int32_t UOnlineGameLeaderboards_X::CalcDivision(float TopValue, float Value)
{
	static UFunction* uFnCalcDivision = nullptr;

	if (!uFnCalcDivision)
	{
		uFnCalcDivision = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.CalcDivision");
	}

	UOnlineGameLeaderboards_X_execCalcDivision_Params CalcDivision_Params;
	memcpy_s(&CalcDivision_Params.TopValue, 0x4, &TopValue, 0x4);
	memcpy_s(&CalcDivision_Params.Value, 0x4, &Value, 0x4);

	this->ProcessEvent(uFnCalcDivision, &CalcDivision_Params, nullptr);

	return CalcDivision_Params.ReturnValue;
};

// Function ProjectX.OnlineGameLeaderboards_X.GetRankForPrimaryPlayer
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FName                   LeaderboardId                  (CPF_Parm)
// int32_t                        Value                          (CPF_Parm)
// int32_t                        Rank                           (CPF_Parm | CPF_OutParm)
// int32_t                        Division                       (CPF_Parm | CPF_OutParm)

void UOnlineGameLeaderboards_X::GetRankForPrimaryPlayer(struct FName LeaderboardId, int32_t Value, int32_t& Rank, int32_t& Division)
{
	static UFunction* uFnGetRankForPrimaryPlayer = nullptr;

	if (!uFnGetRankForPrimaryPlayer)
	{
		uFnGetRankForPrimaryPlayer = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.GetRankForPrimaryPlayer");
	}

	UOnlineGameLeaderboards_X_execGetRankForPrimaryPlayer_Params GetRankForPrimaryPlayer_Params;
	memcpy_s(&GetRankForPrimaryPlayer_Params.LeaderboardId, 0x8, &LeaderboardId, 0x8);
	memcpy_s(&GetRankForPrimaryPlayer_Params.Value, 0x4, &Value, 0x4);
	memcpy_s(&GetRankForPrimaryPlayer_Params.Rank, 0x4, &Rank, 0x4);
	memcpy_s(&GetRankForPrimaryPlayer_Params.Division, 0x4, &Division, 0x4);

	this->ProcessEvent(uFnGetRankForPrimaryPlayer, &GetRankForPrimaryPlayer_Params, nullptr);

	memcpy_s(&Rank, 0x4, &GetRankForPrimaryPlayer_Params.Rank, 0x4);
	memcpy_s(&Division, 0x4, &GetRankForPrimaryPlayer_Params.Division, 0x4);
};

// Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardPlayerValueRPC
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboardValueForUserBase_X* RPC                            (CPF_Parm)

void UOnlineGameLeaderboards_X::HandleGetLeaderboardPlayerValueRPC(class URPC_GetLeaderboardValueForUserBase_X* RPC)
{
	static UFunction* uFnHandleGetLeaderboardPlayerValueRPC = nullptr;

	if (!uFnHandleGetLeaderboardPlayerValueRPC)
	{
		uFnHandleGetLeaderboardPlayerValueRPC = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.HandleGetLeaderboardPlayerValueRPC");
	}

	UOnlineGameLeaderboards_X_execHandleGetLeaderboardPlayerValueRPC_Params HandleGetLeaderboardPlayerValueRPC_Params;
	memcpy_s(&HandleGetLeaderboardPlayerValueRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleGetLeaderboardPlayerValueRPC, &HandleGetLeaderboardPlayerValueRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardPlayerValue
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   NewLeaderboardID               (CPF_Parm)
// struct FScriptDelegate         NewDelegate                    (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameLeaderboards_X::GetLeaderboardPlayerValue(struct FName NewLeaderboardID, struct FScriptDelegate NewDelegate)
{
	static UFunction* uFnGetLeaderboardPlayerValue = nullptr;

	if (!uFnGetLeaderboardPlayerValue)
	{
		uFnGetLeaderboardPlayerValue = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.GetLeaderboardPlayerValue");
	}

	UOnlineGameLeaderboards_X_execGetLeaderboardPlayerValue_Params GetLeaderboardPlayerValue_Params;
	memcpy_s(&GetLeaderboardPlayerValue_Params.NewLeaderboardID, 0x8, &NewLeaderboardID, 0x8);
	memcpy_s(&GetLeaderboardPlayerValue_Params.NewDelegate, 0x18, &NewDelegate, 0x18);

	this->ProcessEvent(uFnGetLeaderboardPlayerValue, &GetLeaderboardPlayerValue_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.EventGetLeaderboardFailed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameLeaderboards_X::EventGetLeaderboardFailed(class UError* Error)
{
	static UFunction* uFnEventGetLeaderboardFailed = nullptr;

	if (!uFnEventGetLeaderboardFailed)
	{
		uFnEventGetLeaderboardFailed = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.EventGetLeaderboardFailed");
	}

	UOnlineGameLeaderboards_X_execEventGetLeaderboardFailed_Params EventGetLeaderboardFailed_Params;
	memcpy_s(&EventGetLeaderboardFailed_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventGetLeaderboardFailed, &EventGetLeaderboardFailed_Params, nullptr);
};

// Function ProjectX.OnlineGameLeaderboards_X.EventNewLeaderboard
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FName                   NewLeaderboardID               (CPF_Parm)
// TArray<struct FLeaderboardData> NewLeaderboardData             (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameLeaderboards_X::EventNewLeaderboard(struct FName NewLeaderboardID, TArray<struct FLeaderboardData>& NewLeaderboardData)
{
	static UFunction* uFnEventNewLeaderboard = nullptr;

	if (!uFnEventNewLeaderboard)
	{
		uFnEventNewLeaderboard = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.EventNewLeaderboard");
	}

	UOnlineGameLeaderboards_X_execEventNewLeaderboard_Params EventNewLeaderboard_Params;
	memcpy_s(&EventNewLeaderboard_Params.NewLeaderboardID, 0x8, &NewLeaderboardID, 0x8);
	memcpy_s(&EventNewLeaderboard_Params.NewLeaderboardData, 0x10, &NewLeaderboardData, 0x10);

	this->ProcessEvent(uFnEventNewLeaderboard, &EventNewLeaderboard_Params, nullptr);

	memcpy_s(&NewLeaderboardData, 0x10, &EventNewLeaderboard_Params.NewLeaderboardData, 0x10);
};

// Function ProjectX.OnlineGameLeaderboards_X.OnGetLeaderboardPlayerValue
// [0x00524001] (FUNC_Final | FUNC_NetMulticast | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameLeaderboards_X* LeaderboardsRef                (CPF_Parm)
// struct FName                   LeaderboardId                  (CPF_Parm)
// class UError*                  Error                          (CPF_OptionalParm | CPF_Parm)
// struct FLeaderboardData        PlayerLeaderboardData          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameLeaderboards_X::OnGetLeaderboardPlayerValue(class UOnlineGameLeaderboards_X* LeaderboardsRef, struct FName LeaderboardId, class UError* Error, struct FLeaderboardData& PlayerLeaderboardData)
{
	static UFunction* uFnOnGetLeaderboardPlayerValue = nullptr;

	if (!uFnOnGetLeaderboardPlayerValue)
	{
		uFnOnGetLeaderboardPlayerValue = UFunction::FindFunction("Function ProjectX.OnlineGameLeaderboards_X.OnGetLeaderboardPlayerValue");
	}

	UOnlineGameLeaderboards_X_execOnGetLeaderboardPlayerValue_Params OnGetLeaderboardPlayerValue_Params;
	memcpy_s(&OnGetLeaderboardPlayerValue_Params.LeaderboardsRef, 0x8, &LeaderboardsRef, 0x8);
	memcpy_s(&OnGetLeaderboardPlayerValue_Params.LeaderboardId, 0x8, &LeaderboardId, 0x8);
	memcpy_s(&OnGetLeaderboardPlayerValue_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&OnGetLeaderboardPlayerValue_Params.PlayerLeaderboardData, 0x80, &PlayerLeaderboardData, 0x80);

	this->ProcessEvent(uFnOnGetLeaderboardPlayerValue, &OnGetLeaderboardPlayerValue_Params, nullptr);

	memcpy_s(&PlayerLeaderboardData, 0x80, &OnGetLeaderboardPlayerValue_Params.PlayerLeaderboardData, 0x80);
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__OnInit_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameReservations_X::__OnlineGameReservations_X__OnInit_0x3(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFn__OnlineGameReservations_X__OnInit_0x3 = nullptr;

	if (!uFn__OnlineGameReservations_X__OnInit_0x3)
	{
		uFn__OnlineGameReservations_X__OnInit_0x3 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__OnInit_0x3");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__OnInit_0x3_Params __OnlineGameReservations_X__OnInit_0x3_Params;
	memcpy_s(&__OnlineGameReservations_X__OnInit_0x3_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&__OnlineGameReservations_X__OnInit_0x3_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFn__OnlineGameReservations_X__OnInit_0x3, &__OnlineGameReservations_X__OnInit_0x3_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__OnInit_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameReservations_X::__OnlineGameReservations_X__OnInit_0x2(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFn__OnlineGameReservations_X__OnInit_0x2 = nullptr;

	if (!uFn__OnlineGameReservations_X__OnInit_0x2)
	{
		uFn__OnlineGameReservations_X__OnInit_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__OnInit_0x2");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__OnInit_0x2_Params __OnlineGameReservations_X__OnInit_0x2_Params;
	memcpy_s(&__OnlineGameReservations_X__OnInit_0x2_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&__OnlineGameReservations_X__OnInit_0x2_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFn__OnlineGameReservations_X__OnInit_0x2, &__OnlineGameReservations_X__OnInit_0x2_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__OnInit_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameReservations_X::__OnlineGameReservations_X__OnInit_0x1(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFn__OnlineGameReservations_X__OnInit_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__OnInit_0x1)
	{
		uFn__OnlineGameReservations_X__OnInit_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__OnInit_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__OnInit_0x1_Params __OnlineGameReservations_X__OnInit_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__OnInit_0x1_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&__OnlineGameReservations_X__OnInit_0x1_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFn__OnlineGameReservations_X__OnInit_0x1, &__OnlineGameReservations_X__OnInit_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FMigrationReservationData P                              (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2(struct FMigrationReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2 = nullptr;

	if (!uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2)
	{
		uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2_Params __OnlineGameReservations_X__SetPlayersWithMigrationData_0x2_Params;
	memcpy_s(&__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2_Params.P, 0xE0, &P, 0xE0);

	this->ProcessEvent(uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2, &__OnlineGameReservations_X__SetPlayersWithMigrationData_0x2_Params, nullptr);

	return __OnlineGameReservations_X__SetPlayersWithMigrationData_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FPsyNetBeaconPlayerReservation P                              (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameReservations_X::__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1(struct FPsyNetBeaconPlayerReservation P)
{
	static UFunction* uFn__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1)
	{
		uFn__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1_Params __OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1_Params.P, 0x60, &P, 0x60);

	this->ProcessEvent(uFn__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1, &__OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1_Params, nullptr);

	return __OnlineGameReservations_X__HandlePsyNetBeaconReservation_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HandlePublicReservation_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::__OnlineGameReservations_X__HandlePublicReservation_0x2(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__HandlePublicReservation_0x2 = nullptr;

	if (!uFn__OnlineGameReservations_X__HandlePublicReservation_0x2)
	{
		uFn__OnlineGameReservations_X__HandlePublicReservation_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HandlePublicReservation_0x2");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HandlePublicReservation_0x2_Params __OnlineGameReservations_X__HandlePublicReservation_0x2_Params;
	memcpy_s(&__OnlineGameReservations_X__HandlePublicReservation_0x2_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__HandlePublicReservation_0x2, &__OnlineGameReservations_X__HandlePublicReservation_0x2_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HandlePublicReservation_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::__OnlineGameReservations_X__HandlePublicReservation_0x1(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__HandlePublicReservation_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__HandlePublicReservation_0x1)
	{
		uFn__OnlineGameReservations_X__HandlePublicReservation_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HandlePublicReservation_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HandlePublicReservation_0x1_Params __OnlineGameReservations_X__HandlePublicReservation_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__HandlePublicReservation_0x1_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__HandlePublicReservation_0x1, &__OnlineGameReservations_X__HandlePublicReservation_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__IsFull_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameReservations_X::__OnlineGameReservations_X__IsFull_0x2(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__IsFull_0x2 = nullptr;

	if (!uFn__OnlineGameReservations_X__IsFull_0x2)
	{
		uFn__OnlineGameReservations_X__IsFull_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__IsFull_0x2");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__IsFull_0x2_Params __OnlineGameReservations_X__IsFull_0x2_Params;
	memcpy_s(&__OnlineGameReservations_X__IsFull_0x2_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__IsFull_0x2, &__OnlineGameReservations_X__IsFull_0x2_Params, nullptr);

	return __OnlineGameReservations_X__IsFull_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__IsFull_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::__OnlineGameReservations_X__IsFull_0x1(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__IsFull_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__IsFull_0x1)
	{
		uFn__OnlineGameReservations_X__IsFull_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__IsFull_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__IsFull_0x1_Params __OnlineGameReservations_X__IsFull_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__IsFull_0x1_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__IsFull_0x1, &__OnlineGameReservations_X__IsFull_0x1_Params, nullptr);

	return __OnlineGameReservations_X__IsFull_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasTimeoutPlayers_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameReservations_X::__OnlineGameReservations_X__HasTimeoutPlayers_0x2(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__HasTimeoutPlayers_0x2 = nullptr;

	if (!uFn__OnlineGameReservations_X__HasTimeoutPlayers_0x2)
	{
		uFn__OnlineGameReservations_X__HasTimeoutPlayers_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasTimeoutPlayers_0x2");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HasTimeoutPlayers_0x2_Params __OnlineGameReservations_X__HasTimeoutPlayers_0x2_Params;
	memcpy_s(&__OnlineGameReservations_X__HasTimeoutPlayers_0x2_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__HasTimeoutPlayers_0x2, &__OnlineGameReservations_X__HasTimeoutPlayers_0x2_Params, nullptr);

	return __OnlineGameReservations_X__HasTimeoutPlayers_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasTimeoutPlayers_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::__OnlineGameReservations_X__HasTimeoutPlayers_0x1(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__HasTimeoutPlayers_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__HasTimeoutPlayers_0x1)
	{
		uFn__OnlineGameReservations_X__HasTimeoutPlayers_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasTimeoutPlayers_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HasTimeoutPlayers_0x1_Params __OnlineGameReservations_X__HasTimeoutPlayers_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__HasTimeoutPlayers_0x1_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__HasTimeoutPlayers_0x1, &__OnlineGameReservations_X__HasTimeoutPlayers_0x1_Params, nullptr);

	return __OnlineGameReservations_X__HasTimeoutPlayers_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasMultipleReservedTeams_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TeamID                         (CPF_Parm)

bool UOnlineGameReservations_X::__OnlineGameReservations_X__HasMultipleReservedTeams_0x2(int32_t TeamID)
{
	static UFunction* uFn__OnlineGameReservations_X__HasMultipleReservedTeams_0x2 = nullptr;

	if (!uFn__OnlineGameReservations_X__HasMultipleReservedTeams_0x2)
	{
		uFn__OnlineGameReservations_X__HasMultipleReservedTeams_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasMultipleReservedTeams_0x2");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HasMultipleReservedTeams_0x2_Params __OnlineGameReservations_X__HasMultipleReservedTeams_0x2_Params;
	memcpy_s(&__OnlineGameReservations_X__HasMultipleReservedTeams_0x2_Params.TeamID, 0x4, &TeamID, 0x4);

	this->ProcessEvent(uFn__OnlineGameReservations_X__HasMultipleReservedTeams_0x2, &__OnlineGameReservations_X__HasMultipleReservedTeams_0x2_Params, nullptr);

	return __OnlineGameReservations_X__HasMultipleReservedTeams_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasMultipleReservedTeams_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

int32_t UOnlineGameReservations_X::__OnlineGameReservations_X__HasMultipleReservedTeams_0x1(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__HasMultipleReservedTeams_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__HasMultipleReservedTeams_0x1)
	{
		uFn__OnlineGameReservations_X__HasMultipleReservedTeams_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__HasMultipleReservedTeams_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__HasMultipleReservedTeams_0x1_Params __OnlineGameReservations_X__HasMultipleReservedTeams_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__HasMultipleReservedTeams_0x1_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__HasMultipleReservedTeams_0x1, &__OnlineGameReservations_X__HasMultipleReservedTeams_0x1_Params, nullptr);

	return __OnlineGameReservations_X__HasMultipleReservedTeams_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__AllPlayersReserved_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::__OnlineGameReservations_X__AllPlayersReserved_0x1(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__AllPlayersReserved_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__AllPlayersReserved_0x1)
	{
		uFn__OnlineGameReservations_X__AllPlayersReserved_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__AllPlayersReserved_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__AllPlayersReserved_0x1_Params __OnlineGameReservations_X__AllPlayersReserved_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__AllPlayersReserved_0x1_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__AllPlayersReserved_0x1, &__OnlineGameReservations_X__AllPlayersReserved_0x1_Params, nullptr);

	return __OnlineGameReservations_X__AllPlayersReserved_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__AllPlayersInGame_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameReservations_X::__OnlineGameReservations_X__AllPlayersInGame_0x2(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__AllPlayersInGame_0x2 = nullptr;

	if (!uFn__OnlineGameReservations_X__AllPlayersInGame_0x2)
	{
		uFn__OnlineGameReservations_X__AllPlayersInGame_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__AllPlayersInGame_0x2");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__AllPlayersInGame_0x2_Params __OnlineGameReservations_X__AllPlayersInGame_0x2_Params;
	memcpy_s(&__OnlineGameReservations_X__AllPlayersInGame_0x2_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__AllPlayersInGame_0x2, &__OnlineGameReservations_X__AllPlayersInGame_0x2_Params, nullptr);

	return __OnlineGameReservations_X__AllPlayersInGame_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__AllPlayersInGame_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::__OnlineGameReservations_X__AllPlayersInGame_0x1(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__AllPlayersInGame_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__AllPlayersInGame_0x1)
	{
		uFn__OnlineGameReservations_X__AllPlayersInGame_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__AllPlayersInGame_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__AllPlayersInGame_0x1_Params __OnlineGameReservations_X__AllPlayersInGame_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__AllPlayersInGame_0x1_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__AllPlayersInGame_0x1, &__OnlineGameReservations_X__AllPlayersInGame_0x1_Params, nullptr);

	return __OnlineGameReservations_X__AllPlayersInGame_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__SetServerTraveling_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FPendingReservation     P                              (CPF_Parm)

void UOnlineGameReservations_X::__OnlineGameReservations_X__SetServerTraveling_0x1(struct FPendingReservation P)
{
	static UFunction* uFn__OnlineGameReservations_X__SetServerTraveling_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__SetServerTraveling_0x1)
	{
		uFn__OnlineGameReservations_X__SetServerTraveling_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__SetServerTraveling_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__SetServerTraveling_0x1_Params __OnlineGameReservations_X__SetServerTraveling_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__SetServerTraveling_0x1_Params.P, 0x18, &P, 0x18);

	this->ProcessEvent(uFn__OnlineGameReservations_X__SetServerTraveling_0x1, &__OnlineGameReservations_X__SetServerTraveling_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__GetPlayerIDs_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReservationData        Player                         (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameReservations_X::__OnlineGameReservations_X__GetPlayerIDs_0x1(struct FReservationData Player)
{
	static UFunction* uFn__OnlineGameReservations_X__GetPlayerIDs_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__GetPlayerIDs_0x1)
	{
		uFn__OnlineGameReservations_X__GetPlayerIDs_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__OnlineGameReservations_X__GetPlayerIDs_0x1");
	}

	UOnlineGameReservations_X_exec__OnlineGameReservations_X__GetPlayerIDs_0x1_Params __OnlineGameReservations_X__GetPlayerIDs_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__GetPlayerIDs_0x1_Params.Player, 0x108, &Player, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__GetPlayerIDs_0x1, &__OnlineGameReservations_X__GetPlayerIDs_0x1_Params, nullptr);

	return __OnlineGameReservations_X__GetPlayerIDs_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.__bMatchStarted__ChangeNotifyFunc
// [0x00000000] 
// Parameter info:

void UOnlineGameReservations_X::__bMatchStarted__ChangeNotifyFunc()
{
	static UFunction* uFn__bMatchStarted__ChangeNotifyFunc = nullptr;

	if (!uFn__bMatchStarted__ChangeNotifyFunc)
	{
		uFn__bMatchStarted__ChangeNotifyFunc = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.__bMatchStarted__ChangeNotifyFunc");
	}

	UOnlineGameReservations_X_exec__bMatchStarted__ChangeNotifyFunc_Params __bMatchStarted__ChangeNotifyFunc_Params;

	this->ProcessEvent(uFn__bMatchStarted__ChangeNotifyFunc, &__bMatchStarted__ChangeNotifyFunc_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.GetPlayerIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FUniqueNetId> UOnlineGameReservations_X::GetPlayerIDs()
{
	static UFunction* uFnGetPlayerIDs = nullptr;

	if (!uFnGetPlayerIDs)
	{
		uFnGetPlayerIDs = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetPlayerIDs");
	}

	UOnlineGameReservations_X_execGetPlayerIDs_Params GetPlayerIDs_Params;

	this->ProcessEvent(uFnGetPlayerIDs, &GetPlayerIDs_Params, nullptr);

	return GetPlayerIDs_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetMapLoadTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Platform                       (CPF_Parm)

float UOnlineGameReservations_X::GetMapLoadTimeout(uint8_t Platform)
{
	static UFunction* uFnGetMapLoadTimeout = nullptr;

	if (!uFnGetMapLoadTimeout)
	{
		uFnGetMapLoadTimeout = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetMapLoadTimeout");
	}

	UOnlineGameReservations_X_execGetMapLoadTimeout_Params GetMapLoadTimeout_Params;
	memcpy_s(&GetMapLoadTimeout_Params.Platform, 0x1, &Platform, 0x1);

	this->ProcessEvent(uFnGetMapLoadTimeout, &GetMapLoadTimeout_Params, nullptr);

	return GetMapLoadTimeout_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetAccumulatedPrefs
// [0x00C20003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// TArray<struct FName>           Likes                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<struct FName>           Dislikes                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::GetAccumulatedPrefs(TArray<struct FName>& Likes, TArray<struct FName>& Dislikes)
{
	static UFunction* uFnGetAccumulatedPrefs = nullptr;

	if (!uFnGetAccumulatedPrefs)
	{
		uFnGetAccumulatedPrefs = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetAccumulatedPrefs");
	}

	UOnlineGameReservations_X_execGetAccumulatedPrefs_Params GetAccumulatedPrefs_Params;
	memcpy_s(&GetAccumulatedPrefs_Params.Likes, 0x10, &Likes, 0x10);
	memcpy_s(&GetAccumulatedPrefs_Params.Dislikes, 0x10, &Dislikes, 0x10);

	this->ProcessEvent(uFnGetAccumulatedPrefs, &GetAccumulatedPrefs_Params, nullptr);

	memcpy_s(&Likes, 0x10, &GetAccumulatedPrefs_Params.Likes, 0x10);
	memcpy_s(&Dislikes, 0x10, &GetAccumulatedPrefs_Params.Dislikes, 0x10);
};

// Function ProjectX.OnlineGameReservations_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGameReservations_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.PrintDebugInfo");
	}

	UOnlineGameReservations_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.GetMetrics
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UReservationsMetrics_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UReservationsMetrics_X* UOnlineGameReservations_X::GetMetrics()
{
	static UFunction* uFnGetMetrics = nullptr;

	if (!uFnGetMetrics)
	{
		uFnGetMetrics = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetMetrics");
	}

	UOnlineGameReservations_X_execGetMetrics_Params GetMetrics_Params;

	this->ProcessEvent(uFnGetMetrics, &GetMetrics_Params, nullptr);

	return GetMetrics_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.OnNewGameInfoCreated
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             Game                           (CPF_Parm)

void UOnlineGameReservations_X::OnNewGameInfoCreated(class AGameInfo_X* Game)
{
	static UFunction* uFnOnNewGameInfoCreated = nullptr;

	if (!uFnOnNewGameInfoCreated)
	{
		uFnOnNewGameInfoCreated = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.OnNewGameInfoCreated");
	}

	UOnlineGameReservations_X_execOnNewGameInfoCreated_Params OnNewGameInfoCreated_Params;
	memcpy_s(&OnNewGameInfoCreated_Params.Game, 0x8, &Game, 0x8);

	this->ProcessEvent(uFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HasSplitscreenPlayers
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::HasSplitscreenPlayers()
{
	static UFunction* uFnHasSplitscreenPlayers = nullptr;

	if (!uFnHasSplitscreenPlayers)
	{
		uFnHasSplitscreenPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HasSplitscreenPlayers");
	}

	UOnlineGameReservations_X_execHasSplitscreenPlayers_Params HasSplitscreenPlayers_Params;

	this->ProcessEvent(uFnHasSplitscreenPlayers, &HasSplitscreenPlayers_Params, nullptr);

	return HasSplitscreenPlayers_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.SetParty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PartyID                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::SetParty(struct FUniqueNetId MemberId, struct FUniqueNetId PartyID)
{
	static UFunction* uFnSetParty = nullptr;

	if (!uFnSetParty)
	{
		uFnSetParty = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SetParty");
	}

	UOnlineGameReservations_X_execSetParty_Params SetParty_Params;
	memcpy_s(&SetParty_Params.MemberId, 0x48, &MemberId, 0x48);
	memcpy_s(&SetParty_Params.PartyID, 0x48, &PartyID, 0x48);

	this->ProcessEvent(uFnSetParty, &SetParty_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.GetPartyID
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameReservations_X::GetPartyID(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPartyID = nullptr;

	if (!uFnGetPartyID)
	{
		uFnGetPartyID = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetPartyID");
	}

	UOnlineGameReservations_X_execGetPartyID_Params GetPartyID_Params;
	memcpy_s(&GetPartyID_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPartyID, &GetPartyID_Params, nullptr);

	return GetPartyID_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetTeamNum
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

uint8_t UOnlineGameReservations_X::GetTeamNum(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetTeamNum = nullptr;

	if (!uFnGetTeamNum)
	{
		uFnGetTeamNum = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetTeamNum");
	}

	UOnlineGameReservations_X_execGetTeamNum_Params GetTeamNum_Params;
	memcpy_s(&GetTeamNum_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetTeamNum, &GetTeamNum_Params, nullptr);

	return GetTeamNum_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetPlayersPlatformsString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameReservations_X::GetPlayersPlatformsString()
{
	static UFunction* uFnGetPlayersPlatformsString = nullptr;

	if (!uFnGetPlayersPlatformsString)
	{
		uFnGetPlayersPlatformsString = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetPlayersPlatformsString");
	}

	UOnlineGameReservations_X_execGetPlayersPlatformsString_Params GetPlayersPlatformsString_Params;

	this->ProcessEvent(uFnGetPlayersPlatformsString, &GetPlayersPlatformsString_Params, nullptr);

	return GetPlayersPlatformsString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetPlatformsString
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// TArray<uint8_t>                Platforms                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class FString UOnlineGameReservations_X::GetPlatformsString(TArray<uint8_t>& Platforms)
{
	static UFunction* uFnGetPlatformsString = nullptr;

	if (!uFnGetPlatformsString)
	{
		uFnGetPlatformsString = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetPlatformsString");
	}

	UOnlineGameReservations_X_execGetPlatformsString_Params GetPlatformsString_Params;
	memcpy_s(&GetPlatformsString_Params.Platforms, 0x10, &Platforms, 0x10);

	this->ProcessEvent(uFnGetPlatformsString, &GetPlatformsString_Params, nullptr);

	memcpy_s(&Platforms, 0x10, &GetPlatformsString_Params.Platforms, 0x10);

	return GetPlatformsString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetPlayerPlatforms
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<uint8_t>                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<uint8_t> UOnlineGameReservations_X::GetPlayerPlatforms()
{
	static UFunction* uFnGetPlayerPlatforms = nullptr;

	if (!uFnGetPlayerPlatforms)
	{
		uFnGetPlayerPlatforms = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetPlayerPlatforms");
	}

	UOnlineGameReservations_X_execGetPlayerPlatforms_Params GetPlayerPlatforms_Params;

	this->ProcessEvent(uFnGetPlayerPlatforms, &GetPlayerPlatforms_Params, nullptr);

	return GetPlayerPlatforms_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.CanPlayTogether
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Platform1                      (CPF_Parm)
// uint8_t                        Platform2                      (CPF_Parm)

bool UOnlineGameReservations_X::CanPlayTogether(uint8_t Platform1, uint8_t Platform2)
{
	static UFunction* uFnCanPlayTogether = nullptr;

	if (!uFnCanPlayTogether)
	{
		uFnCanPlayTogether = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CanPlayTogether");
	}

	UOnlineGameReservations_X_execCanPlayTogether_Params CanPlayTogether_Params;
	memcpy_s(&CanPlayTogether_Params.Platform1, 0x1, &Platform1, 0x1);
	memcpy_s(&CanPlayTogether_Params.Platform2, 0x1, &Platform2, 0x1);

	this->ProcessEvent(uFnCanPlayTogether, &CanPlayTogether_Params, nullptr);

	return CanPlayTogether_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.CanAcceptReservationsForPlatform
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAddReservationMessagePublic_X* Message                        (CPF_Parm)

bool UOnlineGameReservations_X::CanAcceptReservationsForPlatform(class UAddReservationMessagePublic_X* Message)
{
	static UFunction* uFnCanAcceptReservationsForPlatform = nullptr;

	if (!uFnCanAcceptReservationsForPlatform)
	{
		uFnCanAcceptReservationsForPlatform = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CanAcceptReservationsForPlatform");
	}

	UOnlineGameReservations_X_execCanAcceptReservationsForPlatform_Params CanAcceptReservationsForPlatform_Params;
	memcpy_s(&CanAcceptReservationsForPlatform_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnCanAcceptReservationsForPlatform, &CanAcceptReservationsForPlatform_Params, nullptr);

	return CanAcceptReservationsForPlatform_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.ShouldCheckPlatformRestrictions
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAddReservationMessagePublic_X* Message                        (CPF_Parm)

bool UOnlineGameReservations_X::ShouldCheckPlatformRestrictions(class UAddReservationMessagePublic_X* Message)
{
	static UFunction* uFnShouldCheckPlatformRestrictions = nullptr;

	if (!uFnShouldCheckPlatformRestrictions)
	{
		uFnShouldCheckPlatformRestrictions = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.ShouldCheckPlatformRestrictions");
	}

	UOnlineGameReservations_X_execShouldCheckPlatformRestrictions_Params ShouldCheckPlatformRestrictions_Params;
	memcpy_s(&ShouldCheckPlatformRestrictions_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnShouldCheckPlatformRestrictions, &ShouldCheckPlatformRestrictions_Params, nullptr);

	return ShouldCheckPlatformRestrictions_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetExclusivePlatform
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

uint8_t UOnlineGameReservations_X::GetExclusivePlatform()
{
	static UFunction* uFnGetExclusivePlatform = nullptr;

	if (!uFnGetExclusivePlatform)
	{
		uFnGetExclusivePlatform = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetExclusivePlatform");
	}

	UOnlineGameReservations_X_execGetExclusivePlatform_Params GetExclusivePlatform_Params;

	this->ProcessEvent(uFnGetExclusivePlatform, &GetExclusivePlatform_Params, nullptr);

	return GetExclusivePlatform_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.CanAcceptReservations
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAddReservationMessagePublic_X* Message                        (CPF_Parm)

bool UOnlineGameReservations_X::CanAcceptReservations(class UAddReservationMessagePublic_X* Message)
{
	static UFunction* uFnCanAcceptReservations = nullptr;

	if (!uFnCanAcceptReservations)
	{
		uFnCanAcceptReservations = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CanAcceptReservations");
	}

	UOnlineGameReservations_X_execCanAcceptReservations_Params CanAcceptReservations_Params;
	memcpy_s(&CanAcceptReservations_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnCanAcceptReservations, &CanAcceptReservations_Params, nullptr);

	return CanAcceptReservations_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetPlayerCounts
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        Team0Reserved                  (CPF_Parm | CPF_OutParm)
// int32_t                        Team0Joined                    (CPF_Parm | CPF_OutParm)
// int32_t                        Team1Reserved                  (CPF_Parm | CPF_OutParm)
// int32_t                        Team1Joined                    (CPF_Parm | CPF_OutParm)

void UOnlineGameReservations_X::GetPlayerCounts(int32_t& Team0Reserved, int32_t& Team0Joined, int32_t& Team1Reserved, int32_t& Team1Joined)
{
	static UFunction* uFnGetPlayerCounts = nullptr;

	if (!uFnGetPlayerCounts)
	{
		uFnGetPlayerCounts = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetPlayerCounts");
	}

	UOnlineGameReservations_X_execGetPlayerCounts_Params GetPlayerCounts_Params;
	memcpy_s(&GetPlayerCounts_Params.Team0Reserved, 0x4, &Team0Reserved, 0x4);
	memcpy_s(&GetPlayerCounts_Params.Team0Joined, 0x4, &Team0Joined, 0x4);
	memcpy_s(&GetPlayerCounts_Params.Team1Reserved, 0x4, &Team1Reserved, 0x4);
	memcpy_s(&GetPlayerCounts_Params.Team1Joined, 0x4, &Team1Joined, 0x4);

	this->ProcessEvent(uFnGetPlayerCounts, &GetPlayerCounts_Params, nullptr);

	memcpy_s(&Team0Reserved, 0x4, &GetPlayerCounts_Params.Team0Reserved, 0x4);
	memcpy_s(&Team0Joined, 0x4, &GetPlayerCounts_Params.Team0Joined, 0x4);
	memcpy_s(&Team1Reserved, 0x4, &GetPlayerCounts_Params.Team1Reserved, 0x4);
	memcpy_s(&Team1Joined, 0x4, &GetPlayerCounts_Params.Team1Joined, 0x4);
};

// Function ProjectX.OnlineGameReservations_X.NotifyReservationsUpdated
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::NotifyReservationsUpdated()
{
	static UFunction* uFnNotifyReservationsUpdated = nullptr;

	if (!uFnNotifyReservationsUpdated)
	{
		uFnNotifyReservationsUpdated = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.NotifyReservationsUpdated");
	}

	UOnlineGameReservations_X_execNotifyReservationsUpdated_Params NotifyReservationsUpdated_Params;

	this->ProcessEvent(uFnNotifyReservationsUpdated, &NotifyReservationsUpdated_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.OnReservationsUpdated
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::OnReservationsUpdated()
{
	static UFunction* uFnOnReservationsUpdated = nullptr;

	if (!uFnOnReservationsUpdated)
	{
		uFnOnReservationsUpdated = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.OnReservationsUpdated");
	}

	UOnlineGameReservations_X_execOnReservationsUpdated_Params OnReservationsUpdated_Params;

	this->ProcessEvent(uFnOnReservationsUpdated, &OnReservationsUpdated_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.CheckMapLoadTimeout
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::CheckMapLoadTimeout()
{
	static UFunction* uFnCheckMapLoadTimeout = nullptr;

	if (!uFnCheckMapLoadTimeout)
	{
		uFnCheckMapLoadTimeout = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CheckMapLoadTimeout");
	}

	UOnlineGameReservations_X_execCheckMapLoadTimeout_Params CheckMapLoadTimeout_Params;

	this->ProcessEvent(uFnCheckMapLoadTimeout, &CheckMapLoadTimeout_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.StartMapLoadTimeout
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::StartMapLoadTimeout()
{
	static UFunction* uFnStartMapLoadTimeout = nullptr;

	if (!uFnStartMapLoadTimeout)
	{
		uFnStartMapLoadTimeout = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.StartMapLoadTimeout");
	}

	UOnlineGameReservations_X_execStartMapLoadTimeout_Params StartMapLoadTimeout_Params;

	this->ProcessEvent(uFnStartMapLoadTimeout, &StartMapLoadTimeout_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.SyncSkills
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::SyncSkills()
{
	static UFunction* uFnSyncSkills = nullptr;

	if (!uFnSyncSkills)
	{
		uFnSyncSkills = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SyncSkills");
	}

	UOnlineGameReservations_X_execSyncSkills_Params SyncSkills_Params;

	this->ProcessEvent(uFnSyncSkills, &SyncSkills_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HackForceNotServerTravelling
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::HackForceNotServerTravelling()
{
	static UFunction* uFnHackForceNotServerTravelling = nullptr;

	if (!uFnHackForceNotServerTravelling)
	{
		uFnHackForceNotServerTravelling = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HackForceNotServerTravelling");
	}

	UOnlineGameReservations_X_execHackForceNotServerTravelling_Params HackForceNotServerTravelling_Params;

	this->ProcessEvent(uFnHackForceNotServerTravelling, &HackForceNotServerTravelling_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.SwapTeams
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::SwapTeams()
{
	static UFunction* uFnSwapTeams = nullptr;

	if (!uFnSwapTeams)
	{
		uFnSwapTeams = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SwapTeams");
	}

	UOnlineGameReservations_X_execSwapTeams_Params SwapTeams_Params;

	this->ProcessEvent(uFnSwapTeams, &SwapTeams_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.SetServerTraveling
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bTraveling                     (CPF_Parm)

void UOnlineGameReservations_X::SetServerTraveling(unsigned long bTraveling)
{
	static UFunction* uFnSetServerTraveling = nullptr;

	if (!uFnSetServerTraveling)
	{
		uFnSetServerTraveling = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SetServerTraveling");
	}

	UOnlineGameReservations_X_execSetServerTraveling_Params SetServerTraveling_Params;
	SetServerTraveling_Params.bTraveling = bTraveling;

	this->ProcessEvent(uFnSetServerTraveling, &SetServerTraveling_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.CloseConnection
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        Index                          (CPF_Parm)

void UOnlineGameReservations_X::CloseConnection(int32_t Index)
{
	static UFunction* uFnCloseConnection = nullptr;

	if (!uFnCloseConnection)
	{
		uFnCloseConnection = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CloseConnection");
	}

	UOnlineGameReservations_X_execCloseConnection_Params CloseConnection_Params;
	memcpy_s(&CloseConnection_Params.Index, 0x4, &Index, 0x4);

	this->ProcessEvent(uFnCloseConnection, &CloseConnection_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.RemoveReservationIndex
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        Index                          (CPF_Parm)

void UOnlineGameReservations_X::RemoveReservationIndex(int32_t Index)
{
	static UFunction* uFnRemoveReservationIndex = nullptr;

	if (!uFnRemoveReservationIndex)
	{
		uFnRemoveReservationIndex = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.RemoveReservationIndex");
	}

	UOnlineGameReservations_X_execRemoveReservationIndex_Params RemoveReservationIndex_Params;
	memcpy_s(&RemoveReservationIndex_Params.Index, 0x4, &Index, 0x4);

	this->ProcessEvent(uFnRemoveReservationIndex, &RemoveReservationIndex_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.AddSpecialReservation
// [0x00084003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PartyID                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

int32_t UOnlineGameReservations_X::AddSpecialReservation(struct FUniqueNetId PlayerID, class FString PlayerName, struct FUniqueNetId PartyID)
{
	static UFunction* uFnAddSpecialReservation = nullptr;

	if (!uFnAddSpecialReservation)
	{
		uFnAddSpecialReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AddSpecialReservation");
	}

	UOnlineGameReservations_X_execAddSpecialReservation_Params AddSpecialReservation_Params;
	memcpy_s(&AddSpecialReservation_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AddSpecialReservation_Params.PlayerName, 0x10, &PlayerName, 0x10);
	memcpy_s(&AddSpecialReservation_Params.PartyID, 0x48, &PartyID, 0x48);

	this->ProcessEvent(uFnAddSpecialReservation, &AddSpecialReservation_Params, nullptr);

	return AddSpecialReservation_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HandleTeamChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class APRI_X*                  PRI                            (CPF_Parm)

void UOnlineGameReservations_X::HandleTeamChanged(class APRI_X* PRI)
{
	static UFunction* uFnHandleTeamChanged = nullptr;

	if (!uFnHandleTeamChanged)
	{
		uFnHandleTeamChanged = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleTeamChanged");
	}

	UOnlineGameReservations_X_execHandleTeamChanged_Params HandleTeamChanged_Params;
	memcpy_s(&HandleTeamChanged_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnHandleTeamChanged, &HandleTeamChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.RemoveReservation
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::RemoveReservation(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnRemoveReservation = nullptr;

	if (!uFnRemoveReservation)
	{
		uFnRemoveReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.RemoveReservation");
	}

	UOnlineGameReservations_X_execRemoveReservation_Params RemoveReservation_Params;
	memcpy_s(&RemoveReservation_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnRemoveReservation, &RemoveReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.PlayerLoggedOut
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

void UOnlineGameReservations_X::PlayerLoggedOut(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnPlayerLoggedOut = nullptr;

	if (!uFnPlayerLoggedOut)
	{
		uFnPlayerLoggedOut = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.PlayerLoggedOut");
	}

	UOnlineGameReservations_X_execPlayerLoggedOut_Params PlayerLoggedOut_Params;
	memcpy_s(&PlayerLoggedOut_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnPlayerLoggedOut, &PlayerLoggedOut_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.PlayerLoggedIn
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

void UOnlineGameReservations_X::PlayerLoggedIn(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnPlayerLoggedIn = nullptr;

	if (!uFnPlayerLoggedIn)
	{
		uFnPlayerLoggedIn = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.PlayerLoggedIn");
	}

	UOnlineGameReservations_X_execPlayerLoggedIn_Params PlayerLoggedIn_Params;
	memcpy_s(&PlayerLoggedIn_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnPlayerLoggedIn, &PlayerLoggedIn_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.AllowPlayerLogin
// [0x00420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ErrorMessage                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::AllowPlayerLogin(class FString Options, struct FUniqueNetId PlayerID, class FString& ErrorMessage)
{
	static UFunction* uFnAllowPlayerLogin = nullptr;

	if (!uFnAllowPlayerLogin)
	{
		uFnAllowPlayerLogin = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AllowPlayerLogin");
	}

	UOnlineGameReservations_X_execAllowPlayerLogin_Params AllowPlayerLogin_Params;
	memcpy_s(&AllowPlayerLogin_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&AllowPlayerLogin_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AllowPlayerLogin_Params.ErrorMessage, 0x10, &ErrorMessage, 0x10);

	this->ProcessEvent(uFnAllowPlayerLogin, &AllowPlayerLogin_Params, nullptr);

	memcpy_s(&ErrorMessage, 0x10, &AllowPlayerLogin_Params.ErrorMessage, 0x10);
};

// Function ProjectX.OnlineGameReservations_X.AllPlayersInGame
// [0x00424002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    OutPlayersInGame               (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::AllPlayersInGame(TArray<struct FUniqueNetId>& OutPlayersInGame)
{
	static UFunction* uFnAllPlayersInGame = nullptr;

	if (!uFnAllPlayersInGame)
	{
		uFnAllPlayersInGame = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AllPlayersInGame");
	}

	UOnlineGameReservations_X_execAllPlayersInGame_Params AllPlayersInGame_Params;
	memcpy_s(&AllPlayersInGame_Params.OutPlayersInGame, 0x10, &OutPlayersInGame, 0x10);

	this->ProcessEvent(uFnAllPlayersInGame, &AllPlayersInGame_Params, nullptr);

	memcpy_s(&OutPlayersInGame, 0x10, &AllPlayersInGame_Params.OutPlayersInGame, 0x10);

	return AllPlayersInGame_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.AllPlayersReserved
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::AllPlayersReserved()
{
	static UFunction* uFnAllPlayersReserved = nullptr;

	if (!uFnAllPlayersReserved)
	{
		uFnAllPlayersReserved = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AllPlayersReserved");
	}

	UOnlineGameReservations_X_execAllPlayersReserved_Params AllPlayersReserved_Params;

	this->ProcessEvent(uFnAllPlayersReserved, &AllPlayersReserved_Params, nullptr);

	return AllPlayersReserved_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HasGameEnded
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::HasGameEnded()
{
	static UFunction* uFnHasGameEnded = nullptr;

	if (!uFnHasGameEnded)
	{
		uFnHasGameEnded = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HasGameEnded");
	}

	UOnlineGameReservations_X_execHasGameEnded_Params HasGameEnded_Params;

	this->ProcessEvent(uFnHasGameEnded, &HasGameEnded_Params, nullptr);

	return HasGameEnded_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HasGameStarted
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::HasGameStarted()
{
	static UFunction* uFnHasGameStarted = nullptr;

	if (!uFnHasGameStarted)
	{
		uFnHasGameStarted = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HasGameStarted");
	}

	UOnlineGameReservations_X_execHasGameStarted_Params HasGameStarted_Params;

	this->ProcessEvent(uFnHasGameStarted, &HasGameStarted_Params, nullptr);

	return HasGameStarted_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.CanStartMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::CanStartMatch()
{
	static UFunction* uFnCanStartMatch = nullptr;

	if (!uFnCanStartMatch)
	{
		uFnCanStartMatch = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CanStartMatch");
	}

	UOnlineGameReservations_X_execCanStartMatch_Params CanStartMatch_Params;

	this->ProcessEvent(uFnCanStartMatch, &CanStartMatch_Params, nullptr);

	return CanStartMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HasMultipleReservedTeams
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::HasMultipleReservedTeams()
{
	static UFunction* uFnHasMultipleReservedTeams = nullptr;

	if (!uFnHasMultipleReservedTeams)
	{
		uFnHasMultipleReservedTeams = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HasMultipleReservedTeams");
	}

	UOnlineGameReservations_X_execHasMultipleReservedTeams_Params HasMultipleReservedTeams_Params;

	this->ProcessEvent(uFnHasMultipleReservedTeams, &HasMultipleReservedTeams_Params, nullptr);

	return HasMultipleReservedTeams_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HasTimeoutPlayers
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    OutTimeoutPlayers              (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::HasTimeoutPlayers(TArray<struct FUniqueNetId>& OutTimeoutPlayers)
{
	static UFunction* uFnHasTimeoutPlayers = nullptr;

	if (!uFnHasTimeoutPlayers)
	{
		uFnHasTimeoutPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HasTimeoutPlayers");
	}

	UOnlineGameReservations_X_execHasTimeoutPlayers_Params HasTimeoutPlayers_Params;
	memcpy_s(&HasTimeoutPlayers_Params.OutTimeoutPlayers, 0x10, &OutTimeoutPlayers, 0x10);

	this->ProcessEvent(uFnHasTimeoutPlayers, &HasTimeoutPlayers_Params, nullptr);

	memcpy_s(&OutTimeoutPlayers, 0x10, &HasTimeoutPlayers_Params.OutTimeoutPlayers, 0x10);

	return HasTimeoutPlayers_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HasJoiningPlayers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::HasJoiningPlayers()
{
	static UFunction* uFnHasJoiningPlayers = nullptr;

	if (!uFnHasJoiningPlayers)
	{
		uFnHasJoiningPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HasJoiningPlayers");
	}

	UOnlineGameReservations_X_execHasJoiningPlayers_Params HasJoiningPlayers_Params;

	this->ProcessEvent(uFnHasJoiningPlayers, &HasJoiningPlayers_Params, nullptr);

	return HasJoiningPlayers_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.CanGoInactive
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::CanGoInactive()
{
	static UFunction* uFnCanGoInactive = nullptr;

	if (!uFnCanGoInactive)
	{
		uFnCanGoInactive = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CanGoInactive");
	}

	UOnlineGameReservations_X_execCanGoInactive_Params CanGoInactive_Params;

	this->ProcessEvent(uFnCanGoInactive, &CanGoInactive_Params, nullptr);

	return CanGoInactive_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.IsEmpty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::IsEmpty()
{
	static UFunction* uFnIsEmpty = nullptr;

	if (!uFnIsEmpty)
	{
		uFnIsEmpty = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsEmpty");
	}

	UOnlineGameReservations_X_execIsEmpty_Params IsEmpty_Params;

	this->ProcessEvent(uFnIsEmpty, &IsEmpty_Params, nullptr);

	return IsEmpty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.IsNearlyFull
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::IsNearlyFull()
{
	static UFunction* uFnIsNearlyFull = nullptr;

	if (!uFnIsNearlyFull)
	{
		uFnIsNearlyFull = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsNearlyFull");
	}

	UOnlineGameReservations_X_execIsNearlyFull_Params IsNearlyFull_Params;

	this->ProcessEvent(uFnIsNearlyFull, &IsNearlyFull_Params, nullptr);

	return IsNearlyFull_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.IsFull
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    OutPlayersReserved             (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::IsFull(TArray<struct FUniqueNetId>& OutPlayersReserved)
{
	static UFunction* uFnIsFull = nullptr;

	if (!uFnIsFull)
	{
		uFnIsFull = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsFull");
	}

	UOnlineGameReservations_X_execIsFull_Params IsFull_Params;
	memcpy_s(&IsFull_Params.OutPlayersReserved, 0x10, &OutPlayersReserved, 0x10);

	this->ProcessEvent(uFnIsFull, &IsFull_Params, nullptr);

	memcpy_s(&OutPlayersReserved, 0x10, &IsFull_Params.OutPlayersReserved, 0x10);

	return IsFull_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetNumReservedPlayers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGameReservations_X::GetNumReservedPlayers()
{
	static UFunction* uFnGetNumReservedPlayers = nullptr;

	if (!uFnGetNumReservedPlayers)
	{
		uFnGetNumReservedPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetNumReservedPlayers");
	}

	UOnlineGameReservations_X_execGetNumReservedPlayers_Params GetNumReservedPlayers_Params;

	this->ProcessEvent(uFnGetNumReservedPlayers, &GetNumReservedPlayers_Params, nullptr);

	return GetNumReservedPlayers_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.IsCustomMatch
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::IsCustomMatch()
{
	static UFunction* uFnIsCustomMatch = nullptr;

	if (!uFnIsCustomMatch)
	{
		uFnIsCustomMatch = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsCustomMatch");
	}

	UOnlineGameReservations_X_execIsCustomMatch_Params IsCustomMatch_Params;

	this->ProcessEvent(uFnIsCustomMatch, &IsCustomMatch_Params, nullptr);

	return IsCustomMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HandleReservationDisconnected
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UReservationBeacon_X*    _                              (CPF_Parm | CPF_EditInline)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

void UOnlineGameReservations_X::HandleReservationDisconnected(class UReservationBeacon_X* _, class UIReservationConnection_X* Connection)
{
	static UFunction* uFnHandleReservationDisconnected = nullptr;

	if (!uFnHandleReservationDisconnected)
	{
		uFnHandleReservationDisconnected = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleReservationDisconnected");
	}

	UOnlineGameReservations_X_execHandleReservationDisconnected_Params HandleReservationDisconnected_Params;
	memcpy_s(&HandleReservationDisconnected_Params._, 0x8, &_, 0x8);
	memcpy_s(&HandleReservationDisconnected_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnHandleReservationDisconnected, &HandleReservationDisconnected_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.ClearTeamHistory
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::ClearTeamHistory()
{
	static UFunction* uFnClearTeamHistory = nullptr;

	if (!uFnClearTeamHistory)
	{
		uFnClearTeamHistory = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.ClearTeamHistory");
	}

	UOnlineGameReservations_X_execClearTeamHistory_Params ClearTeamHistory_Params;

	this->ProcessEvent(uFnClearTeamHistory, &ClearTeamHistory_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.ClearReservations
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::ClearReservations()
{
	static UFunction* uFnClearReservations = nullptr;

	if (!uFnClearReservations)
	{
		uFnClearReservations = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.ClearReservations");
	}

	UOnlineGameReservations_X_execClearReservations_Params ClearReservations_Params;

	this->ProcessEvent(uFnClearReservations, &ClearReservations_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.Reset
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::Reset()
{
	static UFunction* uFnReset = nullptr;

	if (!uFnReset)
	{
		uFnReset = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.Reset");
	}

	UOnlineGameReservations_X_execReset_Params Reset_Params;

	this->ProcessEvent(uFnReset, &Reset_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.RecordTeamHistory
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FReservationData> TestPlayers                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<struct FTeamPairHistory> History                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::RecordTeamHistory(TArray<struct FReservationData>& TestPlayers, TArray<struct FTeamPairHistory>& History)
{
	static UFunction* uFnRecordTeamHistory = nullptr;

	if (!uFnRecordTeamHistory)
	{
		uFnRecordTeamHistory = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.RecordTeamHistory");
	}

	UOnlineGameReservations_X_execRecordTeamHistory_Params RecordTeamHistory_Params;
	memcpy_s(&RecordTeamHistory_Params.TestPlayers, 0x10, &TestPlayers, 0x10);
	memcpy_s(&RecordTeamHistory_Params.History, 0x10, &History, 0x10);

	uFnRecordTeamHistory->FunctionFlags |= ~0x400;

	UOnlineGameReservations_X::StaticClass()->ProcessEvent(uFnRecordTeamHistory, &RecordTeamHistory_Params, nullptr);

	uFnRecordTeamHistory->FunctionFlags |= 0x400;

	memcpy_s(&TestPlayers, 0x10, &RecordTeamHistory_Params.TestPlayers, 0x10);
	memcpy_s(&History, 0x10, &RecordTeamHistory_Params.History, 0x10);
};

// Function ProjectX.OnlineGameReservations_X.ScrambleTeams
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::ScrambleTeams()
{
	static UFunction* uFnScrambleTeams = nullptr;

	if (!uFnScrambleTeams)
	{
		uFnScrambleTeams = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.ScrambleTeams");
	}

	UOnlineGameReservations_X_execScrambleTeams_Params ScrambleTeams_Params;

	this->ProcessEvent(uFnScrambleTeams, &ScrambleTeams_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.UpdateTeams
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::UpdateTeams()
{
	static UFunction* uFnUpdateTeams = nullptr;

	if (!uFnUpdateTeams)
	{
		uFnUpdateTeams = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.UpdateTeams");
	}

	UOnlineGameReservations_X_execUpdateTeams_Params UpdateTeams_Params;

	this->ProcessEvent(uFnUpdateTeams, &UpdateTeams_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.AssignTeamsByPartySize
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::AssignTeamsByPartySize()
{
	static UFunction* uFnAssignTeamsByPartySize = nullptr;

	if (!uFnAssignTeamsByPartySize)
	{
		uFnAssignTeamsByPartySize = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AssignTeamsByPartySize");
	}

	UOnlineGameReservations_X_execAssignTeamsByPartySize_Params AssignTeamsByPartySize_Params;

	this->ProcessEvent(uFnAssignTeamsByPartySize, &AssignTeamsByPartySize_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.AssignScrambledTeams
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TeamSize                       (CPF_Parm)
// TArray<struct FTeamPairHistory> History                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<struct FReservationData> TestPlayers                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::AssignScrambledTeams(int32_t TeamSize, TArray<struct FTeamPairHistory>& History, TArray<struct FReservationData>& TestPlayers)
{
	static UFunction* uFnAssignScrambledTeams = nullptr;

	if (!uFnAssignScrambledTeams)
	{
		uFnAssignScrambledTeams = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AssignScrambledTeams");
	}

	UOnlineGameReservations_X_execAssignScrambledTeams_Params AssignScrambledTeams_Params;
	memcpy_s(&AssignScrambledTeams_Params.TeamSize, 0x4, &TeamSize, 0x4);
	memcpy_s(&AssignScrambledTeams_Params.History, 0x10, &History, 0x10);
	memcpy_s(&AssignScrambledTeams_Params.TestPlayers, 0x10, &TestPlayers, 0x10);

	uFnAssignScrambledTeams->FunctionFlags |= ~0x400;

	UOnlineGameReservations_X::StaticClass()->ProcessEvent(uFnAssignScrambledTeams, &AssignScrambledTeams_Params, nullptr);

	uFnAssignScrambledTeams->FunctionFlags |= 0x400;

	memcpy_s(&History, 0x10, &AssignScrambledTeams_Params.History, 0x10);
	memcpy_s(&TestPlayers, 0x10, &AssignScrambledTeams_Params.TestPlayers, 0x10);

	return AssignScrambledTeams_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.AssignTeams
// [0x00426401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TeamSize                       (CPF_Parm)
// unsigned long                  bKeepTeams                     (CPF_OptionalParm | CPF_Parm)
// TArray<struct FReservationData> TestPlayers                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::AssignTeams(int32_t TeamSize, unsigned long bKeepTeams, TArray<struct FReservationData>& TestPlayers)
{
	static UFunction* uFnAssignTeams = nullptr;

	if (!uFnAssignTeams)
	{
		uFnAssignTeams = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AssignTeams");
	}

	UOnlineGameReservations_X_execAssignTeams_Params AssignTeams_Params;
	memcpy_s(&AssignTeams_Params.TeamSize, 0x4, &TeamSize, 0x4);
	AssignTeams_Params.bKeepTeams = bKeepTeams;
	memcpy_s(&AssignTeams_Params.TestPlayers, 0x10, &TestPlayers, 0x10);

	uFnAssignTeams->FunctionFlags |= ~0x400;

	UOnlineGameReservations_X::StaticClass()->ProcessEvent(uFnAssignTeams, &AssignTeams_Params, nullptr);

	uFnAssignTeams->FunctionFlags |= 0x400;

	memcpy_s(&TestPlayers, 0x10, &AssignTeams_Params.TestPlayers, 0x10);

	return AssignTeams_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HandleSkillSynced
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameSkill_X*      SkillSystem                    (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameReservations_X::HandleSkillSynced(class UOnlineGameSkill_X* SkillSystem, struct FUniqueNetId PlayerID, class UError* Error)
{
	static UFunction* uFnHandleSkillSynced = nullptr;

	if (!uFnHandleSkillSynced)
	{
		uFnHandleSkillSynced = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleSkillSynced");
	}

	UOnlineGameReservations_X_execHandleSkillSynced_Params HandleSkillSynced_Params;
	memcpy_s(&HandleSkillSynced_Params.SkillSystem, 0x8, &SkillSystem, 0x8);
	memcpy_s(&HandleSkillSynced_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&HandleSkillSynced_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleSkillSynced, &HandleSkillSynced_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.AllowSplitscreenJoin
// [0x00C20002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PrimaryPlayerId                (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Error                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::AllowSplitscreenJoin(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId PlayerID, class FString PlayerName, class FString& Error)
{
	static UFunction* uFnAllowSplitscreenJoin = nullptr;

	if (!uFnAllowSplitscreenJoin)
	{
		uFnAllowSplitscreenJoin = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AllowSplitscreenJoin");
	}

	UOnlineGameReservations_X_execAllowSplitscreenJoin_Params AllowSplitscreenJoin_Params;
	memcpy_s(&AllowSplitscreenJoin_Params.PrimaryPlayerId, 0x48, &PrimaryPlayerId, 0x48);
	memcpy_s(&AllowSplitscreenJoin_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AllowSplitscreenJoin_Params.PlayerName, 0x10, &PlayerName, 0x10);
	memcpy_s(&AllowSplitscreenJoin_Params.Error, 0x10, &Error, 0x10);

	this->ProcessEvent(uFnAllowSplitscreenJoin, &AllowSplitscreenJoin_Params, nullptr);

	memcpy_s(&Error, 0x10, &AllowSplitscreenJoin_Params.Error, 0x10);

	return AllowSplitscreenJoin_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.IsCheatingSplitscreenReservation
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAddReservationMessage_X* Message                        (CPF_Parm)

bool UOnlineGameReservations_X::IsCheatingSplitscreenReservation(class UAddReservationMessage_X* Message)
{
	static UFunction* uFnIsCheatingSplitscreenReservation = nullptr;

	if (!uFnIsCheatingSplitscreenReservation)
	{
		uFnIsCheatingSplitscreenReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsCheatingSplitscreenReservation");
	}

	UOnlineGameReservations_X_execIsCheatingSplitscreenReservation_Params IsCheatingSplitscreenReservation_Params;
	memcpy_s(&IsCheatingSplitscreenReservation_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnIsCheatingSplitscreenReservation, &IsCheatingSplitscreenReservation_Params, nullptr);

	return IsCheatingSplitscreenReservation_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.IsCheatingSplitscreen
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PrimaryPlayerId                (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            SplitscreenPlayerId            (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::IsCheatingSplitscreen(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId SplitscreenPlayerId)
{
	static UFunction* uFnIsCheatingSplitscreen = nullptr;

	if (!uFnIsCheatingSplitscreen)
	{
		uFnIsCheatingSplitscreen = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsCheatingSplitscreen");
	}

	UOnlineGameReservations_X_execIsCheatingSplitscreen_Params IsCheatingSplitscreen_Params;
	memcpy_s(&IsCheatingSplitscreen_Params.PrimaryPlayerId, 0x48, &PrimaryPlayerId, 0x48);
	memcpy_s(&IsCheatingSplitscreen_Params.SplitscreenPlayerId, 0x48, &SplitscreenPlayerId, 0x48);

	this->ProcessEvent(uFnIsCheatingSplitscreen, &IsCheatingSplitscreen_Params, nullptr);

	return IsCheatingSplitscreen_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.CreateReservationData
// [0x00884003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FReservationData        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PartyID                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Status                         (CPF_OptionalParm | CPF_Parm)

struct FReservationData UOnlineGameReservations_X::CreateReservationData(struct FUniqueNetId PlayerID, class FString PlayerName, struct FUniqueNetId PartyID, uint8_t Status)
{
	static UFunction* uFnCreateReservationData = nullptr;

	if (!uFnCreateReservationData)
	{
		uFnCreateReservationData = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CreateReservationData");
	}

	UOnlineGameReservations_X_execCreateReservationData_Params CreateReservationData_Params;
	memcpy_s(&CreateReservationData_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&CreateReservationData_Params.PlayerName, 0x10, &PlayerName, 0x10);
	memcpy_s(&CreateReservationData_Params.PartyID, 0x48, &PartyID, 0x48);
	memcpy_s(&CreateReservationData_Params.Status, 0x1, &Status, 0x1);

	this->ProcessEvent(uFnCreateReservationData, &CreateReservationData_Params, nullptr);

	return CreateReservationData_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HandlePlayerCancel
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameReservations_X::HandlePlayerCancel(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnHandlePlayerCancel = nullptr;

	if (!uFnHandlePlayerCancel)
	{
		uFnHandlePlayerCancel = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandlePlayerCancel");
	}

	UOnlineGameReservations_X_execHandlePlayerCancel_Params HandlePlayerCancel_Params;
	memcpy_s(&HandlePlayerCancel_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandlePlayerCancel_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandlePlayerCancel, &HandlePlayerCancel_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.GetConnectionPlayerID
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

struct FUniqueNetId UOnlineGameReservations_X::GetConnectionPlayerID(class UIReservationConnection_X* Connection)
{
	static UFunction* uFnGetConnectionPlayerID = nullptr;

	if (!uFnGetConnectionPlayerID)
	{
		uFnGetConnectionPlayerID = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetConnectionPlayerID");
	}

	UOnlineGameReservations_X_execGetConnectionPlayerID_Params GetConnectionPlayerID_Params;
	memcpy_s(&GetConnectionPlayerID_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnGetConnectionPlayerID, &GetConnectionPlayerID_Params, nullptr);

	return GetConnectionPlayerID_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.InitialReservationTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::InitialReservationTimeout()
{
	static UFunction* uFnInitialReservationTimeout = nullptr;

	if (!uFnInitialReservationTimeout)
	{
		uFnInitialReservationTimeout = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.InitialReservationTimeout");
	}

	UOnlineGameReservations_X_execInitialReservationTimeout_Params InitialReservationTimeout_Params;

	this->ProcessEvent(uFnInitialReservationTimeout, &InitialReservationTimeout_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.NotAllPlayersJoined
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::NotAllPlayersJoined()
{
	static UFunction* uFnNotAllPlayersJoined = nullptr;

	if (!uFnNotAllPlayersJoined)
	{
		uFnNotAllPlayersJoined = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.NotAllPlayersJoined");
	}

	UOnlineGameReservations_X_execNotAllPlayersJoined_Params NotAllPlayersJoined_Params;

	this->ProcessEvent(uFnNotAllPlayersJoined, &NotAllPlayersJoined_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.DisconnectExistingPlayers
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReservationMessage             (CPF_Parm)

void UOnlineGameReservations_X::DisconnectExistingPlayers(class UAddReservationMessage_X* ReservationMessage)
{
	static UFunction* uFnDisconnectExistingPlayers = nullptr;

	if (!uFnDisconnectExistingPlayers)
	{
		uFnDisconnectExistingPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.DisconnectExistingPlayers");
	}

	UOnlineGameReservations_X_execDisconnectExistingPlayers_Params DisconnectExistingPlayers_Params;
	memcpy_s(&DisconnectExistingPlayers_Params.ReservationMessage, 0x8, &ReservationMessage, 0x8);

	this->ProcessEvent(uFnDisconnectExistingPlayers, &DisconnectExistingPlayers_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.SetPlayers
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FReservationData> TempPlayers                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::SetPlayers(TArray<struct FReservationData>& TempPlayers)
{
	static UFunction* uFnSetPlayers = nullptr;

	if (!uFnSetPlayers)
	{
		uFnSetPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SetPlayers");
	}

	UOnlineGameReservations_X_execSetPlayers_Params SetPlayers_Params;
	memcpy_s(&SetPlayers_Params.TempPlayers, 0x10, &TempPlayers, 0x10);

	this->ProcessEvent(uFnSetPlayers, &SetPlayers_Params, nullptr);

	memcpy_s(&TempPlayers, 0x10, &SetPlayers_Params.TempPlayers, 0x10);
};

// Function ProjectX.OnlineGameReservations_X.HandleClubSyncComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineClubProvider_X*   _                              (CPF_Parm)

void UOnlineGameReservations_X::HandleClubSyncComplete(class UOnlineClubProvider_X* _)
{
	static UFunction* uFnHandleClubSyncComplete = nullptr;

	if (!uFnHandleClubSyncComplete)
	{
		uFnHandleClubSyncComplete = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleClubSyncComplete");
	}

	UOnlineGameReservations_X_execHandleClubSyncComplete_Params HandleClubSyncComplete_Params;
	memcpy_s(&HandleClubSyncComplete_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFnHandleClubSyncComplete, &HandleClubSyncComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.AddPlayersFromReservationMessage
// [0x00880002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// TArray<struct FReservationData> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UAddReservationMessage_X* ReservationMessage             (CPF_Parm)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

TArray<struct FReservationData> UOnlineGameReservations_X::AddPlayersFromReservationMessage(class UAddReservationMessage_X* ReservationMessage, class UIReservationConnection_X* Connection)
{
	static UFunction* uFnAddPlayersFromReservationMessage = nullptr;

	if (!uFnAddPlayersFromReservationMessage)
	{
		uFnAddPlayersFromReservationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.AddPlayersFromReservationMessage");
	}

	UOnlineGameReservations_X_execAddPlayersFromReservationMessage_Params AddPlayersFromReservationMessage_Params;
	memcpy_s(&AddPlayersFromReservationMessage_Params.ReservationMessage, 0x8, &ReservationMessage, 0x8);
	memcpy_s(&AddPlayersFromReservationMessage_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnAddPlayersFromReservationMessage, &AddPlayersFromReservationMessage_Params, nullptr);

	return AddPlayersFromReservationMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.IsUnique
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FName>           Prefs                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::IsUnique(TArray<struct FName>& Prefs)
{
	static UFunction* uFnIsUnique = nullptr;

	if (!uFnIsUnique)
	{
		uFnIsUnique = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsUnique");
	}

	UOnlineGameReservations_X_execIsUnique_Params IsUnique_Params;
	memcpy_s(&IsUnique_Params.Prefs, 0x10, &Prefs, 0x10);

	this->ProcessEvent(uFnIsUnique, &IsUnique_Params, nullptr);

	memcpy_s(&Prefs, 0x10, &IsUnique_Params.Prefs, 0x10);

	return IsUnique_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.ForcePrivateMatch
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FCustomMatchSettings    InSettings                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::ForcePrivateMatch(struct FCustomMatchSettings InSettings)
{
	static UFunction* uFnForcePrivateMatch = nullptr;

	if (!uFnForcePrivateMatch)
	{
		uFnForcePrivateMatch = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.ForcePrivateMatch");
	}

	UOnlineGameReservations_X_execForcePrivateMatch_Params ForcePrivateMatch_Params;
	memcpy_s(&ForcePrivateMatch_Params.InSettings, 0x90, &InSettings, 0x90);

	this->ProcessEvent(uFnForcePrivateMatch, &ForcePrivateMatch_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.SetClubServer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          Details                        (CPF_Parm)

void UOnlineGameReservations_X::SetClubServer(class UClubDetails_X* Details)
{
	static UFunction* uFnSetClubServer = nullptr;

	if (!uFnSetClubServer)
	{
		uFnSetClubServer = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SetClubServer");
	}

	UOnlineGameReservations_X_execSetClubServer_Params SetClubServer_Params;
	memcpy_s(&SetClubServer_Params.Details, 0x8, &Details, 0x8);

	this->ProcessEvent(uFnSetClubServer, &SetClubServer_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.StartPrivateMatch
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FCustomMatchSettings    MatchSettings                  (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            Creator                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::StartPrivateMatch(struct FCustomMatchSettings MatchSettings, struct FUniqueNetId Creator)
{
	static UFunction* uFnStartPrivateMatch = nullptr;

	if (!uFnStartPrivateMatch)
	{
		uFnStartPrivateMatch = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.StartPrivateMatch");
	}

	UOnlineGameReservations_X_execStartPrivateMatch_Params StartPrivateMatch_Params;
	memcpy_s(&StartPrivateMatch_Params.MatchSettings, 0x90, &MatchSettings, 0x90);
	memcpy_s(&StartPrivateMatch_Params.Creator, 0x48, &Creator, 0x48);

	this->ProcessEvent(uFnStartPrivateMatch, &StartPrivateMatch_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandlePrivateReservation
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UAddReservationMessagePrivate_X* Message                        (CPF_Parm)

bool UOnlineGameReservations_X::HandlePrivateReservation(class UIReservationConnection_X* Connection, class UAddReservationMessagePrivate_X* Message)
{
	static UFunction* uFnHandlePrivateReservation = nullptr;

	if (!uFnHandlePrivateReservation)
	{
		uFnHandlePrivateReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandlePrivateReservation");
	}

	UOnlineGameReservations_X_execHandlePrivateReservation_Params HandlePrivateReservation_Params;
	memcpy_s(&HandlePrivateReservation_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandlePrivateReservation_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandlePrivateReservation, &HandlePrivateReservation_Params, nullptr);

	return HandlePrivateReservation_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.ProcessReservationMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UAddReservationMessage_X* Message                        (CPF_Parm)

void UOnlineGameReservations_X::ProcessReservationMessage(class UIReservationConnection_X* Connection, class UAddReservationMessage_X* Message)
{
	static UFunction* uFnProcessReservationMessage = nullptr;

	if (!uFnProcessReservationMessage)
	{
		uFnProcessReservationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.ProcessReservationMessage");
	}

	UOnlineGameReservations_X_execProcessReservationMessage_Params ProcessReservationMessage_Params;
	memcpy_s(&ProcessReservationMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&ProcessReservationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnProcessReservationMessage, &ProcessReservationMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.StartMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::StartMatch()
{
	static UFunction* uFnStartMatch = nullptr;

	if (!uFnStartMatch)
	{
		uFnStartMatch = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.StartMatch");
	}

	UOnlineGameReservations_X_execStartMatch_Params StartMatch_Params;

	this->ProcessEvent(uFnStartMatch, &StartMatch_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.CreateReadyMessage
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UReservationsReadyMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UReservationsReadyMessage_X* UOnlineGameReservations_X::CreateReadyMessage()
{
	static UFunction* uFnCreateReadyMessage = nullptr;

	if (!uFnCreateReadyMessage)
	{
		uFnCreateReadyMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CreateReadyMessage");
	}

	UOnlineGameReservations_X_execCreateReadyMessage_Params CreateReadyMessage_Params;

	this->ProcessEvent(uFnCreateReadyMessage, &CreateReadyMessage_Params, nullptr);

	return CreateReadyMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.SendReadyMessage
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class UReservationsReadyMessage_X* Message                        (CPF_Parm)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

void UOnlineGameReservations_X::SendReadyMessage(struct FUniqueNetId PlayerID, class UReservationsReadyMessage_X* Message, class UIReservationConnection_X* Connection)
{
	static UFunction* uFnSendReadyMessage = nullptr;

	if (!uFnSendReadyMessage)
	{
		uFnSendReadyMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SendReadyMessage");
	}

	UOnlineGameReservations_X_execSendReadyMessage_Params SendReadyMessage_Params;
	memcpy_s(&SendReadyMessage_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&SendReadyMessage_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&SendReadyMessage_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnSendReadyMessage, &SendReadyMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.NotifyReady
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

void UOnlineGameReservations_X::NotifyReady(struct FUniqueNetId PlayerID, class UIReservationConnection_X* Connection)
{
	static UFunction* uFnNotifyReady = nullptr;

	if (!uFnNotifyReady)
	{
		uFnNotifyReady = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.NotifyReady");
	}

	UOnlineGameReservations_X_execNotifyReady_Params NotifyReady_Params;
	memcpy_s(&NotifyReady_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&NotifyReady_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnNotifyReady, &NotifyReady_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.BroadcastReady
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::BroadcastReady()
{
	static UFunction* uFnBroadcastReady = nullptr;

	if (!uFnBroadcastReady)
	{
		uFnBroadcastReady = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.BroadcastReady");
	}

	UOnlineGameReservations_X_execBroadcastReady_Params BroadcastReady_Params;

	this->ProcessEvent(uFnBroadcastReady, &BroadcastReady_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.ShouldSyncSkills
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::ShouldSyncSkills()
{
	static UFunction* uFnShouldSyncSkills = nullptr;

	if (!uFnShouldSyncSkills)
	{
		uFnShouldSyncSkills = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.ShouldSyncSkills");
	}

	UOnlineGameReservations_X_execShouldSyncSkills_Params ShouldSyncSkills_Params;

	this->ProcessEvent(uFnShouldSyncSkills, &ShouldSyncSkills_Params, nullptr);

	return ShouldSyncSkills_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.IsSoloPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

bool UOnlineGameReservations_X::IsSoloPlaylist(int32_t PlaylistId)
{
	static UFunction* uFnIsSoloPlaylist = nullptr;

	if (!uFnIsSoloPlaylist)
	{
		uFnIsSoloPlaylist = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsSoloPlaylist");
	}

	UOnlineGameReservations_X_execIsSoloPlaylist_Params IsSoloPlaylist_Params;
	memcpy_s(&IsSoloPlaylist_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnIsSoloPlaylist, &IsSoloPlaylist_Params, nullptr);

	return IsSoloPlaylist_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.ShouldCheckRankedMatchReservationID
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameReservations_X::ShouldCheckRankedMatchReservationID()
{
	static UFunction* uFnShouldCheckRankedMatchReservationID = nullptr;

	if (!uFnShouldCheckRankedMatchReservationID)
	{
		uFnShouldCheckRankedMatchReservationID = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.ShouldCheckRankedMatchReservationID");
	}

	UOnlineGameReservations_X_execShouldCheckRankedMatchReservationID_Params ShouldCheckRankedMatchReservationID_Params;

	this->ProcessEvent(uFnShouldCheckRankedMatchReservationID, &ShouldCheckRankedMatchReservationID_Params, nullptr);

	return ShouldCheckRankedMatchReservationID_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.CheckRankedMatchReservation
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// class FString                  InReservationID                (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameReservations_X::CheckRankedMatchReservation(struct FUniqueNetId PlayerID, class FString& InReservationID)
{
	static UFunction* uFnCheckRankedMatchReservation = nullptr;

	if (!uFnCheckRankedMatchReservation)
	{
		uFnCheckRankedMatchReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CheckRankedMatchReservation");
	}

	UOnlineGameReservations_X_execCheckRankedMatchReservation_Params CheckRankedMatchReservation_Params;
	memcpy_s(&CheckRankedMatchReservation_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&CheckRankedMatchReservation_Params.InReservationID, 0x10, &InReservationID, 0x10);

	this->ProcessEvent(uFnCheckRankedMatchReservation, &CheckRankedMatchReservation_Params, nullptr);

	memcpy_s(&InReservationID, 0x10, &CheckRankedMatchReservation_Params.InReservationID, 0x10);

	return CheckRankedMatchReservation_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HandlePublicReservation
// [0x00880002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UAddReservationMessagePublic_X* Message                        (CPF_Parm)

bool UOnlineGameReservations_X::HandlePublicReservation(class UIReservationConnection_X* Connection, class UAddReservationMessagePublic_X* Message)
{
	static UFunction* uFnHandlePublicReservation = nullptr;

	if (!uFnHandlePublicReservation)
	{
		uFnHandlePublicReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandlePublicReservation");
	}

	UOnlineGameReservations_X_execHandlePublicReservation_Params HandlePublicReservation_Params;
	memcpy_s(&HandlePublicReservation_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandlePublicReservation_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandlePublicReservation, &HandlePublicReservation_Params, nullptr);

	return HandlePublicReservation_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HandleBeaconReservationMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UAddReservationMessage_X* Message                        (CPF_Parm)

void UOnlineGameReservations_X::HandleBeaconReservationMessage(class UIReservationConnection_X* Connection, class UAddReservationMessage_X* Message)
{
	static UFunction* uFnHandleBeaconReservationMessage = nullptr;

	if (!uFnHandleBeaconReservationMessage)
	{
		uFnHandleBeaconReservationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleBeaconReservationMessage");
	}

	UOnlineGameReservations_X_execHandleBeaconReservationMessage_Params HandleBeaconReservationMessage_Params;
	memcpy_s(&HandleBeaconReservationMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandleBeaconReservationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleBeaconReservationMessage, &HandleBeaconReservationMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.IsCheatingReservationMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UAddReservationMessage_X* Message                        (CPF_Parm)

bool UOnlineGameReservations_X::IsCheatingReservationMessage(class UIReservationConnection_X* Connection, class UAddReservationMessage_X* Message)
{
	static UFunction* uFnIsCheatingReservationMessage = nullptr;

	if (!uFnIsCheatingReservationMessage)
	{
		uFnIsCheatingReservationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.IsCheatingReservationMessage");
	}

	UOnlineGameReservations_X_execIsCheatingReservationMessage_Params IsCheatingReservationMessage_Params;
	memcpy_s(&IsCheatingReservationMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&IsCheatingReservationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnIsCheatingReservationMessage, &IsCheatingReservationMessage_Params, nullptr);

	return IsCheatingReservationMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.RecordReservation
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* Message                        (CPF_Parm)

void UOnlineGameReservations_X::RecordReservation(class UAddReservationMessage_X* Message)
{
	static UFunction* uFnRecordReservation = nullptr;

	if (!uFnRecordReservation)
	{
		uFnRecordReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.RecordReservation");
	}

	UOnlineGameReservations_X_execRecordReservation_Params RecordReservation_Params;
	memcpy_s(&RecordReservation_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnRecordReservation, &RecordReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleRegionPingMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class URegionPingMessage_X*    Message                        (CPF_Parm)

void UOnlineGameReservations_X::HandleRegionPingMessage(class UIReservationConnection_X* Connection, class URegionPingMessage_X* Message)
{
	static UFunction* uFnHandleRegionPingMessage = nullptr;

	if (!uFnHandleRegionPingMessage)
	{
		uFnHandleRegionPingMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleRegionPingMessage");
	}

	UOnlineGameReservations_X_execHandleRegionPingMessage_Params HandleRegionPingMessage_Params;
	memcpy_s(&HandleRegionPingMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandleRegionPingMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleRegionPingMessage, &HandleRegionPingMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandlePingMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UPingMessage_X*          Message                        (CPF_Parm)

void UOnlineGameReservations_X::HandlePingMessage(class UIReservationConnection_X* Connection, class UPingMessage_X* Message)
{
	static UFunction* uFnHandlePingMessage = nullptr;

	if (!uFnHandlePingMessage)
	{
		uFnHandlePingMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandlePingMessage");
	}

	UOnlineGameReservations_X_execHandlePingMessage_Params HandlePingMessage_Params;
	memcpy_s(&HandlePingMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandlePingMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandlePingMessage, &HandlePingMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleMatchStartedChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::HandleMatchStartedChanged()
{
	static UFunction* uFnHandleMatchStartedChanged = nullptr;

	if (!uFnHandleMatchStartedChanged)
	{
		uFnHandleMatchStartedChanged = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleMatchStartedChanged");
	}

	UOnlineGameReservations_X_execHandleMatchStartedChanged_Params HandleMatchStartedChanged_Params;

	this->ProcessEvent(uFnHandleMatchStartedChanged, &HandleMatchStartedChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.CreateClientReservationMessage
// [0x00480002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FServerReservationData  Reservation                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UObject* UOnlineGameReservations_X::CreateClientReservationMessage(struct FServerReservationData& Reservation, struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnCreateClientReservationMessage = nullptr;

	if (!uFnCreateClientReservationMessage)
	{
		uFnCreateClientReservationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.CreateClientReservationMessage");
	}

	UOnlineGameReservations_X_execCreateClientReservationMessage_Params CreateClientReservationMessage_Params;
	memcpy_s(&CreateClientReservationMessage_Params.Reservation, 0x70, &Reservation, 0x70);
	memcpy_s(&CreateClientReservationMessage_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnCreateClientReservationMessage, &CreateClientReservationMessage_Params, nullptr);

	memcpy_s(&Reservation, 0x70, &CreateClientReservationMessage_Params.Reservation, 0x70);
	memcpy_s(&PlayerID, 0x48, &CreateClientReservationMessage_Params.PlayerID, 0x48);

	return CreateClientReservationMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.HandlePsyNetBeaconReservation
// [0x00824003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPsyNetBeaconReservation Reservation                    (CPF_Parm | CPF_NeedCtorLink)
// float                          ConnectionTimeoutSeconds       (CPF_OptionalParm | CPF_Parm)

void UOnlineGameReservations_X::HandlePsyNetBeaconReservation(struct FPsyNetBeaconReservation Reservation, float ConnectionTimeoutSeconds)
{
	static UFunction* uFnHandlePsyNetBeaconReservation = nullptr;

	if (!uFnHandlePsyNetBeaconReservation)
	{
		uFnHandlePsyNetBeaconReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandlePsyNetBeaconReservation");
	}

	UOnlineGameReservations_X_execHandlePsyNetBeaconReservation_Params HandlePsyNetBeaconReservation_Params;
	memcpy_s(&HandlePsyNetBeaconReservation_Params.Reservation, 0x48, &Reservation, 0x48);
	memcpy_s(&HandlePsyNetBeaconReservation_Params.ConnectionTimeoutSeconds, 0x4, &ConnectionTimeoutSeconds, 0x4);

	this->ProcessEvent(uFnHandlePsyNetBeaconReservation, &HandlePsyNetBeaconReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.NotifyMigrationStarted
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::NotifyMigrationStarted()
{
	static UFunction* uFnNotifyMigrationStarted = nullptr;

	if (!uFnNotifyMigrationStarted)
	{
		uFnNotifyMigrationStarted = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.NotifyMigrationStarted");
	}

	UOnlineGameReservations_X_execNotifyMigrationStarted_Params NotifyMigrationStarted_Params;

	this->ProcessEvent(uFnNotifyMigrationStarted, &NotifyMigrationStarted_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.SetPlayersWithMigrationData
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FMigrationReservationData> MigratedPlayers                (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::SetPlayersWithMigrationData(TArray<struct FMigrationReservationData> MigratedPlayers)
{
	static UFunction* uFnSetPlayersWithMigrationData = nullptr;

	if (!uFnSetPlayersWithMigrationData)
	{
		uFnSetPlayersWithMigrationData = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SetPlayersWithMigrationData");
	}

	UOnlineGameReservations_X_execSetPlayersWithMigrationData_Params SetPlayersWithMigrationData_Params;
	memcpy_s(&SetPlayersWithMigrationData_Params.MigratedPlayers, 0x10, &MigratedPlayers, 0x10);

	this->ProcessEvent(uFnSetPlayersWithMigrationData, &SetPlayersWithMigrationData_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.GetMigrationReservationData
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// TArray<struct FMigrationReservationData> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FMigrationReservationData> UOnlineGameReservations_X::GetMigrationReservationData()
{
	static UFunction* uFnGetMigrationReservationData = nullptr;

	if (!uFnGetMigrationReservationData)
	{
		uFnGetMigrationReservationData = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetMigrationReservationData");
	}

	UOnlineGameReservations_X_execGetMigrationReservationData_Params GetMigrationReservationData_Params;

	this->ProcessEvent(uFnGetMigrationReservationData, &GetMigrationReservationData_Params, nullptr);

	return GetMigrationReservationData_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.GetMatchInfoMessage
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UServerToServerMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UServerToServerMessage_X* UOnlineGameReservations_X::GetMatchInfoMessage()
{
	static UFunction* uFnGetMatchInfoMessage = nullptr;

	if (!uFnGetMatchInfoMessage)
	{
		uFnGetMatchInfoMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.GetMatchInfoMessage");
	}

	UOnlineGameReservations_X_execGetMatchInfoMessage_Params GetMatchInfoMessage_Params;

	this->ProcessEvent(uFnGetMatchInfoMessage, &GetMatchInfoMessage_Params, nullptr);

	return GetMatchInfoMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_X.NotifyNewReplacementServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::NotifyNewReplacementServer()
{
	static UFunction* uFnNotifyNewReplacementServer = nullptr;

	if (!uFnNotifyNewReplacementServer)
	{
		uFnNotifyNewReplacementServer = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.NotifyNewReplacementServer");
	}

	UOnlineGameReservations_X_execNotifyNewReplacementServer_Params NotifyNewReplacementServer_Params;

	this->ProcessEvent(uFnNotifyNewReplacementServer, &NotifyNewReplacementServer_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleNewServerConnectionInfo
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UConnectionInfoMessage_X* Message                        (CPF_Parm)

void UOnlineGameReservations_X::HandleNewServerConnectionInfo(class UConnectionInfoMessage_X* Message)
{
	static UFunction* uFnHandleNewServerConnectionInfo = nullptr;

	if (!uFnHandleNewServerConnectionInfo)
	{
		uFnHandleNewServerConnectionInfo = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleNewServerConnectionInfo");
	}

	UOnlineGameReservations_X_execHandleNewServerConnectionInfo_Params HandleNewServerConnectionInfo_Params;
	memcpy_s(&HandleNewServerConnectionInfo_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleNewServerConnectionInfo, &HandleNewServerConnectionInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleMigrationStartedMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UMigrationStartedMessage_X* Message                        (CPF_Parm)

void UOnlineGameReservations_X::HandleMigrationStartedMessage(class UMigrationStartedMessage_X* Message)
{
	static UFunction* uFnHandleMigrationStartedMessage = nullptr;

	if (!uFnHandleMigrationStartedMessage)
	{
		uFnHandleMigrationStartedMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleMigrationStartedMessage");
	}

	UOnlineGameReservations_X_execHandleMigrationStartedMessage_Params HandleMigrationStartedMessage_Params;
	memcpy_s(&HandleMigrationStartedMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleMigrationStartedMessage, &HandleMigrationStartedMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.SendMigratedServerConnectionInfo
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerId                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::SendMigratedServerConnectionInfo(class FString ServerId)
{
	static UFunction* uFnSendMigratedServerConnectionInfo = nullptr;

	if (!uFnSendMigratedServerConnectionInfo)
	{
		uFnSendMigratedServerConnectionInfo = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SendMigratedServerConnectionInfo");
	}

	UOnlineGameReservations_X_execSendMigratedServerConnectionInfo_Params SendMigratedServerConnectionInfo_Params;
	memcpy_s(&SendMigratedServerConnectionInfo_Params.ServerId, 0x10, &ServerId, 0x10);

	this->ProcessEvent(uFnSendMigratedServerConnectionInfo, &SendMigratedServerConnectionInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.SetJoinNameAndPassword
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InJoinName                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  InJoinPassword                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameReservations_X::SetJoinNameAndPassword(class FString InJoinName, class FString InJoinPassword)
{
	static UFunction* uFnSetJoinNameAndPassword = nullptr;

	if (!uFnSetJoinNameAndPassword)
	{
		uFnSetJoinNameAndPassword = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.SetJoinNameAndPassword");
	}

	UOnlineGameReservations_X_execSetJoinNameAndPassword_Params SetJoinNameAndPassword_Params;
	memcpy_s(&SetJoinNameAndPassword_Params.InJoinName, 0x10, &InJoinName, 0x10);
	memcpy_s(&SetJoinNameAndPassword_Params.InJoinPassword, 0x10, &InJoinPassword, 0x10);

	this->ProcessEvent(uFnSetJoinNameAndPassword, &SetJoinNameAndPassword_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleServerMigrationMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UMatchInfoMessage_X*     Message                        (CPF_Parm)

void UOnlineGameReservations_X::HandleServerMigrationMessage(class UMatchInfoMessage_X* Message)
{
	static UFunction* uFnHandleServerMigrationMessage = nullptr;

	if (!uFnHandleServerMigrationMessage)
	{
		uFnHandleServerMigrationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleServerMigrationMessage");
	}

	UOnlineGameReservations_X_execHandleServerMigrationMessage_Params HandleServerMigrationMessage_Params;
	memcpy_s(&HandleServerMigrationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleServerMigrationMessage, &HandleServerMigrationMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleReconnectReservation
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_Reconnect_X* Notification                   (CPF_Parm)

void UOnlineGameReservations_X::HandleReconnectReservation(class UPsyNetService_Reconnect_X* Notification)
{
	static UFunction* uFnHandleReconnectReservation = nullptr;

	if (!uFnHandleReconnectReservation)
	{
		uFnHandleReconnectReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleReconnectReservation");
	}

	UOnlineGameReservations_X_execHandleReconnectReservation_Params HandleReconnectReservation_Params;
	memcpy_s(&HandleReconnectReservation_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleReconnectReservation, &HandleReconnectReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleFriendJoinReservation
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_FriendJoin_X* Notification                   (CPF_Parm)

void UOnlineGameReservations_X::HandleFriendJoinReservation(class UPsyNetService_FriendJoin_X* Notification)
{
	static UFunction* uFnHandleFriendJoinReservation = nullptr;

	if (!uFnHandleFriendJoinReservation)
	{
		uFnHandleFriendJoinReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleFriendJoinReservation");
	}

	UOnlineGameReservations_X_execHandleFriendJoinReservation_Params HandleFriendJoinReservation_Params;
	memcpy_s(&HandleFriendJoinReservation_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleFriendJoinReservation, &HandleFriendJoinReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleJoinPrivateReservation
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_JoinPrivate_X* Notification                   (CPF_Parm)

void UOnlineGameReservations_X::HandleJoinPrivateReservation(class UPsyNetService_JoinPrivate_X* Notification)
{
	static UFunction* uFnHandleJoinPrivateReservation = nullptr;

	if (!uFnHandleJoinPrivateReservation)
	{
		uFnHandleJoinPrivateReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleJoinPrivateReservation");
	}

	UOnlineGameReservations_X_execHandleJoinPrivateReservation_Params HandleJoinPrivateReservation_Params;
	memcpy_s(&HandleJoinPrivateReservation_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleJoinPrivateReservation, &HandleJoinPrivateReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleCreatePrivateReservation
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_CreatePrivate_X* Notification                   (CPF_Parm)

void UOnlineGameReservations_X::HandleCreatePrivateReservation(class UPsyNetService_CreatePrivate_X* Notification)
{
	static UFunction* uFnHandleCreatePrivateReservation = nullptr;

	if (!uFnHandleCreatePrivateReservation)
	{
		uFnHandleCreatePrivateReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleCreatePrivateReservation");
	}

	UOnlineGameReservations_X_execHandleCreatePrivateReservation_Params HandleCreatePrivateReservation_Params;
	memcpy_s(&HandleCreatePrivateReservation_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleCreatePrivateReservation, &HandleCreatePrivateReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleBackfillReservation
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_Backfill_X* Notification                   (CPF_Parm)

void UOnlineGameReservations_X::HandleBackfillReservation(class UPsyNetService_Backfill_X* Notification)
{
	static UFunction* uFnHandleBackfillReservation = nullptr;

	if (!uFnHandleBackfillReservation)
	{
		uFnHandleBackfillReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleBackfillReservation");
	}

	UOnlineGameReservations_X_execHandleBackfillReservation_Params HandleBackfillReservation_Params;
	memcpy_s(&HandleBackfillReservation_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleBackfillReservation, &HandleBackfillReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.HandleNewGameReservation
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_NewGame_X* Notification                   (CPF_Parm)

void UOnlineGameReservations_X::HandleNewGameReservation(class UPsyNetService_NewGame_X* Notification)
{
	static UFunction* uFnHandleNewGameReservation = nullptr;

	if (!uFnHandleNewGameReservation)
	{
		uFnHandleNewGameReservation = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.HandleNewGameReservation");
	}

	UOnlineGameReservations_X_execHandleNewGameReservation_Params HandleNewGameReservation_Params;
	memcpy_s(&HandleNewGameReservation_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleNewGameReservation, &HandleNewGameReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.StartBeacons
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::StartBeacons()
{
	static UFunction* uFnStartBeacons = nullptr;

	if (!uFnStartBeacons)
	{
		uFnStartBeacons = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.StartBeacons");
	}

	UOnlineGameReservations_X_execStartBeacons_Params StartBeacons_Params;

	this->ProcessEvent(uFnStartBeacons, &StartBeacons_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.OnInit");
	}

	UOnlineGameReservations_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.EventMigrationJoinOccurred
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::EventMigrationJoinOccurred()
{
	static UFunction* uFnEventMigrationJoinOccurred = nullptr;

	if (!uFnEventMigrationJoinOccurred)
	{
		uFnEventMigrationJoinOccurred = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.EventMigrationJoinOccurred");
	}

	UOnlineGameReservations_X_execEventMigrationJoinOccurred_Params EventMigrationJoinOccurred_Params;

	this->ProcessEvent(uFnEventMigrationJoinOccurred, &EventMigrationJoinOccurred_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_X.EventReservationsUpdated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameReservations_X::EventReservationsUpdated()
{
	static UFunction* uFnEventReservationsUpdated = nullptr;

	if (!uFnEventReservationsUpdated)
	{
		uFnEventReservationsUpdated = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_X.EventReservationsUpdated");
	}

	UOnlineGameReservations_X_execEventReservationsUpdated_Params EventReservationsUpdated_Params;

	this->ProcessEvent(uFnEventReservationsUpdated, &EventReservationsUpdated_Params, nullptr);
};

// Function ProjectX.OnlineGameStats_X.UploadStats
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  StatType                       (CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FUploadStatDataSet> DataSet                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameStats_X::UploadStats(class FString StatType, TArray<struct FUploadStatDataSet>& DataSet)
{
	static UFunction* uFnUploadStats = nullptr;

	if (!uFnUploadStats)
	{
		uFnUploadStats = UFunction::FindFunction("Function ProjectX.OnlineGameStats_X.UploadStats");
	}

	UOnlineGameStats_X_execUploadStats_Params UploadStats_Params;
	memcpy_s(&UploadStats_Params.StatType, 0x10, &StatType, 0x10);
	memcpy_s(&UploadStats_Params.DataSet, 0x10, &DataSet, 0x10);

	this->ProcessEvent(uFnUploadStats, &UploadStats_Params, nullptr);

	memcpy_s(&DataSet, 0x10, &UploadStats_Params.DataSet, 0x10);
};

// Function ProjectX.OnlineGameStats_X.SetPlaylistID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        InID                           (CPF_Parm)

void UOnlineGameStats_X::SetPlaylistID(int32_t InID)
{
	static UFunction* uFnSetPlaylistID = nullptr;

	if (!uFnSetPlaylistID)
	{
		uFnSetPlaylistID = UFunction::FindFunction("Function ProjectX.OnlineGameStats_X.SetPlaylistID");
	}

	UOnlineGameStats_X_execSetPlaylistID_Params SetPlaylistID_Params;
	memcpy_s(&SetPlaylistID_Params.InID, 0x4, &InID, 0x4);

	this->ProcessEvent(uFnSetPlaylistID, &SetPlaylistID_Params, nullptr);
};

// Function ProjectX.OnlineGameStats_X.SetMatchGUID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InGuid                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameStats_X::SetMatchGUID(class FString InGuid)
{
	static UFunction* uFnSetMatchGUID = nullptr;

	if (!uFnSetMatchGUID)
	{
		uFnSetMatchGUID = UFunction::FindFunction("Function ProjectX.OnlineGameStats_X.SetMatchGUID");
	}

	UOnlineGameStats_X_execSetMatchGUID_Params SetMatchGUID_Params;
	memcpy_s(&SetMatchGUID_Params.InGuid, 0x10, &InGuid, 0x10);

	this->ProcessEvent(uFnSetMatchGUID, &SetMatchGUID_Params, nullptr);
};

// Function ProjectX.TickableStateObject_X.Sleep
// [0x00020409] (FUNC_Final | FUNC_BlueprintCosmetic | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          Seconds                        (CPF_Parm)

void UTickableStateObject_X::Sleep(float Seconds)
{
	static UFunction* uFnSleep = nullptr;

	if (!uFnSleep)
	{
		uFnSleep = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.Sleep");
	}

	UTickableStateObject_X_execSleep_Params Sleep_Params;
	memcpy_s(&Sleep_Params.Seconds, 0x4, &Seconds, 0x4);

	uFnSleep->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSleep, &Sleep_Params, nullptr);

	uFnSleep->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.Tick
// [0x00020800] (FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UTickableStateObject_X::eventTick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.Tick");
	}

	UTickableStateObject_X_eventTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.TickableStateObject_X.ProcessState
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaSeconds                   (CPF_Parm)

void UTickableStateObject_X::ProcessState(float DeltaSeconds)
{
	static UFunction* uFnProcessState = nullptr;

	if (!uFnProcessState)
	{
		uFnProcessState = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.ProcessState");
	}

	UTickableStateObject_X_execProcessState_Params ProcessState_Params;
	memcpy_s(&ProcessState_Params.DeltaSeconds, 0x4, &DeltaSeconds, 0x4);

	uFnProcessState->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnProcessState, &ProcessState_Params, nullptr);

	uFnProcessState->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.UpdateTimers
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaSeconds                   (CPF_Parm)

void UTickableStateObject_X::UpdateTimers(float DeltaSeconds)
{
	static UFunction* uFnUpdateTimers = nullptr;

	if (!uFnUpdateTimers)
	{
		uFnUpdateTimers = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.UpdateTimers");
	}

	UTickableStateObject_X_execUpdateTimers_Params UpdateTimers_Params;
	memcpy_s(&UpdateTimers_Params.DeltaSeconds, 0x4, &DeltaSeconds, 0x4);

	uFnUpdateTimers->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUpdateTimers, &UpdateTimers_Params, nullptr);

	uFnUpdateTimers->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.NativeTick
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UTickableStateObject_X::NativeTick(float DeltaTime)
{
	static UFunction* uFnNativeTick = nullptr;

	if (!uFnNativeTick)
	{
		uFnNativeTick = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.NativeTick");
	}

	UTickableStateObject_X_execNativeTick_Params NativeTick_Params;
	memcpy_s(&NativeTick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	uFnNativeTick->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnNativeTick, &NativeTick_Params, nullptr);

	uFnNativeTick->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.Destroy
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UTickableStateObject_X::Destroy()
{
	static UFunction* uFnDestroy = nullptr;

	if (!uFnDestroy)
	{
		uFnDestroy = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.Destroy");
	}

	UTickableStateObject_X_execDestroy_Params Destroy_Params;

	uFnDestroy->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDestroy, &Destroy_Params, nullptr);

	uFnDestroy->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.SetTickable
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bTick                          (CPF_Parm)

void UTickableStateObject_X::SetTickable(unsigned long bTick)
{
	static UFunction* uFnSetTickable = nullptr;

	if (!uFnSetTickable)
	{
		uFnSetTickable = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.SetTickable");
	}

	UTickableStateObject_X_execSetTickable_Params SetTickable_Params;
	SetTickable_Params.bTick = bTick;

	uFnSetTickable->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetTickable, &SetTickable_Params, nullptr);

	uFnSetTickable->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.IsTimerActive
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   inTimerFunc                    (CPF_OptionalParm | CPF_Parm)
// class UObject*                 inObj                          (CPF_OptionalParm | CPF_Parm)

bool UTickableStateObject_X::IsTimerActive(struct FName inTimerFunc, class UObject* inObj)
{
	static UFunction* uFnIsTimerActive = nullptr;

	if (!uFnIsTimerActive)
	{
		uFnIsTimerActive = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.IsTimerActive");
	}

	UTickableStateObject_X_execIsTimerActive_Params IsTimerActive_Params;
	memcpy_s(&IsTimerActive_Params.inTimerFunc, 0x8, &inTimerFunc, 0x8);
	memcpy_s(&IsTimerActive_Params.inObj, 0x8, &inObj, 0x8);

	uFnIsTimerActive->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsTimerActive, &IsTimerActive_Params, nullptr);

	uFnIsTimerActive->FunctionFlags |= 0x400;

	return IsTimerActive_Params.ReturnValue;
};

// Function ProjectX.TickableStateObject_X.PauseTimer
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bPause                         (CPF_Parm)
// struct FName                   inTimerFunc                    (CPF_OptionalParm | CPF_Parm)
// class UObject*                 inObj                          (CPF_OptionalParm | CPF_Parm)

void UTickableStateObject_X::PauseTimer(unsigned long bPause, struct FName inTimerFunc, class UObject* inObj)
{
	static UFunction* uFnPauseTimer = nullptr;

	if (!uFnPauseTimer)
	{
		uFnPauseTimer = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.PauseTimer");
	}

	UTickableStateObject_X_execPauseTimer_Params PauseTimer_Params;
	PauseTimer_Params.bPause = bPause;
	memcpy_s(&PauseTimer_Params.inTimerFunc, 0x8, &inTimerFunc, 0x8);
	memcpy_s(&PauseTimer_Params.inObj, 0x8, &inObj, 0x8);

	uFnPauseTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnPauseTimer, &PauseTimer_Params, nullptr);

	uFnPauseTimer->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.ClearAllTimers
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 inObj                          (CPF_OptionalParm | CPF_Parm)

void UTickableStateObject_X::ClearAllTimers(class UObject* inObj)
{
	static UFunction* uFnClearAllTimers = nullptr;

	if (!uFnClearAllTimers)
	{
		uFnClearAllTimers = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.ClearAllTimers");
	}

	UTickableStateObject_X_execClearAllTimers_Params ClearAllTimers_Params;
	memcpy_s(&ClearAllTimers_Params.inObj, 0x8, &inObj, 0x8);

	uFnClearAllTimers->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClearAllTimers, &ClearAllTimers_Params, nullptr);

	uFnClearAllTimers->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.ClearTimer
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   inTimerFunc                    (CPF_OptionalParm | CPF_Parm)
// class UObject*                 inObj                          (CPF_OptionalParm | CPF_Parm)

void UTickableStateObject_X::ClearTimer(struct FName inTimerFunc, class UObject* inObj)
{
	static UFunction* uFnClearTimer = nullptr;

	if (!uFnClearTimer)
	{
		uFnClearTimer = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.ClearTimer");
	}

	UTickableStateObject_X_execClearTimer_Params ClearTimer_Params;
	memcpy_s(&ClearTimer_Params.inTimerFunc, 0x8, &inTimerFunc, 0x8);
	memcpy_s(&ClearTimer_Params.inObj, 0x8, &inObj, 0x8);

	uFnClearTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClearTimer, &ClearTimer_Params, nullptr);

	uFnClearTimer->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.SetStateTimer
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          InRate                         (CPF_Parm)
// unsigned long                  inbLoop                        (CPF_OptionalParm | CPF_Parm)
// struct FName                   inTimerFunc                    (CPF_OptionalParm | CPF_Parm)

void UTickableStateObject_X::SetStateTimer(float InRate, unsigned long inbLoop, struct FName inTimerFunc)
{
	static UFunction* uFnSetStateTimer = nullptr;

	if (!uFnSetStateTimer)
	{
		uFnSetStateTimer = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.SetStateTimer");
	}

	UTickableStateObject_X_execSetStateTimer_Params SetStateTimer_Params;
	memcpy_s(&SetStateTimer_Params.InRate, 0x4, &InRate, 0x4);
	SetStateTimer_Params.inbLoop = inbLoop;
	memcpy_s(&SetStateTimer_Params.inTimerFunc, 0x8, &inTimerFunc, 0x8);

	uFnSetStateTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetStateTimer, &SetStateTimer_Params, nullptr);

	uFnSetStateTimer->FunctionFlags |= 0x400;
};

// Function ProjectX.TickableStateObject_X.SetTimer
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          InRate                         (CPF_Parm)
// unsigned long                  inbLoop                        (CPF_OptionalParm | CPF_Parm)
// struct FName                   inTimerFunc                    (CPF_OptionalParm | CPF_Parm)
// class UObject*                 inObj                          (CPF_OptionalParm | CPF_Parm)

void UTickableStateObject_X::SetTimer(float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj)
{
	static UFunction* uFnSetTimer = nullptr;

	if (!uFnSetTimer)
	{
		uFnSetTimer = UFunction::FindFunction("Function ProjectX.TickableStateObject_X.SetTimer");
	}

	UTickableStateObject_X_execSetTimer_Params SetTimer_Params;
	memcpy_s(&SetTimer_Params.InRate, 0x4, &InRate, 0x4);
	SetTimer_Params.inbLoop = inbLoop;
	memcpy_s(&SetTimer_Params.inTimerFunc, 0x8, &inTimerFunc, 0x8);
	memcpy_s(&SetTimer_Params.inObj, 0x8, &inObj, 0x8);

	uFnSetTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetTimer, &SetTimer_Params, nullptr);

	uFnSetTimer->FunctionFlags |= 0x400;
};

// Function ProjectX.SystemInfo_X.GetComputerName
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USystemInfo_X::GetComputerName()
{
	static UFunction* uFnGetComputerName = nullptr;

	if (!uFnGetComputerName)
	{
		uFnGetComputerName = UFunction::FindFunction("Function ProjectX.SystemInfo_X.GetComputerName");
	}

	USystemInfo_X_execGetComputerName_Params GetComputerName_Params;

	uFnGetComputerName->FunctionFlags |= ~0x400;

	USystemInfo_X::StaticClass()->ProcessEvent(uFnGetComputerName, &GetComputerName_Params, nullptr);

	uFnGetComputerName->FunctionFlags |= 0x400;

	return GetComputerName_Params.ReturnValue;
};

// Function ProjectX.SystemInfo_X.GetNetworkInfo
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class FString>          Types                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USystemInfo_X::GetNetworkInfo(TArray<class FString>& Types)
{
	static UFunction* uFnGetNetworkInfo = nullptr;

	if (!uFnGetNetworkInfo)
	{
		uFnGetNetworkInfo = UFunction::FindFunction("Function ProjectX.SystemInfo_X.GetNetworkInfo");
	}

	USystemInfo_X_execGetNetworkInfo_Params GetNetworkInfo_Params;
	memcpy_s(&GetNetworkInfo_Params.Types, 0x10, &Types, 0x10);

	uFnGetNetworkInfo->FunctionFlags |= ~0x400;

	USystemInfo_X::StaticClass()->ProcessEvent(uFnGetNetworkInfo, &GetNetworkInfo_Params, nullptr);

	uFnGetNetworkInfo->FunctionFlags |= 0x400;

	memcpy_s(&Types, 0x10, &GetNetworkInfo_Params.Types, 0x10);
};

// Function ProjectX.SystemInfo_X.GetOSInfo
// [0x00426401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Type                           (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class FString                  Bit                            (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USystemInfo_X::GetOSInfo(class FString& Type, class FString& Bit)
{
	static UFunction* uFnGetOSInfo = nullptr;

	if (!uFnGetOSInfo)
	{
		uFnGetOSInfo = UFunction::FindFunction("Function ProjectX.SystemInfo_X.GetOSInfo");
	}

	USystemInfo_X_execGetOSInfo_Params GetOSInfo_Params;
	memcpy_s(&GetOSInfo_Params.Type, 0x10, &Type, 0x10);
	memcpy_s(&GetOSInfo_Params.Bit, 0x10, &Bit, 0x10);

	uFnGetOSInfo->FunctionFlags |= ~0x400;

	USystemInfo_X::StaticClass()->ProcessEvent(uFnGetOSInfo, &GetOSInfo_Params, nullptr);

	uFnGetOSInfo->FunctionFlags |= 0x400;

	memcpy_s(&Type, 0x10, &GetOSInfo_Params.Type, 0x10);
	memcpy_s(&Bit, 0x10, &GetOSInfo_Params.Bit, 0x10);
};

// Function ProjectX.SystemInfo_X.GetVideoCardInfo
// [0x00426401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  CardName                       (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// int32_t                        RAM                            (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

void USystemInfo_X::GetVideoCardInfo(class FString& CardName, int32_t& RAM)
{
	static UFunction* uFnGetVideoCardInfo = nullptr;

	if (!uFnGetVideoCardInfo)
	{
		uFnGetVideoCardInfo = UFunction::FindFunction("Function ProjectX.SystemInfo_X.GetVideoCardInfo");
	}

	USystemInfo_X_execGetVideoCardInfo_Params GetVideoCardInfo_Params;
	memcpy_s(&GetVideoCardInfo_Params.CardName, 0x10, &CardName, 0x10);
	memcpy_s(&GetVideoCardInfo_Params.RAM, 0x4, &RAM, 0x4);

	uFnGetVideoCardInfo->FunctionFlags |= ~0x400;

	USystemInfo_X::StaticClass()->ProcessEvent(uFnGetVideoCardInfo, &GetVideoCardInfo_Params, nullptr);

	uFnGetVideoCardInfo->FunctionFlags |= 0x400;

	memcpy_s(&CardName, 0x10, &GetVideoCardInfo_Params.CardName, 0x10);
	memcpy_s(&RAM, 0x4, &GetVideoCardInfo_Params.RAM, 0x4);
};

// Function ProjectX.SystemInfo_X.GetMemoryInfo
// [0x00426401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          Physical                       (CPF_OptionalParm | CPF_Parm | CPF_OutParm)
// float                          PageFile                       (CPF_OptionalParm | CPF_Parm | CPF_OutParm)
// float                          Virtual                        (CPF_OptionalParm | CPF_Parm | CPF_OutParm)
// int32_t                        Used                           (CPF_OptionalParm | CPF_Parm | CPF_OutParm)
// int32_t                        Allocated                      (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

void USystemInfo_X::GetMemoryInfo(float& Physical, float& PageFile, float& Virtual, int32_t& Used, int32_t& Allocated)
{
	static UFunction* uFnGetMemoryInfo = nullptr;

	if (!uFnGetMemoryInfo)
	{
		uFnGetMemoryInfo = UFunction::FindFunction("Function ProjectX.SystemInfo_X.GetMemoryInfo");
	}

	USystemInfo_X_execGetMemoryInfo_Params GetMemoryInfo_Params;
	memcpy_s(&GetMemoryInfo_Params.Physical, 0x4, &Physical, 0x4);
	memcpy_s(&GetMemoryInfo_Params.PageFile, 0x4, &PageFile, 0x4);
	memcpy_s(&GetMemoryInfo_Params.Virtual, 0x4, &Virtual, 0x4);
	memcpy_s(&GetMemoryInfo_Params.Used, 0x4, &Used, 0x4);
	memcpy_s(&GetMemoryInfo_Params.Allocated, 0x4, &Allocated, 0x4);

	uFnGetMemoryInfo->FunctionFlags |= ~0x400;

	USystemInfo_X::StaticClass()->ProcessEvent(uFnGetMemoryInfo, &GetMemoryInfo_Params, nullptr);

	uFnGetMemoryInfo->FunctionFlags |= 0x400;

	memcpy_s(&Physical, 0x4, &GetMemoryInfo_Params.Physical, 0x4);
	memcpy_s(&PageFile, 0x4, &GetMemoryInfo_Params.PageFile, 0x4);
	memcpy_s(&Virtual, 0x4, &GetMemoryInfo_Params.Virtual, 0x4);
	memcpy_s(&Used, 0x4, &GetMemoryInfo_Params.Used, 0x4);
	memcpy_s(&Allocated, 0x4, &GetMemoryInfo_Params.Allocated, 0x4);
};

// Function ProjectX.SystemInfo_X.GetCPUInfo
// [0x00426401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Type                           (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class FString                  Description                    (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class FString                  Cores                          (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class FString                  Threads                        (CPF_OptionalParm | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void USystemInfo_X::GetCPUInfo(class FString& Type, class FString& Description, class FString& Cores, class FString& Threads)
{
	static UFunction* uFnGetCPUInfo = nullptr;

	if (!uFnGetCPUInfo)
	{
		uFnGetCPUInfo = UFunction::FindFunction("Function ProjectX.SystemInfo_X.GetCPUInfo");
	}

	USystemInfo_X_execGetCPUInfo_Params GetCPUInfo_Params;
	memcpy_s(&GetCPUInfo_Params.Type, 0x10, &Type, 0x10);
	memcpy_s(&GetCPUInfo_Params.Description, 0x10, &Description, 0x10);
	memcpy_s(&GetCPUInfo_Params.Cores, 0x10, &Cores, 0x10);
	memcpy_s(&GetCPUInfo_Params.Threads, 0x10, &Threads, 0x10);

	uFnGetCPUInfo->FunctionFlags |= ~0x400;

	USystemInfo_X::StaticClass()->ProcessEvent(uFnGetCPUInfo, &GetCPUInfo_Params, nullptr);

	uFnGetCPUInfo->FunctionFlags |= 0x400;

	memcpy_s(&Type, 0x10, &GetCPUInfo_Params.Type, 0x10);
	memcpy_s(&Description, 0x10, &GetCPUInfo_Params.Description, 0x10);
	memcpy_s(&Cores, 0x10, &GetCPUInfo_Params.Cores, 0x10);
	memcpy_s(&Threads, 0x10, &GetCPUInfo_Params.Threads, 0x10);
};

// Function ProjectX.SystemInfo_X.IsSupported
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USystemInfo_X::IsSupported()
{
	static UFunction* uFnIsSupported = nullptr;

	if (!uFnIsSupported)
	{
		uFnIsSupported = UFunction::FindFunction("Function ProjectX.SystemInfo_X.IsSupported");
	}

	USystemInfo_X_execIsSupported_Params IsSupported_Params;

	uFnIsSupported->FunctionFlags |= ~0x400;

	USystemInfo_X::StaticClass()->ProcessEvent(uFnIsSupported, &IsSupported_Params, nullptr);

	uFnIsSupported->FunctionFlags |= 0x400;

	return IsSupported_Params.ReturnValue;
};

// Function ProjectX.TickActorComponent_X.SetTickable
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWantsTick                     (CPF_Parm)

void UTickActorComponent_X::SetTickable(unsigned long bWantsTick)
{
	static UFunction* uFnSetTickable = nullptr;

	if (!uFnSetTickable)
	{
		uFnSetTickable = UFunction::FindFunction("Function ProjectX.TickActorComponent_X.SetTickable");
	}

	UTickActorComponent_X_execSetTickable_Params SetTickable_Params;
	SetTickable_Params.bWantsTick = bWantsTick;

	uFnSetTickable->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetTickable, &SetTickable_Params, nullptr);

	uFnSetTickable->FunctionFlags |= 0x400;
};

// Function ProjectX.TickActorComponent_X.ClearAllTimers
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 inObj                          (CPF_OptionalParm | CPF_Parm)

void UTickActorComponent_X::ClearAllTimers(class UObject* inObj)
{
	static UFunction* uFnClearAllTimers = nullptr;

	if (!uFnClearAllTimers)
	{
		uFnClearAllTimers = UFunction::FindFunction("Function ProjectX.TickActorComponent_X.ClearAllTimers");
	}

	UTickActorComponent_X_execClearAllTimers_Params ClearAllTimers_Params;
	memcpy_s(&ClearAllTimers_Params.inObj, 0x8, &inObj, 0x8);

	uFnClearAllTimers->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClearAllTimers, &ClearAllTimers_Params, nullptr);

	uFnClearAllTimers->FunctionFlags |= 0x400;
};

// Function ProjectX.TickActorComponent_X.ClearTimer
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   inTimerFunc                    (CPF_OptionalParm | CPF_Parm)
// class UObject*                 inObj                          (CPF_OptionalParm | CPF_Parm)

void UTickActorComponent_X::ClearTimer(struct FName inTimerFunc, class UObject* inObj)
{
	static UFunction* uFnClearTimer = nullptr;

	if (!uFnClearTimer)
	{
		uFnClearTimer = UFunction::FindFunction("Function ProjectX.TickActorComponent_X.ClearTimer");
	}

	UTickActorComponent_X_execClearTimer_Params ClearTimer_Params;
	memcpy_s(&ClearTimer_Params.inTimerFunc, 0x8, &inTimerFunc, 0x8);
	memcpy_s(&ClearTimer_Params.inObj, 0x8, &inObj, 0x8);

	uFnClearTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClearTimer, &ClearTimer_Params, nullptr);

	uFnClearTimer->FunctionFlags |= 0x400;
};

// Function ProjectX.TickActorComponent_X.SetTimer
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          InRate                         (CPF_Parm)
// unsigned long                  inbLoop                        (CPF_OptionalParm | CPF_Parm)
// struct FName                   inTimerFunc                    (CPF_OptionalParm | CPF_Parm)
// class UObject*                 inObj                          (CPF_OptionalParm | CPF_Parm)

void UTickActorComponent_X::SetTimer(float InRate, unsigned long inbLoop, struct FName inTimerFunc, class UObject* inObj)
{
	static UFunction* uFnSetTimer = nullptr;

	if (!uFnSetTimer)
	{
		uFnSetTimer = UFunction::FindFunction("Function ProjectX.TickActorComponent_X.SetTimer");
	}

	UTickActorComponent_X_execSetTimer_Params SetTimer_Params;
	memcpy_s(&SetTimer_Params.InRate, 0x4, &InRate, 0x4);
	SetTimer_Params.inbLoop = inbLoop;
	memcpy_s(&SetTimer_Params.inTimerFunc, 0x8, &inTimerFunc, 0x8);
	memcpy_s(&SetTimer_Params.inObj, 0x8, &inObj, 0x8);

	uFnSetTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetTimer, &SetTimer_Params, nullptr);

	uFnSetTimer->FunctionFlags |= 0x400;
};

// Function ProjectX.TickActorComponent_X.EventTick
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UTickActorComponent_X::EventTick(float DeltaTime)
{
	static UFunction* uFnEventTick = nullptr;

	if (!uFnEventTick)
	{
		uFnEventTick = UFunction::FindFunction("Function ProjectX.TickActorComponent_X.EventTick");
	}

	UTickActorComponent_X_execEventTick_Params EventTick_Params;
	memcpy_s(&EventTick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnEventTick, &EventTick_Params, nullptr);
};

// Function ProjectX.Timers_X.ClearTick
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UTimers_X::ClearTick(struct FScriptDelegate Callback)
{
	static UFunction* uFnClearTick = nullptr;

	if (!uFnClearTick)
	{
		uFnClearTick = UFunction::FindFunction("Function ProjectX.Timers_X.ClearTick");
	}

	UTimers_X_execClearTick_Params ClearTick_Params;
	memcpy_s(&ClearTick_Params.Callback, 0x18, &Callback, 0x18);

	uFnClearTick->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnClearTick, &ClearTick_Params, nullptr);

	uFnClearTick->FunctionFlags |= 0x400;
};

// Function ProjectX.Timers_X.SetTick
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UTimers_X::SetTick(struct FScriptDelegate Callback)
{
	static UFunction* uFnSetTick = nullptr;

	if (!uFnSetTick)
	{
		uFnSetTick = UFunction::FindFunction("Function ProjectX.Timers_X.SetTick");
	}

	UTimers_X_execSetTick_Params SetTick_Params;
	memcpy_s(&SetTick_Params.Callback, 0x18, &Callback, 0x18);

	uFnSetTick->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnSetTick, &SetTick_Params, nullptr);

	uFnSetTick->FunctionFlags |= 0x400;
};

// Function ProjectX.Timers_X.IsActive
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

bool UTimers_X::IsActive(struct FScriptDelegate Callback)
{
	static UFunction* uFnIsActive = nullptr;

	if (!uFnIsActive)
	{
		uFnIsActive = UFunction::FindFunction("Function ProjectX.Timers_X.IsActive");
	}

	UTimers_X_execIsActive_Params IsActive_Params;
	memcpy_s(&IsActive_Params.Callback, 0x18, &Callback, 0x18);

	uFnIsActive->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnIsActive, &IsActive_Params, nullptr);

	uFnIsActive->FunctionFlags |= 0x400;

	return IsActive_Params.ReturnValue;
};

// Function ProjectX.Timers_X.GetElapsedTime
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

float UTimers_X::GetElapsedTime(struct FScriptDelegate Callback)
{
	static UFunction* uFnGetElapsedTime = nullptr;

	if (!uFnGetElapsedTime)
	{
		uFnGetElapsedTime = UFunction::FindFunction("Function ProjectX.Timers_X.GetElapsedTime");
	}

	UTimers_X_execGetElapsedTime_Params GetElapsedTime_Params;
	memcpy_s(&GetElapsedTime_Params.Callback, 0x18, &Callback, 0x18);

	uFnGetElapsedTime->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnGetElapsedTime, &GetElapsedTime_Params, nullptr);

	uFnGetElapsedTime->FunctionFlags |= 0x400;

	return GetElapsedTime_Params.ReturnValue;
};

// Function ProjectX.Timers_X.GetRemainingTime
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

float UTimers_X::GetRemainingTime(struct FScriptDelegate Callback)
{
	static UFunction* uFnGetRemainingTime = nullptr;

	if (!uFnGetRemainingTime)
	{
		uFnGetRemainingTime = UFunction::FindFunction("Function ProjectX.Timers_X.GetRemainingTime");
	}

	UTimers_X_execGetRemainingTime_Params GetRemainingTime_Params;
	memcpy_s(&GetRemainingTime_Params.Callback, 0x18, &Callback, 0x18);

	uFnGetRemainingTime->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnGetRemainingTime, &GetRemainingTime_Params, nullptr);

	uFnGetRemainingTime->FunctionFlags |= 0x400;

	return GetRemainingTime_Params.ReturnValue;
};

// Function ProjectX.Timers_X.GetRate
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

float UTimers_X::GetRate(struct FScriptDelegate Callback)
{
	static UFunction* uFnGetRate = nullptr;

	if (!uFnGetRate)
	{
		uFnGetRate = UFunction::FindFunction("Function ProjectX.Timers_X.GetRate");
	}

	UTimers_X_execGetRate_Params GetRate_Params;
	memcpy_s(&GetRate_Params.Callback, 0x18, &Callback, 0x18);

	uFnGetRate->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnGetRate, &GetRate_Params, nullptr);

	uFnGetRate->FunctionFlags |= 0x400;

	return GetRate_Params.ReturnValue;
};

// Function ProjectX.Timers_X.ClearAll
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Obj                            (CPF_Parm)

void UTimers_X::ClearAll(class UObject* Obj)
{
	static UFunction* uFnClearAll = nullptr;

	if (!uFnClearAll)
	{
		uFnClearAll = UFunction::FindFunction("Function ProjectX.Timers_X.ClearAll");
	}

	UTimers_X_execClearAll_Params ClearAll_Params;
	memcpy_s(&ClearAll_Params.Obj, 0x8, &Obj, 0x8);

	uFnClearAll->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnClearAll, &ClearAll_Params, nullptr);

	uFnClearAll->FunctionFlags |= 0x400;
};

// Function ProjectX.Timers_X.Clear
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UTimers_X::Clear(struct FScriptDelegate Callback)
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function ProjectX.Timers_X.Clear");
	}

	UTimers_X_execClear_Params Clear_Params;
	memcpy_s(&Clear_Params.Callback, 0x18, &Callback, 0x18);

	uFnClear->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnClear, &Clear_Params, nullptr);

	uFnClear->FunctionFlags |= 0x400;
};

// Function ProjectX.Timers_X.SetStateTimer
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// float                          Rate                           (CPF_Parm)
// unsigned long                  bLoop                          (CPF_OptionalParm | CPF_Parm)

void UTimers_X::SetStateTimer(struct FScriptDelegate Callback, float Rate, unsigned long bLoop)
{
	static UFunction* uFnSetStateTimer = nullptr;

	if (!uFnSetStateTimer)
	{
		uFnSetStateTimer = UFunction::FindFunction("Function ProjectX.Timers_X.SetStateTimer");
	}

	UTimers_X_execSetStateTimer_Params SetStateTimer_Params;
	memcpy_s(&SetStateTimer_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&SetStateTimer_Params.Rate, 0x4, &Rate, 0x4);
	SetStateTimer_Params.bLoop = bLoop;

	uFnSetStateTimer->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnSetStateTimer, &SetStateTimer_Params, nullptr);

	uFnSetStateTimer->FunctionFlags |= 0x400;
};

// Function ProjectX.Timers_X.Set
// [0x00026401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// float                          Rate                           (CPF_Parm)
// unsigned long                  bLoop                          (CPF_OptionalParm | CPF_Parm)

void UTimers_X::Set(struct FScriptDelegate Callback, float Rate, unsigned long bLoop)
{
	static UFunction* uFnSet = nullptr;

	if (!uFnSet)
	{
		uFnSet = UFunction::FindFunction("Function ProjectX.Timers_X.Set");
	}

	UTimers_X_execSet_Params Set_Params;
	memcpy_s(&Set_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&Set_Params.Rate, 0x4, &Rate, 0x4);
	Set_Params.bLoop = bLoop;

	uFnSet->FunctionFlags |= ~0x400;

	UTimers_X::StaticClass()->ProcessEvent(uFnSet, &Set_Params, nullptr);

	uFnSet->FunctionFlags |= 0x400;
};

// Function ProjectX.Timers_X.TickDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UTimers_X::TickDelegate(float DeltaTime)
{
	static UFunction* uFnTickDelegate = nullptr;

	if (!uFnTickDelegate)
	{
		uFnTickDelegate = UFunction::FindFunction("Function ProjectX.Timers_X.TickDelegate");
	}

	UTimers_X_execTickDelegate_Params TickDelegate_Params;
	memcpy_s(&TickDelegate_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTickDelegate, &TickDelegate_Params, nullptr);
};

// Function ProjectX.TimersComponent_X.UpdateTimers
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaSeconds                   (CPF_Parm)

void UTimersComponent_X::UpdateTimers(float DeltaSeconds)
{
	static UFunction* uFnUpdateTimers = nullptr;

	if (!uFnUpdateTimers)
	{
		uFnUpdateTimers = UFunction::FindFunction("Function ProjectX.TimersComponent_X.UpdateTimers");
	}

	UTimersComponent_X_execUpdateTimers_Params UpdateTimers_Params;
	memcpy_s(&UpdateTimers_Params.DeltaSeconds, 0x4, &DeltaSeconds, 0x4);

	uFnUpdateTimers->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnUpdateTimers, &UpdateTimers_Params, nullptr);

	uFnUpdateTimers->FunctionFlags |= 0x400;
};

// Function ProjectX.TimersComponent_X.IsActive
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

bool UTimersComponent_X::IsActive(struct FScriptDelegate Callback)
{
	static UFunction* uFnIsActive = nullptr;

	if (!uFnIsActive)
	{
		uFnIsActive = UFunction::FindFunction("Function ProjectX.TimersComponent_X.IsActive");
	}

	UTimersComponent_X_execIsActive_Params IsActive_Params;
	memcpy_s(&IsActive_Params.Callback, 0x18, &Callback, 0x18);

	uFnIsActive->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsActive, &IsActive_Params, nullptr);

	uFnIsActive->FunctionFlags |= 0x400;

	return IsActive_Params.ReturnValue;
};

// Function ProjectX.TimersComponent_X.GetElapsedTime
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

float UTimersComponent_X::GetElapsedTime(struct FScriptDelegate Callback)
{
	static UFunction* uFnGetElapsedTime = nullptr;

	if (!uFnGetElapsedTime)
	{
		uFnGetElapsedTime = UFunction::FindFunction("Function ProjectX.TimersComponent_X.GetElapsedTime");
	}

	UTimersComponent_X_execGetElapsedTime_Params GetElapsedTime_Params;
	memcpy_s(&GetElapsedTime_Params.Callback, 0x18, &Callback, 0x18);

	uFnGetElapsedTime->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetElapsedTime, &GetElapsedTime_Params, nullptr);

	uFnGetElapsedTime->FunctionFlags |= 0x400;

	return GetElapsedTime_Params.ReturnValue;
};

// Function ProjectX.TimersComponent_X.GetRemainingTime
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

float UTimersComponent_X::GetRemainingTime(struct FScriptDelegate Callback)
{
	static UFunction* uFnGetRemainingTime = nullptr;

	if (!uFnGetRemainingTime)
	{
		uFnGetRemainingTime = UFunction::FindFunction("Function ProjectX.TimersComponent_X.GetRemainingTime");
	}

	UTimersComponent_X_execGetRemainingTime_Params GetRemainingTime_Params;
	memcpy_s(&GetRemainingTime_Params.Callback, 0x18, &Callback, 0x18);

	uFnGetRemainingTime->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetRemainingTime, &GetRemainingTime_Params, nullptr);

	uFnGetRemainingTime->FunctionFlags |= 0x400;

	return GetRemainingTime_Params.ReturnValue;
};

// Function ProjectX.TimersComponent_X.GetRate
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

float UTimersComponent_X::GetRate(struct FScriptDelegate Callback)
{
	static UFunction* uFnGetRate = nullptr;

	if (!uFnGetRate)
	{
		uFnGetRate = UFunction::FindFunction("Function ProjectX.TimersComponent_X.GetRate");
	}

	UTimersComponent_X_execGetRate_Params GetRate_Params;
	memcpy_s(&GetRate_Params.Callback, 0x18, &Callback, 0x18);

	uFnGetRate->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetRate, &GetRate_Params, nullptr);

	uFnGetRate->FunctionFlags |= 0x400;

	return GetRate_Params.ReturnValue;
};

// Function ProjectX.TimersComponent_X.ClearAll
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Obj                            (CPF_Parm)

void UTimersComponent_X::ClearAll(class UObject* Obj)
{
	static UFunction* uFnClearAll = nullptr;

	if (!uFnClearAll)
	{
		uFnClearAll = UFunction::FindFunction("Function ProjectX.TimersComponent_X.ClearAll");
	}

	UTimersComponent_X_execClearAll_Params ClearAll_Params;
	memcpy_s(&ClearAll_Params.Obj, 0x8, &Obj, 0x8);

	uFnClearAll->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClearAll, &ClearAll_Params, nullptr);

	uFnClearAll->FunctionFlags |= 0x400;
};

// Function ProjectX.TimersComponent_X.Clear
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UTimersComponent_X::Clear(struct FScriptDelegate Callback)
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function ProjectX.TimersComponent_X.Clear");
	}

	UTimersComponent_X_execClear_Params Clear_Params;
	memcpy_s(&Clear_Params.Callback, 0x18, &Callback, 0x18);

	uFnClear->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClear, &Clear_Params, nullptr);

	uFnClear->FunctionFlags |= 0x400;
};

// Function ProjectX.TimersComponent_X.SetStateTimer
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// float                          Rate                           (CPF_Parm)
// unsigned long                  bLoop                          (CPF_OptionalParm | CPF_Parm)

void UTimersComponent_X::SetStateTimer(struct FScriptDelegate Callback, float Rate, unsigned long bLoop)
{
	static UFunction* uFnSetStateTimer = nullptr;

	if (!uFnSetStateTimer)
	{
		uFnSetStateTimer = UFunction::FindFunction("Function ProjectX.TimersComponent_X.SetStateTimer");
	}

	UTimersComponent_X_execSetStateTimer_Params SetStateTimer_Params;
	memcpy_s(&SetStateTimer_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&SetStateTimer_Params.Rate, 0x4, &Rate, 0x4);
	SetStateTimer_Params.bLoop = bLoop;

	uFnSetStateTimer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetStateTimer, &SetStateTimer_Params, nullptr);

	uFnSetStateTimer->FunctionFlags |= 0x400;
};

// Function ProjectX.TimersComponent_X.Set
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// float                          Rate                           (CPF_Parm)
// unsigned long                  bLoop                          (CPF_OptionalParm | CPF_Parm)

void UTimersComponent_X::Set(struct FScriptDelegate Callback, float Rate, unsigned long bLoop)
{
	static UFunction* uFnSet = nullptr;

	if (!uFnSet)
	{
		uFnSet = UFunction::FindFunction("Function ProjectX.TimersComponent_X.Set");
	}

	UTimersComponent_X_execSet_Params Set_Params;
	memcpy_s(&Set_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&Set_Params.Rate, 0x4, &Rate, 0x4);
	Set_Params.bLoop = bLoop;

	uFnSet->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSet, &Set_Params, nullptr);

	uFnSet->FunctionFlags |= 0x400;
};

// Function ProjectX.TickComponent_X.SetTickable
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWantsTick                     (CPF_Parm)

void UTickComponent_X::SetTickable(unsigned long bWantsTick)
{
	static UFunction* uFnSetTickable = nullptr;

	if (!uFnSetTickable)
	{
		uFnSetTickable = UFunction::FindFunction("Function ProjectX.TickComponent_X.SetTickable");
	}

	UTickComponent_X_execSetTickable_Params SetTickable_Params;
	SetTickable_Params.bWantsTick = bWantsTick;

	uFnSetTickable->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetTickable, &SetTickable_Params, nullptr);

	uFnSetTickable->FunctionFlags |= 0x400;
};

// Function ProjectX.TickComponent_X.TickDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UTickComponent_X::TickDelegate(float DeltaTime)
{
	static UFunction* uFnTickDelegate = nullptr;

	if (!uFnTickDelegate)
	{
		uFnTickDelegate = UFunction::FindFunction("Function ProjectX.TickComponent_X.TickDelegate");
	}

	UTickComponent_X_execTickDelegate_Params TickDelegate_Params;
	memcpy_s(&TickDelegate_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTickDelegate, &TickDelegate_Params, nullptr);
};

// Function ProjectX.UIStrings_X.FormatAsNumber
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// int32_t                        Number                         (CPF_Parm)
// class FString                  Delimiter                      (CPF_Parm | CPF_NeedCtorLink)

class FString UUIStrings_X::FormatAsNumber(int32_t Number, class FString Delimiter)
{
	static UFunction* uFnFormatAsNumber = nullptr;

	if (!uFnFormatAsNumber)
	{
		uFnFormatAsNumber = UFunction::FindFunction("Function ProjectX.UIStrings_X.FormatAsNumber");
	}

	UUIStrings_X_execFormatAsNumber_Params FormatAsNumber_Params;
	memcpy_s(&FormatAsNumber_Params.Number, 0x4, &Number, 0x4);
	memcpy_s(&FormatAsNumber_Params.Delimiter, 0x10, &Delimiter, 0x10);

	uFnFormatAsNumber->FunctionFlags |= ~0x400;

	UUIStrings_X::StaticClass()->ProcessEvent(uFnFormatAsNumber, &FormatAsNumber_Params, nullptr);

	uFnFormatAsNumber->FunctionFlags |= 0x400;

	return FormatAsNumber_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UWebRequest_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.WebRequest_X.PrintDebugInfo");
	}

	UWebRequest_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.WebRequest_X.SetError
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  InError                        (CPF_Parm)

void UWebRequest_X::SetError(class UError* InError)
{
	static UFunction* uFnSetError = nullptr;

	if (!uFnSetError)
	{
		uFnSetError = UFunction::FindFunction("Function ProjectX.WebRequest_X.SetError");
	}

	UWebRequest_X_execSetError_Params SetError_Params;
	memcpy_s(&SetError_Params.InError, 0x8, &InError, 0x8);

	uFnSetError->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetError, &SetError_Params, nullptr);

	uFnSetError->FunctionFlags |= 0x400;
};

// Function ProjectX.WebRequest_X.HasInternetConnection
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UWebRequest_X::eventHasInternetConnection()
{
	static UFunction* uFnHasInternetConnection = nullptr;

	if (!uFnHasInternetConnection)
	{
		uFnHasInternetConnection = UFunction::FindFunction("Function ProjectX.WebRequest_X.HasInternetConnection");
	}

	UWebRequest_X_eventHasInternetConnection_Params HasInternetConnection_Params;

	this->ProcessEvent(uFnHasInternetConnection, &HasInternetConnection_Params, nullptr);

	return HasInternetConnection_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.HandleHttpRequestComplete
// [0x00048401] (FUNC_Final | FUNC_Native | FUNC_UbergraphFunction | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UHttpRequestInterface*   OriginalRequest                (CPF_Parm)
// class UHttpResponseInterface*  Response                       (CPF_Parm)
// unsigned long                  bDidSucceed                    (CPF_Parm)

void UWebRequest_X::HandleHttpRequestComplete(class UHttpRequestInterface* OriginalRequest, class UHttpResponseInterface* Response, unsigned long bDidSucceed)
{
	static UFunction* uFnHandleHttpRequestComplete = nullptr;

	if (!uFnHandleHttpRequestComplete)
	{
		uFnHandleHttpRequestComplete = UFunction::FindFunction("Function ProjectX.WebRequest_X.HandleHttpRequestComplete");
	}

	UWebRequest_X_execHandleHttpRequestComplete_Params HandleHttpRequestComplete_Params;
	memcpy_s(&HandleHttpRequestComplete_Params.OriginalRequest, 0x8, &OriginalRequest, 0x8);
	memcpy_s(&HandleHttpRequestComplete_Params.Response, 0x8, &Response, 0x8);
	HandleHttpRequestComplete_Params.bDidSucceed = bDidSucceed;

	uFnHandleHttpRequestComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHandleHttpRequestComplete, &HandleHttpRequestComplete_Params, nullptr);

	uFnHandleHttpRequestComplete->FunctionFlags |= 0x400;
};

// Function ProjectX.WebRequest_X.ConstructHttpRequest
// [0x00040803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UWebRequest_X::eventConstructHttpRequest()
{
	static UFunction* uFnConstructHttpRequest = nullptr;

	if (!uFnConstructHttpRequest)
	{
		uFnConstructHttpRequest = UFunction::FindFunction("Function ProjectX.WebRequest_X.ConstructHttpRequest");
	}

	UWebRequest_X_eventConstructHttpRequest_Params ConstructHttpRequest_Params;

	this->ProcessEvent(uFnConstructHttpRequest, &ConstructHttpRequest_Params, nullptr);
};

// Function ProjectX.WebRequest_X.GetResponseHeader
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)

class FString UWebRequest_X::GetResponseHeader(class FString Key)
{
	static UFunction* uFnGetResponseHeader = nullptr;

	if (!uFnGetResponseHeader)
	{
		uFnGetResponseHeader = UFunction::FindFunction("Function ProjectX.WebRequest_X.GetResponseHeader");
	}

	UWebRequest_X_execGetResponseHeader_Params GetResponseHeader_Params;
	memcpy_s(&GetResponseHeader_Params.Key, 0x10, &Key, 0x10);

	uFnGetResponseHeader->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetResponseHeader, &GetResponseHeader_Params, nullptr);

	uFnGetResponseHeader->FunctionFlags |= 0x400;

	return GetResponseHeader_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.GetResponseString
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UWebRequest_X::GetResponseString()
{
	static UFunction* uFnGetResponseString = nullptr;

	if (!uFnGetResponseString)
	{
		uFnGetResponseString = UFunction::FindFunction("Function ProjectX.WebRequest_X.GetResponseString");
	}

	UWebRequest_X_execGetResponseString_Params GetResponseString_Params;

	uFnGetResponseString->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetResponseString, &GetResponseString_Params, nullptr);

	uFnGetResponseString->FunctionFlags |= 0x400;

	return GetResponseString_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.HasNewData
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UWebRequest_X::HasNewData()
{
	static UFunction* uFnHasNewData = nullptr;

	if (!uFnHasNewData)
	{
		uFnHasNewData = UFunction::FindFunction("Function ProjectX.WebRequest_X.HasNewData");
	}

	UWebRequest_X_execHasNewData_Params HasNewData_Params;

	uFnHasNewData->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnHasNewData, &HasNewData_Params, nullptr);

	uFnHasNewData->FunctionFlags |= 0x400;

	return HasNewData_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.IsSuccess
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UWebRequest_X::IsSuccess()
{
	static UFunction* uFnIsSuccess = nullptr;

	if (!uFnIsSuccess)
	{
		uFnIsSuccess = UFunction::FindFunction("Function ProjectX.WebRequest_X.IsSuccess");
	}

	UWebRequest_X_execIsSuccess_Params IsSuccess_Params;

	uFnIsSuccess->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsSuccess, &IsSuccess_Params, nullptr);

	uFnIsSuccess->FunctionFlags |= 0x400;

	return IsSuccess_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.IsError
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UWebRequest_X::IsError()
{
	static UFunction* uFnIsError = nullptr;

	if (!uFnIsError)
	{
		uFnIsError = UFunction::FindFunction("Function ProjectX.WebRequest_X.IsError");
	}

	UWebRequest_X_execIsError_Params IsError_Params;

	uFnIsError->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsError, &IsError_Params, nullptr);

	uFnIsError->FunctionFlags |= 0x400;

	return IsError_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.IsComplete
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UWebRequest_X::IsComplete()
{
	static UFunction* uFnIsComplete = nullptr;

	if (!uFnIsComplete)
	{
		uFnIsComplete = UFunction::FindFunction("Function ProjectX.WebRequest_X.IsComplete");
	}

	UWebRequest_X_execIsComplete_Params IsComplete_Params;

	uFnIsComplete->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsComplete, &IsComplete_Params, nullptr);

	uFnIsComplete->FunctionFlags |= 0x400;

	return IsComplete_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.IsSent
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UWebRequest_X::IsSent()
{
	static UFunction* uFnIsSent = nullptr;

	if (!uFnIsSent)
	{
		uFnIsSent = UFunction::FindFunction("Function ProjectX.WebRequest_X.IsSent");
	}

	UWebRequest_X_execIsSent_Params IsSent_Params;

	uFnIsSent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnIsSent, &IsSent_Params, nullptr);

	uFnIsSent->FunctionFlags |= 0x400;

	return IsSent_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.GetHttpRequest
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UHttpRequestInterface*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UHttpRequestInterface* UWebRequest_X::GetHttpRequest()
{
	static UFunction* uFnGetHttpRequest = nullptr;

	if (!uFnGetHttpRequest)
	{
		uFnGetHttpRequest = UFunction::FindFunction("Function ProjectX.WebRequest_X.GetHttpRequest");
	}

	UWebRequest_X_execGetHttpRequest_Params GetHttpRequest_Params;

	uFnGetHttpRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetHttpRequest, &GetHttpRequest_Params, nullptr);

	uFnGetHttpRequest->FunctionFlags |= 0x400;

	return GetHttpRequest_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.Send
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InURL                          (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnCompleteCallback             (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class UWebRequest_X* UWebRequest_X::Send(class FString InURL, struct FScriptDelegate OnCompleteCallback)
{
	static UFunction* uFnSend = nullptr;

	if (!uFnSend)
	{
		uFnSend = UFunction::FindFunction("Function ProjectX.WebRequest_X.Send");
	}

	UWebRequest_X_execSend_Params Send_Params;
	memcpy_s(&Send_Params.InURL, 0x10, &InURL, 0x10);
	memcpy_s(&Send_Params.OnCompleteCallback, 0x18, &OnCompleteCallback, 0x18);

	uFnSend->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSend, &Send_Params, nullptr);

	uFnSend->FunctionFlags |= 0x400;

	return Send_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.PrepareRequest
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InURL                          (CPF_Parm | CPF_NeedCtorLink)

void UWebRequest_X::PrepareRequest(class FString InURL)
{
	static UFunction* uFnPrepareRequest = nullptr;

	if (!uFnPrepareRequest)
	{
		uFnPrepareRequest = UFunction::FindFunction("Function ProjectX.WebRequest_X.PrepareRequest");
	}

	UWebRequest_X_execPrepareRequest_Params PrepareRequest_Params;
	memcpy_s(&PrepareRequest_Params.InURL, 0x10, &InURL, 0x10);

	uFnPrepareRequest->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnPrepareRequest, &PrepareRequest_Params, nullptr);

	uFnPrepareRequest->FunctionFlags |= 0x400;
};

// Function ProjectX.WebRequest_X.SetContentFromString
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ContentString                  (CPF_Parm | CPF_NeedCtorLink)

void UWebRequest_X::SetContentFromString(class FString ContentString)
{
	static UFunction* uFnSetContentFromString = nullptr;

	if (!uFnSetContentFromString)
	{
		uFnSetContentFromString = UFunction::FindFunction("Function ProjectX.WebRequest_X.SetContentFromString");
	}

	UWebRequest_X_execSetContentFromString_Params SetContentFromString_Params;
	memcpy_s(&SetContentFromString_Params.ContentString, 0x10, &ContentString, 0x10);

	uFnSetContentFromString->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetContentFromString, &SetContentFromString_Params, nullptr);

	uFnSetContentFromString->FunctionFlags |= 0x400;
};

// Function ProjectX.WebRequest_X.SetContent
// [0x00420401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<uint8_t>                ContentBytes                   (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UWebRequest_X::SetContent(TArray<uint8_t>& ContentBytes)
{
	static UFunction* uFnSetContent = nullptr;

	if (!uFnSetContent)
	{
		uFnSetContent = UFunction::FindFunction("Function ProjectX.WebRequest_X.SetContent");
	}

	UWebRequest_X_execSetContent_Params SetContent_Params;
	memcpy_s(&SetContent_Params.ContentBytes, 0x10, &ContentBytes, 0x10);

	uFnSetContent->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetContent, &SetContent_Params, nullptr);

	uFnSetContent->FunctionFlags |= 0x400;

	memcpy_s(&ContentBytes, 0x10, &SetContent_Params.ContentBytes, 0x10);
};

// Function ProjectX.WebRequest_X.GetETag
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UWebRequest_X::GetETag()
{
	static UFunction* uFnGetETag = nullptr;

	if (!uFnGetETag)
	{
		uFnGetETag = UFunction::FindFunction("Function ProjectX.WebRequest_X.GetETag");
	}

	UWebRequest_X_execGetETag_Params GetETag_Params;

	uFnGetETag->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetETag, &GetETag_Params, nullptr);

	uFnGetETag->FunctionFlags |= 0x400;

	return GetETag_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.SetETag
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ETag                           (CPF_Parm | CPF_NeedCtorLink)

void UWebRequest_X::SetETag(class FString ETag)
{
	static UFunction* uFnSetETag = nullptr;

	if (!uFnSetETag)
	{
		uFnSetETag = UFunction::FindFunction("Function ProjectX.WebRequest_X.SetETag");
	}

	UWebRequest_X_execSetETag_Params SetETag_Params;
	memcpy_s(&SetETag_Params.ETag, 0x10, &ETag, 0x10);

	uFnSetETag->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetETag, &SetETag_Params, nullptr);

	uFnSetETag->FunctionFlags |= 0x400;
};

// Function ProjectX.WebRequest_X.SetVerb
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InVerb                         (CPF_Parm | CPF_NeedCtorLink)

class UWebRequest_X* UWebRequest_X::SetVerb(class FString InVerb)
{
	static UFunction* uFnSetVerb = nullptr;

	if (!uFnSetVerb)
	{
		uFnSetVerb = UFunction::FindFunction("Function ProjectX.WebRequest_X.SetVerb");
	}

	UWebRequest_X_execSetVerb_Params SetVerb_Params;
	memcpy_s(&SetVerb_Params.InVerb, 0x10, &InVerb, 0x10);

	uFnSetVerb->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetVerb, &SetVerb_Params, nullptr);

	uFnSetVerb->FunctionFlags |= 0x400;

	return SetVerb_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.SetHeader
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

class UWebRequest_X* UWebRequest_X::SetHeader(class FString Key, class FString Value)
{
	static UFunction* uFnSetHeader = nullptr;

	if (!uFnSetHeader)
	{
		uFnSetHeader = UFunction::FindFunction("Function ProjectX.WebRequest_X.SetHeader");
	}

	UWebRequest_X_execSetHeader_Params SetHeader_Params;
	memcpy_s(&SetHeader_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&SetHeader_Params.Value, 0x10, &Value, 0x10);

	uFnSetHeader->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSetHeader, &SetHeader_Params, nullptr);

	uFnSetHeader->FunctionFlags |= 0x400;

	return SetHeader_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.AddPlayerIDParam
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UWebRequest_X* UWebRequest_X::AddPlayerIDParam(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnAddPlayerIDParam = nullptr;

	if (!uFnAddPlayerIDParam)
	{
		uFnAddPlayerIDParam = UFunction::FindFunction("Function ProjectX.WebRequest_X.AddPlayerIDParam");
	}

	UWebRequest_X_execAddPlayerIDParam_Params AddPlayerIDParam_Params;
	memcpy_s(&AddPlayerIDParam_Params.PlayerID, 0x48, &PlayerID, 0x48);

	uFnAddPlayerIDParam->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddPlayerIDParam, &AddPlayerIDParam_Params, nullptr);

	uFnAddPlayerIDParam->FunctionFlags |= 0x400;

	return AddPlayerIDParam_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.AddStringParam
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

class UWebRequest_X* UWebRequest_X::AddStringParam(class FString Key, class FString Value)
{
	static UFunction* uFnAddStringParam = nullptr;

	if (!uFnAddStringParam)
	{
		uFnAddStringParam = UFunction::FindFunction("Function ProjectX.WebRequest_X.AddStringParam");
	}

	UWebRequest_X_execAddStringParam_Params AddStringParam_Params;
	memcpy_s(&AddStringParam_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&AddStringParam_Params.Value, 0x10, &Value, 0x10);

	uFnAddStringParam->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddStringParam, &AddStringParam_Params, nullptr);

	uFnAddStringParam->FunctionFlags |= 0x400;

	return AddStringParam_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.AddFloatParam
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// float                          Value                          (CPF_Parm)

class UWebRequest_X* UWebRequest_X::AddFloatParam(class FString Key, float Value)
{
	static UFunction* uFnAddFloatParam = nullptr;

	if (!uFnAddFloatParam)
	{
		uFnAddFloatParam = UFunction::FindFunction("Function ProjectX.WebRequest_X.AddFloatParam");
	}

	UWebRequest_X_execAddFloatParam_Params AddFloatParam_Params;
	memcpy_s(&AddFloatParam_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&AddFloatParam_Params.Value, 0x4, &Value, 0x4);

	uFnAddFloatParam->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddFloatParam, &AddFloatParam_Params, nullptr);

	uFnAddFloatParam->FunctionFlags |= 0x400;

	return AddFloatParam_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.AddQwordParam
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// uint64_t                       Value                          (CPF_Parm)

class UWebRequest_X* UWebRequest_X::AddQwordParam(class FString Key, uint64_t Value)
{
	static UFunction* uFnAddQwordParam = nullptr;

	if (!uFnAddQwordParam)
	{
		uFnAddQwordParam = UFunction::FindFunction("Function ProjectX.WebRequest_X.AddQwordParam");
	}

	UWebRequest_X_execAddQwordParam_Params AddQwordParam_Params;
	memcpy_s(&AddQwordParam_Params.Key, 0x10, &Key, 0x10);
	AddQwordParam_Params.Value = Value;

	uFnAddQwordParam->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddQwordParam, &AddQwordParam_Params, nullptr);

	uFnAddQwordParam->FunctionFlags |= 0x400;

	return AddQwordParam_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.AddIntParam
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Value                          (CPF_Parm)

class UWebRequest_X* UWebRequest_X::AddIntParam(class FString Key, int32_t Value)
{
	static UFunction* uFnAddIntParam = nullptr;

	if (!uFnAddIntParam)
	{
		uFnAddIntParam = UFunction::FindFunction("Function ProjectX.WebRequest_X.AddIntParam");
	}

	UWebRequest_X_execAddIntParam_Params AddIntParam_Params;
	memcpy_s(&AddIntParam_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&AddIntParam_Params.Value, 0x4, &Value, 0x4);

	uFnAddIntParam->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnAddIntParam, &AddIntParam_Params, nullptr);

	uFnAddIntParam->FunctionFlags |= 0x400;

	return AddIntParam_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.FlushWebRequests
// [0x00022401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          TimeoutSeconds                 (CPF_Parm)

uint8_t UWebRequest_X::FlushWebRequests(float TimeoutSeconds)
{
	static UFunction* uFnFlushWebRequests = nullptr;

	if (!uFnFlushWebRequests)
	{
		uFnFlushWebRequests = UFunction::FindFunction("Function ProjectX.WebRequest_X.FlushWebRequests");
	}

	UWebRequest_X_execFlushWebRequests_Params FlushWebRequests_Params;
	memcpy_s(&FlushWebRequests_Params.TimeoutSeconds, 0x4, &TimeoutSeconds, 0x4);

	uFnFlushWebRequests->FunctionFlags |= ~0x400;

	UWebRequest_X::StaticClass()->ProcessEvent(uFnFlushWebRequests, &FlushWebRequests_Params, nullptr);

	uFnFlushWebRequests->FunctionFlags |= 0x400;

	return FlushWebRequests_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.Create
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UWebRequest_X* UWebRequest_X::Create()
{
	static UFunction* uFnCreate = nullptr;

	if (!uFnCreate)
	{
		uFnCreate = UFunction::FindFunction("Function ProjectX.WebRequest_X.Create");
	}

	UWebRequest_X_execCreate_Params Create_Params;

	UWebRequest_X::StaticClass()->ProcessEvent(uFnCreate, &Create_Params, nullptr);

	return Create_Params.ReturnValue;
};

// Function ProjectX.WebRequest_X.EventCompleted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           Request                        (CPF_Parm)

void UWebRequest_X::EventCompleted(class UWebRequest_X* Request)
{
	static UFunction* uFnEventCompleted = nullptr;

	if (!uFnEventCompleted)
	{
		uFnEventCompleted = UFunction::FindFunction("Function ProjectX.WebRequest_X.EventCompleted");
	}

	UWebRequest_X_execEventCompleted_Params EventCompleted_Params;
	memcpy_s(&EventCompleted_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFnEventCompleted, &EventCompleted_Params, nullptr);
};

// Function ProjectX.WordFilterTypes_X.SortRequestTimeAscending
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FWordFilterPair> Filtered                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UWordFilterTypes_X::SortRequestTimeAscending(TArray<struct FWordFilterPair>& Filtered)
{
	static UFunction* uFnSortRequestTimeAscending = nullptr;

	if (!uFnSortRequestTimeAscending)
	{
		uFnSortRequestTimeAscending = UFunction::FindFunction("Function ProjectX.WordFilterTypes_X.SortRequestTimeAscending");
	}

	UWordFilterTypes_X_execSortRequestTimeAscending_Params SortRequestTimeAscending_Params;
	memcpy_s(&SortRequestTimeAscending_Params.Filtered, 0x10, &Filtered, 0x10);

	uFnSortRequestTimeAscending->FunctionFlags |= ~0x400;

	UWordFilterTypes_X::StaticClass()->ProcessEvent(uFnSortRequestTimeAscending, &SortRequestTimeAscending_Params, nullptr);

	uFnSortRequestTimeAscending->FunctionFlags |= 0x400;

	memcpy_s(&Filtered, 0x10, &SortRequestTimeAscending_Params.Filtered, 0x10);
};

// Function ProjectX.WordFilterTypes_X.SortPendingFront
// [0x00422401] (FUNC_Final | FUNC_Native | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FWordFilterPair> Filtered                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UWordFilterTypes_X::SortPendingFront(TArray<struct FWordFilterPair>& Filtered)
{
	static UFunction* uFnSortPendingFront = nullptr;

	if (!uFnSortPendingFront)
	{
		uFnSortPendingFront = UFunction::FindFunction("Function ProjectX.WordFilterTypes_X.SortPendingFront");
	}

	UWordFilterTypes_X_execSortPendingFront_Params SortPendingFront_Params;
	memcpy_s(&SortPendingFront_Params.Filtered, 0x10, &Filtered, 0x10);

	uFnSortPendingFront->FunctionFlags |= ~0x400;

	UWordFilterTypes_X::StaticClass()->ProcessEvent(uFnSortPendingFront, &SortPendingFront_Params, nullptr);

	uFnSortPendingFront->FunctionFlags |= 0x400;

	memcpy_s(&Filtered, 0x10, &SortPendingFront_Params.Filtered, 0x10);
};

// Function ProjectX.WordFilterTypes_X.CommentErrorDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  OriginalPhrase                 (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UWordFilterTypes_X::CommentErrorDelegate(class FString OriginalPhrase, class UError* Error)
{
	static UFunction* uFnCommentErrorDelegate = nullptr;

	if (!uFnCommentErrorDelegate)
	{
		uFnCommentErrorDelegate = UFunction::FindFunction("Function ProjectX.WordFilterTypes_X.CommentErrorDelegate");
	}

	UWordFilterTypes_X_execCommentErrorDelegate_Params CommentErrorDelegate_Params;
	memcpy_s(&CommentErrorDelegate_Params.OriginalPhrase, 0x10, &OriginalPhrase, 0x10);
	memcpy_s(&CommentErrorDelegate_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnCommentErrorDelegate, &CommentErrorDelegate_Params, nullptr);
};

// Function ProjectX.WordFilterTypes_X.CommentSanitizedDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  Original                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Sanitized                      (CPF_Parm | CPF_NeedCtorLink)

void UWordFilterTypes_X::CommentSanitizedDelegate(class FString Original, class FString Sanitized)
{
	static UFunction* uFnCommentSanitizedDelegate = nullptr;

	if (!uFnCommentSanitizedDelegate)
	{
		uFnCommentSanitizedDelegate = UFunction::FindFunction("Function ProjectX.WordFilterTypes_X.CommentSanitizedDelegate");
	}

	UWordFilterTypes_X_execCommentSanitizedDelegate_Params CommentSanitizedDelegate_Params;
	memcpy_s(&CommentSanitizedDelegate_Params.Original, 0x10, &Original, 0x10);
	memcpy_s(&CommentSanitizedDelegate_Params.Sanitized, 0x10, &Sanitized, 0x10);

	this->ProcessEvent(uFnCommentSanitizedDelegate, &CommentSanitizedDelegate_Params, nullptr);
};

// Function ProjectX.AnimNodeBlendBase_X.SetActiveChildNamed
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ChildName                      (CPF_Parm)
// unsigned long                  bForce                         (CPF_OptionalParm | CPF_Parm)

void UAnimNodeBlendBase_X::SetActiveChildNamed(struct FName ChildName, unsigned long bForce)
{
	static UFunction* uFnSetActiveChildNamed = nullptr;

	if (!uFnSetActiveChildNamed)
	{
		uFnSetActiveChildNamed = UFunction::FindFunction("Function ProjectX.AnimNodeBlendBase_X.SetActiveChildNamed");
	}

	UAnimNodeBlendBase_X_execSetActiveChildNamed_Params SetActiveChildNamed_Params;
	memcpy_s(&SetActiveChildNamed_Params.ChildName, 0x8, &ChildName, 0x8);
	SetActiveChildNamed_Params.bForce = bForce;

	this->ProcessEvent(uFnSetActiveChildNamed, &SetActiveChildNamed_Params, nullptr);
};

// Function ProjectX.AnimNodeBlendBase_X.GetAnimDuration
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ChildIndex                     (CPF_Parm)

float UAnimNodeBlendBase_X::GetAnimDuration(int32_t ChildIndex)
{
	static UFunction* uFnGetAnimDuration = nullptr;

	if (!uFnGetAnimDuration)
	{
		uFnGetAnimDuration = UFunction::FindFunction("Function ProjectX.AnimNodeBlendBase_X.GetAnimDuration");
	}

	UAnimNodeBlendBase_X_execGetAnimDuration_Params GetAnimDuration_Params;
	memcpy_s(&GetAnimDuration_Params.ChildIndex, 0x4, &ChildIndex, 0x4);

	uFnGetAnimDuration->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetAnimDuration, &GetAnimDuration_Params, nullptr);

	uFnGetAnimDuration->FunctionFlags |= 0x400;

	return GetAnimDuration_Params.ReturnValue;
};

// Function ProjectX.AnimNodeBlendBase_X.GetBlendTime
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ChildIndex                     (CPF_Parm)
// unsigned long                  bGetDefault                    (CPF_OptionalParm | CPF_Parm)

float UAnimNodeBlendBase_X::GetBlendTime(int32_t ChildIndex, unsigned long bGetDefault)
{
	static UFunction* uFnGetBlendTime = nullptr;

	if (!uFnGetBlendTime)
	{
		uFnGetBlendTime = UFunction::FindFunction("Function ProjectX.AnimNodeBlendBase_X.GetBlendTime");
	}

	UAnimNodeBlendBase_X_execGetBlendTime_Params GetBlendTime_Params;
	memcpy_s(&GetBlendTime_Params.ChildIndex, 0x4, &ChildIndex, 0x4);
	GetBlendTime_Params.bGetDefault = bGetDefault;

	uFnGetBlendTime->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetBlendTime, &GetBlendTime_Params, nullptr);

	uFnGetBlendTime->FunctionFlags |= 0x400;

	return GetBlendTime_Params.ReturnValue;
};

// Function ProjectX.AnimNodePose_X.PlayAnim
// [0x400024400] (FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bLoop                          (CPF_OptionalParm | CPF_Parm)
// float                          InRate                         (CPF_OptionalParm | CPF_Parm)
// float                          StartTime                      (CPF_OptionalParm | CPF_Parm)

void UAnimNodePose_X::PlayAnim(unsigned long bLoop, float InRate, float StartTime)
{
	static UFunction* uFnPlayAnim = nullptr;

	if (!uFnPlayAnim)
	{
		uFnPlayAnim = UFunction::FindFunction("Function ProjectX.AnimNodePose_X.PlayAnim");
	}

	UAnimNodePose_X_execPlayAnim_Params PlayAnim_Params;
	PlayAnim_Params.bLoop = bLoop;
	memcpy_s(&PlayAnim_Params.InRate, 0x4, &InRate, 0x4);
	memcpy_s(&PlayAnim_Params.StartTime, 0x4, &StartTime, 0x4);

	uFnPlayAnim->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnPlayAnim, &PlayAnim_Params, nullptr);

	uFnPlayAnim->FunctionFlags |= 0x400;
};

// Function ProjectX.AnimNotify_PlayParticleEffect_X.OnParticleSystemFinished
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UParticleSystemComponent* Component                      (CPF_Parm | CPF_EditInline)

void UAnimNotify_PlayParticleEffect_X::OnParticleSystemFinished(class UParticleSystemComponent* Component)
{
	static UFunction* uFnOnParticleSystemFinished = nullptr;

	if (!uFnOnParticleSystemFinished)
	{
		uFnOnParticleSystemFinished = UFunction::FindFunction("Function ProjectX.AnimNotify_PlayParticleEffect_X.OnParticleSystemFinished");
	}

	UAnimNotify_PlayParticleEffect_X_execOnParticleSystemFinished_Params OnParticleSystemFinished_Params;
	memcpy_s(&OnParticleSystemFinished_Params.Component, 0x8, &Component, 0x8);

	this->ProcessEvent(uFnOnParticleSystemFinished, &OnParticleSystemFinished_Params, nullptr);
};

// Function ProjectX.AnimNotify_PlayParticleEffect_X.EndParticles
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UAnimNotify_PlayParticleEffect_X::EndParticles()
{
	static UFunction* uFnEndParticles = nullptr;

	if (!uFnEndParticles)
	{
		uFnEndParticles = UFunction::FindFunction("Function ProjectX.AnimNotify_PlayParticleEffect_X.EndParticles");
	}

	UAnimNotify_PlayParticleEffect_X_execEndParticles_Params EndParticles_Params;

	this->ProcessEvent(uFnEndParticles, &EndParticles_Params, nullptr);
};

// Function ProjectX.AnimNotify_PlayParticleEffect_X.NotifyEnd
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  Owner                          (CPF_Parm)
// class UAnimNodeSequence*       AnimSeqInstigator              (CPF_Parm)

void UAnimNotify_PlayParticleEffect_X::eventNotifyEnd(class AActor* Owner, class UAnimNodeSequence* AnimSeqInstigator)
{
	static UFunction* uFnNotifyEnd = nullptr;

	if (!uFnNotifyEnd)
	{
		uFnNotifyEnd = UFunction::FindFunction("Function ProjectX.AnimNotify_PlayParticleEffect_X.NotifyEnd");
	}

	UAnimNotify_PlayParticleEffect_X_eventNotifyEnd_Params NotifyEnd_Params;
	memcpy_s(&NotifyEnd_Params.Owner, 0x8, &Owner, 0x8);
	memcpy_s(&NotifyEnd_Params.AnimSeqInstigator, 0x8, &AnimSeqInstigator, 0x8);

	this->ProcessEvent(uFnNotifyEnd, &NotifyEnd_Params, nullptr);
};

// Function ProjectX.AnimNotify_PlayParticleEffect_X.Notify
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  Owner                          (CPF_Parm)
// class UAnimNodeSequence*       AnimSeqInstigator              (CPF_Parm)

void UAnimNotify_PlayParticleEffect_X::eventNotify(class AActor* Owner, class UAnimNodeSequence* AnimSeqInstigator)
{
	static UFunction* uFnNotify = nullptr;

	if (!uFnNotify)
	{
		uFnNotify = UFunction::FindFunction("Function ProjectX.AnimNotify_PlayParticleEffect_X.Notify");
	}

	UAnimNotify_PlayParticleEffect_X_eventNotify_Params Notify_Params;
	memcpy_s(&Notify_Params.Owner, 0x8, &Owner, 0x8);
	memcpy_s(&Notify_Params.AnimSeqInstigator, 0x8, &AnimSeqInstigator, 0x8);

	this->ProcessEvent(uFnNotify, &Notify_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.SerializeMessage
// [0x00440401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Message                        (CPF_Parm)
// class FString                  OutMessageType                 (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class FString                  OutMessagePayload              (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPsyNetBeacon_X::SerializeMessage(class UObject* Message, class FString& OutMessageType, class FString& OutMessagePayload)
{
	static UFunction* uFnSerializeMessage = nullptr;

	if (!uFnSerializeMessage)
	{
		uFnSerializeMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.SerializeMessage");
	}

	UPsyNetBeacon_X_execSerializeMessage_Params SerializeMessage_Params;
	memcpy_s(&SerializeMessage_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&SerializeMessage_Params.OutMessageType, 0x10, &OutMessageType, 0x10);
	memcpy_s(&SerializeMessage_Params.OutMessagePayload, 0x10, &OutMessagePayload, 0x10);

	uFnSerializeMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSerializeMessage, &SerializeMessage_Params, nullptr);

	uFnSerializeMessage->FunctionFlags |= 0x400;

	memcpy_s(&OutMessageType, 0x10, &SerializeMessage_Params.OutMessageType, 0x10);
	memcpy_s(&OutMessagePayload, 0x10, &SerializeMessage_Params.OutMessagePayload, 0x10);
};

// Function ProjectX.PsyNetBeacon_X.DeserializeMessage
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  MessageType                    (CPF_Parm | CPF_NeedCtorLink)
// class FString                  MessagePayload                 (CPF_Parm | CPF_NeedCtorLink)

class UObject* UPsyNetBeacon_X::DeserializeMessage(class FString MessageType, class FString MessagePayload)
{
	static UFunction* uFnDeserializeMessage = nullptr;

	if (!uFnDeserializeMessage)
	{
		uFnDeserializeMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.DeserializeMessage");
	}

	UPsyNetBeacon_X_execDeserializeMessage_Params DeserializeMessage_Params;
	memcpy_s(&DeserializeMessage_Params.MessageType, 0x10, &MessageType, 0x10);
	memcpy_s(&DeserializeMessage_Params.MessagePayload, 0x10, &MessagePayload, 0x10);

	uFnDeserializeMessage->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnDeserializeMessage, &DeserializeMessage_Params, nullptr);

	uFnDeserializeMessage->FunctionFlags |= 0x400;

	return DeserializeMessage_Params.ReturnValue;
};

// Function ProjectX.PsyNetBeacon_X.TimeoutPendingMessages
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetBeacon_X::TimeoutPendingMessages()
{
	static UFunction* uFnTimeoutPendingMessages = nullptr;

	if (!uFnTimeoutPendingMessages)
	{
		uFnTimeoutPendingMessages = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.TimeoutPendingMessages");
	}

	UPsyNetBeacon_X_execTimeoutPendingMessages_Params TimeoutPendingMessages_Params;

	this->ProcessEvent(uFnTimeoutPendingMessages, &TimeoutPendingMessages_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.TimeoutConnections
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetBeacon_X::TimeoutConnections()
{
	static UFunction* uFnTimeoutConnections = nullptr;

	if (!uFnTimeoutConnections)
	{
		uFnTimeoutConnections = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.TimeoutConnections");
	}

	UPsyNetBeacon_X_execTimeoutConnections_Params TimeoutConnections_Params;

	this->ProcessEvent(uFnTimeoutConnections, &TimeoutConnections_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.Tick
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetBeacon_X::Tick()
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.Tick");
	}

	UPsyNetBeacon_X_execTick_Params Tick_Params;

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.IsGameClient
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPsyNetBeacon_X::IsGameClient()
{
	static UFunction* uFnIsGameClient = nullptr;

	if (!uFnIsGameClient)
	{
		uFnIsGameClient = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.IsGameClient");
	}

	UPsyNetBeacon_X_execIsGameClient_Params IsGameClient_Params;

	this->ProcessEvent(uFnIsGameClient, &IsGameClient_Params, nullptr);

	return IsGameClient_Params.ReturnValue;
};

// Function ProjectX.PsyNetBeacon_X.IssuePendingMessages
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)

void UPsyNetBeacon_X::IssuePendingMessages(class UPsyNetBeaconConnection_X* Connection)
{
	static UFunction* uFnIssuePendingMessages = nullptr;

	if (!uFnIssuePendingMessages)
	{
		uFnIssuePendingMessages = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.IssuePendingMessages");
	}

	UPsyNetBeacon_X_execIssuePendingMessages_Params IssuePendingMessages_Params;
	memcpy_s(&IssuePendingMessages_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnIssuePendingMessages, &IssuePendingMessages_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.AddPendingMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UDSR_DSMessage_X*        Message                        (CPF_Parm)

void UPsyNetBeacon_X::AddPendingMessage(class UDSR_DSMessage_X* Message)
{
	static UFunction* uFnAddPendingMessage = nullptr;

	if (!uFnAddPendingMessage)
	{
		uFnAddPendingMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.AddPendingMessage");
	}

	UPsyNetBeacon_X_execAddPendingMessage_Params AddPendingMessage_Params;
	memcpy_s(&AddPendingMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnAddPendingMessage, &AddPendingMessage_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.OnMessageReceived
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UPsyNetBeacon_X::OnMessageReceived(class UPsyNetBeaconConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnOnMessageReceived = nullptr;

	if (!uFnOnMessageReceived)
	{
		uFnOnMessageReceived = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.OnMessageReceived");
	}

	UPsyNetBeacon_X_execOnMessageReceived_Params OnMessageReceived_Params;
	memcpy_s(&OnMessageReceived_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&OnMessageReceived_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnOnMessageReceived, &OnMessageReceived_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.ClientHandleMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UDSR_ClientMessage_X*    Message                        (CPF_Parm)

void UPsyNetBeacon_X::ClientHandleMessage(class UDSR_ClientMessage_X* Message)
{
	static UFunction* uFnClientHandleMessage = nullptr;

	if (!uFnClientHandleMessage)
	{
		uFnClientHandleMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.ClientHandleMessage");
	}

	UPsyNetBeacon_X_execClientHandleMessage_Params ClientHandleMessage_Params;
	memcpy_s(&ClientHandleMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnClientHandleMessage, &ClientHandleMessage_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.ServerProcessMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)
// class UDSR_DSMessage_X*        Message                        (CPF_Parm)

void UPsyNetBeacon_X::ServerProcessMessage(class UPsyNetBeaconConnection_X* Connection, class UDSR_DSMessage_X* Message)
{
	static UFunction* uFnServerProcessMessage = nullptr;

	if (!uFnServerProcessMessage)
	{
		uFnServerProcessMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.ServerProcessMessage");
	}

	UPsyNetBeacon_X_execServerProcessMessage_Params ServerProcessMessage_Params;
	memcpy_s(&ServerProcessMessage_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&ServerProcessMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnServerProcessMessage, &ServerProcessMessage_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.ServerHandleServerMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UDSR_DSToDSMessage_X*    Message                        (CPF_Parm)

void UPsyNetBeacon_X::ServerHandleServerMessage(class UDSR_DSToDSMessage_X* Message)
{
	static UFunction* uFnServerHandleServerMessage = nullptr;

	if (!uFnServerHandleServerMessage)
	{
		uFnServerHandleServerMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.ServerHandleServerMessage");
	}

	UPsyNetBeacon_X_execServerHandleServerMessage_Params ServerHandleServerMessage_Params;
	memcpy_s(&ServerHandleServerMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnServerHandleServerMessage, &ServerHandleServerMessage_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.ServerHandleMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UDSR_DSMessage_X*        Message                        (CPF_Parm)

void UPsyNetBeacon_X::ServerHandleMessage(class UDSR_DSMessage_X* Message)
{
	static UFunction* uFnServerHandleMessage = nullptr;

	if (!uFnServerHandleMessage)
	{
		uFnServerHandleMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.ServerHandleMessage");
	}

	UPsyNetBeacon_X_execServerHandleMessage_Params ServerHandleMessage_Params;
	memcpy_s(&ServerHandleMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnServerHandleMessage, &ServerHandleMessage_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.HandleClientRpcFail
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)

void UPsyNetBeacon_X::HandleClientRpcFail(class UError* Error, class UPsyNetBeaconConnection_X* Connection)
{
	static UFunction* uFnHandleClientRpcFail = nullptr;

	if (!uFnHandleClientRpcFail)
	{
		uFnHandleClientRpcFail = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.HandleClientRpcFail");
	}

	UPsyNetBeacon_X_execHandleClientRpcFail_Params HandleClientRpcFail_Params;
	memcpy_s(&HandleClientRpcFail_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&HandleClientRpcFail_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnHandleClientRpcFail, &HandleClientRpcFail_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.ServerSendMessageToServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerId                       (CPF_Parm | CPF_NeedCtorLink)
// class UObject*                 Message                        (CPF_Parm)

void UPsyNetBeacon_X::ServerSendMessageToServerW(class FString ServerId, class UObject* Message)
{
	static UFunction* uFnServerSendMessageToServerW = nullptr;

	if (!uFnServerSendMessageToServerW)
	{
		uFnServerSendMessageToServerW = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.ServerSendMessageToServer");
	}

	UPsyNetBeacon_X_execServerSendMessageToServerW_Params ServerSendMessageToServerW_Params;
	memcpy_s(&ServerSendMessageToServerW_Params.ServerId, 0x10, &ServerId, 0x10);
	memcpy_s(&ServerSendMessageToServerW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnServerSendMessageToServerW, &ServerSendMessageToServerW_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.SendMessageToServer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UPsyNetBeacon_X::SendMessageToServerW(class UPsyNetBeaconConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnSendMessageToServerW = nullptr;

	if (!uFnSendMessageToServerW)
	{
		uFnSendMessageToServerW = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.SendMessageToServer");
	}

	UPsyNetBeacon_X_execSendMessageToServerW_Params SendMessageToServerW_Params;
	memcpy_s(&SendMessageToServerW_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&SendMessageToServerW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageToServerW, &SendMessageToServerW_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.SendMessageToClients
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// TArray<class UPsyNetBeaconConnection_X*> ToConnections                  (CPF_Parm | CPF_NeedCtorLink)
// class UObject*                 Message                        (CPF_Parm)

void UPsyNetBeacon_X::SendMessageToClientsW(TArray<class UPsyNetBeaconConnection_X*> ToConnections, class UObject* Message)
{
	static UFunction* uFnSendMessageToClientsW = nullptr;

	if (!uFnSendMessageToClientsW)
	{
		uFnSendMessageToClientsW = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.SendMessageToClients");
	}

	UPsyNetBeacon_X_execSendMessageToClientsW_Params SendMessageToClientsW_Params;
	memcpy_s(&SendMessageToClientsW_Params.ToConnections, 0x10, &ToConnections, 0x10);
	memcpy_s(&SendMessageToClientsW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageToClientsW, &SendMessageToClientsW_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.FindConnection
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ReservationID                  (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ConnectionID                   (CPF_Parm | CPF_NeedCtorLink)

class UPsyNetBeaconConnection_X* UPsyNetBeacon_X::FindConnection(class FString ReservationID, class FString ConnectionID)
{
	static UFunction* uFnFindConnection = nullptr;

	if (!uFnFindConnection)
	{
		uFnFindConnection = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.FindConnection");
	}

	UPsyNetBeacon_X_execFindConnection_Params FindConnection_Params;
	memcpy_s(&FindConnection_Params.ReservationID, 0x10, &ReservationID, 0x10);
	memcpy_s(&FindConnection_Params.ConnectionID, 0x10, &ConnectionID, 0x10);

	this->ProcessEvent(uFnFindConnection, &FindConnection_Params, nullptr);

	return FindConnection_Params.ReturnValue;
};

// Function ProjectX.PsyNetBeacon_X.Close
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetBeacon_X::Close()
{
	static UFunction* uFnClose = nullptr;

	if (!uFnClose)
	{
		uFnClose = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.Close");
	}

	UPsyNetBeacon_X_execClose_Params Close_Params;

	this->ProcessEvent(uFnClose, &Close_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.CloseConnection
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)

void UPsyNetBeacon_X::CloseConnection(class UPsyNetBeaconConnection_X* Connection)
{
	static UFunction* uFnCloseConnection = nullptr;

	if (!uFnCloseConnection)
	{
		uFnCloseConnection = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.CloseConnection");
	}

	UPsyNetBeacon_X_execCloseConnection_Params CloseConnection_Params;
	memcpy_s(&CloseConnection_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnCloseConnection, &CloseConnection_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.BroadcastMessage
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Message                        (CPF_Parm)

void UPsyNetBeacon_X::eventBroadcastMessage(class UObject* Message)
{
	static UFunction* uFnBroadcastMessage = nullptr;

	if (!uFnBroadcastMessage)
	{
		uFnBroadcastMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.BroadcastMessage");
	}

	UPsyNetBeacon_X_eventBroadcastMessage_Params BroadcastMessage_Params;
	memcpy_s(&BroadcastMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnBroadcastMessage, &BroadcastMessage_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.SendReservationMessage
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Message                        (CPF_Parm)
// struct FServerReservationData  Reservation                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPsyNetBeacon_X::SendReservationMessage(class UObject* Message, struct FServerReservationData& Reservation)
{
	static UFunction* uFnSendReservationMessage = nullptr;

	if (!uFnSendReservationMessage)
	{
		uFnSendReservationMessage = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.SendReservationMessage");
	}

	UPsyNetBeacon_X_execSendReservationMessage_Params SendReservationMessage_Params;
	memcpy_s(&SendReservationMessage_Params.Message, 0x8, &Message, 0x8);
	memcpy_s(&SendReservationMessage_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnSendReservationMessage, &SendReservationMessage_Params, nullptr);

	memcpy_s(&Reservation, 0x70, &SendReservationMessage_Params.Reservation, 0x70);
};

// Function ProjectX.PsyNetBeacon_X.SendMessage
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UPsyNetBeacon_X::eventSendMessageW(class UPsyNetBeaconConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnSendMessageW = nullptr;

	if (!uFnSendMessageW)
	{
		uFnSendMessageW = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.SendMessage");
	}

	UPsyNetBeacon_X_eventSendMessageW_Params SendMessageW_Params;
	memcpy_s(&SendMessageW_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&SendMessageW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageW, &SendMessageW_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.ReserveConnection
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ReservationID                  (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ConnectionID                   (CPF_Parm | CPF_NeedCtorLink)
// float                          OverrideConnectionTimeoutSeconds (CPF_OptionalParm | CPF_Parm)

class UPsyNetBeaconConnection_X* UPsyNetBeacon_X::ReserveConnection(class FString ReservationID, class FString ConnectionID, float OverrideConnectionTimeoutSeconds)
{
	static UFunction* uFnReserveConnection = nullptr;

	if (!uFnReserveConnection)
	{
		uFnReserveConnection = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.ReserveConnection");
	}

	UPsyNetBeacon_X_execReserveConnection_Params ReserveConnection_Params;
	memcpy_s(&ReserveConnection_Params.ReservationID, 0x10, &ReservationID, 0x10);
	memcpy_s(&ReserveConnection_Params.ConnectionID, 0x10, &ConnectionID, 0x10);
	memcpy_s(&ReserveConnection_Params.OverrideConnectionTimeoutSeconds, 0x4, &OverrideConnectionTimeoutSeconds, 0x4);

	this->ProcessEvent(uFnReserveConnection, &ReserveConnection_Params, nullptr);

	return ReserveConnection_Params.ReturnValue;
};

// Function ProjectX.PsyNetBeacon_X.SetPsyNetConnection
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     InPsyNetConnection             (CPF_Parm)

void UPsyNetBeacon_X::SetPsyNetConnection(class UPsyNetConnection_X* InPsyNetConnection)
{
	static UFunction* uFnSetPsyNetConnection = nullptr;

	if (!uFnSetPsyNetConnection)
	{
		uFnSetPsyNetConnection = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.SetPsyNetConnection");
	}

	UPsyNetBeacon_X_execSetPsyNetConnection_Params SetPsyNetConnection_Params;
	memcpy_s(&SetPsyNetConnection_Params.InPsyNetConnection, 0x8, &InPsyNetConnection, 0x8);

	this->ProcessEvent(uFnSetPsyNetConnection, &SetPsyNetConnection_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.EventMessageReceived
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UPsyNetBeacon_X::EventMessageReceived(class UPsyNetBeaconConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnEventMessageReceived = nullptr;

	if (!uFnEventMessageReceived)
	{
		uFnEventMessageReceived = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.EventMessageReceived");
	}

	UPsyNetBeacon_X_execEventMessageReceived_Params EventMessageReceived_Params;
	memcpy_s(&EventMessageReceived_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&EventMessageReceived_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnEventMessageReceived, &EventMessageReceived_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.EventDisconnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeacon_X*         Beacon                         (CPF_Parm | CPF_EditInline)
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)

void UPsyNetBeacon_X::EventDisconnected(class UPsyNetBeacon_X* Beacon, class UPsyNetBeaconConnection_X* Connection)
{
	static UFunction* uFnEventDisconnected = nullptr;

	if (!uFnEventDisconnected)
	{
		uFnEventDisconnected = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.EventDisconnected");
	}

	UPsyNetBeacon_X_execEventDisconnected_Params EventDisconnected_Params;
	memcpy_s(&EventDisconnected_Params.Beacon, 0x8, &Beacon, 0x8);
	memcpy_s(&EventDisconnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventDisconnected, &EventDisconnected_Params, nullptr);
};

// Function ProjectX.PsyNetBeacon_X.EventConnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetBeacon_X*         Beacon                         (CPF_Parm | CPF_EditInline)
// class UPsyNetBeaconConnection_X* Connection                     (CPF_Parm)

void UPsyNetBeacon_X::EventConnected(class UPsyNetBeacon_X* Beacon, class UPsyNetBeaconConnection_X* Connection)
{
	static UFunction* uFnEventConnected = nullptr;

	if (!uFnEventConnected)
	{
		uFnEventConnected = UFunction::FindFunction("Function ProjectX.PsyNetBeacon_X.EventConnected");
	}

	UPsyNetBeacon_X_execEventConnected_Params EventConnected_Params;
	memcpy_s(&EventConnected_Params.Beacon, 0x8, &Beacon, 0x8);
	memcpy_s(&EventConnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventConnected, &EventConnected_Params, nullptr);
};

// Function ProjectX.TcpConnection.OnDisconnected
// [0x00080803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UTcpConnection::eventOnDisconnected()
{
	static UFunction* uFnOnDisconnected = nullptr;

	if (!uFnOnDisconnected)
	{
		uFnOnDisconnected = UFunction::FindFunction("Function ProjectX.TcpConnection.OnDisconnected");
	}

	UTcpConnection_eventOnDisconnected_Params OnDisconnected_Params;

	this->ProcessEvent(uFnOnDisconnected, &OnDisconnected_Params, nullptr);
};

// Function ProjectX.TcpConnection.OnConnected
// [0x00080803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UTcpConnection::eventOnConnected()
{
	static UFunction* uFnOnConnected = nullptr;

	if (!uFnOnConnected)
	{
		uFnOnConnected = UFunction::FindFunction("Function ProjectX.TcpConnection.OnConnected");
	}

	UTcpConnection_eventOnConnected_Params OnConnected_Params;

	this->ProcessEvent(uFnOnConnected, &OnConnected_Params, nullptr);
};

// Function ProjectX.TcpConnection.Close
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UTcpConnection::Close()
{
	static UFunction* uFnClose = nullptr;

	if (!uFnClose)
	{
		uFnClose = UFunction::FindFunction("Function ProjectX.TcpConnection.Close");
	}

	UTcpConnection_execClose_Params Close_Params;

	uFnClose->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClose, &Close_Params, nullptr);

	uFnClose->FunctionFlags |= 0x400;
};

// Function ProjectX.TcpConnection.GetRemoteAddress
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UTcpConnection::GetRemoteAddress()
{
	static UFunction* uFnGetRemoteAddress = nullptr;

	if (!uFnGetRemoteAddress)
	{
		uFnGetRemoteAddress = UFunction::FindFunction("Function ProjectX.TcpConnection.GetRemoteAddress");
	}

	UTcpConnection_execGetRemoteAddress_Params GetRemoteAddress_Params;

	uFnGetRemoteAddress->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetRemoteAddress, &GetRemoteAddress_Params, nullptr);

	uFnGetRemoteAddress->FunctionFlags |= 0x400;

	return GetRemoteAddress_Params.ReturnValue;
};

// Function ProjectX.TcpConnection.GetAddress
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UTcpConnection::GetAddress()
{
	static UFunction* uFnGetAddress = nullptr;

	if (!uFnGetAddress)
	{
		uFnGetAddress = UFunction::FindFunction("Function ProjectX.TcpConnection.GetAddress");
	}

	UTcpConnection_execGetAddress_Params GetAddress_Params;

	uFnGetAddress->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnGetAddress, &GetAddress_Params, nullptr);

	uFnGetAddress->FunctionFlags |= 0x400;

	return GetAddress_Params.ReturnValue;
};

// Function ProjectX.TcpConnection.EventReceivedBunch
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UTcpConnection*          Connection                     (CPF_Parm)

void UTcpConnection::EventReceivedBunch(class UTcpConnection* Connection)
{
	static UFunction* uFnEventReceivedBunch = nullptr;

	if (!uFnEventReceivedBunch)
	{
		uFnEventReceivedBunch = UFunction::FindFunction("Function ProjectX.TcpConnection.EventReceivedBunch");
	}

	UTcpConnection_execEventReceivedBunch_Params EventReceivedBunch_Params;
	memcpy_s(&EventReceivedBunch_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventReceivedBunch, &EventReceivedBunch_Params, nullptr);
};

// Function ProjectX.TcpConnection.EventDisconnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UTcpConnection*          Connection                     (CPF_Parm)

void UTcpConnection::EventDisconnected(class UTcpConnection* Connection)
{
	static UFunction* uFnEventDisconnected = nullptr;

	if (!uFnEventDisconnected)
	{
		uFnEventDisconnected = UFunction::FindFunction("Function ProjectX.TcpConnection.EventDisconnected");
	}

	UTcpConnection_execEventDisconnected_Params EventDisconnected_Params;
	memcpy_s(&EventDisconnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventDisconnected, &EventDisconnected_Params, nullptr);
};

// Function ProjectX.TcpConnection.EventConnected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UTcpConnection*          Connection                     (CPF_Parm)

void UTcpConnection::EventConnected(class UTcpConnection* Connection)
{
	static UFunction* uFnEventConnected = nullptr;

	if (!uFnEventConnected)
	{
		uFnEventConnected = UFunction::FindFunction("Function ProjectX.TcpConnection.EventConnected");
	}

	UTcpConnection_execEventConnected_Params EventConnected_Params;
	memcpy_s(&EventConnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnEventConnected, &EventConnected_Params, nullptr);
};

// Function ProjectX.WebSocketConnection_X.PretendClose
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        Code                           (CPF_Parm)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UWebSocketConnection_X::PretendClose(int32_t Code, class FString Reason)
{
	static UFunction* uFnPretendClose = nullptr;

	if (!uFnPretendClose)
	{
		uFnPretendClose = UFunction::FindFunction("Function ProjectX.WebSocketConnection_X.PretendClose");
	}

	UWebSocketConnection_X_execPretendClose_Params PretendClose_Params;
	memcpy_s(&PretendClose_Params.Code, 0x4, &Code, 0x4);
	memcpy_s(&PretendClose_Params.Reason, 0x10, &Reason, 0x10);

	uFnPretendClose->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnPretendClose, &PretendClose_Params, nullptr);

	uFnPretendClose->FunctionFlags |= 0x400;
};

// Function ProjectX.WebSocketConnection_X.Close
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UWebSocketConnection_X::Close()
{
	static UFunction* uFnClose = nullptr;

	if (!uFnClose)
	{
		uFnClose = UFunction::FindFunction("Function ProjectX.WebSocketConnection_X.Close");
	}

	UWebSocketConnection_X_execClose_Params Close_Params;

	uFnClose->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClose, &Close_Params, nullptr);

	uFnClose->FunctionFlags |= 0x400;
};

// Function ProjectX.WebSocketConnection_X.BeginWebSocketConnect
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Address                        (CPF_Parm | CPF_NeedCtorLink)
// class UStringMap*              HandshakeHeaders               (CPF_Parm | CPF_EditInline)

bool UWebSocketConnection_X::BeginWebSocketConnect(class FString Address, class UStringMap* HandshakeHeaders)
{
	static UFunction* uFnBeginWebSocketConnect = nullptr;

	if (!uFnBeginWebSocketConnect)
	{
		uFnBeginWebSocketConnect = UFunction::FindFunction("Function ProjectX.WebSocketConnection_X.BeginWebSocketConnect");
	}

	UWebSocketConnection_X_execBeginWebSocketConnect_Params BeginWebSocketConnect_Params;
	memcpy_s(&BeginWebSocketConnect_Params.Address, 0x10, &Address, 0x10);
	memcpy_s(&BeginWebSocketConnect_Params.HandshakeHeaders, 0x8, &HandshakeHeaders, 0x8);

	uFnBeginWebSocketConnect->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnBeginWebSocketConnect, &BeginWebSocketConnect_Params, nullptr);

	uFnBeginWebSocketConnect->FunctionFlags |= 0x400;

	return BeginWebSocketConnect_Params.ReturnValue;
};

// Function ProjectX.WebSocketConnection_X.BeginConnect
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Address                        (CPF_Parm | CPF_NeedCtorLink)

bool UWebSocketConnection_X::BeginConnect(class FString Address)
{
	static UFunction* uFnBeginConnect = nullptr;

	if (!uFnBeginConnect)
	{
		uFnBeginConnect = UFunction::FindFunction("Function ProjectX.WebSocketConnection_X.BeginConnect");
	}

	UWebSocketConnection_X_execBeginConnect_Params BeginConnect_Params;
	memcpy_s(&BeginConnect_Params.Address, 0x10, &Address, 0x10);

	uFnBeginConnect->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnBeginConnect, &BeginConnect_Params, nullptr);

	uFnBeginConnect->FunctionFlags |= 0x400;

	return BeginConnect_Params.ReturnValue;
};

// Function ProjectX.UdpPingBeaconBase_X.TickSocket
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UUdpPingBeaconBase_X::TickSocket(float DeltaTime)
{
	static UFunction* uFnTickSocket = nullptr;

	if (!uFnTickSocket)
	{
		uFnTickSocket = UFunction::FindFunction("Function ProjectX.UdpPingBeaconBase_X.TickSocket");
	}

	UUdpPingBeaconBase_X_execTickSocket_Params TickSocket_Params;
	memcpy_s(&TickSocket_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	uFnTickSocket->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTickSocket, &TickSocket_Params, nullptr);

	uFnTickSocket->FunctionFlags |= 0x400;
};

// Function ProjectX.UdpPingBeaconBase_X.SetTickSocket
// [0x00040803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bTick                          (CPF_Parm)

void UUdpPingBeaconBase_X::eventSetTickSocket(unsigned long bTick)
{
	static UFunction* uFnSetTickSocket = nullptr;

	if (!uFnSetTickSocket)
	{
		uFnSetTickSocket = UFunction::FindFunction("Function ProjectX.UdpPingBeaconBase_X.SetTickSocket");
	}

	UUdpPingBeaconBase_X_eventSetTickSocket_Params SetTickSocket_Params;
	SetTickSocket_Params.bTick = bTick;

	this->ProcessEvent(uFnSetTickSocket, &SetTickSocket_Params, nullptr);
};

// Function ProjectX.UdpPingBeaconBase_X.Close
// [0x00020400] (FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UUdpPingBeaconBase_X::Close()
{
	static UFunction* uFnClose = nullptr;

	if (!uFnClose)
	{
		uFnClose = UFunction::FindFunction("Function ProjectX.UdpPingBeaconBase_X.Close");
	}

	UUdpPingBeaconBase_X_execClose_Params Close_Params;

	uFnClose->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClose, &Close_Params, nullptr);

	uFnClose->FunctionFlags |= 0x400;
};

// Function ProjectX.UdpPingBeaconClient_X.TickPongs
// [0x00040401] (FUNC_Final | FUNC_Native | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UUdpPingBeaconClient_X::TickPongs(float DeltaTime)
{
	static UFunction* uFnTickPongs = nullptr;

	if (!uFnTickPongs)
	{
		uFnTickPongs = UFunction::FindFunction("Function ProjectX.UdpPingBeaconClient_X.TickPongs");
	}

	UUdpPingBeaconClient_X_execTickPongs_Params TickPongs_Params;
	memcpy_s(&TickPongs_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	uFnTickPongs->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnTickPongs, &TickPongs_Params, nullptr);

	uFnTickPongs->FunctionFlags |= 0x400;
};

// Function ProjectX.UdpPingBeaconClient_X.SetTickPongs
// [0x00040803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bTick                          (CPF_Parm)

void UUdpPingBeaconClient_X::eventSetTickPongs(unsigned long bTick)
{
	static UFunction* uFnSetTickPongs = nullptr;

	if (!uFnSetTickPongs)
	{
		uFnSetTickPongs = UFunction::FindFunction("Function ProjectX.UdpPingBeaconClient_X.SetTickPongs");
	}

	UUdpPingBeaconClient_X_eventSetTickPongs_Params SetTickPongs_Params;
	SetTickPongs_Params.bTick = bTick;

	this->ProcessEvent(uFnSetTickPongs, &SetTickPongs_Params, nullptr);
};

// Function ProjectX.UdpPingBeaconClient_X.Close
// [0x400020400] (FUNC_Native | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UUdpPingBeaconClient_X::Close()
{
	static UFunction* uFnClose = nullptr;

	if (!uFnClose)
	{
		uFnClose = UFunction::FindFunction("Function ProjectX.UdpPingBeaconClient_X.Close");
	}

	UUdpPingBeaconClient_X_execClose_Params Close_Params;

	uFnClose->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnClose, &Close_Params, nullptr);

	uFnClose->FunctionFlags |= 0x400;
};

// Function ProjectX.UdpPingBeaconClient_X.SendPing
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Address                        (CPF_Parm)

void UUdpPingBeaconClient_X::SendPing(struct FName Address)
{
	static UFunction* uFnSendPing = nullptr;

	if (!uFnSendPing)
	{
		uFnSendPing = UFunction::FindFunction("Function ProjectX.UdpPingBeaconClient_X.SendPing");
	}

	UUdpPingBeaconClient_X_execSendPing_Params SendPing_Params;
	memcpy_s(&SendPing_Params.Address, 0x8, &Address, 0x8);

	uFnSendPing->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnSendPing, &SendPing_Params, nullptr);

	uFnSendPing->FunctionFlags |= 0x400;
};

// Function ProjectX.UdpPingBeaconClient_X.InitClient
// [0x00020401] (FUNC_Final | FUNC_Native | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UUdpPingBeaconClient_X::InitClient()
{
	static UFunction* uFnInitClient = nullptr;

	if (!uFnInitClient)
	{
		uFnInitClient = UFunction::FindFunction("Function ProjectX.UdpPingBeaconClient_X.InitClient");
	}

	UUdpPingBeaconClient_X_execInitClient_Params InitClient_Params;

	uFnInitClient->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitClient, &InitClient_Params, nullptr);

	uFnInitClient->FunctionFlags |= 0x400;

	return InitClient_Params.ReturnValue;
};

// Function ProjectX.UdpPingBeaconClient_X.GetInstance
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UUdpPingBeaconClient_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UUdpPingBeaconClient_X* UUdpPingBeaconClient_X::GetInstance()
{
	static UFunction* uFnGetInstance = nullptr;

	if (!uFnGetInstance)
	{
		uFnGetInstance = UFunction::FindFunction("Function ProjectX.UdpPingBeaconClient_X.GetInstance");
	}

	UUdpPingBeaconClient_X_execGetInstance_Params GetInstance_Params;

	UUdpPingBeaconClient_X::StaticClass()->ProcessEvent(uFnGetInstance, &GetInstance_Params, nullptr);

	return GetInstance_Params.ReturnValue;
};

// Function ProjectX.UdpPingBeaconClient_X.EventLost
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UUdpPingBeaconClient_X*  TheBeacon                      (CPF_Parm | CPF_EditInline)
// struct FName                   Address                        (CPF_Parm)

void UUdpPingBeaconClient_X::EventLost(class UUdpPingBeaconClient_X* TheBeacon, struct FName Address)
{
	static UFunction* uFnEventLost = nullptr;

	if (!uFnEventLost)
	{
		uFnEventLost = UFunction::FindFunction("Function ProjectX.UdpPingBeaconClient_X.EventLost");
	}

	UUdpPingBeaconClient_X_execEventLost_Params EventLost_Params;
	memcpy_s(&EventLost_Params.TheBeacon, 0x8, &TheBeacon, 0x8);
	memcpy_s(&EventLost_Params.Address, 0x8, &Address, 0x8);

	this->ProcessEvent(uFnEventLost, &EventLost_Params, nullptr);
};

// Function ProjectX.UdpPingBeaconClient_X.EventPong
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UUdpPingBeaconClient_X*  TheBeacon                      (CPF_Parm | CPF_EditInline)
// struct FName                   Address                        (CPF_Parm)
// float                          DeltaSeconds                   (CPF_Parm)

void UUdpPingBeaconClient_X::EventPong(class UUdpPingBeaconClient_X* TheBeacon, struct FName Address, float DeltaSeconds)
{
	static UFunction* uFnEventPong = nullptr;

	if (!uFnEventPong)
	{
		uFnEventPong = UFunction::FindFunction("Function ProjectX.UdpPingBeaconClient_X.EventPong");
	}

	UUdpPingBeaconClient_X_execEventPong_Params EventPong_Params;
	memcpy_s(&EventPong_Params.TheBeacon, 0x8, &TheBeacon, 0x8);
	memcpy_s(&EventPong_Params.Address, 0x8, &Address, 0x8);
	memcpy_s(&EventPong_Params.DeltaSeconds, 0x4, &DeltaSeconds, 0x4);

	this->ProcessEvent(uFnEventPong, &EventPong_Params, nullptr);
};

// Function ProjectX.UdpPingBeaconServer_X.InitServer
// [0x00024401] (FUNC_Final | FUNC_Native | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Port                           (CPF_OptionalParm | CPF_Parm)

bool UUdpPingBeaconServer_X::InitServer(int32_t Port)
{
	static UFunction* uFnInitServer = nullptr;

	if (!uFnInitServer)
	{
		uFnInitServer = UFunction::FindFunction("Function ProjectX.UdpPingBeaconServer_X.InitServer");
	}

	UUdpPingBeaconServer_X_execInitServer_Params InitServer_Params;
	memcpy_s(&InitServer_Params.Port, 0x4, &Port, 0x4);

	uFnInitServer->FunctionFlags |= ~0x400;

	this->ProcessEvent(uFnInitServer, &InitServer_Params, nullptr);

	uFnInitServer->FunctionFlags |= 0x400;

	return InitServer_Params.ReturnValue;
};

// Function ProjectX.PrivilegeCheck_X.HasFeatureRestriction
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        OutControllerID                (CPF_Parm | CPF_OutParm)
// uint8_t                        OutFailedPrivilege             (CPF_Parm | CPF_OutParm)

bool UPrivilegeCheck_X::HasFeatureRestriction(int32_t& OutControllerID, uint8_t& OutFailedPrivilege)
{
	static UFunction* uFnHasFeatureRestriction = nullptr;

	if (!uFnHasFeatureRestriction)
	{
		uFnHasFeatureRestriction = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.HasFeatureRestriction");
	}

	UPrivilegeCheck_X_execHasFeatureRestriction_Params HasFeatureRestriction_Params;
	memcpy_s(&HasFeatureRestriction_Params.OutControllerID, 0x4, &OutControllerID, 0x4);
	memcpy_s(&HasFeatureRestriction_Params.OutFailedPrivilege, 0x1, &OutFailedPrivilege, 0x1);

	this->ProcessEvent(uFnHasFeatureRestriction, &HasFeatureRestriction_Params, nullptr);

	memcpy_s(&OutControllerID, 0x4, &HasFeatureRestriction_Params.OutControllerID, 0x4);
	memcpy_s(&OutFailedPrivilege, 0x1, &HasFeatureRestriction_Params.OutFailedPrivilege, 0x1);

	return HasFeatureRestriction_Params.ReturnValue;
};

// Function ProjectX.PrivilegeCheck_X.OnFinished
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UPrivilegeCheck_X::OnFinished()
{
	static UFunction* uFnOnFinished = nullptr;

	if (!uFnOnFinished)
	{
		uFnOnFinished = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.OnFinished");
	}

	UPrivilegeCheck_X_execOnFinished_Params OnFinished_Params;

	this->ProcessEvent(uFnOnFinished, &OnFinished_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.Fail
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UPrivilegeCheck_X::Fail(class FString Reason)
{
	static UFunction* uFnFail = nullptr;

	if (!uFnFail)
	{
		uFnFail = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.Fail");
	}

	UPrivilegeCheck_X_execFail_Params Fail_Params;
	memcpy_s(&Fail_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnFail, &Fail_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.HandlePrivilege
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)
// uint8_t                        Privilege                      (CPF_Parm)
// uint8_t                        Level                          (CPF_Parm)
// class UError*                  InFailReason                   (CPF_Parm)

void UPrivilegeCheck_X::HandlePrivilege(uint8_t LocalUserNum, uint8_t Privilege, uint8_t Level, class UError* InFailReason)
{
	static UFunction* uFnHandlePrivilege = nullptr;

	if (!uFnHandlePrivilege)
	{
		uFnHandlePrivilege = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.HandlePrivilege");
	}

	UPrivilegeCheck_X_execHandlePrivilege_Params HandlePrivilege_Params;
	memcpy_s(&HandlePrivilege_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&HandlePrivilege_Params.Privilege, 0x1, &Privilege, 0x1);
	memcpy_s(&HandlePrivilege_Params.Level, 0x1, &Level, 0x1);
	memcpy_s(&HandlePrivilege_Params.InFailReason, 0x8, &InFailReason, 0x8);

	this->ProcessEvent(uFnHandlePrivilege, &HandlePrivilege_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.CheckPrivilege
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UPrivilegeCheck_X::CheckPrivilege()
{
	static UFunction* uFnCheckPrivilege = nullptr;

	if (!uFnCheckPrivilege)
	{
		uFnCheckPrivilege = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.CheckPrivilege");
	}

	UPrivilegeCheck_X_execCheckPrivilege_Params CheckPrivilege_Params;

	this->ProcessEvent(uFnCheckPrivilege, &CheckPrivilege_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.CheckPsyNetComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  ConnectionError                (CPF_Parm)

void UPrivilegeCheck_X::CheckPsyNetComplete(class UError* ConnectionError)
{
	static UFunction* uFnCheckPsyNetComplete = nullptr;

	if (!uFnCheckPsyNetComplete)
	{
		uFnCheckPsyNetComplete = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.CheckPsyNetComplete");
	}

	UPrivilegeCheck_X_execCheckPsyNetComplete_Params CheckPsyNetComplete_Params;
	memcpy_s(&CheckPsyNetComplete_Params.ConnectionError, 0x8, &ConnectionError, 0x8);

	this->ProcessEvent(uFnCheckPsyNetComplete, &CheckPsyNetComplete_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.CheckPsyNet
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UPrivilegeCheck_X::CheckPsyNet()
{
	static UFunction* uFnCheckPsyNet = nullptr;

	if (!uFnCheckPsyNet)
	{
		uFnCheckPsyNet = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.CheckPsyNet");
	}

	UPrivilegeCheck_X_execCheckPsyNet_Params CheckPsyNet_Params;

	this->ProcessEvent(uFnCheckPsyNet, &CheckPsyNet_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.ValidateUserOnlineAccount
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UPrivilegeCheck_X::ValidateUserOnlineAccount()
{
	static UFunction* uFnValidateUserOnlineAccount = nullptr;

	if (!uFnValidateUserOnlineAccount)
	{
		uFnValidateUserOnlineAccount = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.ValidateUserOnlineAccount");
	}

	UPrivilegeCheck_X_execValidateUserOnlineAccount_Params ValidateUserOnlineAccount_Params;

	this->ProcessEvent(uFnValidateUserOnlineAccount, &ValidateUserOnlineAccount_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.CheckInternet
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UPrivilegeCheck_X::CheckInternet()
{
	static UFunction* uFnCheckInternet = nullptr;

	if (!uFnCheckInternet)
	{
		uFnCheckInternet = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.CheckInternet");
	}

	UPrivilegeCheck_X_execCheckInternet_Params CheckInternet_Params;

	this->ProcessEvent(uFnCheckInternet, &CheckInternet_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.RequirePrivilege
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Privilege                      (CPF_Parm)

class UPrivilegeCheck_X* UPrivilegeCheck_X::RequirePrivilege(uint8_t Privilege)
{
	static UFunction* uFnRequirePrivilege = nullptr;

	if (!uFnRequirePrivilege)
	{
		uFnRequirePrivilege = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.RequirePrivilege");
	}

	UPrivilegeCheck_X_execRequirePrivilege_Params RequirePrivilege_Params;
	memcpy_s(&RequirePrivilege_Params.Privilege, 0x1, &Privilege, 0x1);

	this->ProcessEvent(uFnRequirePrivilege, &RequirePrivilege_Params, nullptr);

	return RequirePrivilege_Params.ReturnValue;
};

// Function ProjectX.PrivilegeCheck_X.RequirePsyNet
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPrivilegeCheck_X* UPrivilegeCheck_X::RequirePsyNet()
{
	static UFunction* uFnRequirePsyNet = nullptr;

	if (!uFnRequirePsyNet)
	{
		uFnRequirePsyNet = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.RequirePsyNet");
	}

	UPrivilegeCheck_X_execRequirePsyNet_Params RequirePsyNet_Params;

	this->ProcessEvent(uFnRequirePsyNet, &RequirePsyNet_Params, nullptr);

	return RequirePsyNet_Params.ReturnValue;
};

// Function ProjectX.PrivilegeCheck_X.RequireUserOnlineAccount
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPrivilegeCheck_X* UPrivilegeCheck_X::RequireUserOnlineAccount()
{
	static UFunction* uFnRequireUserOnlineAccount = nullptr;

	if (!uFnRequireUserOnlineAccount)
	{
		uFnRequireUserOnlineAccount = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.RequireUserOnlineAccount");
	}

	UPrivilegeCheck_X_execRequireUserOnlineAccount_Params RequireUserOnlineAccount_Params;

	this->ProcessEvent(uFnRequireUserOnlineAccount, &RequireUserOnlineAccount_Params, nullptr);

	return RequireUserOnlineAccount_Params.ReturnValue;
};

// Function ProjectX.PrivilegeCheck_X.RequireInternet
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPrivilegeCheck_X* UPrivilegeCheck_X::RequireInternet()
{
	static UFunction* uFnRequireInternet = nullptr;

	if (!uFnRequireInternet)
	{
		uFnRequireInternet = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.RequireInternet");
	}

	UPrivilegeCheck_X_execRequireInternet_Params RequireInternet_Params;

	this->ProcessEvent(uFnRequireInternet, &RequireInternet_Params, nullptr);

	return RequireInternet_Params.ReturnValue;
};

// Function ProjectX.PrivilegeCheck_X.StartNextCheck
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UPrivilegeCheck_X::StartNextCheck()
{
	static UFunction* uFnStartNextCheck = nullptr;

	if (!uFnStartNextCheck)
	{
		uFnStartNextCheck = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.StartNextCheck");
	}

	UPrivilegeCheck_X_execStartNextCheck_Params StartNextCheck_Params;

	this->ProcessEvent(uFnStartNextCheck, &StartNextCheck_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.Start
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPrivilegeCheck_X::Start()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.Start");
	}

	UPrivilegeCheck_X_execStart_Params Start_Params;

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ControllerId                   (CPF_Parm)

void UPrivilegeCheck_X::Init(int32_t ControllerId)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.Init");
	}

	UPrivilegeCheck_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.ControllerId, 0x4, &ControllerId, 0x4);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.PrivilegeCheck_X.CheckDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UPrivilegeCheck_X::CheckDelegate()
{
	static UFunction* uFnCheckDelegate = nullptr;

	if (!uFnCheckDelegate)
	{
		uFnCheckDelegate = UFunction::FindFunction("Function ProjectX.PrivilegeCheck_X.CheckDelegate");
	}

	UPrivilegeCheck_X_execCheckDelegate_Params CheckDelegate_Params;

	this->ProcessEvent(uFnCheckDelegate, &CheckDelegate_Params, nullptr);
};

// Function ProjectX.AddReservationMessage_X.__AddReservationMessage_X__GetPlayerIDs_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReservationPlayerData  P                              (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UAddReservationMessage_X::__AddReservationMessage_X__GetPlayerIDs_0x1(struct FReservationPlayerData P)
{
	static UFunction* uFn__AddReservationMessage_X__GetPlayerIDs_0x1 = nullptr;

	if (!uFn__AddReservationMessage_X__GetPlayerIDs_0x1)
	{
		uFn__AddReservationMessage_X__GetPlayerIDs_0x1 = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.__AddReservationMessage_X__GetPlayerIDs_0x1");
	}

	UAddReservationMessage_X_exec__AddReservationMessage_X__GetPlayerIDs_0x1_Params __AddReservationMessage_X__GetPlayerIDs_0x1_Params;
	memcpy_s(&__AddReservationMessage_X__GetPlayerIDs_0x1_Params.P, 0xA0, &P, 0xA0);

	this->ProcessEvent(uFn__AddReservationMessage_X__GetPlayerIDs_0x1, &__AddReservationMessage_X__GetPlayerIDs_0x1_Params, nullptr);

	return __AddReservationMessage_X__GetPlayerIDs_0x1_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessage_X.GetPlayerIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FUniqueNetId> UAddReservationMessage_X::GetPlayerIDs()
{
	static UFunction* uFnGetPlayerIDs = nullptr;

	if (!uFnGetPlayerIDs)
	{
		uFnGetPlayerIDs = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.GetPlayerIDs");
	}

	UAddReservationMessage_X_execGetPlayerIDs_Params GetPlayerIDs_Params;

	this->ProcessEvent(uFnGetPlayerIDs, &GetPlayerIDs_Params, nullptr);

	return GetPlayerIDs_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessage_X.GetPlayerMapPrefs
// [0x00420000] (FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FName>           Likes                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<struct FName>           Dislikes                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UAddReservationMessage_X::GetPlayerMapPrefs(struct FUniqueNetId PlayerID, TArray<struct FName>& Likes, TArray<struct FName>& Dislikes)
{
	static UFunction* uFnGetPlayerMapPrefs = nullptr;

	if (!uFnGetPlayerMapPrefs)
	{
		uFnGetPlayerMapPrefs = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.GetPlayerMapPrefs");
	}

	UAddReservationMessage_X_execGetPlayerMapPrefs_Params GetPlayerMapPrefs_Params;
	memcpy_s(&GetPlayerMapPrefs_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPlayerMapPrefs_Params.Likes, 0x10, &Likes, 0x10);
	memcpy_s(&GetPlayerMapPrefs_Params.Dislikes, 0x10, &Dislikes, 0x10);

	this->ProcessEvent(uFnGetPlayerMapPrefs, &GetPlayerMapPrefs_Params, nullptr);

	memcpy_s(&Likes, 0x10, &GetPlayerMapPrefs_Params.Likes, 0x10);
	memcpy_s(&Dislikes, 0x10, &GetPlayerMapPrefs_Params.Dislikes, 0x10);
};

// Function ProjectX.AddReservationMessage_X.SetDisableCrossPlay
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bValue                         (CPF_Parm)

class UAddReservationMessage_X* UAddReservationMessage_X::SetDisableCrossPlay(unsigned long bValue)
{
	static UFunction* uFnSetDisableCrossPlay = nullptr;

	if (!uFnSetDisableCrossPlay)
	{
		uFnSetDisableCrossPlay = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.SetDisableCrossPlay");
	}

	UAddReservationMessage_X_execSetDisableCrossPlay_Params SetDisableCrossPlay_Params;
	SetDisableCrossPlay_Params.bValue = bValue;

	this->ProcessEvent(uFnSetDisableCrossPlay, &SetDisableCrossPlay_Params, nullptr);

	return SetDisableCrossPlay_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessage_X.AddPlayer
// [0x00820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bRemotePlayer                  (CPF_Parm)

class UAddReservationMessage_X* UAddReservationMessage_X::AddPlayer(struct FUniqueNetId PlayerID, class FString PlayerName, unsigned long bRemotePlayer)
{
	static UFunction* uFnAddPlayer = nullptr;

	if (!uFnAddPlayer)
	{
		uFnAddPlayer = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.AddPlayer");
	}

	UAddReservationMessage_X_execAddPlayer_Params AddPlayer_Params;
	memcpy_s(&AddPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AddPlayer_Params.PlayerName, 0x10, &PlayerName, 0x10);
	AddPlayer_Params.bRemotePlayer = bRemotePlayer;

	this->ProcessEvent(uFnAddPlayer, &AddPlayer_Params, nullptr);

	return AddPlayer_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessage_X.AddOnlinePlayer
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UOnlinePlayer_X*         Player                         (CPF_Parm)
// unsigned long                  bFriendJoin                    (CPF_OptionalParm | CPF_Parm)

class UAddReservationMessage_X* UAddReservationMessage_X::AddOnlinePlayer(class UOnlinePlayer_X* Player, unsigned long bFriendJoin)
{
	static UFunction* uFnAddOnlinePlayer = nullptr;

	if (!uFnAddOnlinePlayer)
	{
		uFnAddOnlinePlayer = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.AddOnlinePlayer");
	}

	UAddReservationMessage_X_execAddOnlinePlayer_Params AddOnlinePlayer_Params;
	memcpy_s(&AddOnlinePlayer_Params.Player, 0x8, &Player, 0x8);
	AddOnlinePlayer_Params.bFriendJoin = bFriendJoin;

	this->ProcessEvent(uFnAddOnlinePlayer, &AddOnlinePlayer_Params, nullptr);

	return AddOnlinePlayer_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessage_X.AddPlayers
// [0x00820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAddReservationMessage_X* UAddReservationMessage_X::AddPlayers()
{
	static UFunction* uFnAddPlayers = nullptr;

	if (!uFnAddPlayers)
	{
		uFnAddPlayers = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.AddPlayers");
	}

	UAddReservationMessage_X_execAddPlayers_Params AddPlayers_Params;

	this->ProcessEvent(uFnAddPlayers, &AddPlayers_Params, nullptr);

	return AddPlayers_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessage_X.SendReservation
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UAddReservationMessage_X::SendReservation(struct FServerReservationData& Reservation)
{
	static UFunction* uFnSendReservation = nullptr;

	if (!uFnSendReservation)
	{
		uFnSendReservation = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.SendReservation");
	}

	UAddReservationMessage_X_execSendReservation_Params SendReservation_Params;
	memcpy_s(&SendReservation_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnSendReservation, &SendReservation_Params, nullptr);

	memcpy_s(&Reservation, 0x70, &SendReservation_Params.Reservation, 0x70);
};

// Function ProjectX.AddReservationMessage_X.SetReservationID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Id                             (CPF_Parm | CPF_NeedCtorLink)

class UAddReservationMessage_X* UAddReservationMessage_X::SetReservationID(class FString Id)
{
	static UFunction* uFnSetReservationID = nullptr;

	if (!uFnSetReservationID)
	{
		uFnSetReservationID = UFunction::FindFunction("Function ProjectX.AddReservationMessage_X.SetReservationID");
	}

	UAddReservationMessage_X_execSetReservationID_Params SetReservationID_Params;
	memcpy_s(&SetReservationID_Params.Id, 0x10, &Id, 0x10);

	this->ProcessEvent(uFnSetReservationID, &SetReservationID_Params, nullptr);

	return SetReservationID_Params.ReturnValue;
};

// Function ProjectX.____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1.____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FLobbyMember            LM                             (CPF_Parm | CPF_NeedCtorLink)

bool U____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1::____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1(struct FLobbyMember LM)
{
	static UFunction* uFn____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1 = nullptr;

	if (!uFn____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1)
	{
		uFn____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1 = UFunction::FindFunction("Function ProjectX.____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1.____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1");
	}

	U____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1_exec____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1_Params ____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1_Params;
	memcpy_s(&____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1_Params.LM, 0x68, &LM, 0x68);

	this->ProcessEvent(uFn____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1, &____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1_Params, nullptr);

	return ____OnlineGameParty_X__UpdatePartyInfo_0x1____OnlineGameParty_X__UpdatePartyInfo_0x1_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameParty_X__UpdatePartyInfo_0x1.__OnlineGameParty_X__UpdatePartyInfo_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMember            PM                             (CPF_Parm | CPF_NeedCtorLink)

bool U__OnlineGameParty_X__UpdatePartyInfo_0x1::__OnlineGameParty_X__UpdatePartyInfo_0x1(struct FPartyMember PM)
{
	static UFunction* uFn__OnlineGameParty_X__UpdatePartyInfo_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__UpdatePartyInfo_0x1)
	{
		uFn__OnlineGameParty_X__UpdatePartyInfo_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__UpdatePartyInfo_0x1.__OnlineGameParty_X__UpdatePartyInfo_0x1");
	}

	U__OnlineGameParty_X__UpdatePartyInfo_0x1_exec__OnlineGameParty_X__UpdatePartyInfo_0x1_Params __OnlineGameParty_X__UpdatePartyInfo_0x1_Params;
	memcpy_s(&__OnlineGameParty_X__UpdatePartyInfo_0x1_Params.PM, 0x170, &PM, 0x170);

	this->ProcessEvent(uFn__OnlineGameParty_X__UpdatePartyInfo_0x1, &__OnlineGameParty_X__UpdatePartyInfo_0x1_Params, nullptr);

	return __OnlineGameParty_X__UpdatePartyInfo_0x1_Params.ReturnValue;
};

// Function ProjectX.____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1.____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPendingStorage         P                              (CPF_Parm)

bool U____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1::____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1(struct FPendingStorage P)
{
	static UFunction* uFn____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1 = nullptr;

	if (!uFn____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1)
	{
		uFn____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1 = UFunction::FindFunction("Function ProjectX.____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1.____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1");
	}

	U____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1_exec____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1_Params ____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1_Params;
	memcpy_s(&____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1_Params.P, 0x18, &P, 0x18);

	this->ProcessEvent(uFn____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1, &____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1_Params, nullptr);

	return ____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2____OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__Construct_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  _                              (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__Construct_0x1(class FString _)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__Construct_0x1 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__Construct_0x1)
	{
		uFn__OnlinePlayerStorageQueue_X__Construct_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__Construct_0x1");
	}

	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__Construct_0x1_Params __OnlinePlayerStorageQueue_X__Construct_0x1_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__Construct_0x1_Params._, 0x10, &_, 0x10);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__Construct_0x1, &__OnlinePlayerStorageQueue_X__Construct_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1(class URPC_X* RPC)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1)
	{
		uFn__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1");
	}

	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1_Params __OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1, &__OnlinePlayerStorageQueue_X__SendBatch_Internal_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5
// [0x40840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPendingStorage         P                              (CPF_Parm)

bool UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5(struct FPendingStorage P)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5)
	{
		uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5 = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5");
	}

	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5_Params __OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5_Params.P, 0x18, &P, 0x18);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5, &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5_Params, nullptr);

	return __OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x5_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FSetPlayerStorageRequestItem R                              (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3(struct FSetPlayerStorageRequestItem R)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3)
	{
		uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3 = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3");
	}

	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3_Params __OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3_Params.R, 0x28, &R, 0x28);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3, &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x3_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FSetPlayerStorageResultItem Item                           (CPF_Parm)

bool UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1(struct FSetPlayerStorageResultItem Item)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1)
	{
		uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1");
	}

	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1_Params __OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1_Params.Item, 0x10, &Item, 0x10);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1, &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1_Params, nullptr);

	return __OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageError_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FPendingStorage         P                              (CPF_Parm)

void UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageError_0x2(struct FPendingStorage P)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__HandleStorageError_0x2 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__HandleStorageError_0x2)
	{
		uFn__OnlinePlayerStorageQueue_X__HandleStorageError_0x2 = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageError_0x2");
	}

	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageError_0x2_Params __OnlinePlayerStorageQueue_X__HandleStorageError_0x2_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__HandleStorageError_0x2_Params.P, 0x18, &P, 0x18);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__HandleStorageError_0x2, &__OnlinePlayerStorageQueue_X__HandleStorageError_0x2_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageError_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPendingStorage         P                              (CPF_Parm)

bool UOnlinePlayerStorageQueue_X::__OnlinePlayerStorageQueue_X__HandleStorageError_0x1(struct FPendingStorage P)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__HandleStorageError_0x1 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__HandleStorageError_0x1)
	{
		uFn__OnlinePlayerStorageQueue_X__HandleStorageError_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.__OnlinePlayerStorageQueue_X__HandleStorageError_0x1");
	}

	UOnlinePlayerStorageQueue_X_exec__OnlinePlayerStorageQueue_X__HandleStorageError_0x1_Params __OnlinePlayerStorageQueue_X__HandleStorageError_0x1_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__HandleStorageError_0x1_Params.P, 0x18, &P, 0x18);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__HandleStorageError_0x1, &__OnlinePlayerStorageQueue_X__HandleStorageError_0x1_Params, nullptr);

	return __OnlinePlayerStorageQueue_X__HandleStorageError_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageQueue_X.GetStorageMaxSizeBytes
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   Category                       (CPF_Parm)

int32_t UOnlinePlayerStorageQueue_X::GetStorageMaxSizeBytes(struct FName Category)
{
	static UFunction* uFnGetStorageMaxSizeBytes = nullptr;

	if (!uFnGetStorageMaxSizeBytes)
	{
		uFnGetStorageMaxSizeBytes = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.GetStorageMaxSizeBytes");
	}

	UOnlinePlayerStorageQueue_X_execGetStorageMaxSizeBytes_Params GetStorageMaxSizeBytes_Params;
	memcpy_s(&GetStorageMaxSizeBytes_Params.Category, 0x8, &Category, 0x8);

	this->ProcessEvent(uFnGetStorageMaxSizeBytes, &GetStorageMaxSizeBytes_Params, nullptr);

	return GetStorageMaxSizeBytes_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageQueue_X.HandleStorageError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerStorageQueue_X::HandleStorageError(class UError* Error)
{
	static UFunction* uFnHandleStorageError = nullptr;

	if (!uFnHandleStorageError)
	{
		uFnHandleStorageError = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.HandleStorageError");
	}

	UOnlinePlayerStorageQueue_X_execHandleStorageError_Params HandleStorageError_Params;
	memcpy_s(&HandleStorageError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleStorageError, &HandleStorageError_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.MapResultItem
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPendingStorage         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FSetPlayerStorageResultItem Item                           (CPF_Parm)

struct FPendingStorage UOnlinePlayerStorageQueue_X::MapResultItem(struct FSetPlayerStorageResultItem Item)
{
	static UFunction* uFnMapResultItem = nullptr;

	if (!uFnMapResultItem)
	{
		uFnMapResultItem = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.MapResultItem");
	}

	UOnlinePlayerStorageQueue_X_execMapResultItem_Params MapResultItem_Params;
	memcpy_s(&MapResultItem_Params.Item, 0x10, &Item, 0x10);

	this->ProcessEvent(uFnMapResultItem, &MapResultItem_Params, nullptr);

	return MapResultItem_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageQueue_X.HandleStorageSuccess
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_PlayerStorageSet_X* RPC                            (CPF_Parm)

void UOnlinePlayerStorageQueue_X::HandleStorageSuccess(class URPC_PlayerStorageSet_X* RPC)
{
	static UFunction* uFnHandleStorageSuccess = nullptr;

	if (!uFnHandleStorageSuccess)
	{
		uFnHandleStorageSuccess = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.HandleStorageSuccess");
	}

	UOnlinePlayerStorageQueue_X_execHandleStorageSuccess_Params HandleStorageSuccess_Params;
	memcpy_s(&HandleStorageSuccess_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleStorageSuccess, &HandleStorageSuccess_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.PartitionStorageRequests
// [0x00C40003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// TArray<struct FPendingStorage> OutQueue                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<struct FSetPlayerStorageRequestItem> OutOfDate                      (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlinePlayerStorageQueue_X::PartitionStorageRequests(TArray<struct FPendingStorage>& OutQueue, TArray<struct FSetPlayerStorageRequestItem>& OutOfDate)
{
	static UFunction* uFnPartitionStorageRequests = nullptr;

	if (!uFnPartitionStorageRequests)
	{
		uFnPartitionStorageRequests = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.PartitionStorageRequests");
	}

	UOnlinePlayerStorageQueue_X_execPartitionStorageRequests_Params PartitionStorageRequests_Params;
	memcpy_s(&PartitionStorageRequests_Params.OutQueue, 0x10, &OutQueue, 0x10);
	memcpy_s(&PartitionStorageRequests_Params.OutOfDate, 0x10, &OutOfDate, 0x10);

	this->ProcessEvent(uFnPartitionStorageRequests, &PartitionStorageRequests_Params, nullptr);

	memcpy_s(&OutQueue, 0x10, &PartitionStorageRequests_Params.OutQueue, 0x10);
	memcpy_s(&OutOfDate, 0x10, &PartitionStorageRequests_Params.OutOfDate, 0x10);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.SendBatch_Internal
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FPendingStorage> OutQueue                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlinePlayerStorageQueue_X::SendBatch_Internal(TArray<struct FPendingStorage>& OutQueue)
{
	static UFunction* uFnSendBatch_Internal = nullptr;

	if (!uFnSendBatch_Internal)
	{
		uFnSendBatch_Internal = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.SendBatch_Internal");
	}

	UOnlinePlayerStorageQueue_X_execSendBatch_Internal_Params SendBatch_Internal_Params;
	memcpy_s(&SendBatch_Internal_Params.OutQueue, 0x10, &OutQueue, 0x10);

	this->ProcessEvent(uFnSendBatch_Internal, &SendBatch_Internal_Params, nullptr);

	memcpy_s(&OutQueue, 0x10, &SendBatch_Internal_Params.OutQueue, 0x10);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.SendBatch
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerStorageQueue_X::SendBatch()
{
	static UFunction* uFnSendBatch = nullptr;

	if (!uFnSendBatch)
	{
		uFnSendBatch = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.SendBatch");
	}

	UOnlinePlayerStorageQueue_X_execSendBatch_Params SendBatch_Params;

	this->ProcessEvent(uFnSendBatch, &SendBatch_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.QueueBatch
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerStorageQueue_X::QueueBatch()
{
	static UFunction* uFnQueueBatch = nullptr;

	if (!uFnQueueBatch)
	{
		uFnQueueBatch = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.QueueBatch");
	}

	UOnlinePlayerStorageQueue_X_execQueueBatch_Params QueueBatch_Params;

	this->ProcessEvent(uFnQueueBatch, &QueueBatch_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.SendImmediate
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UObject*                 DataObj                        (CPF_Parm)
// int32_t                        ClientTick                     (CPF_Parm)

void UOnlinePlayerStorageQueue_X::SendImmediate(class UObject* DataObj, int32_t ClientTick)
{
	static UFunction* uFnSendImmediate = nullptr;

	if (!uFnSendImmediate)
	{
		uFnSendImmediate = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.SendImmediate");
	}

	UOnlinePlayerStorageQueue_X_execSendImmediate_Params SendImmediate_Params;
	memcpy_s(&SendImmediate_Params.DataObj, 0x8, &DataObj, 0x8);
	memcpy_s(&SendImmediate_Params.ClientTick, 0x4, &ClientTick, 0x4);

	this->ProcessEvent(uFnSendImmediate, &SendImmediate_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.UpdateQueuedObject
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 DataObj                        (CPF_Parm)
// int32_t                        ClientTick                     (CPF_Parm)

void UOnlinePlayerStorageQueue_X::UpdateQueuedObject(class UObject* DataObj, int32_t ClientTick)
{
	static UFunction* uFnUpdateQueuedObject = nullptr;

	if (!uFnUpdateQueuedObject)
	{
		uFnUpdateQueuedObject = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.UpdateQueuedObject");
	}

	UOnlinePlayerStorageQueue_X_execUpdateQueuedObject_Params UpdateQueuedObject_Params;
	memcpy_s(&UpdateQueuedObject_Params.DataObj, 0x8, &DataObj, 0x8);
	memcpy_s(&UpdateQueuedObject_Params.ClientTick, 0x4, &ClientTick, 0x4);

	this->ProcessEvent(uFnUpdateQueuedObject, &UpdateQueuedObject_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.QueueObject
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 DataObj                        (CPF_Parm)
// int32_t                        ClientTick                     (CPF_Parm)

void UOnlinePlayerStorageQueue_X::QueueObject(class UObject* DataObj, int32_t ClientTick)
{
	static UFunction* uFnQueueObject = nullptr;

	if (!uFnQueueObject)
	{
		uFnQueueObject = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.QueueObject");
	}

	UOnlinePlayerStorageQueue_X_execQueueObject_Params QueueObject_Params;
	memcpy_s(&QueueObject_Params.DataObj, 0x8, &DataObj, 0x8);
	memcpy_s(&QueueObject_Params.ClientTick, 0x4, &ClientTick, 0x4);

	this->ProcessEvent(uFnQueueObject, &QueueObject_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerStorageQueue_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.Construct");
	}

	UOnlinePlayerStorageQueue_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.EventStorageError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerStorageQueue_X::EventStorageError(class UError* Error)
{
	static UFunction* uFnEventStorageError = nullptr;

	if (!uFnEventStorageError)
	{
		uFnEventStorageError = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.EventStorageError");
	}

	UOnlinePlayerStorageQueue_X_execEventStorageError_Params EventStorageError_Params;
	memcpy_s(&EventStorageError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventStorageError, &EventStorageError_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.EventOutOfSync
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FPendingStorage> FailedObjects                  (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlinePlayerStorageQueue_X::EventOutOfSync(TArray<struct FPendingStorage>& FailedObjects)
{
	static UFunction* uFnEventOutOfSync = nullptr;

	if (!uFnEventOutOfSync)
	{
		uFnEventOutOfSync = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.EventOutOfSync");
	}

	UOnlinePlayerStorageQueue_X_execEventOutOfSync_Params EventOutOfSync_Params;
	memcpy_s(&EventOutOfSync_Params.FailedObjects, 0x10, &FailedObjects, 0x10);

	this->ProcessEvent(uFnEventOutOfSync, &EventOutOfSync_Params, nullptr);

	memcpy_s(&FailedObjects, 0x10, &EventOutOfSync_Params.FailedObjects, 0x10);
};

// Function ProjectX.OnlinePlayerStorageQueue_X.EventStorageSuccess
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Data                           (CPF_Parm)
// int32_t                        ServerTick                     (CPF_Parm)
// uint8_t                        Encoding                       (CPF_Parm)

void UOnlinePlayerStorageQueue_X::EventStorageSuccess(class UObject* Data, int32_t ServerTick, uint8_t Encoding)
{
	static UFunction* uFnEventStorageSuccess = nullptr;

	if (!uFnEventStorageSuccess)
	{
		uFnEventStorageSuccess = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageQueue_X.EventStorageSuccess");
	}

	UOnlinePlayerStorageQueue_X_execEventStorageSuccess_Params EventStorageSuccess_Params;
	memcpy_s(&EventStorageSuccess_Params.Data, 0x8, &Data, 0x8);
	memcpy_s(&EventStorageSuccess_Params.ServerTick, 0x4, &ServerTick, 0x4);
	memcpy_s(&EventStorageSuccess_Params.Encoding, 0x1, &Encoding, 0x1);

	this->ProcessEvent(uFnEventStorageSuccess, &EventStorageSuccess_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FSetPlayerStorageResultItem R                              (CPF_Parm)

void U__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2::__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4(struct FSetPlayerStorageResultItem R)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4)
	{
		uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4");
	}

	U__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2_exec__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_Params __OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_Params.R, 0x10, &R, 0x10);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4, &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x4_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FSetPlayerStorageRequestItem R                              (CPF_Parm | CPF_NeedCtorLink)

bool U__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2::__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2(struct FSetPlayerStorageRequestItem R)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2)
	{
		uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2.__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2");
	}

	U__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2_exec__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2_Params __OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2_Params.R, 0x28, &R, 0x28);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2, &__OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2_Params, nullptr);

	return __OnlinePlayerStorageQueue_X__HandleStorageSuccess_0x2_Params.ReturnValue;
};

// Function ProjectX.__AdHocBrowser_X__CreateErrorDelegate_0x1.__AdHocBrowser_X__CreateErrorDelegate_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__AdHocBrowser_X__CreateErrorDelegate_0x1::__AdHocBrowser_X__CreateErrorDelegate_0x2()
{
	static UFunction* uFn__AdHocBrowser_X__CreateErrorDelegate_0x2 = nullptr;

	if (!uFn__AdHocBrowser_X__CreateErrorDelegate_0x2)
	{
		uFn__AdHocBrowser_X__CreateErrorDelegate_0x2 = UFunction::FindFunction("Function ProjectX.__AdHocBrowser_X__CreateErrorDelegate_0x1.__AdHocBrowser_X__CreateErrorDelegate_0x2");
	}

	U__AdHocBrowser_X__CreateErrorDelegate_0x1_exec__AdHocBrowser_X__CreateErrorDelegate_0x2_Params __AdHocBrowser_X__CreateErrorDelegate_0x2_Params;

	this->ProcessEvent(uFn__AdHocBrowser_X__CreateErrorDelegate_0x2, &__AdHocBrowser_X__CreateErrorDelegate_0x2_Params, nullptr);
};

// Function ProjectX.__AdHocBrowser_X__CreateErrorDelegate_0x1.__AdHocBrowser_X__CreateErrorDelegate_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void U__AdHocBrowser_X__CreateErrorDelegate_0x1::__AdHocBrowser_X__CreateErrorDelegate_0x1(class UError* Error)
{
	static UFunction* uFn__AdHocBrowser_X__CreateErrorDelegate_0x1 = nullptr;

	if (!uFn__AdHocBrowser_X__CreateErrorDelegate_0x1)
	{
		uFn__AdHocBrowser_X__CreateErrorDelegate_0x1 = UFunction::FindFunction("Function ProjectX.__AdHocBrowser_X__CreateErrorDelegate_0x1.__AdHocBrowser_X__CreateErrorDelegate_0x1");
	}

	U__AdHocBrowser_X__CreateErrorDelegate_0x1_exec__AdHocBrowser_X__CreateErrorDelegate_0x1_Params __AdHocBrowser_X__CreateErrorDelegate_0x1_Params;
	memcpy_s(&__AdHocBrowser_X__CreateErrorDelegate_0x1_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__AdHocBrowser_X__CreateErrorDelegate_0x1, &__AdHocBrowser_X__CreateErrorDelegate_0x1_Params, nullptr);
};

// Function ProjectX.AdHocBrowser_X.__AdHocBrowser_X__GetServerList_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UAdHocBrowser_X::__AdHocBrowser_X__GetServerList_0x1()
{
	static UFunction* uFn__AdHocBrowser_X__GetServerList_0x1 = nullptr;

	if (!uFn__AdHocBrowser_X__GetServerList_0x1)
	{
		uFn__AdHocBrowser_X__GetServerList_0x1 = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.__AdHocBrowser_X__GetServerList_0x1");
	}

	UAdHocBrowser_X_exec__AdHocBrowser_X__GetServerList_0x1_Params __AdHocBrowser_X__GetServerList_0x1_Params;

	this->ProcessEvent(uFn__AdHocBrowser_X__GetServerList_0x1, &__AdHocBrowser_X__GetServerList_0x1_Params, nullptr);
};

// Function ProjectX.AdHocBrowser_X.HandleSearchTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UAdHocBrowser_X::HandleSearchTimeout()
{
	static UFunction* uFnHandleSearchTimeout = nullptr;

	if (!uFnHandleSearchTimeout)
	{
		uFnHandleSearchTimeout = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.HandleSearchTimeout");
	}

	UAdHocBrowser_X_execHandleSearchTimeout_Params HandleSearchTimeout_Params;

	this->ProcessEvent(uFnHandleSearchTimeout, &HandleSearchTimeout_Params, nullptr);
};

// Function ProjectX.AdHocBrowser_X.AdHocHandleOnNetworkChanged
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// TArray<struct FAdHocAccessPointInfo> Ahapis                         (CPF_Parm | CPF_NeedCtorLink)

void UAdHocBrowser_X::AdHocHandleOnNetworkChanged(TArray<struct FAdHocAccessPointInfo> Ahapis)
{
	static UFunction* uFnAdHocHandleOnNetworkChanged = nullptr;

	if (!uFnAdHocHandleOnNetworkChanged)
	{
		uFnAdHocHandleOnNetworkChanged = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.AdHocHandleOnNetworkChanged");
	}

	UAdHocBrowser_X_execAdHocHandleOnNetworkChanged_Params AdHocHandleOnNetworkChanged_Params;
	memcpy_s(&AdHocHandleOnNetworkChanged_Params.Ahapis, 0x10, &Ahapis, 0x10);

	this->ProcessEvent(uFnAdHocHandleOnNetworkChanged, &AdHocHandleOnNetworkChanged_Params, nullptr);
};

// Function ProjectX.AdHocBrowser_X.FindIndexFromServerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerID                     (CPF_Parm | CPF_NeedCtorLink)

int32_t UAdHocBrowser_X::FindIndexFromServerID(class FString InServerID)
{
	static UFunction* uFnFindIndexFromServerID = nullptr;

	if (!uFnFindIndexFromServerID)
	{
		uFnFindIndexFromServerID = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.FindIndexFromServerID");
	}

	UAdHocBrowser_X_execFindIndexFromServerID_Params FindIndexFromServerID_Params;
	memcpy_s(&FindIndexFromServerID_Params.InServerID, 0x10, &InServerID, 0x10);

	this->ProcessEvent(uFnFindIndexFromServerID, &FindIndexFromServerID_Params, nullptr);

	return FindIndexFromServerID_Params.ReturnValue;
};

// Function ProjectX.AdHocBrowser_X.JoinServer
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ServerId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UAdHocBrowser_X::JoinServer(class FString ServerId, class FString Options)
{
	static UFunction* uFnJoinServer = nullptr;

	if (!uFnJoinServer)
	{
		uFnJoinServer = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.JoinServer");
	}

	UAdHocBrowser_X_execJoinServer_Params JoinServer_Params;
	memcpy_s(&JoinServer_Params.ServerId, 0x10, &ServerId, 0x10);
	memcpy_s(&JoinServer_Params.Options, 0x10, &Options, 0x10);

	this->ProcessEvent(uFnJoinServer, &JoinServer_Params, nullptr);

	return JoinServer_Params.ReturnValue;
};

// Function ProjectX.AdHocBrowser_X.CreateErrorDelegate
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              Task                           (CPF_Parm)

void UAdHocBrowser_X::CreateErrorDelegate(class UAsyncTask* Task)
{
	static UFunction* uFnCreateErrorDelegate = nullptr;

	if (!uFnCreateErrorDelegate)
	{
		uFnCreateErrorDelegate = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.CreateErrorDelegate");
	}

	UAdHocBrowser_X_execCreateErrorDelegate_Params CreateErrorDelegate_Params;
	memcpy_s(&CreateErrorDelegate_Params.Task, 0x8, &Task, 0x8);

	UAdHocBrowser_X::StaticClass()->ProcessEvent(uFnCreateErrorDelegate, &CreateErrorDelegate_Params, nullptr);
};

// Function ProjectX.AdHocBrowser_X.GetServerList
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__array_LanServerRecord_X* UAdHocBrowser_X::GetServerList()
{
	static UFunction* uFnGetServerList = nullptr;

	if (!uFnGetServerList)
	{
		uFnGetServerList = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.GetServerList");
	}

	UAdHocBrowser_X_execGetServerList_Params GetServerList_Params;

	this->ProcessEvent(uFnGetServerList, &GetServerList_Params, nullptr);

	return GetServerList_Params.ReturnValue;
};

// Function ProjectX.AdHocBrowser_X.SetServerMetaData
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  MetaData                       (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UAdHocBrowser_X::SetServerMetaData(class FString MetaData)
{
	static UFunction* uFnSetServerMetaData = nullptr;

	if (!uFnSetServerMetaData)
	{
		uFnSetServerMetaData = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.SetServerMetaData");
	}

	UAdHocBrowser_X_execSetServerMetaData_Params SetServerMetaData_Params;
	memcpy_s(&SetServerMetaData_Params.MetaData, 0x10, &MetaData, 0x10);

	this->ProcessEvent(uFnSetServerMetaData, &SetServerMetaData_Params, nullptr);

	return SetServerMetaData_Params.ReturnValue;
};

// Function ProjectX.AdHocBrowser_X.CreateServer
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  MetaData                       (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UAdHocBrowser_X::CreateServer(class FString MetaData)
{
	static UFunction* uFnCreateServer = nullptr;

	if (!uFnCreateServer)
	{
		uFnCreateServer = UFunction::FindFunction("Function ProjectX.AdHocBrowser_X.CreateServer");
	}

	UAdHocBrowser_X_execCreateServer_Params CreateServer_Params;
	memcpy_s(&CreateServer_Params.MetaData, 0x10, &MetaData, 0x10);

	this->ProcessEvent(uFnCreateServer, &CreateServer_Params, nullptr);

	return CreateServer_Params.ReturnValue;
};

// Function ProjectX.LanBrowser_X.JoinServer
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ServerId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* ULanBrowser_X::JoinServer(class FString ServerId, class FString Options)
{
	static UFunction* uFnJoinServer = nullptr;

	if (!uFnJoinServer)
	{
		uFnJoinServer = UFunction::FindFunction("Function ProjectX.LanBrowser_X.JoinServer");
	}

	ULanBrowser_X_execJoinServer_Params JoinServer_Params;
	memcpy_s(&JoinServer_Params.ServerId, 0x10, &ServerId, 0x10);
	memcpy_s(&JoinServer_Params.Options, 0x10, &Options, 0x10);

	this->ProcessEvent(uFnJoinServer, &JoinServer_Params, nullptr);

	return JoinServer_Params.ReturnValue;
};

// Function ProjectX.LanBrowser_X.GetServerList
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__array_LanServerRecord_X* ULanBrowser_X::GetServerList()
{
	static UFunction* uFnGetServerList = nullptr;

	if (!uFnGetServerList)
	{
		uFnGetServerList = UFunction::FindFunction("Function ProjectX.LanBrowser_X.GetServerList");
	}

	ULanBrowser_X_execGetServerList_Params GetServerList_Params;

	this->ProcessEvent(uFnGetServerList, &GetServerList_Params, nullptr);

	return GetServerList_Params.ReturnValue;
};

// Function ProjectX.LanBrowser_X.DestroyServer
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void ULanBrowser_X::DestroyServer()
{
	static UFunction* uFnDestroyServer = nullptr;

	if (!uFnDestroyServer)
	{
		uFnDestroyServer = UFunction::FindFunction("Function ProjectX.LanBrowser_X.DestroyServer");
	}

	ULanBrowser_X_execDestroyServer_Params DestroyServer_Params;

	this->ProcessEvent(uFnDestroyServer, &DestroyServer_Params, nullptr);
};

// Function ProjectX.LanBrowser_X.SetServerMetaData
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  MetaData                       (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* ULanBrowser_X::SetServerMetaData(class FString MetaData)
{
	static UFunction* uFnSetServerMetaData = nullptr;

	if (!uFnSetServerMetaData)
	{
		uFnSetServerMetaData = UFunction::FindFunction("Function ProjectX.LanBrowser_X.SetServerMetaData");
	}

	ULanBrowser_X_execSetServerMetaData_Params SetServerMetaData_Params;
	memcpy_s(&SetServerMetaData_Params.MetaData, 0x10, &MetaData, 0x10);

	this->ProcessEvent(uFnSetServerMetaData, &SetServerMetaData_Params, nullptr);

	return SetServerMetaData_Params.ReturnValue;
};

// Function ProjectX.LanBrowser_X.CreateServer
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  MetaData                       (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* ULanBrowser_X::CreateServer(class FString MetaData)
{
	static UFunction* uFnCreateServer = nullptr;

	if (!uFnCreateServer)
	{
		uFnCreateServer = UFunction::FindFunction("Function ProjectX.LanBrowser_X.CreateServer");
	}

	ULanBrowser_X_execCreateServer_Params CreateServer_Params;
	memcpy_s(&CreateServer_Params.MetaData, 0x10, &MetaData, 0x10);

	this->ProcessEvent(uFnCreateServer, &CreateServer_Params, nullptr);

	return CreateServer_Params.ReturnValue;
};

// Function ProjectX.LanBrowser_X.HandleGameInfoSpawned
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             G                              (CPF_Parm)

void ULanBrowser_X::HandleGameInfoSpawned(class AGameInfo_X* G)
{
	static UFunction* uFnHandleGameInfoSpawned = nullptr;

	if (!uFnHandleGameInfoSpawned)
	{
		uFnHandleGameInfoSpawned = UFunction::FindFunction("Function ProjectX.LanBrowser_X.HandleGameInfoSpawned");
	}

	ULanBrowser_X_execHandleGameInfoSpawned_Params HandleGameInfoSpawned_Params;
	memcpy_s(&HandleGameInfoSpawned_Params.G, 0x8, &G, 0x8);

	this->ProcessEvent(uFnHandleGameInfoSpawned, &HandleGameInfoSpawned_Params, nullptr);
};

// Function ProjectX.LanBrowser_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void ULanBrowser_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.LanBrowser_X.Construct");
	}

	ULanBrowser_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.__AdHocBrowser_X__CreateServer_0x1.__AdHocBrowser_X__CreateServer_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__AdHocBrowser_X__CreateServer_0x1::__AdHocBrowser_X__CreateServer_0x2()
{
	static UFunction* uFn__AdHocBrowser_X__CreateServer_0x2 = nullptr;

	if (!uFn__AdHocBrowser_X__CreateServer_0x2)
	{
		uFn__AdHocBrowser_X__CreateServer_0x2 = UFunction::FindFunction("Function ProjectX.__AdHocBrowser_X__CreateServer_0x1.__AdHocBrowser_X__CreateServer_0x2");
	}

	U__AdHocBrowser_X__CreateServer_0x1_exec__AdHocBrowser_X__CreateServer_0x2_Params __AdHocBrowser_X__CreateServer_0x2_Params;

	this->ProcessEvent(uFn__AdHocBrowser_X__CreateServer_0x2, &__AdHocBrowser_X__CreateServer_0x2_Params, nullptr);
};

// Function ProjectX.__AdHocBrowser_X__CreateServer_0x1.__AdHocBrowser_X__CreateServer_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__AdHocBrowser_X__CreateServer_0x1::__AdHocBrowser_X__CreateServer_0x1()
{
	static UFunction* uFn__AdHocBrowser_X__CreateServer_0x1 = nullptr;

	if (!uFn__AdHocBrowser_X__CreateServer_0x1)
	{
		uFn__AdHocBrowser_X__CreateServer_0x1 = UFunction::FindFunction("Function ProjectX.__AdHocBrowser_X__CreateServer_0x1.__AdHocBrowser_X__CreateServer_0x1");
	}

	U__AdHocBrowser_X__CreateServer_0x1_exec__AdHocBrowser_X__CreateServer_0x1_Params __AdHocBrowser_X__CreateServer_0x1_Params;

	this->ProcessEvent(uFn__AdHocBrowser_X__CreateServer_0x1, &__AdHocBrowser_X__CreateServer_0x1_Params, nullptr);
};

// Function ProjectX.__AdHocBrowser_X__JoinServer_0x1.__AdHocBrowser_X__JoinServer_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__AdHocBrowser_X__JoinServer_0x1::__AdHocBrowser_X__JoinServer_0x1()
{
	static UFunction* uFn__AdHocBrowser_X__JoinServer_0x1 = nullptr;

	if (!uFn__AdHocBrowser_X__JoinServer_0x1)
	{
		uFn__AdHocBrowser_X__JoinServer_0x1 = UFunction::FindFunction("Function ProjectX.__AdHocBrowser_X__JoinServer_0x1.__AdHocBrowser_X__JoinServer_0x1");
	}

	U__AdHocBrowser_X__JoinServer_0x1_exec__AdHocBrowser_X__JoinServer_0x1_Params __AdHocBrowser_X__JoinServer_0x1_Params;

	this->ProcessEvent(uFn__AdHocBrowser_X__JoinServer_0x1, &__AdHocBrowser_X__JoinServer_0x1_Params, nullptr);
};

// Function ProjectX.__AdHocInterface_X__DisableAdHoc_0x1.__AdHocInterface_X__DisableAdHoc_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__AdHocInterface_X__DisableAdHoc_0x1::__AdHocInterface_X__DisableAdHoc_0x2()
{
	static UFunction* uFn__AdHocInterface_X__DisableAdHoc_0x2 = nullptr;

	if (!uFn__AdHocInterface_X__DisableAdHoc_0x2)
	{
		uFn__AdHocInterface_X__DisableAdHoc_0x2 = UFunction::FindFunction("Function ProjectX.__AdHocInterface_X__DisableAdHoc_0x1.__AdHocInterface_X__DisableAdHoc_0x2");
	}

	U__AdHocInterface_X__DisableAdHoc_0x1_exec__AdHocInterface_X__DisableAdHoc_0x2_Params __AdHocInterface_X__DisableAdHoc_0x2_Params;

	this->ProcessEvent(uFn__AdHocInterface_X__DisableAdHoc_0x2, &__AdHocInterface_X__DisableAdHoc_0x2_Params, nullptr);
};

// Function ProjectX.__AdHocInterface_X__DisableAdHoc_0x1.__AdHocInterface_X__DisableAdHoc_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__AdHocInterface_X__DisableAdHoc_0x1::__AdHocInterface_X__DisableAdHoc_0x1()
{
	static UFunction* uFn__AdHocInterface_X__DisableAdHoc_0x1 = nullptr;

	if (!uFn__AdHocInterface_X__DisableAdHoc_0x1)
	{
		uFn__AdHocInterface_X__DisableAdHoc_0x1 = UFunction::FindFunction("Function ProjectX.__AdHocInterface_X__DisableAdHoc_0x1.__AdHocInterface_X__DisableAdHoc_0x1");
	}

	U__AdHocInterface_X__DisableAdHoc_0x1_exec__AdHocInterface_X__DisableAdHoc_0x1_Params __AdHocInterface_X__DisableAdHoc_0x1_Params;

	this->ProcessEvent(uFn__AdHocInterface_X__DisableAdHoc_0x1, &__AdHocInterface_X__DisableAdHoc_0x1_Params, nullptr);
};

// Function ProjectX.AdHocInterface_X.CreateErrorDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              Task                           (CPF_Parm)

void UAdHocInterface_X::CreateErrorDelegate(class UAsyncTask* Task)
{
	static UFunction* uFnCreateErrorDelegate = nullptr;

	if (!uFnCreateErrorDelegate)
	{
		uFnCreateErrorDelegate = UFunction::FindFunction("Function ProjectX.AdHocInterface_X.CreateErrorDelegate");
	}

	UAdHocInterface_X_execCreateErrorDelegate_Params CreateErrorDelegate_Params;
	memcpy_s(&CreateErrorDelegate_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnCreateErrorDelegate, &CreateErrorDelegate_Params, nullptr);
};

// Function ProjectX.AdHocInterface_X.DisableAdHoc
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAsyncTask* UAdHocInterface_X::DisableAdHoc()
{
	static UFunction* uFnDisableAdHoc = nullptr;

	if (!uFnDisableAdHoc)
	{
		uFnDisableAdHoc = UFunction::FindFunction("Function ProjectX.AdHocInterface_X.DisableAdHoc");
	}

	UAdHocInterface_X_execDisableAdHoc_Params DisableAdHoc_Params;

	this->ProcessEvent(uFnDisableAdHoc, &DisableAdHoc_Params, nullptr);

	return DisableAdHoc_Params.ReturnValue;
};

// Function ProjectX.AdHocInterface_X.HandleGameInfoSpawned
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             InGameInfo                     (CPF_Parm)

void UAdHocInterface_X::HandleGameInfoSpawned(class AGameInfo_X* InGameInfo)
{
	static UFunction* uFnHandleGameInfoSpawned = nullptr;

	if (!uFnHandleGameInfoSpawned)
	{
		uFnHandleGameInfoSpawned = UFunction::FindFunction("Function ProjectX.AdHocInterface_X.HandleGameInfoSpawned");
	}

	UAdHocInterface_X_execHandleGameInfoSpawned_Params HandleGameInfoSpawned_Params;
	memcpy_s(&HandleGameInfoSpawned_Params.InGameInfo, 0x8, &InGameInfo, 0x8);

	this->ProcessEvent(uFnHandleGameInfoSpawned, &HandleGameInfoSpawned_Params, nullptr);
};

// Function ProjectX.AdHocInterface_X.EnableAdHoc
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAsyncTask* UAdHocInterface_X::EnableAdHoc()
{
	static UFunction* uFnEnableAdHoc = nullptr;

	if (!uFnEnableAdHoc)
	{
		uFnEnableAdHoc = UFunction::FindFunction("Function ProjectX.AdHocInterface_X.EnableAdHoc");
	}

	UAdHocInterface_X_execEnableAdHoc_Params EnableAdHoc_Params;

	this->ProcessEvent(uFnEnableAdHoc, &EnableAdHoc_Params, nullptr);

	return EnableAdHoc_Params.ReturnValue;
};

// Function ProjectX.__AdHocInterface_X__EnableAdHoc_0x1.__AdHocInterface_X__EnableAdHoc_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__AdHocInterface_X__EnableAdHoc_0x1::__AdHocInterface_X__EnableAdHoc_0x2()
{
	static UFunction* uFn__AdHocInterface_X__EnableAdHoc_0x2 = nullptr;

	if (!uFn__AdHocInterface_X__EnableAdHoc_0x2)
	{
		uFn__AdHocInterface_X__EnableAdHoc_0x2 = UFunction::FindFunction("Function ProjectX.__AdHocInterface_X__EnableAdHoc_0x1.__AdHocInterface_X__EnableAdHoc_0x2");
	}

	U__AdHocInterface_X__EnableAdHoc_0x1_exec__AdHocInterface_X__EnableAdHoc_0x2_Params __AdHocInterface_X__EnableAdHoc_0x2_Params;

	this->ProcessEvent(uFn__AdHocInterface_X__EnableAdHoc_0x2, &__AdHocInterface_X__EnableAdHoc_0x2_Params, nullptr);
};

// Function ProjectX.__AdHocInterface_X__EnableAdHoc_0x1.__AdHocInterface_X__EnableAdHoc_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__AdHocInterface_X__EnableAdHoc_0x1::__AdHocInterface_X__EnableAdHoc_0x1()
{
	static UFunction* uFn__AdHocInterface_X__EnableAdHoc_0x1 = nullptr;

	if (!uFn__AdHocInterface_X__EnableAdHoc_0x1)
	{
		uFn__AdHocInterface_X__EnableAdHoc_0x1 = UFunction::FindFunction("Function ProjectX.__AdHocInterface_X__EnableAdHoc_0x1.__AdHocInterface_X__EnableAdHoc_0x1");
	}

	U__AdHocInterface_X__EnableAdHoc_0x1_exec__AdHocInterface_X__EnableAdHoc_0x1_Params __AdHocInterface_X__EnableAdHoc_0x1_Params;

	this->ProcessEvent(uFn__AdHocInterface_X__EnableAdHoc_0x1, &__AdHocInterface_X__EnableAdHoc_0x1_Params, nullptr);
};

// Function ProjectX.__AvatarRequester_X__AddCallbackToRequest_0x1.__AvatarRequester_X__AddCallbackToRequest_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)
// class UTexture*                InAvatar                       (CPF_Parm)
// class FString                  InPlayerName                   (CPF_Parm | CPF_NeedCtorLink)

void U__AvatarRequester_X__AddCallbackToRequest_0x1::__AvatarRequester_X__AddCallbackToRequest_0x1(struct FUniqueNetId InPlayerId, class UTexture* InAvatar, class FString InPlayerName)
{
	static UFunction* uFn__AvatarRequester_X__AddCallbackToRequest_0x1 = nullptr;

	if (!uFn__AvatarRequester_X__AddCallbackToRequest_0x1)
	{
		uFn__AvatarRequester_X__AddCallbackToRequest_0x1 = UFunction::FindFunction("Function ProjectX.__AvatarRequester_X__AddCallbackToRequest_0x1.__AvatarRequester_X__AddCallbackToRequest_0x1");
	}

	U__AvatarRequester_X__AddCallbackToRequest_0x1_exec__AvatarRequester_X__AddCallbackToRequest_0x1_Params __AvatarRequester_X__AddCallbackToRequest_0x1_Params;
	memcpy_s(&__AvatarRequester_X__AddCallbackToRequest_0x1_Params.InPlayerId, 0x48, &InPlayerId, 0x48);
	memcpy_s(&__AvatarRequester_X__AddCallbackToRequest_0x1_Params.InAvatar, 0x8, &InAvatar, 0x8);
	memcpy_s(&__AvatarRequester_X__AddCallbackToRequest_0x1_Params.InPlayerName, 0x10, &InPlayerName, 0x10);

	this->ProcessEvent(uFn__AvatarRequester_X__AddCallbackToRequest_0x1, &__AvatarRequester_X__AddCallbackToRequest_0x1_Params, nullptr);
};

// Function ProjectX.AvatarRequester_X.__AvatarRequester_X__TimerReadAvatars_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UPendingAvatarRequest_X* Request                        (CPF_Parm)

struct FUniqueNetId UAvatarRequester_X::__AvatarRequester_X__TimerReadAvatars_0x2(class UPendingAvatarRequest_X* Request)
{
	static UFunction* uFn__AvatarRequester_X__TimerReadAvatars_0x2 = nullptr;

	if (!uFn__AvatarRequester_X__TimerReadAvatars_0x2)
	{
		uFn__AvatarRequester_X__TimerReadAvatars_0x2 = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.__AvatarRequester_X__TimerReadAvatars_0x2");
	}

	UAvatarRequester_X_exec__AvatarRequester_X__TimerReadAvatars_0x2_Params __AvatarRequester_X__TimerReadAvatars_0x2_Params;
	memcpy_s(&__AvatarRequester_X__TimerReadAvatars_0x2_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFn__AvatarRequester_X__TimerReadAvatars_0x2, &__AvatarRequester_X__TimerReadAvatars_0x2_Params, nullptr);

	return __AvatarRequester_X__TimerReadAvatars_0x2_Params.ReturnValue;
};

// Function ProjectX.AvatarRequester_X.FindRequestFromArray
// [0x00442003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UPendingAvatarRequest_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_Parm)
// TArray<class UPendingAvatarRequest_X*> Requests                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UPendingAvatarRequest_X* UAvatarRequester_X::FindRequestFromArray(struct FUniqueNetId PlayerID, uint8_t Size, TArray<class UPendingAvatarRequest_X*>& Requests)
{
	static UFunction* uFnFindRequestFromArray = nullptr;

	if (!uFnFindRequestFromArray)
	{
		uFnFindRequestFromArray = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.FindRequestFromArray");
	}

	UAvatarRequester_X_execFindRequestFromArray_Params FindRequestFromArray_Params;
	memcpy_s(&FindRequestFromArray_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&FindRequestFromArray_Params.Size, 0x1, &Size, 0x1);
	memcpy_s(&FindRequestFromArray_Params.Requests, 0x10, &Requests, 0x10);

	UAvatarRequester_X::StaticClass()->ProcessEvent(uFnFindRequestFromArray, &FindRequestFromArray_Params, nullptr);

	memcpy_s(&Requests, 0x10, &FindRequestFromArray_Params.Requests, 0x10);

	return FindRequestFromArray_Params.ReturnValue;
};

// Function ProjectX.AvatarRequester_X.RemoveRequestFromArray
// [0x00442003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_Parm)
// TArray<class UPendingAvatarRequest_X*> Requests                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UAvatarRequester_X::RemoveRequestFromArray(struct FUniqueNetId PlayerID, uint8_t Size, TArray<class UPendingAvatarRequest_X*>& Requests)
{
	static UFunction* uFnRemoveRequestFromArray = nullptr;

	if (!uFnRemoveRequestFromArray)
	{
		uFnRemoveRequestFromArray = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.RemoveRequestFromArray");
	}

	UAvatarRequester_X_execRemoveRequestFromArray_Params RemoveRequestFromArray_Params;
	memcpy_s(&RemoveRequestFromArray_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&RemoveRequestFromArray_Params.Size, 0x1, &Size, 0x1);
	memcpy_s(&RemoveRequestFromArray_Params.Requests, 0x10, &Requests, 0x10);

	UAvatarRequester_X::StaticClass()->ProcessEvent(uFnRemoveRequestFromArray, &RemoveRequestFromArray_Params, nullptr);

	memcpy_s(&Requests, 0x10, &RemoveRequestFromArray_Params.Requests, 0x10);

	return RemoveRequestFromArray_Params.ReturnValue;
};

// Function ProjectX.AvatarRequester_X.HandlePlayerIDDisallowed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_Parm)

void UAvatarRequester_X::HandlePlayerIDDisallowed(struct FUniqueNetId PlayerID, uint8_t Size)
{
	static UFunction* uFnHandlePlayerIDDisallowed = nullptr;

	if (!uFnHandlePlayerIDDisallowed)
	{
		uFnHandlePlayerIDDisallowed = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.HandlePlayerIDDisallowed");
	}

	UAvatarRequester_X_execHandlePlayerIDDisallowed_Params HandlePlayerIDDisallowed_Params;
	memcpy_s(&HandlePlayerIDDisallowed_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&HandlePlayerIDDisallowed_Params.Size, 0x1, &Size, 0x1);

	this->ProcessEvent(uFnHandlePlayerIDDisallowed, &HandlePlayerIDDisallowed_Params, nullptr);
};

// Function ProjectX.AvatarRequester_X.HandleOnlineSubsystemReadAvatar
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_Parm)
// class UTexture*                Avatar                         (CPF_Parm)
// class FString                  OnlinePlayerName               (CPF_Parm | CPF_NeedCtorLink)

void UAvatarRequester_X::HandleOnlineSubsystemReadAvatar(struct FUniqueNetId PlayerID, uint8_t Size, class UTexture* Avatar, class FString OnlinePlayerName)
{
	static UFunction* uFnHandleOnlineSubsystemReadAvatar = nullptr;

	if (!uFnHandleOnlineSubsystemReadAvatar)
	{
		uFnHandleOnlineSubsystemReadAvatar = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.HandleOnlineSubsystemReadAvatar");
	}

	UAvatarRequester_X_execHandleOnlineSubsystemReadAvatar_Params HandleOnlineSubsystemReadAvatar_Params;
	memcpy_s(&HandleOnlineSubsystemReadAvatar_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&HandleOnlineSubsystemReadAvatar_Params.Size, 0x1, &Size, 0x1);
	memcpy_s(&HandleOnlineSubsystemReadAvatar_Params.Avatar, 0x8, &Avatar, 0x8);
	memcpy_s(&HandleOnlineSubsystemReadAvatar_Params.OnlinePlayerName, 0x10, &OnlinePlayerName, 0x10);

	this->ProcessEvent(uFnHandleOnlineSubsystemReadAvatar, &HandleOnlineSubsystemReadAvatar_Params, nullptr);
};

// Function ProjectX.AvatarRequester_X.TimerReadAvatars
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UAvatarRequester_X::TimerReadAvatars()
{
	static UFunction* uFnTimerReadAvatars = nullptr;

	if (!uFnTimerReadAvatars)
	{
		uFnTimerReadAvatars = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.TimerReadAvatars");
	}

	UAvatarRequester_X_execTimerReadAvatars_Params TimerReadAvatars_Params;

	this->ProcessEvent(uFnTimerReadAvatars, &TimerReadAvatars_Params, nullptr);
};

// Function ProjectX.AvatarRequester_X.HandlePlayerIDAllowed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_Parm)

void UAvatarRequester_X::HandlePlayerIDAllowed(struct FUniqueNetId PlayerID, uint8_t Size)
{
	static UFunction* uFnHandlePlayerIDAllowed = nullptr;

	if (!uFnHandlePlayerIDAllowed)
	{
		uFnHandlePlayerIDAllowed = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.HandlePlayerIDAllowed");
	}

	UAvatarRequester_X_execHandlePlayerIDAllowed_Params HandlePlayerIDAllowed_Params;
	memcpy_s(&HandlePlayerIDAllowed_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&HandlePlayerIDAllowed_Params.Size, 0x1, &Size, 0x1);

	this->ProcessEvent(uFnHandlePlayerIDAllowed, &HandlePlayerIDAllowed_Params, nullptr);
};

// Function ProjectX.AvatarRequester_X.GetPlayerAvatar
// [0x00824003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ReadOnlineAvatarCompleteDelegate (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_OptionalParm | CPF_Parm)

void UAvatarRequester_X::GetPlayerAvatar(struct FUniqueNetId PlayerID, struct FScriptDelegate ReadOnlineAvatarCompleteDelegate, uint8_t Size)
{
	static UFunction* uFnGetPlayerAvatar = nullptr;

	if (!uFnGetPlayerAvatar)
	{
		uFnGetPlayerAvatar = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.GetPlayerAvatar");
	}

	UAvatarRequester_X_execGetPlayerAvatar_Params GetPlayerAvatar_Params;
	memcpy_s(&GetPlayerAvatar_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPlayerAvatar_Params.ReadOnlineAvatarCompleteDelegate, 0x18, &ReadOnlineAvatarCompleteDelegate, 0x18);
	memcpy_s(&GetPlayerAvatar_Params.Size, 0x1, &Size, 0x1);

	this->ProcessEvent(uFnGetPlayerAvatar, &GetPlayerAvatar_Params, nullptr);
};

// Function ProjectX.AvatarRequester_X.AddCallbackToRequest
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPendingAvatarRequest_X* Request                        (CPF_Parm)
// struct FScriptDelegate         ReadOnlineAvatarCompleteDelegate (CPF_Parm | CPF_NeedCtorLink)

void UAvatarRequester_X::AddCallbackToRequest(class UPendingAvatarRequest_X* Request, struct FScriptDelegate ReadOnlineAvatarCompleteDelegate)
{
	static UFunction* uFnAddCallbackToRequest = nullptr;

	if (!uFnAddCallbackToRequest)
	{
		uFnAddCallbackToRequest = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.AddCallbackToRequest");
	}

	UAvatarRequester_X_execAddCallbackToRequest_Params AddCallbackToRequest_Params;
	memcpy_s(&AddCallbackToRequest_Params.Request, 0x8, &Request, 0x8);
	memcpy_s(&AddCallbackToRequest_Params.ReadOnlineAvatarCompleteDelegate, 0x18, &ReadOnlineAvatarCompleteDelegate, 0x18);

	this->ProcessEvent(uFnAddCallbackToRequest, &AddCallbackToRequest_Params, nullptr);
};

// Function ProjectX.AvatarRequester_X.GetPlayerAvatars
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         ReadOnlineAvatarCompleteDelegate (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_OptionalParm | CPF_Parm)
// TArray<struct FUniqueNetId>    PlayerIds                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UAvatarRequester_X::GetPlayerAvatars(struct FScriptDelegate ReadOnlineAvatarCompleteDelegate, uint8_t Size, TArray<struct FUniqueNetId>& PlayerIds)
{
	static UFunction* uFnGetPlayerAvatars = nullptr;

	if (!uFnGetPlayerAvatars)
	{
		uFnGetPlayerAvatars = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.GetPlayerAvatars");
	}

	UAvatarRequester_X_execGetPlayerAvatars_Params GetPlayerAvatars_Params;
	memcpy_s(&GetPlayerAvatars_Params.ReadOnlineAvatarCompleteDelegate, 0x18, &ReadOnlineAvatarCompleteDelegate, 0x18);
	memcpy_s(&GetPlayerAvatars_Params.Size, 0x1, &Size, 0x1);
	memcpy_s(&GetPlayerAvatars_Params.PlayerIds, 0x10, &PlayerIds, 0x10);

	this->ProcessEvent(uFnGetPlayerAvatars, &GetPlayerAvatars_Params, nullptr);

	memcpy_s(&PlayerIds, 0x10, &GetPlayerAvatars_Params.PlayerIds, 0x10);
};

// Function ProjectX.AvatarRequester_X.RequestAvatarPermission
// [0x00124003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnAllowed                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnDisallowed                   (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UAvatarRequester_X::RequestAvatarPermission(struct FUniqueNetId PlayerID, struct FScriptDelegate OnAllowed, struct FScriptDelegate OnDisallowed)
{
	static UFunction* uFnRequestAvatarPermission = nullptr;

	if (!uFnRequestAvatarPermission)
	{
		uFnRequestAvatarPermission = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.RequestAvatarPermission");
	}

	UAvatarRequester_X_execRequestAvatarPermission_Params RequestAvatarPermission_Params;
	memcpy_s(&RequestAvatarPermission_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&RequestAvatarPermission_Params.OnAllowed, 0x18, &OnAllowed, 0x18);
	memcpy_s(&RequestAvatarPermission_Params.OnDisallowed, 0x18, &OnDisallowed, 0x18);

	this->ProcessEvent(uFnRequestAvatarPermission, &RequestAvatarPermission_Params, nullptr);
};

// Function ProjectX.AvatarRequester_X.RequestAvatars
// [0x00120003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    PlayerIds                      (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Size                           (CPF_Parm)
// struct FScriptDelegate         OnCompleteCallback             (CPF_Parm | CPF_NeedCtorLink)

void UAvatarRequester_X::RequestAvatars(TArray<struct FUniqueNetId> PlayerIds, uint8_t Size, struct FScriptDelegate OnCompleteCallback)
{
	static UFunction* uFnRequestAvatars = nullptr;

	if (!uFnRequestAvatars)
	{
		uFnRequestAvatars = UFunction::FindFunction("Function ProjectX.AvatarRequester_X.RequestAvatars");
	}

	UAvatarRequester_X_execRequestAvatars_Params RequestAvatars_Params;
	memcpy_s(&RequestAvatars_Params.PlayerIds, 0x10, &PlayerIds, 0x10);
	memcpy_s(&RequestAvatars_Params.Size, 0x1, &Size, 0x1);
	memcpy_s(&RequestAvatars_Params.OnCompleteCallback, 0x18, &OnCompleteCallback, 0x18);

	this->ProcessEvent(uFnRequestAvatars, &RequestAvatars_Params, nullptr);
};

// Function ProjectX.__AvatarRequester_X__FindRequestFromArray_0x1.__AvatarRequester_X__FindRequestFromArray_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPendingAvatarRequest_X* Request                        (CPF_Parm)

bool U__AvatarRequester_X__FindRequestFromArray_0x1::__AvatarRequester_X__FindRequestFromArray_0x1(class UPendingAvatarRequest_X* Request)
{
	static UFunction* uFn__AvatarRequester_X__FindRequestFromArray_0x1 = nullptr;

	if (!uFn__AvatarRequester_X__FindRequestFromArray_0x1)
	{
		uFn__AvatarRequester_X__FindRequestFromArray_0x1 = UFunction::FindFunction("Function ProjectX.__AvatarRequester_X__FindRequestFromArray_0x1.__AvatarRequester_X__FindRequestFromArray_0x1");
	}

	U__AvatarRequester_X__FindRequestFromArray_0x1_exec__AvatarRequester_X__FindRequestFromArray_0x1_Params __AvatarRequester_X__FindRequestFromArray_0x1_Params;
	memcpy_s(&__AvatarRequester_X__FindRequestFromArray_0x1_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFn__AvatarRequester_X__FindRequestFromArray_0x1, &__AvatarRequester_X__FindRequestFromArray_0x1_Params, nullptr);

	return __AvatarRequester_X__FindRequestFromArray_0x1_Params.ReturnValue;
};

// Function ProjectX.__AvatarRequester_X__GetPlayerAvatar_0x1.__AvatarRequester_X__GetPlayerAvatar_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            _                              (CPF_Parm | CPF_NeedCtorLink)

void U__AvatarRequester_X__GetPlayerAvatar_0x1::__AvatarRequester_X__GetPlayerAvatar_0x2(struct FUniqueNetId _)
{
	static UFunction* uFn__AvatarRequester_X__GetPlayerAvatar_0x2 = nullptr;

	if (!uFn__AvatarRequester_X__GetPlayerAvatar_0x2)
	{
		uFn__AvatarRequester_X__GetPlayerAvatar_0x2 = UFunction::FindFunction("Function ProjectX.__AvatarRequester_X__GetPlayerAvatar_0x1.__AvatarRequester_X__GetPlayerAvatar_0x2");
	}

	U__AvatarRequester_X__GetPlayerAvatar_0x1_exec__AvatarRequester_X__GetPlayerAvatar_0x2_Params __AvatarRequester_X__GetPlayerAvatar_0x2_Params;
	memcpy_s(&__AvatarRequester_X__GetPlayerAvatar_0x2_Params._, 0x48, &_, 0x48);

	this->ProcessEvent(uFn__AvatarRequester_X__GetPlayerAvatar_0x2, &__AvatarRequester_X__GetPlayerAvatar_0x2_Params, nullptr);
};

// Function ProjectX.__AvatarRequester_X__GetPlayerAvatar_0x1.__AvatarRequester_X__GetPlayerAvatar_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            _                              (CPF_Parm | CPF_NeedCtorLink)

void U__AvatarRequester_X__GetPlayerAvatar_0x1::__AvatarRequester_X__GetPlayerAvatar_0x1(struct FUniqueNetId _)
{
	static UFunction* uFn__AvatarRequester_X__GetPlayerAvatar_0x1 = nullptr;

	if (!uFn__AvatarRequester_X__GetPlayerAvatar_0x1)
	{
		uFn__AvatarRequester_X__GetPlayerAvatar_0x1 = UFunction::FindFunction("Function ProjectX.__AvatarRequester_X__GetPlayerAvatar_0x1.__AvatarRequester_X__GetPlayerAvatar_0x1");
	}

	U__AvatarRequester_X__GetPlayerAvatar_0x1_exec__AvatarRequester_X__GetPlayerAvatar_0x1_Params __AvatarRequester_X__GetPlayerAvatar_0x1_Params;
	memcpy_s(&__AvatarRequester_X__GetPlayerAvatar_0x1_Params._, 0x48, &_, 0x48);

	this->ProcessEvent(uFn__AvatarRequester_X__GetPlayerAvatar_0x1, &__AvatarRequester_X__GetPlayerAvatar_0x1_Params, nullptr);
};

// Function ProjectX.__AvatarRequester_X__GetPlayerAvatars_0x1.__AvatarRequester_X__GetPlayerAvatars_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            Id                             (CPF_Parm | CPF_NeedCtorLink)

void U__AvatarRequester_X__GetPlayerAvatars_0x1::__AvatarRequester_X__GetPlayerAvatars_0x1(struct FUniqueNetId Id)
{
	static UFunction* uFn__AvatarRequester_X__GetPlayerAvatars_0x1 = nullptr;

	if (!uFn__AvatarRequester_X__GetPlayerAvatars_0x1)
	{
		uFn__AvatarRequester_X__GetPlayerAvatars_0x1 = UFunction::FindFunction("Function ProjectX.__AvatarRequester_X__GetPlayerAvatars_0x1.__AvatarRequester_X__GetPlayerAvatars_0x1");
	}

	U__AvatarRequester_X__GetPlayerAvatars_0x1_exec__AvatarRequester_X__GetPlayerAvatars_0x1_Params __AvatarRequester_X__GetPlayerAvatars_0x1_Params;
	memcpy_s(&__AvatarRequester_X__GetPlayerAvatars_0x1_Params.Id, 0x48, &Id, 0x48);

	this->ProcessEvent(uFn__AvatarRequester_X__GetPlayerAvatars_0x1, &__AvatarRequester_X__GetPlayerAvatars_0x1_Params, nullptr);
};

// Function ProjectX.__AvatarRequester_X__RemoveRequestFromArray_0x1.__AvatarRequester_X__RemoveRequestFromArray_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPendingAvatarRequest_X* Request                        (CPF_Parm)

bool U__AvatarRequester_X__RemoveRequestFromArray_0x1::__AvatarRequester_X__RemoveRequestFromArray_0x1(class UPendingAvatarRequest_X* Request)
{
	static UFunction* uFn__AvatarRequester_X__RemoveRequestFromArray_0x1 = nullptr;

	if (!uFn__AvatarRequester_X__RemoveRequestFromArray_0x1)
	{
		uFn__AvatarRequester_X__RemoveRequestFromArray_0x1 = UFunction::FindFunction("Function ProjectX.__AvatarRequester_X__RemoveRequestFromArray_0x1.__AvatarRequester_X__RemoveRequestFromArray_0x1");
	}

	U__AvatarRequester_X__RemoveRequestFromArray_0x1_exec__AvatarRequester_X__RemoveRequestFromArray_0x1_Params __AvatarRequester_X__RemoveRequestFromArray_0x1_Params;
	memcpy_s(&__AvatarRequester_X__RemoveRequestFromArray_0x1_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFn__AvatarRequester_X__RemoveRequestFromArray_0x1, &__AvatarRequester_X__RemoveRequestFromArray_0x1_Params, nullptr);

	return __AvatarRequester_X__RemoveRequestFromArray_0x1_Params.ReturnValue;
};

// Function ProjectX.__AvatarRequester_X__TimerReadAvatars_0x1.__AvatarRequester_X__TimerReadAvatars_0x3
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class UTexture*                Texture                        (CPF_Parm)
// class FString                  OnlinePlayerName               (CPF_Parm | CPF_NeedCtorLink)

void U__AvatarRequester_X__TimerReadAvatars_0x1::__AvatarRequester_X__TimerReadAvatars_0x3(struct FUniqueNetId PlayerID, class UTexture* Texture, class FString OnlinePlayerName)
{
	static UFunction* uFn__AvatarRequester_X__TimerReadAvatars_0x3 = nullptr;

	if (!uFn__AvatarRequester_X__TimerReadAvatars_0x3)
	{
		uFn__AvatarRequester_X__TimerReadAvatars_0x3 = UFunction::FindFunction("Function ProjectX.__AvatarRequester_X__TimerReadAvatars_0x1.__AvatarRequester_X__TimerReadAvatars_0x3");
	}

	U__AvatarRequester_X__TimerReadAvatars_0x1_exec__AvatarRequester_X__TimerReadAvatars_0x3_Params __AvatarRequester_X__TimerReadAvatars_0x3_Params;
	memcpy_s(&__AvatarRequester_X__TimerReadAvatars_0x3_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&__AvatarRequester_X__TimerReadAvatars_0x3_Params.Texture, 0x8, &Texture, 0x8);
	memcpy_s(&__AvatarRequester_X__TimerReadAvatars_0x3_Params.OnlinePlayerName, 0x10, &OnlinePlayerName, 0x10);

	this->ProcessEvent(uFn__AvatarRequester_X__TimerReadAvatars_0x3, &__AvatarRequester_X__TimerReadAvatars_0x3_Params, nullptr);
};

// Function ProjectX.__AvatarRequester_X__TimerReadAvatars_0x1.__AvatarRequester_X__TimerReadAvatars_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPendingAvatarRequest_X* Request                        (CPF_Parm)

bool U__AvatarRequester_X__TimerReadAvatars_0x1::__AvatarRequester_X__TimerReadAvatars_0x1(class UPendingAvatarRequest_X* Request)
{
	static UFunction* uFn__AvatarRequester_X__TimerReadAvatars_0x1 = nullptr;

	if (!uFn__AvatarRequester_X__TimerReadAvatars_0x1)
	{
		uFn__AvatarRequester_X__TimerReadAvatars_0x1 = UFunction::FindFunction("Function ProjectX.__AvatarRequester_X__TimerReadAvatars_0x1.__AvatarRequester_X__TimerReadAvatars_0x1");
	}

	U__AvatarRequester_X__TimerReadAvatars_0x1_exec__AvatarRequester_X__TimerReadAvatars_0x1_Params __AvatarRequester_X__TimerReadAvatars_0x1_Params;
	memcpy_s(&__AvatarRequester_X__TimerReadAvatars_0x1_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFn__AvatarRequester_X__TimerReadAvatars_0x1, &__AvatarRequester_X__TimerReadAvatars_0x1_Params, nullptr);

	return __AvatarRequester_X__TimerReadAvatars_0x1_Params.ReturnValue;
};

// Function ProjectX.__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1.__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FPlayerBlockListenData  Sub                            (CPF_Parm | CPF_NeedCtorLink)

void U__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1::__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1(struct FPlayerBlockListenData Sub)
{
	static UFunction* uFn__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1 = nullptr;

	if (!uFn__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1)
	{
		uFn__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1 = UFunction::FindFunction("Function ProjectX.__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1.__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1");
	}

	U__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1_exec__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1_Params __BlockStatusReporter_X__OnBlockListDownloadComplete_0x1_Params;
	memcpy_s(&__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1_Params.Sub, 0x28, &Sub, 0x28);

	this->ProcessEvent(uFn__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1, &__BlockStatusReporter_X__OnBlockListDownloadComplete_0x1_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.__BlockStatusReporter_X__Construct_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UBlockStatusReporter_X::__BlockStatusReporter_X__Construct_0x1()
{
	static UFunction* uFn__BlockStatusReporter_X__Construct_0x1 = nullptr;

	if (!uFn__BlockStatusReporter_X__Construct_0x1)
	{
		uFn__BlockStatusReporter_X__Construct_0x1 = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.__BlockStatusReporter_X__Construct_0x1");
	}

	UBlockStatusReporter_X_exec__BlockStatusReporter_X__Construct_0x1_Params __BlockStatusReporter_X__Construct_0x1_Params;

	this->ProcessEvent(uFn__BlockStatusReporter_X__Construct_0x1, &__BlockStatusReporter_X__Construct_0x1_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.TriggerPlayerCallback
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  EpicId                         (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FOnlineFriend>   BlockedPlayersArray            (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UBlockStatusReporter_X::TriggerPlayerCallback(class FString EpicId, struct FScriptDelegate Callback, TArray<struct FOnlineFriend>& BlockedPlayersArray)
{
	static UFunction* uFnTriggerPlayerCallback = nullptr;

	if (!uFnTriggerPlayerCallback)
	{
		uFnTriggerPlayerCallback = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.TriggerPlayerCallback");
	}

	UBlockStatusReporter_X_execTriggerPlayerCallback_Params TriggerPlayerCallback_Params;
	memcpy_s(&TriggerPlayerCallback_Params.EpicId, 0x10, &EpicId, 0x10);
	memcpy_s(&TriggerPlayerCallback_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&TriggerPlayerCallback_Params.BlockedPlayersArray, 0x10, &BlockedPlayersArray, 0x10);

	this->ProcessEvent(uFnTriggerPlayerCallback, &TriggerPlayerCallback_Params, nullptr);

	memcpy_s(&BlockedPlayersArray, 0x10, &TriggerPlayerCallback_Params.BlockedPlayersArray, 0x10);
};

// Function ProjectX.BlockStatusReporter_X.OnBlockListDownloadComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)

void UBlockStatusReporter_X::OnBlockListDownloadComplete(unsigned long bSuccess)
{
	static UFunction* uFnOnBlockListDownloadComplete = nullptr;

	if (!uFnOnBlockListDownloadComplete)
	{
		uFnOnBlockListDownloadComplete = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.OnBlockListDownloadComplete");
	}

	UBlockStatusReporter_X_execOnBlockListDownloadComplete_Params OnBlockListDownloadComplete_Params;
	OnBlockListDownloadComplete_Params.bSuccess = bSuccess;

	this->ProcessEvent(uFnOnBlockListDownloadComplete, &OnBlockListDownloadComplete_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.ClearDownloadTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UBlockStatusReporter_X::ClearDownloadTimeout()
{
	static UFunction* uFnClearDownloadTimeout = nullptr;

	if (!uFnClearDownloadTimeout)
	{
		uFnClearDownloadTimeout = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.ClearDownloadTimeout");
	}

	UBlockStatusReporter_X_execClearDownloadTimeout_Params ClearDownloadTimeout_Params;

	this->ProcessEvent(uFnClearDownloadTimeout, &ClearDownloadTimeout_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.HandleBlockListDownloadTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UBlockStatusReporter_X::HandleBlockListDownloadTimeout()
{
	static UFunction* uFnHandleBlockListDownloadTimeout = nullptr;

	if (!uFnHandleBlockListDownloadTimeout)
	{
		uFnHandleBlockListDownloadTimeout = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.HandleBlockListDownloadTimeout");
	}

	UBlockStatusReporter_X_execHandleBlockListDownloadTimeout_Params HandleBlockListDownloadTimeout_Params;

	this->ProcessEvent(uFnHandleBlockListDownloadTimeout, &HandleBlockListDownloadTimeout_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.HandleStatusChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UBlockStatusReporter_X::HandleStatusChanged()
{
	static UFunction* uFnHandleStatusChanged = nullptr;

	if (!uFnHandleStatusChanged)
	{
		uFnHandleStatusChanged = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.HandleStatusChanged");
	}

	UBlockStatusReporter_X_execHandleStatusChanged_Params HandleStatusChanged_Params;

	this->ProcessEvent(uFnHandleStatusChanged, &HandleStatusChanged_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.HandlePsyNetDisconnected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     InConnection                   (CPF_Parm)

void UBlockStatusReporter_X::HandlePsyNetDisconnected(class UPsyNetConnection_X* InConnection)
{
	static UFunction* uFnHandlePsyNetDisconnected = nullptr;

	if (!uFnHandlePsyNetDisconnected)
	{
		uFnHandlePsyNetDisconnected = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.HandlePsyNetDisconnected");
	}

	UBlockStatusReporter_X_execHandlePsyNetDisconnected_Params HandlePsyNetDisconnected_Params;
	memcpy_s(&HandlePsyNetDisconnected_Params.InConnection, 0x8, &InConnection, 0x8);

	this->ProcessEvent(uFnHandlePsyNetDisconnected, &HandlePsyNetDisconnected_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.HandlePsyNetConnected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     InConnection                   (CPF_Parm)

void UBlockStatusReporter_X::HandlePsyNetConnected(class UPsyNetConnection_X* InConnection)
{
	static UFunction* uFnHandlePsyNetConnected = nullptr;

	if (!uFnHandlePsyNetConnected)
	{
		uFnHandlePsyNetConnected = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.HandlePsyNetConnected");
	}

	UBlockStatusReporter_X_execHandlePsyNetConnected_Params HandlePsyNetConnected_Params;
	memcpy_s(&HandlePsyNetConnected_Params.InConnection, 0x8, &InConnection, 0x8);

	this->ProcessEvent(uFnHandlePsyNetConnected, &HandlePsyNetConnected_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.HandleBlockListStatusCreated
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPlatformBlockListStatus* Status                         (CPF_Parm | CPF_EditInline)
// uint8_t                        ControllerId                   (CPF_Parm)

void UBlockStatusReporter_X::HandleBlockListStatusCreated(class UPlatformBlockListStatus* Status, uint8_t ControllerId)
{
	static UFunction* uFnHandleBlockListStatusCreated = nullptr;

	if (!uFnHandleBlockListStatusCreated)
	{
		uFnHandleBlockListStatusCreated = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.HandleBlockListStatusCreated");
	}

	UBlockStatusReporter_X_execHandleBlockListStatusCreated_Params HandleBlockListStatusCreated_Params;
	memcpy_s(&HandleBlockListStatusCreated_Params.Status, 0x8, &Status, 0x8);
	memcpy_s(&HandleBlockListStatusCreated_Params.ControllerId, 0x1, &ControllerId, 0x1);

	this->ProcessEvent(uFnHandleBlockListStatusCreated, &HandleBlockListStatusCreated_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.ListenForBlockListDownloaded
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UBlockStatusReporter_X::ListenForBlockListDownloaded(struct FScriptDelegate Callback)
{
	static UFunction* uFnListenForBlockListDownloaded = nullptr;

	if (!uFnListenForBlockListDownloaded)
	{
		uFnListenForBlockListDownloaded = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.ListenForBlockListDownloaded");
	}

	UBlockStatusReporter_X_execListenForBlockListDownloaded_Params ListenForBlockListDownloaded_Params;
	memcpy_s(&ListenForBlockListDownloaded_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnListenForBlockListDownloaded, &ListenForBlockListDownloaded_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.ListenForPlayerBlockStatusDownloaded
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  EpicId                         (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UBlockStatusReporter_X::ListenForPlayerBlockStatusDownloaded(class FString EpicId, struct FScriptDelegate Callback)
{
	static UFunction* uFnListenForPlayerBlockStatusDownloaded = nullptr;

	if (!uFnListenForPlayerBlockStatusDownloaded)
	{
		uFnListenForPlayerBlockStatusDownloaded = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.ListenForPlayerBlockStatusDownloaded");
	}

	UBlockStatusReporter_X_execListenForPlayerBlockStatusDownloaded_Params ListenForPlayerBlockStatusDownloaded_Params;
	memcpy_s(&ListenForPlayerBlockStatusDownloaded_Params.EpicId, 0x10, &EpicId, 0x10);
	memcpy_s(&ListenForPlayerBlockStatusDownloaded_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnListenForPlayerBlockStatusDownloaded, &ListenForPlayerBlockStatusDownloaded_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UBlockStatusReporter_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.Construct");
	}

	UBlockStatusReporter_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.EventPlayerStatusDownloaded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  EpicId                         (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bBlocked                       (CPF_Parm)

void UBlockStatusReporter_X::EventPlayerStatusDownloaded(class FString EpicId, unsigned long bBlocked)
{
	static UFunction* uFnEventPlayerStatusDownloaded = nullptr;

	if (!uFnEventPlayerStatusDownloaded)
	{
		uFnEventPlayerStatusDownloaded = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.EventPlayerStatusDownloaded");
	}

	UBlockStatusReporter_X_execEventPlayerStatusDownloaded_Params EventPlayerStatusDownloaded_Params;
	memcpy_s(&EventPlayerStatusDownloaded_Params.EpicId, 0x10, &EpicId, 0x10);
	EventPlayerStatusDownloaded_Params.bBlocked = bBlocked;

	this->ProcessEvent(uFnEventPlayerStatusDownloaded, &EventPlayerStatusDownloaded_Params, nullptr);
};

// Function ProjectX.BlockStatusReporter_X.EventBlockListDownloaded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UBlockStatusReporter_X::EventBlockListDownloaded()
{
	static UFunction* uFnEventBlockListDownloaded = nullptr;

	if (!uFnEventBlockListDownloaded)
	{
		uFnEventBlockListDownloaded = UFunction::FindFunction("Function ProjectX.BlockStatusReporter_X.EventBlockListDownloaded");
	}

	UBlockStatusReporter_X_execEventBlockListDownloaded_Params EventBlockListDownloaded_Params;

	this->ProcessEvent(uFnEventBlockListDownloaded, &EventBlockListDownloaded_Params, nullptr);
};

// Function ProjectX.__BlockStatusReporter_X__TriggerPlayerCallback_0x1.__BlockStatusReporter_X__TriggerPlayerCallback_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FOnlineFriend           BlockedPlayer                  (CPF_Parm | CPF_NeedCtorLink)

bool U__BlockStatusReporter_X__TriggerPlayerCallback_0x1::__BlockStatusReporter_X__TriggerPlayerCallback_0x1(struct FOnlineFriend BlockedPlayer)
{
	static UFunction* uFn__BlockStatusReporter_X__TriggerPlayerCallback_0x1 = nullptr;

	if (!uFn__BlockStatusReporter_X__TriggerPlayerCallback_0x1)
	{
		uFn__BlockStatusReporter_X__TriggerPlayerCallback_0x1 = UFunction::FindFunction("Function ProjectX.__BlockStatusReporter_X__TriggerPlayerCallback_0x1.__BlockStatusReporter_X__TriggerPlayerCallback_0x1");
	}

	U__BlockStatusReporter_X__TriggerPlayerCallback_0x1_exec__BlockStatusReporter_X__TriggerPlayerCallback_0x1_Params __BlockStatusReporter_X__TriggerPlayerCallback_0x1_Params;
	memcpy_s(&__BlockStatusReporter_X__TriggerPlayerCallback_0x1_Params.BlockedPlayer, 0x118, &BlockedPlayer, 0x118);

	this->ProcessEvent(uFn__BlockStatusReporter_X__TriggerPlayerCallback_0x1, &__BlockStatusReporter_X__TriggerPlayerCallback_0x1_Params, nullptr);

	return __BlockStatusReporter_X__TriggerPlayerCallback_0x1_Params.ReturnValue;
};

// Function ProjectX.__CheatManager_X__RandomSleep_0x1.__CheatManager_X__RandomSleep_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__CheatManager_X__RandomSleep_0x1::__CheatManager_X__RandomSleep_0x1()
{
	static UFunction* uFn__CheatManager_X__RandomSleep_0x1 = nullptr;

	if (!uFn__CheatManager_X__RandomSleep_0x1)
	{
		uFn__CheatManager_X__RandomSleep_0x1 = UFunction::FindFunction("Function ProjectX.__CheatManager_X__RandomSleep_0x1.__CheatManager_X__RandomSleep_0x1");
	}

	U__CheatManager_X__RandomSleep_0x1_exec__CheatManager_X__RandomSleep_0x1_Params __CheatManager_X__RandomSleep_0x1_Params;

	this->ProcessEvent(uFn__CheatManager_X__RandomSleep_0x1, &__CheatManager_X__RandomSleep_0x1_Params, nullptr);
};

// Function ProjectX.__ClubUtil_X__IsClubTeam_0x1.__ClubUtil_X__IsClubTeam_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       Id                             (CPF_Parm)

bool U__ClubUtil_X__IsClubTeam_0x1::__ClubUtil_X__IsClubTeam_0x1(uint64_t Id)
{
	static UFunction* uFn__ClubUtil_X__IsClubTeam_0x1 = nullptr;

	if (!uFn__ClubUtil_X__IsClubTeam_0x1)
	{
		uFn__ClubUtil_X__IsClubTeam_0x1 = UFunction::FindFunction("Function ProjectX.__ClubUtil_X__IsClubTeam_0x1.__ClubUtil_X__IsClubTeam_0x1");
	}

	U__ClubUtil_X__IsClubTeam_0x1_exec__ClubUtil_X__IsClubTeam_0x1_Params __ClubUtil_X__IsClubTeam_0x1_Params;
	__ClubUtil_X__IsClubTeam_0x1_Params.Id = Id;

	this->ProcessEvent(uFn__ClubUtil_X__IsClubTeam_0x1, &__ClubUtil_X__IsClubTeam_0x1_Params, nullptr);

	return __ClubUtil_X__IsClubTeam_0x1_Params.ReturnValue;
};

// Function ProjectX.ClubUtil_X.Wrap
// [0x00042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Column                         (CPF_Parm)
// int32_t                        Count                          (CPF_Parm)

int32_t UClubUtil_X::Wrap(int32_t Column, int32_t Count)
{
	static UFunction* uFnWrap = nullptr;

	if (!uFnWrap)
	{
		uFnWrap = UFunction::FindFunction("Function ProjectX.ClubUtil_X.Wrap");
	}

	UClubUtil_X_execWrap_Params Wrap_Params;
	memcpy_s(&Wrap_Params.Column, 0x4, &Column, 0x4);
	memcpy_s(&Wrap_Params.Count, 0x4, &Count, 0x4);

	UClubUtil_X::StaticClass()->ProcessEvent(uFnWrap, &Wrap_Params, nullptr);

	return Wrap_Params.ReturnValue;
};

// Function ProjectX.ClubUtil_X.SwapPrimaryAccentColors
// [0x00842003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FClubColorSet           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FClubColorSet           Colors                         (CPF_Parm)
// class UColorPalette_X*         TeamPalette                    (CPF_Parm)
// class UColorPalette_X*         AccentPalette                  (CPF_Parm)

struct FClubColorSet UClubUtil_X::SwapPrimaryAccentColors(struct FClubColorSet Colors, class UColorPalette_X* TeamPalette, class UColorPalette_X* AccentPalette)
{
	static UFunction* uFnSwapPrimaryAccentColors = nullptr;

	if (!uFnSwapPrimaryAccentColors)
	{
		uFnSwapPrimaryAccentColors = UFunction::FindFunction("Function ProjectX.ClubUtil_X.SwapPrimaryAccentColors");
	}

	UClubUtil_X_execSwapPrimaryAccentColors_Params SwapPrimaryAccentColors_Params;
	memcpy_s(&SwapPrimaryAccentColors_Params.Colors, 0x8, &Colors, 0x8);
	memcpy_s(&SwapPrimaryAccentColors_Params.TeamPalette, 0x8, &TeamPalette, 0x8);
	memcpy_s(&SwapPrimaryAccentColors_Params.AccentPalette, 0x8, &AccentPalette, 0x8);

	UClubUtil_X::StaticClass()->ProcessEvent(uFnSwapPrimaryAccentColors, &SwapPrimaryAccentColors_Params, nullptr);

	return SwapPrimaryAccentColors_Params.ReturnValue;
};

// Function ProjectX.ClubUtil_X.AreColorsDifferent
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UColorPalette_X*         Palette                        (CPF_Parm)
// int32_t                        Color0                         (CPF_Parm)
// int32_t                        Color1                         (CPF_Parm)

bool UClubUtil_X::AreColorsDifferent(class UColorPalette_X* Palette, int32_t Color0, int32_t Color1)
{
	static UFunction* uFnAreColorsDifferent = nullptr;

	if (!uFnAreColorsDifferent)
	{
		uFnAreColorsDifferent = UFunction::FindFunction("Function ProjectX.ClubUtil_X.AreColorsDifferent");
	}

	UClubUtil_X_execAreColorsDifferent_Params AreColorsDifferent_Params;
	memcpy_s(&AreColorsDifferent_Params.Palette, 0x8, &Palette, 0x8);
	memcpy_s(&AreColorsDifferent_Params.Color0, 0x4, &Color0, 0x4);
	memcpy_s(&AreColorsDifferent_Params.Color1, 0x4, &Color1, 0x4);

	UClubUtil_X::StaticClass()->ProcessEvent(uFnAreColorsDifferent, &AreColorsDifferent_Params, nullptr);

	return AreColorsDifferent_Params.ReturnValue;
};

// Function ProjectX.ClubUtil_X.EnsureDifferentColors
// [0x00C22003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UColorPalette_X*         TeamPalette                    (CPF_Parm)
// class UColorPalette_X*         AccentPalette                  (CPF_Parm)
// int32_t                        DefaultColorID0                (CPF_Parm)
// int32_t                        DefaultColorID1                (CPF_Parm)
// struct FClubColorSet           Set0                           (CPF_Parm | CPF_OutParm)
// struct FClubColorSet           Set1                           (CPF_Parm | CPF_OutParm)

uint8_t UClubUtil_X::EnsureDifferentColors(class UColorPalette_X* TeamPalette, class UColorPalette_X* AccentPalette, int32_t DefaultColorID0, int32_t DefaultColorID1, struct FClubColorSet& Set0, struct FClubColorSet& Set1)
{
	static UFunction* uFnEnsureDifferentColors = nullptr;

	if (!uFnEnsureDifferentColors)
	{
		uFnEnsureDifferentColors = UFunction::FindFunction("Function ProjectX.ClubUtil_X.EnsureDifferentColors");
	}

	UClubUtil_X_execEnsureDifferentColors_Params EnsureDifferentColors_Params;
	memcpy_s(&EnsureDifferentColors_Params.TeamPalette, 0x8, &TeamPalette, 0x8);
	memcpy_s(&EnsureDifferentColors_Params.AccentPalette, 0x8, &AccentPalette, 0x8);
	memcpy_s(&EnsureDifferentColors_Params.DefaultColorID0, 0x4, &DefaultColorID0, 0x4);
	memcpy_s(&EnsureDifferentColors_Params.DefaultColorID1, 0x4, &DefaultColorID1, 0x4);
	memcpy_s(&EnsureDifferentColors_Params.Set0, 0x8, &Set0, 0x8);
	memcpy_s(&EnsureDifferentColors_Params.Set1, 0x8, &Set1, 0x8);

	UClubUtil_X::StaticClass()->ProcessEvent(uFnEnsureDifferentColors, &EnsureDifferentColors_Params, nullptr);

	memcpy_s(&Set0, 0x8, &EnsureDifferentColors_Params.Set0, 0x8);
	memcpy_s(&Set1, 0x8, &EnsureDifferentColors_Params.Set1, 0x8);

	return EnsureDifferentColors_Params.ReturnValue;
};

// Function ProjectX.ClubUtil_X.IsClubTeam
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TeamSize                       (CPF_Parm)
// TArray<uint64_t>               TeamClubs                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UClubUtil_X::IsClubTeam(int32_t TeamSize, TArray<uint64_t>& TeamClubs)
{
	static UFunction* uFnIsClubTeam = nullptr;

	if (!uFnIsClubTeam)
	{
		uFnIsClubTeam = UFunction::FindFunction("Function ProjectX.ClubUtil_X.IsClubTeam");
	}

	UClubUtil_X_execIsClubTeam_Params IsClubTeam_Params;
	memcpy_s(&IsClubTeam_Params.TeamSize, 0x4, &TeamSize, 0x4);
	memcpy_s(&IsClubTeam_Params.TeamClubs, 0x10, &TeamClubs, 0x10);

	UClubUtil_X::StaticClass()->ProcessEvent(uFnIsClubTeam, &IsClubTeam_Params, nullptr);

	memcpy_s(&TeamClubs, 0x10, &IsClubTeam_Params.TeamClubs, 0x10);

	return IsClubTeam_Params.ReturnValue;
};

// Function ProjectX.ClubUtil_X.IsClubMatch
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TeamSize                       (CPF_Parm)
// TArray<uint64_t>               Team0Clubs                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<uint64_t>               Team1Clubs                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UClubUtil_X::IsClubMatch(int32_t TeamSize, TArray<uint64_t>& Team0Clubs, TArray<uint64_t>& Team1Clubs)
{
	static UFunction* uFnIsClubMatch = nullptr;

	if (!uFnIsClubMatch)
	{
		uFnIsClubMatch = UFunction::FindFunction("Function ProjectX.ClubUtil_X.IsClubMatch");
	}

	UClubUtil_X_execIsClubMatch_Params IsClubMatch_Params;
	memcpy_s(&IsClubMatch_Params.TeamSize, 0x4, &TeamSize, 0x4);
	memcpy_s(&IsClubMatch_Params.Team0Clubs, 0x10, &Team0Clubs, 0x10);
	memcpy_s(&IsClubMatch_Params.Team1Clubs, 0x10, &Team1Clubs, 0x10);

	UClubUtil_X::StaticClass()->ProcessEvent(uFnIsClubMatch, &IsClubMatch_Params, nullptr);

	memcpy_s(&Team0Clubs, 0x10, &IsClubMatch_Params.Team0Clubs, 0x10);
	memcpy_s(&Team1Clubs, 0x10, &IsClubMatch_Params.Team1Clubs, 0x10);

	return IsClubMatch_Params.ReturnValue;
};

// Function ProjectX.__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1.__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FCrossplayGroup         P                              (CPF_Parm | CPF_NeedCtorLink)

bool U__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1::__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1(struct FCrossplayGroup P)
{
	static UFunction* uFn__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1 = nullptr;

	if (!uFn__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1)
	{
		uFn__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1 = UFunction::FindFunction("Function ProjectX.__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1.__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1");
	}

	U__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1_exec__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1_Params __CrossplayConfig_X__GetDisabledCrossplayGroup_0x1_Params;
	memcpy_s(&__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1_Params.P, 0x10, &P, 0x10);

	this->ProcessEvent(uFn__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1, &__CrossplayConfig_X__GetDisabledCrossplayGroup_0x1_Params, nullptr);

	return __CrossplayConfig_X__GetDisabledCrossplayGroup_0x1_Params.ReturnValue;
};

// Function ProjectX.__EOSHelpers_X__RequestEASAuth_0x1.__EOSHelpers_X__RequestEASAuth_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           Response                       (CPF_Parm)

void U__EOSHelpers_X__RequestEASAuth_0x1::__EOSHelpers_X__RequestEASAuth_0x1(class UWebRequest_X* Response)
{
	static UFunction* uFn__EOSHelpers_X__RequestEASAuth_0x1 = nullptr;

	if (!uFn__EOSHelpers_X__RequestEASAuth_0x1)
	{
		uFn__EOSHelpers_X__RequestEASAuth_0x1 = UFunction::FindFunction("Function ProjectX.__EOSHelpers_X__RequestEASAuth_0x1.__EOSHelpers_X__RequestEASAuth_0x1");
	}

	U__EOSHelpers_X__RequestEASAuth_0x1_exec__EOSHelpers_X__RequestEASAuth_0x1_Params __EOSHelpers_X__RequestEASAuth_0x1_Params;
	memcpy_s(&__EOSHelpers_X__RequestEASAuth_0x1_Params.Response, 0x8, &Response, 0x8);

	this->ProcessEvent(uFn__EOSHelpers_X__RequestEASAuth_0x1, &__EOSHelpers_X__RequestEASAuth_0x1_Params, nullptr);
};

// Function ProjectX.EOSHelpers_X.SendHTTPRequestSelectAuth
// [0x00026003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Verb                           (CPF_Parm | CPF_NeedCtorLink)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bAddContentTypeHeader          (CPF_Parm)
// class UClass*                  ResponseClass                  (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ConvertErrorNew                (CPF_Parm | CPF_NeedCtorLink)
// class UOnlineSubsystem*        EOS                            (CPF_Parm)
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// class FString                  BodyJson                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// class FString                  Continuation                   (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// class FString                  DisplayNameHint                (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// class FString                  DOB                            (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// class FString                  BearerAuthTicket               (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// class FString                  ContentType                    (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UEOSHelpers_X::SendHTTPRequestSelectAuth(class FString Verb, class FString URL, unsigned long bAddContentTypeHeader, class UClass* ResponseClass, struct FScriptDelegate Callback, struct FScriptDelegate ConvertErrorNew, class UOnlineSubsystem* EOS, int32_t LocalPlayerNum, class FString BodyJson, class FString Continuation, class FString DisplayNameHint, class FString DOB, class FString BearerAuthTicket, class FString ContentType)
{
	static UFunction* uFnSendHTTPRequestSelectAuth = nullptr;

	if (!uFnSendHTTPRequestSelectAuth)
	{
		uFnSendHTTPRequestSelectAuth = UFunction::FindFunction("Function ProjectX.EOSHelpers_X.SendHTTPRequestSelectAuth");
	}

	UEOSHelpers_X_execSendHTTPRequestSelectAuth_Params SendHTTPRequestSelectAuth_Params;
	memcpy_s(&SendHTTPRequestSelectAuth_Params.Verb, 0x10, &Verb, 0x10);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.URL, 0x10, &URL, 0x10);
	SendHTTPRequestSelectAuth_Params.bAddContentTypeHeader = bAddContentTypeHeader;
	memcpy_s(&SendHTTPRequestSelectAuth_Params.ResponseClass, 0x8, &ResponseClass, 0x8);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.ConvertErrorNew, 0x18, &ConvertErrorNew, 0x18);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.EOS, 0x8, &EOS, 0x8);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.BodyJson, 0x10, &BodyJson, 0x10);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.Continuation, 0x10, &Continuation, 0x10);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.DisplayNameHint, 0x10, &DisplayNameHint, 0x10);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.DOB, 0x10, &DOB, 0x10);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.BearerAuthTicket, 0x10, &BearerAuthTicket, 0x10);
	memcpy_s(&SendHTTPRequestSelectAuth_Params.ContentType, 0x10, &ContentType, 0x10);

	UEOSHelpers_X::StaticClass()->ProcessEvent(uFnSendHTTPRequestSelectAuth, &SendHTTPRequestSelectAuth_Params, nullptr);
};

// Function ProjectX.EOSHelpers_X.SendHTTPRequestEASAuth
// [0x00026003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Verb                           (CPF_Parm | CPF_NeedCtorLink)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bAddContentTypeHeader          (CPF_Parm)
// class UClass*                  ResponseClass                  (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ConvertErrorNew                (CPF_Parm | CPF_NeedCtorLink)
// class UOnlineSubsystem*        EOS                            (CPF_Parm)
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// class FString                  AuthURL                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  BodyJson                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// class FString                  Continuation                   (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UEOSHelpers_X::SendHTTPRequestEASAuth(class FString Verb, class FString URL, unsigned long bAddContentTypeHeader, class UClass* ResponseClass, struct FScriptDelegate Callback, struct FScriptDelegate ConvertErrorNew, class UOnlineSubsystem* EOS, int32_t LocalPlayerNum, class FString AuthURL, class FString BodyJson, class FString Continuation)
{
	static UFunction* uFnSendHTTPRequestEASAuth = nullptr;

	if (!uFnSendHTTPRequestEASAuth)
	{
		uFnSendHTTPRequestEASAuth = UFunction::FindFunction("Function ProjectX.EOSHelpers_X.SendHTTPRequestEASAuth");
	}

	UEOSHelpers_X_execSendHTTPRequestEASAuth_Params SendHTTPRequestEASAuth_Params;
	memcpy_s(&SendHTTPRequestEASAuth_Params.Verb, 0x10, &Verb, 0x10);
	memcpy_s(&SendHTTPRequestEASAuth_Params.URL, 0x10, &URL, 0x10);
	SendHTTPRequestEASAuth_Params.bAddContentTypeHeader = bAddContentTypeHeader;
	memcpy_s(&SendHTTPRequestEASAuth_Params.ResponseClass, 0x8, &ResponseClass, 0x8);
	memcpy_s(&SendHTTPRequestEASAuth_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&SendHTTPRequestEASAuth_Params.ConvertErrorNew, 0x18, &ConvertErrorNew, 0x18);
	memcpy_s(&SendHTTPRequestEASAuth_Params.EOS, 0x8, &EOS, 0x8);
	memcpy_s(&SendHTTPRequestEASAuth_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&SendHTTPRequestEASAuth_Params.AuthURL, 0x10, &AuthURL, 0x10);
	memcpy_s(&SendHTTPRequestEASAuth_Params.BodyJson, 0x10, &BodyJson, 0x10);
	memcpy_s(&SendHTTPRequestEASAuth_Params.Continuation, 0x10, &Continuation, 0x10);

	UEOSHelpers_X::StaticClass()->ProcessEvent(uFnSendHTTPRequestEASAuth, &SendHTTPRequestEASAuth_Params, nullptr);
};

// Function ProjectX.EOSHelpers_X.RequestEASAuth
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ClientCredentials              (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ClientID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ClientSecret                   (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UEOSHelpers_X::RequestEASAuth(class FString URL, class FString ClientCredentials, class FString ClientID, class FString ClientSecret, struct FScriptDelegate Callback)
{
	static UFunction* uFnRequestEASAuth = nullptr;

	if (!uFnRequestEASAuth)
	{
		uFnRequestEASAuth = UFunction::FindFunction("Function ProjectX.EOSHelpers_X.RequestEASAuth");
	}

	UEOSHelpers_X_execRequestEASAuth_Params RequestEASAuth_Params;
	memcpy_s(&RequestEASAuth_Params.URL, 0x10, &URL, 0x10);
	memcpy_s(&RequestEASAuth_Params.ClientCredentials, 0x10, &ClientCredentials, 0x10);
	memcpy_s(&RequestEASAuth_Params.ClientID, 0x10, &ClientID, 0x10);
	memcpy_s(&RequestEASAuth_Params.ClientSecret, 0x10, &ClientSecret, 0x10);
	memcpy_s(&RequestEASAuth_Params.Callback, 0x18, &Callback, 0x18);

	UEOSHelpers_X::StaticClass()->ProcessEvent(uFnRequestEASAuth, &RequestEASAuth_Params, nullptr);
};

// Function ProjectX.EOSHelpers_X.SendHTTPRequest
// [0x00826003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Verb                           (CPF_Parm | CPF_NeedCtorLink)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bAddContentTypeHeader          (CPF_Parm)
// class UClass*                  ResponseClass                  (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ConvertErrorNew                (CPF_Parm | CPF_NeedCtorLink)
// class UOnlineSubsystem*        EOS                            (CPF_Parm)
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// class FString                  BodyJson                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

bool UEOSHelpers_X::SendHTTPRequest(class FString Verb, class FString URL, unsigned long bAddContentTypeHeader, class UClass* ResponseClass, struct FScriptDelegate Callback, struct FScriptDelegate ConvertErrorNew, class UOnlineSubsystem* EOS, int32_t LocalPlayerNum, class FString BodyJson)
{
	static UFunction* uFnSendHTTPRequest = nullptr;

	if (!uFnSendHTTPRequest)
	{
		uFnSendHTTPRequest = UFunction::FindFunction("Function ProjectX.EOSHelpers_X.SendHTTPRequest");
	}

	UEOSHelpers_X_execSendHTTPRequest_Params SendHTTPRequest_Params;
	memcpy_s(&SendHTTPRequest_Params.Verb, 0x10, &Verb, 0x10);
	memcpy_s(&SendHTTPRequest_Params.URL, 0x10, &URL, 0x10);
	SendHTTPRequest_Params.bAddContentTypeHeader = bAddContentTypeHeader;
	memcpy_s(&SendHTTPRequest_Params.ResponseClass, 0x8, &ResponseClass, 0x8);
	memcpy_s(&SendHTTPRequest_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&SendHTTPRequest_Params.ConvertErrorNew, 0x18, &ConvertErrorNew, 0x18);
	memcpy_s(&SendHTTPRequest_Params.EOS, 0x8, &EOS, 0x8);
	memcpy_s(&SendHTTPRequest_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&SendHTTPRequest_Params.BodyJson, 0x10, &BodyJson, 0x10);

	UEOSHelpers_X::StaticClass()->ProcessEvent(uFnSendHTTPRequest, &SendHTTPRequest_Params, nullptr);

	return SendHTTPRequest_Params.ReturnValue;
};

// Function ProjectX.EOSHelpers_X.ConvertErrorFunction
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UEOS_ErrorResponse*      ErrorResponse                  (CPF_Const | CPF_Parm)

class UError* UEOSHelpers_X::ConvertErrorFunction(class UEOS_ErrorResponse* ErrorResponse)
{
	static UFunction* uFnConvertErrorFunction = nullptr;

	if (!uFnConvertErrorFunction)
	{
		uFnConvertErrorFunction = UFunction::FindFunction("Function ProjectX.EOSHelpers_X.ConvertErrorFunction");
	}

	UEOSHelpers_X_execConvertErrorFunction_Params ConvertErrorFunction_Params;
	memcpy_s(&ConvertErrorFunction_Params.ErrorResponse, 0x8, &ErrorResponse, 0x8);

	this->ProcessEvent(uFnConvertErrorFunction, &ConvertErrorFunction_Params, nullptr);

	return ConvertErrorFunction_Params.ReturnValue;
};

// Function ProjectX.EOSHelpers_X.HTTPRequestCallback
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 Response                       (CPF_Const | CPF_Parm)
// class UError*                  ErrorSending                   (CPF_Parm)

void UEOSHelpers_X::HTTPRequestCallback(class UObject* Response, class UError* ErrorSending)
{
	static UFunction* uFnHTTPRequestCallback = nullptr;

	if (!uFnHTTPRequestCallback)
	{
		uFnHTTPRequestCallback = UFunction::FindFunction("Function ProjectX.EOSHelpers_X.HTTPRequestCallback");
	}

	UEOSHelpers_X_execHTTPRequestCallback_Params HTTPRequestCallback_Params;
	memcpy_s(&HTTPRequestCallback_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&HTTPRequestCallback_Params.ErrorSending, 0x8, &ErrorSending, 0x8);

	this->ProcessEvent(uFnHTTPRequestCallback, &HTTPRequestCallback_Params, nullptr);
};

// Function ProjectX.__EOSHelpers_X__SendHTTPRequest_0x1.__EOSHelpers_X__SendHTTPRequest_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  EpicAuthTicket                 (CPF_Parm | CPF_NeedCtorLink)

void U__EOSHelpers_X__SendHTTPRequest_0x1::__EOSHelpers_X__SendHTTPRequest_0x1(unsigned long bSuccess, class FString EpicAuthTicket)
{
	static UFunction* uFn__EOSHelpers_X__SendHTTPRequest_0x1 = nullptr;

	if (!uFn__EOSHelpers_X__SendHTTPRequest_0x1)
	{
		uFn__EOSHelpers_X__SendHTTPRequest_0x1 = UFunction::FindFunction("Function ProjectX.__EOSHelpers_X__SendHTTPRequest_0x1.__EOSHelpers_X__SendHTTPRequest_0x1");
	}

	U__EOSHelpers_X__SendHTTPRequest_0x1_exec__EOSHelpers_X__SendHTTPRequest_0x1_Params __EOSHelpers_X__SendHTTPRequest_0x1_Params;
	__EOSHelpers_X__SendHTTPRequest_0x1_Params.bSuccess = bSuccess;
	memcpy_s(&__EOSHelpers_X__SendHTTPRequest_0x1_Params.EpicAuthTicket, 0x10, &EpicAuthTicket, 0x10);

	this->ProcessEvent(uFn__EOSHelpers_X__SendHTTPRequest_0x1, &__EOSHelpers_X__SendHTTPRequest_0x1_Params, nullptr);
};

// Function ProjectX.__EOSHelpers_X__SendHTTPRequestEASAuth_0x1.__EOSHelpers_X__SendHTTPRequestEASAuth_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  EASAuthTicket                  (CPF_Parm | CPF_NeedCtorLink)

void U__EOSHelpers_X__SendHTTPRequestEASAuth_0x1::__EOSHelpers_X__SendHTTPRequestEASAuth_0x1(unsigned long bSuccess, class FString EASAuthTicket)
{
	static UFunction* uFn__EOSHelpers_X__SendHTTPRequestEASAuth_0x1 = nullptr;

	if (!uFn__EOSHelpers_X__SendHTTPRequestEASAuth_0x1)
	{
		uFn__EOSHelpers_X__SendHTTPRequestEASAuth_0x1 = UFunction::FindFunction("Function ProjectX.__EOSHelpers_X__SendHTTPRequestEASAuth_0x1.__EOSHelpers_X__SendHTTPRequestEASAuth_0x1");
	}

	U__EOSHelpers_X__SendHTTPRequestEASAuth_0x1_exec__EOSHelpers_X__SendHTTPRequestEASAuth_0x1_Params __EOSHelpers_X__SendHTTPRequestEASAuth_0x1_Params;
	__EOSHelpers_X__SendHTTPRequestEASAuth_0x1_Params.bSuccess = bSuccess;
	memcpy_s(&__EOSHelpers_X__SendHTTPRequestEASAuth_0x1_Params.EASAuthTicket, 0x10, &EASAuthTicket, 0x10);

	this->ProcessEvent(uFn__EOSHelpers_X__SendHTTPRequestEASAuth_0x1, &__EOSHelpers_X__SendHTTPRequestEASAuth_0x1_Params, nullptr);
};

// Function ProjectX.__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1.__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           Response                       (CPF_Parm)

void U__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1::__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1(class UWebRequest_X* Response)
{
	static UFunction* uFn__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1 = nullptr;

	if (!uFn__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1)
	{
		uFn__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1 = UFunction::FindFunction("Function ProjectX.__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1.__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1");
	}

	U__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1_exec__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1_Params __EOSHelpers_X__SendHTTPRequestSelectAuth_0x1_Params;
	memcpy_s(&__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1_Params.Response, 0x8, &Response, 0x8);

	this->ProcessEvent(uFn__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1, &__EOSHelpers_X__SendHTTPRequestSelectAuth_0x1_Params, nullptr);
};

// Function ProjectX.__EpicFriendsPlugin_X__AcceptFriendRequest_0x1.__EpicFriendsPlugin_X__AcceptFriendRequest_0x1
// [0x20020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__EpicFriendsPlugin_X__AcceptFriendRequest_0x1::__EpicFriendsPlugin_X__AcceptFriendRequest_0x1(class UEOS_ManageFriendsListResponse* R, class UError* E)
{
	static UFunction* uFn__EpicFriendsPlugin_X__AcceptFriendRequest_0x1 = nullptr;

	if (!uFn__EpicFriendsPlugin_X__AcceptFriendRequest_0x1)
	{
		uFn__EpicFriendsPlugin_X__AcceptFriendRequest_0x1 = UFunction::FindFunction("Function ProjectX.__EpicFriendsPlugin_X__AcceptFriendRequest_0x1.__EpicFriendsPlugin_X__AcceptFriendRequest_0x1");
	}

	U__EpicFriendsPlugin_X__AcceptFriendRequest_0x1_exec__EpicFriendsPlugin_X__AcceptFriendRequest_0x1_Params __EpicFriendsPlugin_X__AcceptFriendRequest_0x1_Params;
	memcpy_s(&__EpicFriendsPlugin_X__AcceptFriendRequest_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__EpicFriendsPlugin_X__AcceptFriendRequest_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__EpicFriendsPlugin_X__AcceptFriendRequest_0x1, &__EpicFriendsPlugin_X__AcceptFriendRequest_0x1_Params, nullptr);
};

// Function ProjectX.__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1.__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1
// [0x20020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1::__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1(class UEOS_ManageFriendsListResponse* R, class UError* E)
{
	static UFunction* uFn__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1 = nullptr;

	if (!uFn__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1)
	{
		uFn__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1 = UFunction::FindFunction("Function ProjectX.__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1.__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1");
	}

	U__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1_exec__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1_Params __EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1_Params;
	memcpy_s(&__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1, &__EpicFriendsPlugin_X__AddFriendWithCustomCallback_0x1_Params, nullptr);
};

// Function ProjectX.__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1.__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1
// [0x20020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UEOS_GetAccountsResponse* R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1::__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1(class UEOS_GetAccountsResponse* R, class UError* E)
{
	static UFunction* uFn__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1 = nullptr;

	if (!uFn__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1)
	{
		uFn__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1 = UFunction::FindFunction("Function ProjectX.__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1.__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1");
	}

	U__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1_exec__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1_Params __EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1_Params;
	memcpy_s(&__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1, &__EpicFriendsPlugin_X__GetOutgoingFriendRequestsWithCustomCallback_0x1_Params, nullptr);
};

// Function ProjectX.__EpicFriendsPlugin_X__RejectFriendRequest_0x1.__EpicFriendsPlugin_X__RejectFriendRequest_0x1
// [0x20020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__EpicFriendsPlugin_X__RejectFriendRequest_0x1::__EpicFriendsPlugin_X__RejectFriendRequest_0x1(class UEOS_ManageFriendsListResponse* R, class UError* E)
{
	static UFunction* uFn__EpicFriendsPlugin_X__RejectFriendRequest_0x1 = nullptr;

	if (!uFn__EpicFriendsPlugin_X__RejectFriendRequest_0x1)
	{
		uFn__EpicFriendsPlugin_X__RejectFriendRequest_0x1 = UFunction::FindFunction("Function ProjectX.__EpicFriendsPlugin_X__RejectFriendRequest_0x1.__EpicFriendsPlugin_X__RejectFriendRequest_0x1");
	}

	U__EpicFriendsPlugin_X__RejectFriendRequest_0x1_exec__EpicFriendsPlugin_X__RejectFriendRequest_0x1_Params __EpicFriendsPlugin_X__RejectFriendRequest_0x1_Params;
	memcpy_s(&__EpicFriendsPlugin_X__RejectFriendRequest_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__EpicFriendsPlugin_X__RejectFriendRequest_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__EpicFriendsPlugin_X__RejectFriendRequest_0x1, &__EpicFriendsPlugin_X__RejectFriendRequest_0x1_Params, nullptr);
};

// Function ProjectX.__EpicFriendsPlugin_X__RemoveFriend_0x1.__EpicFriendsPlugin_X__RemoveFriend_0x1
// [0x20020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UEOS_ManageFriendsListResponse* R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__EpicFriendsPlugin_X__RemoveFriend_0x1::__EpicFriendsPlugin_X__RemoveFriend_0x1(class UEOS_ManageFriendsListResponse* R, class UError* E)
{
	static UFunction* uFn__EpicFriendsPlugin_X__RemoveFriend_0x1 = nullptr;

	if (!uFn__EpicFriendsPlugin_X__RemoveFriend_0x1)
	{
		uFn__EpicFriendsPlugin_X__RemoveFriend_0x1 = UFunction::FindFunction("Function ProjectX.__EpicFriendsPlugin_X__RemoveFriend_0x1.__EpicFriendsPlugin_X__RemoveFriend_0x1");
	}

	U__EpicFriendsPlugin_X__RemoveFriend_0x1_exec__EpicFriendsPlugin_X__RemoveFriend_0x1_Params __EpicFriendsPlugin_X__RemoveFriend_0x1_Params;
	memcpy_s(&__EpicFriendsPlugin_X__RemoveFriend_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__EpicFriendsPlugin_X__RemoveFriend_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__EpicFriendsPlugin_X__RemoveFriend_0x1, &__EpicFriendsPlugin_X__RemoveFriend_0x1_Params, nullptr);
};

// Function ProjectX.__EpicLogin_X__HandleLoginChanged_0x1.__EpicLogin_X__HandleLoginChanged_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__EpicLogin_X__HandleLoginChanged_0x1::__EpicLogin_X__HandleLoginChanged_0x1()
{
	static UFunction* uFn__EpicLogin_X__HandleLoginChanged_0x1 = nullptr;

	if (!uFn__EpicLogin_X__HandleLoginChanged_0x1)
	{
		uFn__EpicLogin_X__HandleLoginChanged_0x1 = UFunction::FindFunction("Function ProjectX.__EpicLogin_X__HandleLoginChanged_0x1.__EpicLogin_X__HandleLoginChanged_0x1");
	}

	U__EpicLogin_X__HandleLoginChanged_0x1_exec__EpicLogin_X__HandleLoginChanged_0x1_Params __EpicLogin_X__HandleLoginChanged_0x1_Params;

	this->ProcessEvent(uFn__EpicLogin_X__HandleLoginChanged_0x1, &__EpicLogin_X__HandleLoginChanged_0x1_Params, nullptr);
};

// Function ProjectX.EpicConfig_X.GetChatPermissionLevel
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  PermissionLabel                (CPF_Parm | CPF_NeedCtorLink)

uint8_t UEpicConfig_X::GetChatPermissionLevel(class FString PermissionLabel)
{
	static UFunction* uFnGetChatPermissionLevel = nullptr;

	if (!uFnGetChatPermissionLevel)
	{
		uFnGetChatPermissionLevel = UFunction::FindFunction("Function ProjectX.EpicConfig_X.GetChatPermissionLevel");
	}

	UEpicConfig_X_execGetChatPermissionLevel_Params GetChatPermissionLevel_Params;
	memcpy_s(&GetChatPermissionLevel_Params.PermissionLabel, 0x10, &PermissionLabel, 0x10);

	this->ProcessEvent(uFnGetChatPermissionLevel, &GetChatPermissionLevel_Params, nullptr);

	return GetChatPermissionLevel_Params.ReturnValue;
};

// Function ProjectX.EpicConfig_X.Apply
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UEpicConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.EpicConfig_X.Apply");
	}

	UEpicConfig_X_execApply_Params Apply_Params;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);
};

// Function ProjectX.__EpicLogin_X__TriggerAuthTicketDelegate_0x1.__EpicLogin_X__TriggerAuthTicketDelegate_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  AuthTicket                     (CPF_Parm | CPF_NeedCtorLink)

void U__EpicLogin_X__TriggerAuthTicketDelegate_0x1::__EpicLogin_X__TriggerAuthTicketDelegate_0x1(unsigned long bSuccess, class FString AuthTicket)
{
	static UFunction* uFn__EpicLogin_X__TriggerAuthTicketDelegate_0x1 = nullptr;

	if (!uFn__EpicLogin_X__TriggerAuthTicketDelegate_0x1)
	{
		uFn__EpicLogin_X__TriggerAuthTicketDelegate_0x1 = UFunction::FindFunction("Function ProjectX.__EpicLogin_X__TriggerAuthTicketDelegate_0x1.__EpicLogin_X__TriggerAuthTicketDelegate_0x1");
	}

	U__EpicLogin_X__TriggerAuthTicketDelegate_0x1_exec__EpicLogin_X__TriggerAuthTicketDelegate_0x1_Params __EpicLogin_X__TriggerAuthTicketDelegate_0x1_Params;
	__EpicLogin_X__TriggerAuthTicketDelegate_0x1_Params.bSuccess = bSuccess;
	memcpy_s(&__EpicLogin_X__TriggerAuthTicketDelegate_0x1_Params.AuthTicket, 0x10, &AuthTicket, 0x10);

	this->ProcessEvent(uFn__EpicLogin_X__TriggerAuthTicketDelegate_0x1, &__EpicLogin_X__TriggerAuthTicketDelegate_0x1_Params, nullptr);
};

// Function ProjectX.__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1.____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  Ticket                         (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Id                             (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Err                            (CPF_Parm)

void U__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1::____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1(class FString Ticket, class FString Id, class UError* Err)
{
	static UFunction* uFn____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1 = nullptr;

	if (!uFn____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1)
	{
		uFn____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1 = UFunction::FindFunction("Function ProjectX.__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1.____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1");
	}

	U__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_exec____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1_Params ____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1_Params;
	memcpy_s(&____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1_Params.Ticket, 0x10, &Ticket, 0x10);
	memcpy_s(&____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1_Params.Id, 0x10, &Id, 0x10);
	memcpy_s(&____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1, &____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1____EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_0x1_Params, nullptr);
};

// Function ProjectX.__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1.__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  AuthTicket                     (CPF_Parm | CPF_NeedCtorLink)

void U__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1::__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1(unsigned long bSuccess, class FString AuthTicket)
{
	static UFunction* uFn__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1 = nullptr;

	if (!uFn__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1)
	{
		uFn__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1 = UFunction::FindFunction("Function ProjectX.__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1.__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1");
	}

	U__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_exec__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_Params __EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_Params;
	__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_Params.bSuccess = bSuccess;
	memcpy_s(&__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_Params.AuthTicket, 0x10, &AuthTicket, 0x10);

	this->ProcessEvent(uFn__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1, &__EpicLogin_X__UpdateTwoFactorAuthenticationStatus_0x1_Params, nullptr);
};

// Function ProjectX.__EpicLogin_X__RequestNintendoAccountAuthorization_0x1.__EpicLogin_X__RequestNintendoAccountAuthorization_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  NintendoAccountToken           (CPF_Parm | CPF_NeedCtorLink)

void U__EpicLogin_X__RequestNintendoAccountAuthorization_0x1::__EpicLogin_X__RequestNintendoAccountAuthorization_0x1(class FString NintendoAccountToken)
{
	static UFunction* uFn__EpicLogin_X__RequestNintendoAccountAuthorization_0x1 = nullptr;

	if (!uFn__EpicLogin_X__RequestNintendoAccountAuthorization_0x1)
	{
		uFn__EpicLogin_X__RequestNintendoAccountAuthorization_0x1 = UFunction::FindFunction("Function ProjectX.__EpicLogin_X__RequestNintendoAccountAuthorization_0x1.__EpicLogin_X__RequestNintendoAccountAuthorization_0x1");
	}

	U__EpicLogin_X__RequestNintendoAccountAuthorization_0x1_exec__EpicLogin_X__RequestNintendoAccountAuthorization_0x1_Params __EpicLogin_X__RequestNintendoAccountAuthorization_0x1_Params;
	memcpy_s(&__EpicLogin_X__RequestNintendoAccountAuthorization_0x1_Params.NintendoAccountToken, 0x10, &NintendoAccountToken, 0x10);

	this->ProcessEvent(uFn__EpicLogin_X__RequestNintendoAccountAuthorization_0x1, &__EpicLogin_X__RequestNintendoAccountAuthorization_0x1_Params, nullptr);
};

// Function ProjectX.__LocalClubData_X__GetClubByID_0x1.__LocalClubData_X__GetClubByID_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubDetails_X*          C                              (CPF_Parm)

bool U__LocalClubData_X__GetClubByID_0x1::__LocalClubData_X__GetClubByID_0x1(class UClubDetails_X* C)
{
	static UFunction* uFn__LocalClubData_X__GetClubByID_0x1 = nullptr;

	if (!uFn__LocalClubData_X__GetClubByID_0x1)
	{
		uFn__LocalClubData_X__GetClubByID_0x1 = UFunction::FindFunction("Function ProjectX.__LocalClubData_X__GetClubByID_0x1.__LocalClubData_X__GetClubByID_0x1");
	}

	U__LocalClubData_X__GetClubByID_0x1_exec__LocalClubData_X__GetClubByID_0x1_Params __LocalClubData_X__GetClubByID_0x1_Params;
	memcpy_s(&__LocalClubData_X__GetClubByID_0x1_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFn__LocalClubData_X__GetClubByID_0x1, &__LocalClubData_X__GetClubByID_0x1_Params, nullptr);

	return __LocalClubData_X__GetClubByID_0x1_Params.ReturnValue;
};

// Function ProjectX.ClubDetails_X.GetMemberDebugString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FClubMember             Member                         (CPF_Parm | CPF_NeedCtorLink)

class FString UClubDetails_X::GetMemberDebugString(struct FClubMember Member)
{
	static UFunction* uFnGetMemberDebugString = nullptr;

	if (!uFnGetMemberDebugString)
	{
		uFnGetMemberDebugString = UFunction::FindFunction("Function ProjectX.ClubDetails_X.GetMemberDebugString");
	}

	UClubDetails_X_execGetMemberDebugString_Params GetMemberDebugString_Params;
	memcpy_s(&GetMemberDebugString_Params.Member, 0xA0, &Member, 0xA0);

	this->ProcessEvent(uFnGetMemberDebugString, &GetMemberDebugString_Params, nullptr);

	return GetMemberDebugString_Params.ReturnValue;
};

// Function ProjectX.ClubDetails_X.GetMembersDebugString
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UClubDetails_X::GetMembersDebugString()
{
	static UFunction* uFnGetMembersDebugString = nullptr;

	if (!uFnGetMembersDebugString)
	{
		uFnGetMembersDebugString = UFunction::FindFunction("Function ProjectX.ClubDetails_X.GetMembersDebugString");
	}

	UClubDetails_X_execGetMembersDebugString_Params GetMembersDebugString_Params;

	this->ProcessEvent(uFnGetMembersDebugString, &GetMembersDebugString_Params, nullptr);

	return GetMembersDebugString_Params.ReturnValue;
};

// Function ProjectX.ClubDetails_X.GetDebugString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UClubDetails_X::GetDebugString()
{
	static UFunction* uFnGetDebugString = nullptr;

	if (!uFnGetDebugString)
	{
		uFnGetDebugString = UFunction::FindFunction("Function ProjectX.ClubDetails_X.GetDebugString");
	}

	UClubDetails_X_execGetDebugString_Params GetDebugString_Params;

	this->ProcessEvent(uFnGetDebugString, &GetDebugString_Params, nullptr);

	return GetDebugString_Params.ReturnValue;
};

// Function ProjectX.ClubDetails_X.IsMember
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

bool UClubDetails_X::IsMember(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnIsMember = nullptr;

	if (!uFnIsMember)
	{
		uFnIsMember = UFunction::FindFunction("Function ProjectX.ClubDetails_X.IsMember");
	}

	UClubDetails_X_execIsMember_Params IsMember_Params;
	memcpy_s(&IsMember_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnIsMember, &IsMember_Params, nullptr);

	return IsMember_Params.ReturnValue;
};

// Function ProjectX.ClubDetails_X.IsDestroyed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UClubDetails_X::IsDestroyed()
{
	static UFunction* uFnIsDestroyed = nullptr;

	if (!uFnIsDestroyed)
	{
		uFnIsDestroyed = UFunction::FindFunction("Function ProjectX.ClubDetails_X.IsDestroyed");
	}

	UClubDetails_X_execIsDestroyed_Params IsDestroyed_Params;

	this->ProcessEvent(uFnIsDestroyed, &IsDestroyed_Params, nullptr);

	return IsDestroyed_Params.ReturnValue;
};

// Function ProjectX.ClubDetails_X.Destroy
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UClubDetails_X::Destroy()
{
	static UFunction* uFnDestroy = nullptr;

	if (!uFnDestroy)
	{
		uFnDestroy = UFunction::FindFunction("Function ProjectX.ClubDetails_X.Destroy");
	}

	UClubDetails_X_execDestroy_Params Destroy_Params;

	this->ProcessEvent(uFnDestroy, &Destroy_Params, nullptr);
};

// Function ProjectX.ClubSettings_X.IsAccentColorSet
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UClubSettings_X::IsAccentColorSet()
{
	static UFunction* uFnIsAccentColorSet = nullptr;

	if (!uFnIsAccentColorSet)
	{
		uFnIsAccentColorSet = UFunction::FindFunction("Function ProjectX.ClubSettings_X.IsAccentColorSet");
	}

	UClubSettings_X_execIsAccentColorSet_Params IsAccentColorSet_Params;

	this->ProcessEvent(uFnIsAccentColorSet, &IsAccentColorSet_Params, nullptr);

	return IsAccentColorSet_Params.ReturnValue;
};

// Function ProjectX.ClubSettings_X.IsPrimaryColorSet
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UClubSettings_X::IsPrimaryColorSet()
{
	static UFunction* uFnIsPrimaryColorSet = nullptr;

	if (!uFnIsPrimaryColorSet)
	{
		uFnIsPrimaryColorSet = UFunction::FindFunction("Function ProjectX.ClubSettings_X.IsPrimaryColorSet");
	}

	UClubSettings_X_execIsPrimaryColorSet_Params IsPrimaryColorSet_Params;

	this->ProcessEvent(uFnIsPrimaryColorSet, &IsPrimaryColorSet_Params, nullptr);

	return IsPrimaryColorSet_Params.ReturnValue;
};

// Function ProjectX.ClubSettings_X.Create
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClubSettings_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InName                         (CPF_Parm | CPF_NeedCtorLink)
// class FString                  InTag                          (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        InPrimaryColor                 (CPF_Parm)
// int32_t                        InSecondaryColor               (CPF_Parm)

class UClubSettings_X* UClubSettings_X::Create(class FString InName, class FString InTag, int32_t InPrimaryColor, int32_t InSecondaryColor)
{
	static UFunction* uFnCreate = nullptr;

	if (!uFnCreate)
	{
		uFnCreate = UFunction::FindFunction("Function ProjectX.ClubSettings_X.Create");
	}

	UClubSettings_X_execCreate_Params Create_Params;
	memcpy_s(&Create_Params.InName, 0x10, &InName, 0x10);
	memcpy_s(&Create_Params.InTag, 0x10, &InTag, 0x10);
	memcpy_s(&Create_Params.InPrimaryColor, 0x4, &InPrimaryColor, 0x4);
	memcpy_s(&Create_Params.InSecondaryColor, 0x4, &InSecondaryColor, 0x4);

	UClubSettings_X::StaticClass()->ProcessEvent(uFnCreate, &Create_Params, nullptr);

	return Create_Params.ReturnValue;
};

// Function ProjectX.LocalClubData_X.GetClubForPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UClubDetails_X* ULocalClubData_X::GetClubForPlayer(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetClubForPlayer = nullptr;

	if (!uFnGetClubForPlayer)
	{
		uFnGetClubForPlayer = UFunction::FindFunction("Function ProjectX.LocalClubData_X.GetClubForPlayer");
	}

	ULocalClubData_X_execGetClubForPlayer_Params GetClubForPlayer_Params;
	memcpy_s(&GetClubForPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetClubForPlayer, &GetClubForPlayer_Params, nullptr);

	return GetClubForPlayer_Params.ReturnValue;
};

// Function ProjectX.LocalClubData_X.GetClubByID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       Id                             (CPF_Parm)

class UClubDetails_X* ULocalClubData_X::GetClubByID(uint64_t Id)
{
	static UFunction* uFnGetClubByID = nullptr;

	if (!uFnGetClubByID)
	{
		uFnGetClubByID = UFunction::FindFunction("Function ProjectX.LocalClubData_X.GetClubByID");
	}

	ULocalClubData_X_execGetClubByID_Params GetClubByID_Params;
	GetClubByID_Params.Id = Id;

	this->ProcessEvent(uFnGetClubByID, &GetClubByID_Params, nullptr);

	return GetClubByID_Params.ReturnValue;
};

// Function ProjectX.LocalClubData_X.Save
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void ULocalClubData_X::Save()
{
	static UFunction* uFnSave = nullptr;

	if (!uFnSave)
	{
		uFnSave = UFunction::FindFunction("Function ProjectX.LocalClubData_X.Save");
	}

	ULocalClubData_X_execSave_Params Save_Params;

	this->ProcessEvent(uFnSave, &Save_Params, nullptr);
};

// Function ProjectX.LocalClubData_X.Load
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void ULocalClubData_X::Load()
{
	static UFunction* uFnLoad = nullptr;

	if (!uFnLoad)
	{
		uFnLoad = UFunction::FindFunction("Function ProjectX.LocalClubData_X.Load");
	}

	ULocalClubData_X_execLoad_Params Load_Params;

	this->ProcessEvent(uFnLoad, &Load_Params, nullptr);
};

// Function ProjectX.__LocalClubData_X__GetClubForPlayer_0x1.__LocalClubData_X__GetClubForPlayer_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubDetails_X*          C                              (CPF_Parm)

bool U__LocalClubData_X__GetClubForPlayer_0x1::__LocalClubData_X__GetClubForPlayer_0x1(class UClubDetails_X* C)
{
	static UFunction* uFn__LocalClubData_X__GetClubForPlayer_0x1 = nullptr;

	if (!uFn__LocalClubData_X__GetClubForPlayer_0x1)
	{
		uFn__LocalClubData_X__GetClubForPlayer_0x1 = UFunction::FindFunction("Function ProjectX.__LocalClubData_X__GetClubForPlayer_0x1.__LocalClubData_X__GetClubForPlayer_0x1");
	}

	U__LocalClubData_X__GetClubForPlayer_0x1_exec__LocalClubData_X__GetClubForPlayer_0x1_Params __LocalClubData_X__GetClubForPlayer_0x1_Params;
	memcpy_s(&__LocalClubData_X__GetClubForPlayer_0x1_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFn__LocalClubData_X__GetClubForPlayer_0x1, &__LocalClubData_X__GetClubForPlayer_0x1_Params, nullptr);

	return __LocalClubData_X__GetClubForPlayer_0x1_Params.ReturnValue;
};

// Function ProjectX.__MatchRecorder_X__GetPlayerData_0x1.__MatchRecorder_X__GetPlayerData_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UMatchPlayerData_X*      P                              (CPF_Parm)

bool U__MatchRecorder_X__GetPlayerData_0x1::__MatchRecorder_X__GetPlayerData_0x1(class UMatchPlayerData_X* P)
{
	static UFunction* uFn__MatchRecorder_X__GetPlayerData_0x1 = nullptr;

	if (!uFn__MatchRecorder_X__GetPlayerData_0x1)
	{
		uFn__MatchRecorder_X__GetPlayerData_0x1 = UFunction::FindFunction("Function ProjectX.__MatchRecorder_X__GetPlayerData_0x1.__MatchRecorder_X__GetPlayerData_0x1");
	}

	U__MatchRecorder_X__GetPlayerData_0x1_exec__MatchRecorder_X__GetPlayerData_0x1_Params __MatchRecorder_X__GetPlayerData_0x1_Params;
	memcpy_s(&__MatchRecorder_X__GetPlayerData_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__MatchRecorder_X__GetPlayerData_0x1, &__MatchRecorder_X__GetPlayerData_0x1_Params, nullptr);

	return __MatchRecorder_X__GetPlayerData_0x1_Params.ReturnValue;
};

// Function ProjectX.MatchPlayerData_X.SetSkills
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUpdatedPlayerSkillRating Update                         (CPF_Parm | CPF_NeedCtorLink)

void UMatchPlayerData_X::SetSkills(struct FUpdatedPlayerSkillRating Update)
{
	static UFunction* uFnSetSkills = nullptr;

	if (!uFnSetSkills)
	{
		uFnSetSkills = UFunction::FindFunction("Function ProjectX.MatchPlayerData_X.SetSkills");
	}

	UMatchPlayerData_X_execSetSkills_Params SetSkills_Params;
	memcpy_s(&SetSkills_Params.Update, 0x80, &Update, 0x80);

	this->ProcessEvent(uFnSetSkills, &SetSkills_Params, nullptr);
};

// Function ProjectX.MatchRecorder_X.__MatchRecorder_X__GetAbandonedPlayers_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UMatchPlayerData_X*      P                              (CPF_Parm)

bool UMatchRecorder_X::__MatchRecorder_X__GetAbandonedPlayers_0x1(class UMatchPlayerData_X* P)
{
	static UFunction* uFn__MatchRecorder_X__GetAbandonedPlayers_0x1 = nullptr;

	if (!uFn__MatchRecorder_X__GetAbandonedPlayers_0x1)
	{
		uFn__MatchRecorder_X__GetAbandonedPlayers_0x1 = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.__MatchRecorder_X__GetAbandonedPlayers_0x1");
	}

	UMatchRecorder_X_exec__MatchRecorder_X__GetAbandonedPlayers_0x1_Params __MatchRecorder_X__GetAbandonedPlayers_0x1_Params;
	memcpy_s(&__MatchRecorder_X__GetAbandonedPlayers_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__MatchRecorder_X__GetAbandonedPlayers_0x1, &__MatchRecorder_X__GetAbandonedPlayers_0x1_Params, nullptr);

	return __MatchRecorder_X__GetAbandonedPlayers_0x1_Params.ReturnValue;
};

// Function ProjectX.MatchRecorder_X.__MatchRecorder_X__GetAbandonedPlayerIDs_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UMatchPlayerData_X*      P                              (CPF_Parm)

struct FUniqueNetId UMatchRecorder_X::__MatchRecorder_X__GetAbandonedPlayerIDs_0x1(class UMatchPlayerData_X* P)
{
	static UFunction* uFn__MatchRecorder_X__GetAbandonedPlayerIDs_0x1 = nullptr;

	if (!uFn__MatchRecorder_X__GetAbandonedPlayerIDs_0x1)
	{
		uFn__MatchRecorder_X__GetAbandonedPlayerIDs_0x1 = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.__MatchRecorder_X__GetAbandonedPlayerIDs_0x1");
	}

	UMatchRecorder_X_exec__MatchRecorder_X__GetAbandonedPlayerIDs_0x1_Params __MatchRecorder_X__GetAbandonedPlayerIDs_0x1_Params;
	memcpy_s(&__MatchRecorder_X__GetAbandonedPlayerIDs_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__MatchRecorder_X__GetAbandonedPlayerIDs_0x1, &__MatchRecorder_X__GetAbandonedPlayerIDs_0x1_Params, nullptr);

	return __MatchRecorder_X__GetAbandonedPlayerIDs_0x1_Params.ReturnValue;
};

// Function ProjectX.MatchRecorder_X.Finished
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UMatchRecorder_X::Finished()
{
	static UFunction* uFnFinished = nullptr;

	if (!uFnFinished)
	{
		uFnFinished = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.Finished");
	}

	UMatchRecorder_X_execFinished_Params Finished_Params;

	this->ProcessEvent(uFnFinished, &Finished_Params, nullptr);
};

// Function ProjectX.MatchRecorder_X.UpdateServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)

void UMatchRecorder_X::UpdateServer(class UOnlineGameDedicatedServer_X* Server)
{
	static UFunction* uFnUpdateServer = nullptr;

	if (!uFnUpdateServer)
	{
		uFnUpdateServer = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.UpdateServer");
	}

	UMatchRecorder_X_execUpdateServer_Params UpdateServer_Params;
	memcpy_s(&UpdateServer_Params.Server, 0x8, &Server, 0x8);

	this->ProcessEvent(uFnUpdateServer, &UpdateServer_Params, nullptr);
};

// Function ProjectX.MatchRecorder_X.CreatePlayer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UMatchPlayerData_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)

class UMatchPlayerData_X* UMatchRecorder_X::CreatePlayer(struct FUniqueNetId PlayerID, class FString PlayerName)
{
	static UFunction* uFnCreatePlayer = nullptr;

	if (!uFnCreatePlayer)
	{
		uFnCreatePlayer = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.CreatePlayer");
	}

	UMatchRecorder_X_execCreatePlayer_Params CreatePlayer_Params;
	memcpy_s(&CreatePlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&CreatePlayer_Params.PlayerName, 0x10, &PlayerName, 0x10);

	this->ProcessEvent(uFnCreatePlayer, &CreatePlayer_Params, nullptr);

	return CreatePlayer_Params.ReturnValue;
};

// Function ProjectX.MatchRecorder_X.GetAbandonedPlayerIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FUniqueNetId> UMatchRecorder_X::GetAbandonedPlayerIDs()
{
	static UFunction* uFnGetAbandonedPlayerIDs = nullptr;

	if (!uFnGetAbandonedPlayerIDs)
	{
		uFnGetAbandonedPlayerIDs = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.GetAbandonedPlayerIDs");
	}

	UMatchRecorder_X_execGetAbandonedPlayerIDs_Params GetAbandonedPlayerIDs_Params;

	this->ProcessEvent(uFnGetAbandonedPlayerIDs, &GetAbandonedPlayerIDs_Params, nullptr);

	return GetAbandonedPlayerIDs_Params.ReturnValue;
};

// Function ProjectX.MatchRecorder_X.GetAbandonedPlayers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class UMatchPlayerData_X*> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<class UMatchPlayerData_X*> UMatchRecorder_X::GetAbandonedPlayers()
{
	static UFunction* uFnGetAbandonedPlayers = nullptr;

	if (!uFnGetAbandonedPlayers)
	{
		uFnGetAbandonedPlayers = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.GetAbandonedPlayers");
	}

	UMatchRecorder_X_execGetAbandonedPlayers_Params GetAbandonedPlayers_Params;

	this->ProcessEvent(uFnGetAbandonedPlayers, &GetAbandonedPlayers_Params, nullptr);

	return GetAbandonedPlayers_Params.ReturnValue;
};

// Function ProjectX.MatchRecorder_X.GetPlayerData
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UMatchPlayerData_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UMatchPlayerData_X* UMatchRecorder_X::GetPlayerData(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerData = nullptr;

	if (!uFnGetPlayerData)
	{
		uFnGetPlayerData = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.GetPlayerData");
	}

	UMatchRecorder_X_execGetPlayerData_Params GetPlayerData_Params;
	memcpy_s(&GetPlayerData_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerData, &GetPlayerData_Params, nullptr);

	return GetPlayerData_Params.ReturnValue;
};

// Function ProjectX.MatchRecorder_X.RemovePlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UMatchRecorder_X::RemovePlayer(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnRemovePlayer = nullptr;

	if (!uFnRemovePlayer)
	{
		uFnRemovePlayer = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.RemovePlayer");
	}

	UMatchRecorder_X_execRemovePlayer_Params RemovePlayer_Params;
	memcpy_s(&RemovePlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnRemovePlayer, &RemovePlayer_Params, nullptr);
};

// Function ProjectX.MatchRecorder_X.ReservePlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PartyID                        (CPF_Parm | CPF_NeedCtorLink)

void UMatchRecorder_X::ReservePlayer(struct FUniqueNetId PlayerID, struct FUniqueNetId PartyID)
{
	static UFunction* uFnReservePlayer = nullptr;

	if (!uFnReservePlayer)
	{
		uFnReservePlayer = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.ReservePlayer");
	}

	UMatchRecorder_X_execReservePlayer_Params ReservePlayer_Params;
	memcpy_s(&ReservePlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&ReservePlayer_Params.PartyID, 0x48, &PartyID, 0x48);

	this->ProcessEvent(uFnReservePlayer, &ReservePlayer_Params, nullptr);
};

// Function ProjectX.MatchRecorder_X.AddPlayer
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)

void UMatchRecorder_X::AddPlayer(struct FUniqueNetId PlayerID, class FString PlayerName)
{
	static UFunction* uFnAddPlayer = nullptr;

	if (!uFnAddPlayer)
	{
		uFnAddPlayer = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.AddPlayer");
	}

	UMatchRecorder_X_execAddPlayer_Params AddPlayer_Params;
	memcpy_s(&AddPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AddPlayer_Params.PlayerName, 0x10, &PlayerName, 0x10);

	this->ProcessEvent(uFnAddPlayer, &AddPlayer_Params, nullptr);
};

// Function ProjectX.MatchRecorder_X.MatchGuid
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UMatchRecorder_X::MatchGuid()
{
	static UFunction* uFnMatchGuid = nullptr;

	if (!uFnMatchGuid)
	{
		uFnMatchGuid = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.MatchGuid");
	}

	UMatchRecorder_X_execMatchGuid_Params MatchGuid_Params;

	this->ProcessEvent(uFnMatchGuid, &MatchGuid_Params, nullptr);

	return MatchGuid_Params.ReturnValue;
};

// Function ProjectX.MatchRecorder_X.Construct
// [0x400820802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UMatchRecorder_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.MatchRecorder_X.Construct");
	}

	UMatchRecorder_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.__OnlineClubCache_X__GetClubDetails_0x1.__OnlineClubCache_X__GetClubDetails_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubDetails_X*          C                              (CPF_Parm)

bool U__OnlineClubCache_X__GetClubDetails_0x1::__OnlineClubCache_X__GetClubDetails_0x1(class UClubDetails_X* C)
{
	static UFunction* uFn__OnlineClubCache_X__GetClubDetails_0x1 = nullptr;

	if (!uFn__OnlineClubCache_X__GetClubDetails_0x1)
	{
		uFn__OnlineClubCache_X__GetClubDetails_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineClubCache_X__GetClubDetails_0x1.__OnlineClubCache_X__GetClubDetails_0x1");
	}

	U__OnlineClubCache_X__GetClubDetails_0x1_exec__OnlineClubCache_X__GetClubDetails_0x1_Params __OnlineClubCache_X__GetClubDetails_0x1_Params;
	memcpy_s(&__OnlineClubCache_X__GetClubDetails_0x1_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFn__OnlineClubCache_X__GetClubDetails_0x1, &__OnlineClubCache_X__GetClubDetails_0x1_Params, nullptr);

	return __OnlineClubCache_X__GetClubDetails_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineClubCache_X.__OnlineClubCache_X__ClearAllExcept_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// uint64_t                       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubDetails_X*          C                              (CPF_Parm)

uint64_t UOnlineClubCache_X::__OnlineClubCache_X__ClearAllExcept_0x1(class UClubDetails_X* C)
{
	static UFunction* uFn__OnlineClubCache_X__ClearAllExcept_0x1 = nullptr;

	if (!uFn__OnlineClubCache_X__ClearAllExcept_0x1)
	{
		uFn__OnlineClubCache_X__ClearAllExcept_0x1 = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.__OnlineClubCache_X__ClearAllExcept_0x1");
	}

	UOnlineClubCache_X_exec__OnlineClubCache_X__ClearAllExcept_0x1_Params __OnlineClubCache_X__ClearAllExcept_0x1_Params;
	memcpy_s(&__OnlineClubCache_X__ClearAllExcept_0x1_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFn__OnlineClubCache_X__ClearAllExcept_0x1, &__OnlineClubCache_X__ClearAllExcept_0x1_Params, nullptr);

	return __OnlineClubCache_X__ClearAllExcept_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineClubCache_X.ClearAllExcept
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<uint64_t>               KeepClubs                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineClubCache_X::ClearAllExcept(TArray<uint64_t>& KeepClubs)
{
	static UFunction* uFnClearAllExcept = nullptr;

	if (!uFnClearAllExcept)
	{
		uFnClearAllExcept = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.ClearAllExcept");
	}

	UOnlineClubCache_X_execClearAllExcept_Params ClearAllExcept_Params;
	memcpy_s(&ClearAllExcept_Params.KeepClubs, 0x10, &KeepClubs, 0x10);

	this->ProcessEvent(uFnClearAllExcept, &ClearAllExcept_Params, nullptr);

	memcpy_s(&KeepClubs, 0x10, &ClearAllExcept_Params.KeepClubs, 0x10);
};

// Function ProjectX.OnlineClubCache_X.Clear
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineClubCache_X::Clear()
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.Clear");
	}

	UOnlineClubCache_X_execClear_Params Clear_Params;

	this->ProcessEvent(uFnClear, &Clear_Params, nullptr);
};

// Function ProjectX.OnlineClubCache_X.Destroy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint64_t                       ClubID                         (CPF_Parm)

void UOnlineClubCache_X::Destroy(uint64_t ClubID)
{
	static UFunction* uFnDestroy = nullptr;

	if (!uFnDestroy)
	{
		uFnDestroy = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.Destroy");
	}

	UOnlineClubCache_X_execDestroy_Params Destroy_Params;
	Destroy_Params.ClubID = ClubID;

	this->ProcessEvent(uFnDestroy, &Destroy_Params, nullptr);
};

// Function ProjectX.OnlineClubCache_X.Add
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          ClubDetails                    (CPF_Parm)

void UOnlineClubCache_X::Add(class UClubDetails_X* ClubDetails)
{
	static UFunction* uFnAdd = nullptr;

	if (!uFnAdd)
	{
		uFnAdd = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.Add");
	}

	UOnlineClubCache_X_execAdd_Params Add_Params;
	memcpy_s(&Add_Params.ClubDetails, 0x8, &ClubDetails, 0x8);

	this->ProcessEvent(uFnAdd, &Add_Params, nullptr);
};

// Function ProjectX.OnlineClubCache_X.GetPlayerClubID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint64_t                       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

uint64_t UOnlineClubCache_X::GetPlayerClubID(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerClubID = nullptr;

	if (!uFnGetPlayerClubID)
	{
		uFnGetPlayerClubID = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.GetPlayerClubID");
	}

	UOnlineClubCache_X_execGetPlayerClubID_Params GetPlayerClubID_Params;
	memcpy_s(&GetPlayerClubID_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerClubID, &GetPlayerClubID_Params, nullptr);

	return GetPlayerClubID_Params.ReturnValue;
};

// Function ProjectX.OnlineClubCache_X.GetPlayerClubDetails
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UClubDetails_X* UOnlineClubCache_X::GetPlayerClubDetails(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerClubDetails = nullptr;

	if (!uFnGetPlayerClubDetails)
	{
		uFnGetPlayerClubDetails = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.GetPlayerClubDetails");
	}

	UOnlineClubCache_X_execGetPlayerClubDetails_Params GetPlayerClubDetails_Params;
	memcpy_s(&GetPlayerClubDetails_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerClubDetails, &GetPlayerClubDetails_Params, nullptr);

	return GetPlayerClubDetails_Params.ReturnValue;
};

// Function ProjectX.OnlineClubCache_X.GetClubDetails
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       ClubID                         (CPF_Parm)

class UClubDetails_X* UOnlineClubCache_X::GetClubDetails(uint64_t ClubID)
{
	static UFunction* uFnGetClubDetails = nullptr;

	if (!uFnGetClubDetails)
	{
		uFnGetClubDetails = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.GetClubDetails");
	}

	UOnlineClubCache_X_execGetClubDetails_Params GetClubDetails_Params;
	GetClubDetails_Params.ClubID = ClubID;

	this->ProcessEvent(uFnGetClubDetails, &GetClubDetails_Params, nullptr);

	return GetClubDetails_Params.ReturnValue;
};

// Function ProjectX.OnlineClubCache_X.NotifyWhenClubUpdated
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineClubCache_X::NotifyWhenClubUpdated(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyWhenClubUpdated = nullptr;

	if (!uFnNotifyWhenClubUpdated)
	{
		uFnNotifyWhenClubUpdated = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.NotifyWhenClubUpdated");
	}

	UOnlineClubCache_X_execNotifyWhenClubUpdated_Params NotifyWhenClubUpdated_Params;
	memcpy_s(&NotifyWhenClubUpdated_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyWhenClubUpdated, &NotifyWhenClubUpdated_Params, nullptr);
};

// Function ProjectX.OnlineClubCache_X.EventClubUpdated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineClubCache_X*      Cache                          (CPF_Parm | CPF_EditInline)
// class UClubDetails_X*          ClubDetails                    (CPF_Parm)

void UOnlineClubCache_X::EventClubUpdated(class UOnlineClubCache_X* Cache, class UClubDetails_X* ClubDetails)
{
	static UFunction* uFnEventClubUpdated = nullptr;

	if (!uFnEventClubUpdated)
	{
		uFnEventClubUpdated = UFunction::FindFunction("Function ProjectX.OnlineClubCache_X.EventClubUpdated");
	}

	UOnlineClubCache_X_execEventClubUpdated_Params EventClubUpdated_Params;
	memcpy_s(&EventClubUpdated_Params.Cache, 0x8, &Cache, 0x8);
	memcpy_s(&EventClubUpdated_Params.ClubDetails, 0x8, &ClubDetails, 0x8);

	this->ProcessEvent(uFnEventClubUpdated, &EventClubUpdated_Params, nullptr);
};

// Function ProjectX.__OnlineClubCache_X__GetPlayerClubDetails_0x1.__OnlineClubCache_X__GetPlayerClubDetails_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubDetails_X*          C                              (CPF_Parm)

bool U__OnlineClubCache_X__GetPlayerClubDetails_0x1::__OnlineClubCache_X__GetPlayerClubDetails_0x1(class UClubDetails_X* C)
{
	static UFunction* uFn__OnlineClubCache_X__GetPlayerClubDetails_0x1 = nullptr;

	if (!uFn__OnlineClubCache_X__GetPlayerClubDetails_0x1)
	{
		uFn__OnlineClubCache_X__GetPlayerClubDetails_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineClubCache_X__GetPlayerClubDetails_0x1.__OnlineClubCache_X__GetPlayerClubDetails_0x1");
	}

	U__OnlineClubCache_X__GetPlayerClubDetails_0x1_exec__OnlineClubCache_X__GetPlayerClubDetails_0x1_Params __OnlineClubCache_X__GetPlayerClubDetails_0x1_Params;
	memcpy_s(&__OnlineClubCache_X__GetPlayerClubDetails_0x1_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFn__OnlineClubCache_X__GetPlayerClubDetails_0x1, &__OnlineClubCache_X__GetPlayerClubDetails_0x1_Params, nullptr);

	return __OnlineClubCache_X__GetPlayerClubDetails_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineClubManager_X__LeaveClub_0x1.__OnlineClubManager_X__LeaveClub_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__OnlineClubManager_X__LeaveClub_0x1::__OnlineClubManager_X__LeaveClub_0x1()
{
	static UFunction* uFn__OnlineClubManager_X__LeaveClub_0x1 = nullptr;

	if (!uFn__OnlineClubManager_X__LeaveClub_0x1)
	{
		uFn__OnlineClubManager_X__LeaveClub_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineClubManager_X__LeaveClub_0x1.__OnlineClubManager_X__LeaveClub_0x1");
	}

	U__OnlineClubManager_X__LeaveClub_0x1_exec__OnlineClubManager_X__LeaveClub_0x1_Params __OnlineClubManager_X__LeaveClub_0x1_Params;

	this->ProcessEvent(uFn__OnlineClubManager_X__LeaveClub_0x1, &__OnlineClubManager_X__LeaveClub_0x1_Params, nullptr);
};

// Function ProjectX.OnlineClubManager_X.OnLeaveClub
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint64_t                       ClubID                         (CPF_Parm)

void UOnlineClubManager_X::OnLeaveClub(uint64_t ClubID)
{
	static UFunction* uFnOnLeaveClub = nullptr;

	if (!uFnOnLeaveClub)
	{
		uFnOnLeaveClub = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.OnLeaveClub");
	}

	UOnlineClubManager_X_execOnLeaveClub_Params OnLeaveClub_Params;
	OnLeaveClub_Params.ClubID = ClubID;

	this->ProcessEvent(uFnOnLeaveClub, &OnLeaveClub_Params, nullptr);
};

// Function ProjectX.OnlineClubManager_X.OnClubChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          Club                           (CPF_Parm)

void UOnlineClubManager_X::OnClubChanged(class UClubDetails_X* Club)
{
	static UFunction* uFnOnClubChanged = nullptr;

	if (!uFnOnClubChanged)
	{
		uFnOnClubChanged = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.OnClubChanged");
	}

	UOnlineClubManager_X_execOnClubChanged_Params OnClubChanged_Params;
	memcpy_s(&OnClubChanged_Params.Club, 0x8, &Club, 0x8);

	this->ProcessEvent(uFnOnClubChanged, &OnClubChanged_Params, nullptr);
};

// Function ProjectX.OnlineClubManager_X.LeaveClub
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       ClubID                         (CPF_Parm)

class UAsyncTask* UOnlineClubManager_X::LeaveClub(uint64_t ClubID)
{
	static UFunction* uFnLeaveClub = nullptr;

	if (!uFnLeaveClub)
	{
		uFnLeaveClub = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.LeaveClub");
	}

	UOnlineClubManager_X_execLeaveClub_Params LeaveClub_Params;
	LeaveClub_Params.ClubID = ClubID;

	this->ProcessEvent(uFnLeaveClub, &LeaveClub_Params, nullptr);

	return LeaveClub_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.RejectClubInvite
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       ClubID                         (CPF_Parm)

class UAsyncTask* UOnlineClubManager_X::RejectClubInvite(uint64_t ClubID)
{
	static UFunction* uFnRejectClubInvite = nullptr;

	if (!uFnRejectClubInvite)
	{
		uFnRejectClubInvite = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.RejectClubInvite");
	}

	UOnlineClubManager_X_execRejectClubInvite_Params RejectClubInvite_Params;
	RejectClubInvite_Params.ClubID = ClubID;

	this->ProcessEvent(uFnRejectClubInvite, &RejectClubInvite_Params, nullptr);

	return RejectClubInvite_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.AcceptClubInvite
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       ClubID                         (CPF_Parm)

class UTAsyncResult__ClubDetails_X* UOnlineClubManager_X::AcceptClubInvite(uint64_t ClubID)
{
	static UFunction* uFnAcceptClubInvite = nullptr;

	if (!uFnAcceptClubInvite)
	{
		uFnAcceptClubInvite = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.AcceptClubInvite");
	}

	UOnlineClubManager_X_execAcceptClubInvite_Params AcceptClubInvite_Params;
	AcceptClubInvite_Params.ClubID = ClubID;

	this->ProcessEvent(uFnAcceptClubInvite, &AcceptClubInvite_Params, nullptr);

	return AcceptClubInvite_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.SyncClubInvites
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__array_ClubInvite_X* UOnlineClubManager_X::SyncClubInvites()
{
	static UFunction* uFnSyncClubInvites = nullptr;

	if (!uFnSyncClubInvites)
	{
		uFnSyncClubInvites = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.SyncClubInvites");
	}

	UOnlineClubManager_X_execSyncClubInvites_Params SyncClubInvites_Params;

	this->ProcessEvent(uFnSyncClubInvites, &SyncClubInvites_Params, nullptr);

	return SyncClubInvites_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.SetClubOwner
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            NewOwner                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UOnlineClubManager_X::SetClubOwner(struct FUniqueNetId NewOwner)
{
	static UFunction* uFnSetClubOwner = nullptr;

	if (!uFnSetClubOwner)
	{
		uFnSetClubOwner = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.SetClubOwner");
	}

	UOnlineClubManager_X_execSetClubOwner_Params SetClubOwner_Params;
	memcpy_s(&SetClubOwner_Params.NewOwner, 0x48, &NewOwner, 0x48);

	this->ProcessEvent(uFnSetClubOwner, &SetClubOwner_Params, nullptr);

	return SetClubOwner_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.RemoveFromClub
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UOnlineClubManager_X::RemoveFromClub(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnRemoveFromClub = nullptr;

	if (!uFnRemoveFromClub)
	{
		uFnRemoveFromClub = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.RemoveFromClub");
	}

	UOnlineClubManager_X_execRemoveFromClub_Params RemoveFromClub_Params;
	memcpy_s(&RemoveFromClub_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnRemoveFromClub, &RemoveFromClub_Params, nullptr);

	return RemoveFromClub_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.InviteToClub
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UOnlineClubManager_X::InviteToClub(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnInviteToClub = nullptr;

	if (!uFnInviteToClub)
	{
		uFnInviteToClub = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.InviteToClub");
	}

	UOnlineClubManager_X_execInviteToClub_Params InviteToClub_Params;
	memcpy_s(&InviteToClub_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnInviteToClub, &InviteToClub_Params, nullptr);

	return InviteToClub_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.UpdateClubMotD
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Text                           (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UOnlineClubManager_X::UpdateClubMotD(class FString Text)
{
	static UFunction* uFnUpdateClubMotD = nullptr;

	if (!uFnUpdateClubMotD)
	{
		uFnUpdateClubMotD = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.UpdateClubMotD");
	}

	UOnlineClubManager_X_execUpdateClubMotD_Params UpdateClubMotD_Params;
	memcpy_s(&UpdateClubMotD_Params.Text, 0x10, &Text, 0x10);

	this->ProcessEvent(uFnUpdateClubMotD, &UpdateClubMotD_Params, nullptr);

	return UpdateClubMotD_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.UpdateClubColors
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Primary                        (CPF_Parm)
// int32_t                        Accent                         (CPF_Parm)

class UTAsyncResult__ClubDetails_X* UOnlineClubManager_X::UpdateClubColors(int32_t Primary, int32_t Accent)
{
	static UFunction* uFnUpdateClubColors = nullptr;

	if (!uFnUpdateClubColors)
	{
		uFnUpdateClubColors = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.UpdateClubColors");
	}

	UOnlineClubManager_X_execUpdateClubColors_Params UpdateClubColors_Params;
	memcpy_s(&UpdateClubColors_Params.Primary, 0x4, &Primary, 0x4);
	memcpy_s(&UpdateClubColors_Params.Accent, 0x4, &Accent, 0x4);

	this->ProcessEvent(uFnUpdateClubColors, &UpdateClubColors_Params, nullptr);

	return UpdateClubColors_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.UpdateClubName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ClubName                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ClubTag                        (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UOnlineClubManager_X::UpdateClubName(class FString ClubName, class FString ClubTag)
{
	static UFunction* uFnUpdateClubName = nullptr;

	if (!uFnUpdateClubName)
	{
		uFnUpdateClubName = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.UpdateClubName");
	}

	UOnlineClubManager_X_execUpdateClubName_Params UpdateClubName_Params;
	memcpy_s(&UpdateClubName_Params.ClubName, 0x10, &ClubName, 0x10);
	memcpy_s(&UpdateClubName_Params.ClubTag, 0x10, &ClubTag, 0x10);

	this->ProcessEvent(uFnUpdateClubName, &UpdateClubName_Params, nullptr);

	return UpdateClubName_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.OnClubCreated
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          Club                           (CPF_Parm)
// class UError*                  ActionError                    (CPF_Parm)

void UOnlineClubManager_X::OnClubCreated(class UClubDetails_X* Club, class UError* ActionError)
{
	static UFunction* uFnOnClubCreated = nullptr;

	if (!uFnOnClubCreated)
	{
		uFnOnClubCreated = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.OnClubCreated");
	}

	UOnlineClubManager_X_execOnClubCreated_Params OnClubCreated_Params;
	memcpy_s(&OnClubCreated_Params.Club, 0x8, &Club, 0x8);
	memcpy_s(&OnClubCreated_Params.ActionError, 0x8, &ActionError, 0x8);

	this->ProcessEvent(uFnOnClubCreated, &OnClubCreated_Params, nullptr);
};

// Function ProjectX.OnlineClubManager_X.CreateClub
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubSettings_X*         Settings                       (CPF_Parm)

class UTAsyncResult__ClubDetails_X* UOnlineClubManager_X::CreateClub(class UClubSettings_X* Settings)
{
	static UFunction* uFnCreateClub = nullptr;

	if (!uFnCreateClub)
	{
		uFnCreateClub = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.CreateClub");
	}

	UOnlineClubManager_X_execCreateClub_Params CreateClub_Params;
	memcpy_s(&CreateClub_Params.Settings, 0x8, &Settings, 0x8);

	this->ProcessEvent(uFnCreateClub, &CreateClub_Params, nullptr);

	return CreateClub_Params.ReturnValue;
};

// Function ProjectX.OnlineClubManager_X.EventClubChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineClubManager_X*    Manager                        (CPF_Parm)
// uint64_t                       ClubID                         (CPF_Parm)

void UOnlineClubManager_X::EventClubChanged(class UOnlineClubManager_X* Manager, uint64_t ClubID)
{
	static UFunction* uFnEventClubChanged = nullptr;

	if (!uFnEventClubChanged)
	{
		uFnEventClubChanged = UFunction::FindFunction("Function ProjectX.OnlineClubManager_X.EventClubChanged");
	}

	UOnlineClubManager_X_execEventClubChanged_Params EventClubChanged_Params;
	memcpy_s(&EventClubChanged_Params.Manager, 0x8, &Manager, 0x8);
	EventClubChanged_Params.ClubID = ClubID;

	this->ProcessEvent(uFnEventClubChanged, &EventClubChanged_Params, nullptr);
};

// Function ProjectX.__OnlineClubProvider_X__HandleClubSynced_0x1.__OnlineClubProvider_X__HandleClubSynced_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FClubMember             Member                         (CPF_Parm | CPF_NeedCtorLink)

void U__OnlineClubProvider_X__HandleClubSynced_0x1::__OnlineClubProvider_X__HandleClubSynced_0x1(struct FClubMember Member)
{
	static UFunction* uFn__OnlineClubProvider_X__HandleClubSynced_0x1 = nullptr;

	if (!uFn__OnlineClubProvider_X__HandleClubSynced_0x1)
	{
		uFn__OnlineClubProvider_X__HandleClubSynced_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineClubProvider_X__HandleClubSynced_0x1.__OnlineClubProvider_X__HandleClubSynced_0x1");
	}

	U__OnlineClubProvider_X__HandleClubSynced_0x1_exec__OnlineClubProvider_X__HandleClubSynced_0x1_Params __OnlineClubProvider_X__HandleClubSynced_0x1_Params;
	memcpy_s(&__OnlineClubProvider_X__HandleClubSynced_0x1_Params.Member, 0xA0, &Member, 0xA0);

	this->ProcessEvent(uFn__OnlineClubProvider_X__HandleClubSynced_0x1, &__OnlineClubProvider_X__HandleClubSynced_0x1_Params, nullptr);
};

// Function ProjectX.RPC_GetClubDetails_X.SetClubID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetClubDetails_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       InClubID                       (CPF_Parm)

class URPC_GetClubDetails_X* URPC_GetClubDetails_X::SetClubID(uint64_t InClubID)
{
	static UFunction* uFnSetClubID = nullptr;

	if (!uFnSetClubID)
	{
		uFnSetClubID = UFunction::FindFunction("Function ProjectX.RPC_GetClubDetails_X.SetClubID");
	}

	URPC_GetClubDetails_X_execSetClubID_Params SetClubID_Params;
	SetClubID_Params.InClubID = InClubID;

	this->ProcessEvent(uFnSetClubID, &SetClubID_Params, nullptr);

	return SetClubID_Params.ReturnValue;
};

// Function ProjectX.RPC_ClubDetailsBase_X.__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UClubDetails_X* URPC_ClubDetailsBase_X::__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1()
{
	static UFunction* uFn__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1 = nullptr;

	if (!uFn__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1)
	{
		uFn__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1 = UFunction::FindFunction("Function ProjectX.RPC_ClubDetailsBase_X.__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1");
	}

	URPC_ClubDetailsBase_X_exec__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1_Params __RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1_Params;

	this->ProcessEvent(uFn__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1, &__RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1_Params, nullptr);

	return __RPC_ClubDetailsBase_X__CreateClubDetailsTask_0x1_Params.ReturnValue;
};

// Function ProjectX.RPC_ClubDetailsBase_X.CreateClubDetailsTask
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__ClubDetails_X* URPC_ClubDetailsBase_X::CreateClubDetailsTask()
{
	static UFunction* uFnCreateClubDetailsTask = nullptr;

	if (!uFnCreateClubDetailsTask)
	{
		uFnCreateClubDetailsTask = UFunction::FindFunction("Function ProjectX.RPC_ClubDetailsBase_X.CreateClubDetailsTask");
	}

	URPC_ClubDetailsBase_X_execCreateClubDetailsTask_Params CreateClubDetailsTask_Params;

	this->ProcessEvent(uFnCreateClubDetailsTask, &CreateClubDetailsTask_Params, nullptr);

	return CreateClubDetailsTask_Params.ReturnValue;
};

// Function ProjectX.OnlineClubProvider_X.ClubSynced
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          Club                           (CPF_Parm)

void UOnlineClubProvider_X::ClubSynced(class UClubDetails_X* Club)
{
	static UFunction* uFnClubSynced = nullptr;

	if (!uFnClubSynced)
	{
		uFnClubSynced = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.ClubSynced");
	}

	UOnlineClubProvider_X_execClubSynced_Params ClubSynced_Params;
	memcpy_s(&ClubSynced_Params.Club, 0x8, &Club, 0x8);

	this->ProcessEvent(uFnClubSynced, &ClubSynced_Params, nullptr);
};

// Function ProjectX.OnlineClubProvider_X.IsSyncing
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineClubProvider_X::IsSyncing()
{
	static UFunction* uFnIsSyncing = nullptr;

	if (!uFnIsSyncing)
	{
		uFnIsSyncing = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.IsSyncing");
	}

	UOnlineClubProvider_X_execIsSyncing_Params IsSyncing_Params;

	this->ProcessEvent(uFnIsSyncing, &IsSyncing_Params, nullptr);

	return IsSyncing_Params.ReturnValue;
};

// Function ProjectX.OnlineClubProvider_X.NotifyWhenSyncComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineClubProvider_X::NotifyWhenSyncComplete(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyWhenSyncComplete = nullptr;

	if (!uFnNotifyWhenSyncComplete)
	{
		uFnNotifyWhenSyncComplete = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.NotifyWhenSyncComplete");
	}

	UOnlineClubProvider_X_execNotifyWhenSyncComplete_Params NotifyWhenSyncComplete_Params;
	memcpy_s(&NotifyWhenSyncComplete_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyWhenSyncComplete, &NotifyWhenSyncComplete_Params, nullptr);
};

// Function ProjectX.OnlineClubProvider_X.GetPlayerClubSyncResult
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPlayerClubSyncResult   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

struct FPlayerClubSyncResult UOnlineClubProvider_X::GetPlayerClubSyncResult(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerClubSyncResult = nullptr;

	if (!uFnGetPlayerClubSyncResult)
	{
		uFnGetPlayerClubSyncResult = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.GetPlayerClubSyncResult");
	}

	UOnlineClubProvider_X_execGetPlayerClubSyncResult_Params GetPlayerClubSyncResult_Params;
	memcpy_s(&GetPlayerClubSyncResult_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerClubSyncResult, &GetPlayerClubSyncResult_Params, nullptr);

	return GetPlayerClubSyncResult_Params.ReturnValue;
};

// Function ProjectX.OnlineClubProvider_X.SetPlayerClubSyncResult
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlineClubProvider_X::SetPlayerClubSyncResult(struct FUniqueNetId PlayerID, class UError* Error)
{
	static UFunction* uFnSetPlayerClubSyncResult = nullptr;

	if (!uFnSetPlayerClubSyncResult)
	{
		uFnSetPlayerClubSyncResult = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.SetPlayerClubSyncResult");
	}

	UOnlineClubProvider_X_execSetPlayerClubSyncResult_Params SetPlayerClubSyncResult_Params;
	memcpy_s(&SetPlayerClubSyncResult_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&SetPlayerClubSyncResult_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnSetPlayerClubSyncResult, &SetPlayerClubSyncResult_Params, nullptr);
};

// Function ProjectX.OnlineClubProvider_X.HandlePlayerSynced
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPlayerClubDetails_X* RPC                            (CPF_Parm)

void UOnlineClubProvider_X::HandlePlayerSynced(class URPC_GetPlayerClubDetails_X* RPC)
{
	static UFunction* uFnHandlePlayerSynced = nullptr;

	if (!uFnHandlePlayerSynced)
	{
		uFnHandlePlayerSynced = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.HandlePlayerSynced");
	}

	UOnlineClubProvider_X_execHandlePlayerSynced_Params HandlePlayerSynced_Params;
	memcpy_s(&HandlePlayerSynced_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandlePlayerSynced, &HandlePlayerSynced_Params, nullptr);
};

// Function ProjectX.OnlineClubProvider_X.SyncPlayerClubDetails
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UOnlineClubProvider_X::SyncPlayerClubDetails(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSyncPlayerClubDetails = nullptr;

	if (!uFnSyncPlayerClubDetails)
	{
		uFnSyncPlayerClubDetails = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.SyncPlayerClubDetails");
	}

	UOnlineClubProvider_X_execSyncPlayerClubDetails_Params SyncPlayerClubDetails_Params;
	memcpy_s(&SyncPlayerClubDetails_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSyncPlayerClubDetails, &SyncPlayerClubDetails_Params, nullptr);

	return SyncPlayerClubDetails_Params.ReturnValue;
};

// Function ProjectX.OnlineClubProvider_X.GetPlayerClubDetails
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UOnlineClubProvider_X::GetPlayerClubDetails(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerClubDetails = nullptr;

	if (!uFnGetPlayerClubDetails)
	{
		uFnGetPlayerClubDetails = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.GetPlayerClubDetails");
	}

	UOnlineClubProvider_X_execGetPlayerClubDetails_Params GetPlayerClubDetails_Params;
	memcpy_s(&GetPlayerClubDetails_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerClubDetails, &GetPlayerClubDetails_Params, nullptr);

	return GetPlayerClubDetails_Params.ReturnValue;
};

// Function ProjectX.OnlineClubProvider_X.HandleClubSynced
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_GetClubDetails_X*   RPC                            (CPF_Parm)

void UOnlineClubProvider_X::HandleClubSynced(class URPC_GetClubDetails_X* RPC)
{
	static UFunction* uFnHandleClubSynced = nullptr;

	if (!uFnHandleClubSynced)
	{
		uFnHandleClubSynced = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.HandleClubSynced");
	}

	UOnlineClubProvider_X_execHandleClubSynced_Params HandleClubSynced_Params;
	memcpy_s(&HandleClubSynced_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleClubSynced, &HandleClubSynced_Params, nullptr);
};

// Function ProjectX.OnlineClubProvider_X.SyncClubDetails
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       ClubID                         (CPF_Parm)

class UTAsyncResult__ClubDetails_X* UOnlineClubProvider_X::SyncClubDetails(uint64_t ClubID)
{
	static UFunction* uFnSyncClubDetails = nullptr;

	if (!uFnSyncClubDetails)
	{
		uFnSyncClubDetails = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.SyncClubDetails");
	}

	UOnlineClubProvider_X_execSyncClubDetails_Params SyncClubDetails_Params;
	SyncClubDetails_Params.ClubID = ClubID;

	this->ProcessEvent(uFnSyncClubDetails, &SyncClubDetails_Params, nullptr);

	return SyncClubDetails_Params.ReturnValue;
};

// Function ProjectX.OnlineClubProvider_X.GetClubDetails
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       ClubID                         (CPF_Parm)

class UTAsyncResult__ClubDetails_X* UOnlineClubProvider_X::GetClubDetails(uint64_t ClubID)
{
	static UFunction* uFnGetClubDetails = nullptr;

	if (!uFnGetClubDetails)
	{
		uFnGetClubDetails = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.GetClubDetails");
	}

	UOnlineClubProvider_X_execGetClubDetails_Params GetClubDetails_Params;
	GetClubDetails_Params.ClubID = ClubID;

	this->ProcessEvent(uFnGetClubDetails, &GetClubDetails_Params, nullptr);

	return GetClubDetails_Params.ReturnValue;
};

// Function ProjectX.OnlineClubProvider_X.EventPlayerSynced
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineClubProvider_X*   Provider                       (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineClubProvider_X::EventPlayerSynced(class UOnlineClubProvider_X* Provider, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnEventPlayerSynced = nullptr;

	if (!uFnEventPlayerSynced)
	{
		uFnEventPlayerSynced = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.EventPlayerSynced");
	}

	UOnlineClubProvider_X_execEventPlayerSynced_Params EventPlayerSynced_Params;
	memcpy_s(&EventPlayerSynced_Params.Provider, 0x8, &Provider, 0x8);
	memcpy_s(&EventPlayerSynced_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnEventPlayerSynced, &EventPlayerSynced_Params, nullptr);
};

// Function ProjectX.OnlineClubProvider_X.EventSyncComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineClubProvider_X*   Provider                       (CPF_Parm)

void UOnlineClubProvider_X::EventSyncComplete(class UOnlineClubProvider_X* Provider)
{
	static UFunction* uFnEventSyncComplete = nullptr;

	if (!uFnEventSyncComplete)
	{
		uFnEventSyncComplete = UFunction::FindFunction("Function ProjectX.OnlineClubProvider_X.EventSyncComplete");
	}

	UOnlineClubProvider_X_execEventSyncComplete_Params EventSyncComplete_Params;
	memcpy_s(&EventSyncComplete_Params.Provider, 0x8, &Provider, 0x8);

	this->ProcessEvent(uFnEventSyncComplete, &EventSyncComplete_Params, nullptr);
};

// Function ProjectX.__OnlineClubProvider_X__SyncClubDetails_0x1.__OnlineClubProvider_X__SyncClubDetails_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  _                              (CPF_Parm)

void U__OnlineClubProvider_X__SyncClubDetails_0x1::__OnlineClubProvider_X__SyncClubDetails_0x2(class URPC_X* _)
{
	static UFunction* uFn__OnlineClubProvider_X__SyncClubDetails_0x2 = nullptr;

	if (!uFn__OnlineClubProvider_X__SyncClubDetails_0x2)
	{
		uFn__OnlineClubProvider_X__SyncClubDetails_0x2 = UFunction::FindFunction("Function ProjectX.__OnlineClubProvider_X__SyncClubDetails_0x1.__OnlineClubProvider_X__SyncClubDetails_0x2");
	}

	U__OnlineClubProvider_X__SyncClubDetails_0x1_exec__OnlineClubProvider_X__SyncClubDetails_0x2_Params __OnlineClubProvider_X__SyncClubDetails_0x2_Params;
	memcpy_s(&__OnlineClubProvider_X__SyncClubDetails_0x2_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__OnlineClubProvider_X__SyncClubDetails_0x2, &__OnlineClubProvider_X__SyncClubDetails_0x2_Params, nullptr);
};

// Function ProjectX.__OnlineClubProvider_X__SyncClubDetails_0x1.__OnlineClubProvider_X__SyncClubDetails_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URPC_GetClubDetails_X*   R                              (CPF_Parm)

bool U__OnlineClubProvider_X__SyncClubDetails_0x1::__OnlineClubProvider_X__SyncClubDetails_0x1(class URPC_GetClubDetails_X* R)
{
	static UFunction* uFn__OnlineClubProvider_X__SyncClubDetails_0x1 = nullptr;

	if (!uFn__OnlineClubProvider_X__SyncClubDetails_0x1)
	{
		uFn__OnlineClubProvider_X__SyncClubDetails_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineClubProvider_X__SyncClubDetails_0x1.__OnlineClubProvider_X__SyncClubDetails_0x1");
	}

	U__OnlineClubProvider_X__SyncClubDetails_0x1_exec__OnlineClubProvider_X__SyncClubDetails_0x1_Params __OnlineClubProvider_X__SyncClubDetails_0x1_Params;
	memcpy_s(&__OnlineClubProvider_X__SyncClubDetails_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineClubProvider_X__SyncClubDetails_0x1, &__OnlineClubProvider_X__SyncClubDetails_0x1_Params, nullptr);

	return __OnlineClubProvider_X__SyncClubDetails_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineClubProvider_X__SyncPlayerClubDetails_0x1.__OnlineClubProvider_X__SyncPlayerClubDetails_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  _                              (CPF_Parm)

void U__OnlineClubProvider_X__SyncPlayerClubDetails_0x1::__OnlineClubProvider_X__SyncPlayerClubDetails_0x2(class URPC_X* _)
{
	static UFunction* uFn__OnlineClubProvider_X__SyncPlayerClubDetails_0x2 = nullptr;

	if (!uFn__OnlineClubProvider_X__SyncPlayerClubDetails_0x2)
	{
		uFn__OnlineClubProvider_X__SyncPlayerClubDetails_0x2 = UFunction::FindFunction("Function ProjectX.__OnlineClubProvider_X__SyncPlayerClubDetails_0x1.__OnlineClubProvider_X__SyncPlayerClubDetails_0x2");
	}

	U__OnlineClubProvider_X__SyncPlayerClubDetails_0x1_exec__OnlineClubProvider_X__SyncPlayerClubDetails_0x2_Params __OnlineClubProvider_X__SyncPlayerClubDetails_0x2_Params;
	memcpy_s(&__OnlineClubProvider_X__SyncPlayerClubDetails_0x2_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__OnlineClubProvider_X__SyncPlayerClubDetails_0x2, &__OnlineClubProvider_X__SyncPlayerClubDetails_0x2_Params, nullptr);
};

// Function ProjectX.__OnlineClubProvider_X__SyncPlayerClubDetails_0x1.__OnlineClubProvider_X__SyncPlayerClubDetails_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URPC_GetPlayerClubDetails_X* R                              (CPF_Parm)

bool U__OnlineClubProvider_X__SyncPlayerClubDetails_0x1::__OnlineClubProvider_X__SyncPlayerClubDetails_0x1(class URPC_GetPlayerClubDetails_X* R)
{
	static UFunction* uFn__OnlineClubProvider_X__SyncPlayerClubDetails_0x1 = nullptr;

	if (!uFn__OnlineClubProvider_X__SyncPlayerClubDetails_0x1)
	{
		uFn__OnlineClubProvider_X__SyncPlayerClubDetails_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineClubProvider_X__SyncPlayerClubDetails_0x1.__OnlineClubProvider_X__SyncPlayerClubDetails_0x1");
	}

	U__OnlineClubProvider_X__SyncPlayerClubDetails_0x1_exec__OnlineClubProvider_X__SyncPlayerClubDetails_0x1_Params __OnlineClubProvider_X__SyncPlayerClubDetails_0x1_Params;
	memcpy_s(&__OnlineClubProvider_X__SyncPlayerClubDetails_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineClubProvider_X__SyncPlayerClubDetails_0x1, &__OnlineClubProvider_X__SyncPlayerClubDetails_0x1_Params, nullptr);

	return __OnlineClubProvider_X__SyncPlayerClubDetails_0x1_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerClubDetails_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPlayerClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetPlayerClubDetails_X* URPC_GetPlayerClubDetails_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerClubDetails_X.SetPlayerID");
	}

	URPC_GetPlayerClubDetails_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.__OnlineGame_X__CheckPsyNetConnection_0x1.__OnlineGame_X__CheckPsyNetConnection_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void U__OnlineGame_X__CheckPsyNetConnection_0x1::__OnlineGame_X__CheckPsyNetConnection_0x1(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFn__OnlineGame_X__CheckPsyNetConnection_0x1 = nullptr;

	if (!uFn__OnlineGame_X__CheckPsyNetConnection_0x1)
	{
		uFn__OnlineGame_X__CheckPsyNetConnection_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGame_X__CheckPsyNetConnection_0x1.__OnlineGame_X__CheckPsyNetConnection_0x1");
	}

	U__OnlineGame_X__CheckPsyNetConnection_0x1_exec__OnlineGame_X__CheckPsyNetConnection_0x1_Params __OnlineGame_X__CheckPsyNetConnection_0x1_Params;
	memcpy_s(&__OnlineGame_X__CheckPsyNetConnection_0x1_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFn__OnlineGame_X__CheckPsyNetConnection_0x1, &__OnlineGame_X__CheckPsyNetConnection_0x1_Params, nullptr);
};

// Function ProjectX.__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1.__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UOnlinePlayer_X*         P                              (CPF_Parm)

bool U__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1::__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1(class UOnlinePlayer_X* P)
{
	static UFunction* uFn__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1 = nullptr;

	if (!uFn__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1)
	{
		uFn__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1.__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1");
	}

	U__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1_exec__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1_Params __OnlineGame_X__GetOnlinePlayerFromEpicId_0x1_Params;
	memcpy_s(&__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1, &__OnlineGame_X__GetOnlinePlayerFromEpicId_0x1_Params, nullptr);

	return __OnlineGame_X__GetOnlinePlayerFromEpicId_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameMatchmaking_X__AddRecommendedServers_0x1.__OnlineGameMatchmaking_X__AddRecommendedServers_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URegionPing_X*           R                              (CPF_Parm)

bool U__OnlineGameMatchmaking_X__AddRecommendedServers_0x1::__OnlineGameMatchmaking_X__AddRecommendedServers_0x1(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x1)
	{
		uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameMatchmaking_X__AddRecommendedServers_0x1.__OnlineGameMatchmaking_X__AddRecommendedServers_0x1");
	}

	U__OnlineGameMatchmaking_X__AddRecommendedServers_0x1_exec__OnlineGameMatchmaking_X__AddRecommendedServers_0x1_Params __OnlineGameMatchmaking_X__AddRecommendedServers_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__AddRecommendedServers_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x1, &__OnlineGameMatchmaking_X__AddRecommendedServers_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__AddRecommendedServers_0x1_Params.ReturnValue;
};

// Function ProjectX.RegionPing_X.Reset
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URegionPing_X::Reset()
{
	static UFunction* uFnReset = nullptr;

	if (!uFnReset)
	{
		uFnReset = UFunction::FindFunction("Function ProjectX.RegionPing_X.Reset");
	}

	URegionPing_X_execReset_Params Reset_Params;

	this->ProcessEvent(uFnReset, &Reset_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.AddRecommendedServers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          PingThreshold                  (CPF_OptionalParm | CPF_Parm)
// float                          PingIncrement                  (CPF_OptionalParm | CPF_Parm)
// float                          MaxPing                        (CPF_OptionalParm | CPF_Parm)

bool UOnlineGameMatchmaking_X::AddRecommendedServers(float PingThreshold, float PingIncrement, float MaxPing)
{
	static UFunction* uFnAddRecommendedServers = nullptr;

	if (!uFnAddRecommendedServers)
	{
		uFnAddRecommendedServers = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.AddRecommendedServers");
	}

	UOnlineGameMatchmaking_X_execAddRecommendedServers_Params AddRecommendedServers_Params;
	memcpy_s(&AddRecommendedServers_Params.PingThreshold, 0x4, &PingThreshold, 0x4);
	memcpy_s(&AddRecommendedServers_Params.PingIncrement, 0x4, &PingIncrement, 0x4);
	memcpy_s(&AddRecommendedServers_Params.MaxPing, 0x4, &MaxPing, 0x4);

	this->ProcessEvent(uFnAddRecommendedServers, &AddRecommendedServers_Params, nullptr);

	return AddRecommendedServers_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.RecordStart
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bUseRecommendedRegions         (CPF_Parm)

void UOnlineGameMatchmaking_X::RecordStart(unsigned long bUseRecommendedRegions)
{
	static UFunction* uFnRecordStart = nullptr;

	if (!uFnRecordStart)
	{
		uFnRecordStart = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.RecordStart");
	}

	UOnlineGameMatchmaking_X_execRecordStart_Params RecordStart_Params;
	RecordStart_Params.bUseRecommendedRegions = bUseRecommendedRegions;

	this->ProcessEvent(uFnRecordStart, &RecordStart_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.StartMatchmaking
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::StartMatchmaking()
{
	static UFunction* uFnStartMatchmaking = nullptr;

	if (!uFnStartMatchmaking)
	{
		uFnStartMatchmaking = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.StartMatchmaking");
	}

	UOnlineGameMatchmaking_X_execStartMatchmaking_Params StartMatchmaking_Params;

	this->ProcessEvent(uFnStartMatchmaking, &StartMatchmaking_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.UpdateMatchmaking
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::UpdateMatchmaking()
{
	static UFunction* uFnUpdateMatchmaking = nullptr;

	if (!uFnUpdateMatchmaking)
	{
		uFnUpdateMatchmaking = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.UpdateMatchmaking");
	}

	UOnlineGameMatchmaking_X_execUpdateMatchmaking_Params UpdateMatchmaking_Params;

	this->ProcessEvent(uFnUpdateMatchmaking, &UpdateMatchmaking_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.SendMatchmakingState
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::SendMatchmakingState()
{
	static UFunction* uFnSendMatchmakingState = nullptr;

	if (!uFnSendMatchmakingState)
	{
		uFnSendMatchmakingState = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.SendMatchmakingState");
	}

	UOnlineGameMatchmaking_X_execSendMatchmakingState_Params SendMatchmakingState_Params;

	this->ProcessEvent(uFnSendMatchmakingState, &SendMatchmakingState_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.HandleError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameMatchmaking_X::HandleError(class UError* Error)
{
	static UFunction* uFnHandleError = nullptr;

	if (!uFnHandleError)
	{
		uFnHandleError = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.HandleError");
	}

	UOnlineGameMatchmaking_X_execHandleError_Params HandleError_Params;
	memcpy_s(&HandleError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleError, &HandleError_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.HandleMatchmakingStartSuccessRPC
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* RPC                            (CPF_Parm)

void UOnlineGameMatchmaking_X::HandleMatchmakingStartSuccessRPC(class URPC_StartMatchmaking_X* RPC)
{
	static UFunction* uFnHandleMatchmakingStartSuccessRPC = nullptr;

	if (!uFnHandleMatchmakingStartSuccessRPC)
	{
		uFnHandleMatchmakingStartSuccessRPC = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.HandleMatchmakingStartSuccessRPC");
	}

	UOnlineGameMatchmaking_X_execHandleMatchmakingStartSuccessRPC_Params HandleMatchmakingStartSuccessRPC_Params;
	memcpy_s(&HandleMatchmakingStartSuccessRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleMatchmakingStartSuccessRPC, &HandleMatchmakingStartSuccessRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.HandleStartSearch
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              Task                           (CPF_Parm)

void UOnlineGameMatchmaking_X::HandleStartSearch(class UAsyncTask* Task)
{
	static UFunction* uFnHandleStartSearch = nullptr;

	if (!uFnHandleStartSearch)
	{
		uFnHandleStartSearch = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.HandleStartSearch");
	}

	UOnlineGameMatchmaking_X_execHandleStartSearch_Params HandleStartSearch_Params;
	memcpy_s(&HandleStartSearch_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnHandleStartSearch, &HandleStartSearch_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.OnReceiveGameServer
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameMatchmaking_X::OnReceiveGameServer(struct FServerReservationData Reservation)
{
	static UFunction* uFnOnReceiveGameServer = nullptr;

	if (!uFnOnReceiveGameServer)
	{
		uFnOnReceiveGameServer = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.OnReceiveGameServer");
	}

	UOnlineGameMatchmaking_X_execOnReceiveGameServer_Params OnReceiveGameServer_Params;
	memcpy_s(&OnReceiveGameServer_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnOnReceiveGameServer, &OnReceiveGameServer_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.SetupForTimeConstraints
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::SetupForTimeConstraints()
{
	static UFunction* uFnSetupForTimeConstraints = nullptr;

	if (!uFnSetupForTimeConstraints)
	{
		uFnSetupForTimeConstraints = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.SetupForTimeConstraints");
	}

	UOnlineGameMatchmaking_X_execSetupForTimeConstraints_Params SetupForTimeConstraints_Params;

	this->ProcessEvent(uFnSetupForTimeConstraints, &SetupForTimeConstraints_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.OnPlaylistTimeEnded
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::OnPlaylistTimeEnded()
{
	static UFunction* uFnOnPlaylistTimeEnded = nullptr;

	if (!uFnOnPlaylistTimeEnded)
	{
		uFnOnPlaylistTimeEnded = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.OnPlaylistTimeEnded");
	}

	UOnlineGameMatchmaking_X_execOnPlaylistTimeEnded_Params OnPlaylistTimeEnded_Params;

	this->ProcessEvent(uFnOnPlaylistTimeEnded, &OnPlaylistTimeEnded_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__StartSearch_0x1
// [0x40840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FDSRegionInfo           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class URegionPing_X*           R                              (CPF_Parm)

struct FDSRegionInfo UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__StartSearch_0x1(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__StartSearch_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__StartSearch_0x1)
	{
		uFn__OnlineGameMatchmaking_X__StartSearch_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__StartSearch_0x1");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__StartSearch_0x1_Params __OnlineGameMatchmaking_X__StartSearch_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__StartSearch_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__StartSearch_0x1, &__OnlineGameMatchmaking_X__StartSearch_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__StartSearch_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)

class FString UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1(int32_t Playlist)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1)
	{
		uFn__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1_Params __OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1, &__OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__GetLocalizedPlaylistsString_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetRegionsString_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FDSRegionInfo           R                              (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__GetRegionsString_0x1(struct FDSRegionInfo R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__GetRegionsString_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__GetRegionsString_0x1)
	{
		uFn__OnlineGameMatchmaking_X__GetRegionsString_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetRegionsString_0x1");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__GetRegionsString_0x1_Params __OnlineGameMatchmaking_X__GetRegionsString_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__GetRegionsString_0x1_Params.R, 0x18, &R, 0x18);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__GetRegionsString_0x1, &__OnlineGameMatchmaking_X__GetRegionsString_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__GetRegionsString_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class USuperRegion_X*          SuperRegion                    (CPF_Parm)

class FString UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3(class USuperRegion_X* SuperRegion)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3)
	{
		uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3_Params __OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3_Params.SuperRegion, 0x8, &SuperRegion, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3, &__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3_Params, nullptr);

	return __OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x3_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class USuperRegion_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URegion_X*               R                              (CPF_Parm)

class USuperRegion_X* UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2(class URegion_X* R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2)
	{
		uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2_Params __OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2, &__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2_Params, nullptr);

	return __OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URegion_X*               ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FDSRegionInfo           R                              (CPF_Parm | CPF_NeedCtorLink)

class URegion_X* UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1(struct FDSRegionInfo R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1)
	{
		uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1_Params __OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1_Params.R, 0x18, &R, 0x18);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1, &__OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__GetLocalizedRegionsString_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class URegionPing_X*           R                              (CPF_Parm)

class FString UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1)
	{
		uFn__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1_Params __OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1, &__OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__GetDebugSuperRegionString_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__BeginState_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FDSRegionInfo           R                              (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__BeginState_0x1(struct FDSRegionInfo R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__BeginState_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__BeginState_0x1)
	{
		uFn__OnlineGameMatchmaking_X__BeginState_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__BeginState_0x1");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__BeginState_0x1_Params __OnlineGameMatchmaking_X__BeginState_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__BeginState_0x1_Params.R, 0x18, &R, 0x18);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__BeginState_0x1, &__OnlineGameMatchmaking_X__BeginState_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__BeginState_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__AddRecommendedServers_0x3
// [0x40840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FDSRegionInfo           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class URegionPing_X*           R                              (CPF_Parm)

struct FDSRegionInfo UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__AddRecommendedServers_0x3(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x3 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x3)
	{
		uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x3 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__AddRecommendedServers_0x3");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__AddRecommendedServers_0x3_Params __OnlineGameMatchmaking_X__AddRecommendedServers_0x3_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__AddRecommendedServers_0x3_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x3, &__OnlineGameMatchmaking_X__AddRecommendedServers_0x3_Params, nullptr);

	return __OnlineGameMatchmaking_X__AddRecommendedServers_0x3_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__AddRecommendedServers_0x2
// [0x40840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FDSRegionInfo           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class URegionPing_X*           R                              (CPF_Parm)

struct FDSRegionInfo UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__AddRecommendedServers_0x2(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x2 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x2)
	{
		uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__AddRecommendedServers_0x2");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__AddRecommendedServers_0x2_Params __OnlineGameMatchmaking_X__AddRecommendedServers_0x2_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__AddRecommendedServers_0x2_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__AddRecommendedServers_0x2, &__OnlineGameMatchmaking_X__AddRecommendedServers_0x2_Params, nullptr);

	return __OnlineGameMatchmaking_X__AddRecommendedServers_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__RecordStart_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FDSRegionInfo           R                              (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::__OnlineGameMatchmaking_X__RecordStart_0x1(struct FDSRegionInfo R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__RecordStart_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__RecordStart_0x1)
	{
		uFn__OnlineGameMatchmaking_X__RecordStart_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.__OnlineGameMatchmaking_X__RecordStart_0x1");
	}

	UOnlineGameMatchmaking_X_exec__OnlineGameMatchmaking_X__RecordStart_0x1_Params __OnlineGameMatchmaking_X__RecordStart_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__RecordStart_0x1_Params.R, 0x18, &R, 0x18);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__RecordStart_0x1, &__OnlineGameMatchmaking_X__RecordStart_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__RecordStart_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGameMatchmaking_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.PrintDebugInfo");
	}

	UOnlineGameMatchmaking_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.IsMatchmakingDisabled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameMatchmaking_X::IsMatchmakingDisabled()
{
	static UFunction* uFnIsMatchmakingDisabled = nullptr;

	if (!uFnIsMatchmakingDisabled)
	{
		uFnIsMatchmakingDisabled = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.IsMatchmakingDisabled");
	}

	UOnlineGameMatchmaking_X_execIsMatchmakingDisabled_Params IsMatchmakingDisabled_Params;

	this->ProcessEvent(uFnIsMatchmakingDisabled, &IsMatchmakingDisabled_Params, nullptr);

	return IsMatchmakingDisabled_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.SetSkillIgnored
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bIgnore                        (CPF_Parm)

void UOnlineGameMatchmaking_X::SetSkillIgnored(unsigned long bIgnore)
{
	static UFunction* uFnSetSkillIgnored = nullptr;

	if (!uFnSetSkillIgnored)
	{
		uFnSetSkillIgnored = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.SetSkillIgnored");
	}

	UOnlineGameMatchmaking_X_execSetSkillIgnored_Params SetSkillIgnored_Params;
	SetSkillIgnored_Params.bIgnore = bIgnore;

	this->ProcessEvent(uFnSetSkillIgnored, &SetSkillIgnored_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.ToggleSkill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::ToggleSkill()
{
	static UFunction* uFnToggleSkill = nullptr;

	if (!uFnToggleSkill)
	{
		uFnToggleSkill = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.ToggleSkill");
	}

	UOnlineGameMatchmaking_X_execToggleSkill_Params ToggleSkill_Params;

	this->ProcessEvent(uFnToggleSkill, &ToggleSkill_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.ClearMatchmakingBanTime
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::ClearMatchmakingBanTime()
{
	static UFunction* uFnClearMatchmakingBanTime = nullptr;

	if (!uFnClearMatchmakingBanTime)
	{
		uFnClearMatchmakingBanTime = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.ClearMatchmakingBanTime");
	}

	UOnlineGameMatchmaking_X_execClearMatchmakingBanTime_Params ClearMatchmakingBanTime_Params;

	this->ProcessEvent(uFnClearMatchmakingBanTime, &ClearMatchmakingBanTime_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.SetMatchmakingBanTime
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        Duration                       (CPF_Parm)

void UOnlineGameMatchmaking_X::SetMatchmakingBanTime(int32_t Duration)
{
	static UFunction* uFnSetMatchmakingBanTime = nullptr;

	if (!uFnSetMatchmakingBanTime)
	{
		uFnSetMatchmakingBanTime = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.SetMatchmakingBanTime");
	}

	UOnlineGameMatchmaking_X_execSetMatchmakingBanTime_Params SetMatchmakingBanTime_Params;
	memcpy_s(&SetMatchmakingBanTime_Params.Duration, 0x4, &Duration, 0x4);

	this->ProcessEvent(uFnSetMatchmakingBanTime, &SetMatchmakingBanTime_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.HandlePartyLeaderChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FUniqueNetId            NewLeader                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameMatchmaking_X::HandlePartyLeaderChanged(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId NewLeader)
{
	static UFunction* uFnHandlePartyLeaderChanged = nullptr;

	if (!uFnHandlePartyLeaderChanged)
	{
		uFnHandlePartyLeaderChanged = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.HandlePartyLeaderChanged");
	}

	UOnlineGameMatchmaking_X_execHandlePartyLeaderChanged_Params HandlePartyLeaderChanged_Params;
	memcpy_s(&HandlePartyLeaderChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&HandlePartyLeaderChanged_Params.NewLeader, 0x48, &NewLeader, 0x48);

	this->ProcessEvent(uFnHandlePartyLeaderChanged, &HandlePartyLeaderChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.HandlePartySizeChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// int32_t                        NewSize                        (CPF_Parm)
// int32_t                        OldSize                        (CPF_Parm)

void UOnlineGameMatchmaking_X::HandlePartySizeChanged(class UOnlineGameParty_X* PartyObject, int32_t NewSize, int32_t OldSize)
{
	static UFunction* uFnHandlePartySizeChanged = nullptr;

	if (!uFnHandlePartySizeChanged)
	{
		uFnHandlePartySizeChanged = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.HandlePartySizeChanged");
	}

	UOnlineGameMatchmaking_X_execHandlePartySizeChanged_Params HandlePartySizeChanged_Params;
	memcpy_s(&HandlePartySizeChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&HandlePartySizeChanged_Params.NewSize, 0x4, &NewSize, 0x4);
	memcpy_s(&HandlePartySizeChanged_Params.OldSize, 0x4, &OldSize, 0x4);

	this->ProcessEvent(uFnHandlePartySizeChanged, &HandlePartySizeChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.HandlePartyDestroyed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameMatchmaking_X::HandlePartyDestroyed(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnHandlePartyDestroyed = nullptr;

	if (!uFnHandlePartyDestroyed)
	{
		uFnHandlePartyDestroyed = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.HandlePartyDestroyed");
	}

	UOnlineGameMatchmaking_X_execHandlePartyDestroyed_Params HandlePartyDestroyed_Params;
	memcpy_s(&HandlePartyDestroyed_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnHandlePartyDestroyed, &HandlePartyDestroyed_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.OnFindGameWarning
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  FailReason                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameMatchmaking_X::OnFindGameWarning(class FString FailReason)
{
	static UFunction* uFnOnFindGameWarning = nullptr;

	if (!uFnOnFindGameWarning)
	{
		uFnOnFindGameWarning = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.OnFindGameWarning");
	}

	UOnlineGameMatchmaking_X_execOnFindGameWarning_Params OnFindGameWarning_Params;
	memcpy_s(&OnFindGameWarning_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnOnFindGameWarning, &OnFindGameWarning_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.GetGameServerID
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::GetGameServerID()
{
	static UFunction* uFnGetGameServerID = nullptr;

	if (!uFnGetGameServerID)
	{
		uFnGetGameServerID = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.GetGameServerID");
	}

	UOnlineGameMatchmaking_X_execGetGameServerID_Params GetGameServerID_Params;

	this->ProcessEvent(uFnGetGameServerID, &GetGameServerID_Params, nullptr);

	return GetGameServerID_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.SortPlaylists
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        A                              (CPF_Parm)
// int32_t                        B                              (CPF_Parm)

int32_t UOnlineGameMatchmaking_X::SortPlaylists(int32_t A, int32_t B)
{
	static UFunction* uFnSortPlaylists = nullptr;

	if (!uFnSortPlaylists)
	{
		uFnSortPlaylists = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.SortPlaylists");
	}

	UOnlineGameMatchmaking_X_execSortPlaylists_Params SortPlaylists_Params;
	memcpy_s(&SortPlaylists_Params.A, 0x4, &A, 0x4);
	memcpy_s(&SortPlaylists_Params.B, 0x4, &B, 0x4);

	this->ProcessEvent(uFnSortPlaylists, &SortPlaylists_Params, nullptr);

	return SortPlaylists_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.GetPartyMembersString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::GetPartyMembersString()
{
	static UFunction* uFnGetPartyMembersString = nullptr;

	if (!uFnGetPartyMembersString)
	{
		uFnGetPartyMembersString = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.GetPartyMembersString");
	}

	UOnlineGameMatchmaking_X_execGetPartyMembersString_Params GetPartyMembersString_Params;

	this->ProcessEvent(uFnGetPartyMembersString, &GetPartyMembersString_Params, nullptr);

	return GetPartyMembersString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.GetSubRegionPings
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// TArray<class URegionPing_X*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  SuperRegionID                  (CPF_Parm | CPF_NeedCtorLink)

TArray<class URegionPing_X*> UOnlineGameMatchmaking_X::GetSubRegionPings(class FString SuperRegionID)
{
	static UFunction* uFnGetSubRegionPings = nullptr;

	if (!uFnGetSubRegionPings)
	{
		uFnGetSubRegionPings = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.GetSubRegionPings");
	}

	UOnlineGameMatchmaking_X_execGetSubRegionPings_Params GetSubRegionPings_Params;
	memcpy_s(&GetSubRegionPings_Params.SuperRegionID, 0x10, &SuperRegionID, 0x10);

	this->ProcessEvent(uFnGetSubRegionPings, &GetSubRegionPings_Params, nullptr);

	return GetSubRegionPings_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.GetDebugSuperRegionString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class USuperRegion_X*          SuperRegion                    (CPF_Parm)

class FString UOnlineGameMatchmaking_X::GetDebugSuperRegionString(class USuperRegion_X* SuperRegion)
{
	static UFunction* uFnGetDebugSuperRegionString = nullptr;

	if (!uFnGetDebugSuperRegionString)
	{
		uFnGetDebugSuperRegionString = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.GetDebugSuperRegionString");
	}

	UOnlineGameMatchmaking_X_execGetDebugSuperRegionString_Params GetDebugSuperRegionString_Params;
	memcpy_s(&GetDebugSuperRegionString_Params.SuperRegion, 0x8, &SuperRegion, 0x8);

	this->ProcessEvent(uFnGetDebugSuperRegionString, &GetDebugSuperRegionString_Params, nullptr);

	return GetDebugSuperRegionString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.GetLocalizedRegionsString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::GetLocalizedRegionsString()
{
	static UFunction* uFnGetLocalizedRegionsString = nullptr;

	if (!uFnGetLocalizedRegionsString)
	{
		uFnGetLocalizedRegionsString = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.GetLocalizedRegionsString");
	}

	UOnlineGameMatchmaking_X_execGetLocalizedRegionsString_Params GetLocalizedRegionsString_Params;

	this->ProcessEvent(uFnGetLocalizedRegionsString, &GetLocalizedRegionsString_Params, nullptr);

	return GetLocalizedRegionsString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.GetRegionsString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::GetRegionsString()
{
	static UFunction* uFnGetRegionsString = nullptr;

	if (!uFnGetRegionsString)
	{
		uFnGetRegionsString = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.GetRegionsString");
	}

	UOnlineGameMatchmaking_X_execGetRegionsString_Params GetRegionsString_Params;

	this->ProcessEvent(uFnGetRegionsString, &GetRegionsString_Params, nullptr);

	return GetRegionsString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.GetLocalizedPlaylistsString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::GetLocalizedPlaylistsString()
{
	static UFunction* uFnGetLocalizedPlaylistsString = nullptr;

	if (!uFnGetLocalizedPlaylistsString)
	{
		uFnGetLocalizedPlaylistsString = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.GetLocalizedPlaylistsString");
	}

	UOnlineGameMatchmaking_X_execGetLocalizedPlaylistsString_Params GetLocalizedPlaylistsString_Params;

	this->ProcessEvent(uFnGetLocalizedPlaylistsString, &GetLocalizedPlaylistsString_Params, nullptr);

	return GetLocalizedPlaylistsString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.GetPlaylistsString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameMatchmaking_X::GetPlaylistsString()
{
	static UFunction* uFnGetPlaylistsString = nullptr;

	if (!uFnGetPlaylistsString)
	{
		uFnGetPlaylistsString = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.GetPlaylistsString");
	}

	UOnlineGameMatchmaking_X_execGetPlaylistsString_Params GetPlaylistsString_Params;

	this->ProcessEvent(uFnGetPlaylistsString, &GetPlaylistsString_Params, nullptr);

	return GetPlaylistsString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.OnExit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::OnExit()
{
	static UFunction* uFnOnExit = nullptr;

	if (!uFnOnExit)
	{
		uFnOnExit = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.OnExit");
	}

	UOnlineGameMatchmaking_X_execOnExit_Params OnExit_Params;

	this->ProcessEvent(uFnOnExit, &OnExit_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.OnSearchComplete
// [0x400084002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bCanceled                      (CPF_OptionalParm | CPF_Parm)

void UOnlineGameMatchmaking_X::OnSearchComplete(unsigned long bCanceled)
{
	static UFunction* uFnOnSearchComplete = nullptr;

	if (!uFnOnSearchComplete)
	{
		uFnOnSearchComplete = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.OnSearchComplete");
	}

	UOnlineGameMatchmaking_X_execOnSearchComplete_Params OnSearchComplete_Params;
	OnSearchComplete_Params.bCanceled = bCanceled;

	this->ProcessEvent(uFnOnSearchComplete, &OnSearchComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.HandleInternetConnectionChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bConnected                     (CPF_Parm)

void UOnlineGameMatchmaking_X::HandleInternetConnectionChanged(unsigned long bConnected)
{
	static UFunction* uFnHandleInternetConnectionChanged = nullptr;

	if (!uFnHandleInternetConnectionChanged)
	{
		uFnHandleInternetConnectionChanged = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.HandleInternetConnectionChanged");
	}

	UOnlineGameMatchmaking_X_execHandleInternetConnectionChanged_Params HandleInternetConnectionChanged_Params;
	HandleInternetConnectionChanged_Params.bConnected = bConnected;

	this->ProcessEvent(uFnHandleInternetConnectionChanged, &HandleInternetConnectionChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.StartSearch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<int32_t>                InPreferredPlaylists           (CPF_Parm | CPF_NeedCtorLink)
// TArray<class FString>          InPreferredSuperRegions        (CPF_Parm | CPF_NeedCtorLink)

class UError* UOnlineGameMatchmaking_X::StartSearch(TArray<int32_t> InPreferredPlaylists, TArray<class FString> InPreferredSuperRegions)
{
	static UFunction* uFnStartSearch = nullptr;

	if (!uFnStartSearch)
	{
		uFnStartSearch = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.StartSearch");
	}

	UOnlineGameMatchmaking_X_execStartSearch_Params StartSearch_Params;
	memcpy_s(&StartSearch_Params.InPreferredPlaylists, 0x10, &InPreferredPlaylists, 0x10);
	memcpy_s(&StartSearch_Params.InPreferredSuperRegions, 0x10, &InPreferredSuperRegions, 0x10);

	this->ProcessEvent(uFnStartSearch, &StartSearch_Params, nullptr);

	return StartSearch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.ShiftPingToMS
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Ping                           (CPF_Parm)

int32_t UOnlineGameMatchmaking_X::ShiftPingToMS(float Ping)
{
	static UFunction* uFnShiftPingToMS = nullptr;

	if (!uFnShiftPingToMS)
	{
		uFnShiftPingToMS = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.ShiftPingToMS");
	}

	UOnlineGameMatchmaking_X_execShiftPingToMS_Params ShiftPingToMS_Params;
	memcpy_s(&ShiftPingToMS_Params.Ping, 0x4, &Ping, 0x4);

	this->ProcessEvent(uFnShiftPingToMS, &ShiftPingToMS_Params, nullptr);

	return ShiftPingToMS_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.VerifyPlaylist
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylistID                   (CPF_Parm)

bool UOnlineGameMatchmaking_X::VerifyPlaylist(int32_t InPlaylistID)
{
	static UFunction* uFnVerifyPlaylist = nullptr;

	if (!uFnVerifyPlaylist)
	{
		uFnVerifyPlaylist = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.VerifyPlaylist");
	}

	UOnlineGameMatchmaking_X_execVerifyPlaylist_Params VerifyPlaylist_Params;
	memcpy_s(&VerifyPlaylist_Params.InPlaylistID, 0x4, &InPlaylistID, 0x4);

	this->ProcessEvent(uFnVerifyPlaylist, &VerifyPlaylist_Params, nullptr);

	return VerifyPlaylist_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmaking_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmaking_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.OnInit");
	}

	UOnlineGameMatchmaking_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.EventMatchmakingCanceledOnPartySizeChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameMatchmaking_X* InMatchMaking                  (CPF_Parm)

void UOnlineGameMatchmaking_X::EventMatchmakingCanceledOnPartySizeChanged(class UOnlineGameMatchmaking_X* InMatchMaking)
{
	static UFunction* uFnEventMatchmakingCanceledOnPartySizeChanged = nullptr;

	if (!uFnEventMatchmakingCanceledOnPartySizeChanged)
	{
		uFnEventMatchmakingCanceledOnPartySizeChanged = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.EventMatchmakingCanceledOnPartySizeChanged");
	}

	UOnlineGameMatchmaking_X_execEventMatchmakingCanceledOnPartySizeChanged_Params EventMatchmakingCanceledOnPartySizeChanged_Params;
	memcpy_s(&EventMatchmakingCanceledOnPartySizeChanged_Params.InMatchMaking, 0x8, &InMatchMaking, 0x8);

	this->ProcessEvent(uFnEventMatchmakingCanceledOnPartySizeChanged, &EventMatchmakingCanceledOnPartySizeChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.EventMatchmakingError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameMatchmaking_X* InMatchMaking                  (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameMatchmaking_X::EventMatchmakingError(class UOnlineGameMatchmaking_X* InMatchMaking, class UError* Error)
{
	static UFunction* uFnEventMatchmakingError = nullptr;

	if (!uFnEventMatchmakingError)
	{
		uFnEventMatchmakingError = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.EventMatchmakingError");
	}

	UOnlineGameMatchmaking_X_execEventMatchmakingError_Params EventMatchmakingError_Params;
	memcpy_s(&EventMatchmakingError_Params.InMatchMaking, 0x8, &InMatchMaking, 0x8);
	memcpy_s(&EventMatchmakingError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventMatchmakingError, &EventMatchmakingError_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmaking_X.EventStartSearch
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameMatchmakingBase_X* InMatchMaking                  (CPF_Parm)

void UOnlineGameMatchmaking_X::EventStartSearch(class UOnlineGameMatchmakingBase_X* InMatchMaking)
{
	static UFunction* uFnEventStartSearch = nullptr;

	if (!uFnEventStartSearch)
	{
		uFnEventStartSearch = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmaking_X.EventStartSearch");
	}

	UOnlineGameMatchmaking_X_execEventStartSearch_Params EventStartSearch_Params;
	memcpy_s(&EventStartSearch_Params.InMatchMaking, 0x8, &InMatchMaking, 0x8);

	this->ProcessEvent(uFnEventStartSearch, &EventStartSearch_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.HandleRegionsPinged
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameRegions_X*    InRegions                      (CPF_Parm)

void UOnlineGameMatchmakingBase_X::HandleRegionsPinged(class UOnlineGameRegions_X* InRegions)
{
	static UFunction* uFnHandleRegionsPinged = nullptr;

	if (!uFnHandleRegionsPinged)
	{
		uFnHandleRegionsPinged = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.HandleRegionsPinged");
	}

	UOnlineGameMatchmakingBase_X_execHandleRegionsPinged_Params HandleRegionsPinged_Params;
	memcpy_s(&HandleRegionsPinged_Params.InRegions, 0x8, &InRegions, 0x8);

	this->ProcessEvent(uFnHandleRegionsPinged, &HandleRegionsPinged_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.HandleGameStarted
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  GRI                            (CPF_Parm)

void UOnlineGameMatchmakingBase_X::HandleGameStarted(class AGRI_X* GRI)
{
	static UFunction* uFnHandleGameStarted = nullptr;

	if (!uFnHandleGameStarted)
	{
		uFnHandleGameStarted = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.HandleGameStarted");
	}

	UOnlineGameMatchmakingBase_X_execHandleGameStarted_Params HandleGameStarted_Params;
	memcpy_s(&HandleGameStarted_Params.GRI, 0x8, &GRI, 0x8);

	this->ProcessEvent(uFnHandleGameStarted, &HandleGameStarted_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.HandleStatusUpdate
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  NewStatus                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameMatchmakingBase_X::HandleStatusUpdate(class FString NewStatus)
{
	static UFunction* uFnHandleStatusUpdate = nullptr;

	if (!uFnHandleStatusUpdate)
	{
		uFnHandleStatusUpdate = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.HandleStatusUpdate");
	}

	UOnlineGameMatchmakingBase_X_execHandleStatusUpdate_Params HandleStatusUpdate_Params;
	memcpy_s(&HandleStatusUpdate_Params.NewStatus, 0x10, &NewStatus, 0x10);

	this->ProcessEvent(uFnHandleStatusUpdate, &HandleStatusUpdate_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.HandleJoinGameComplete
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  FailReason                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameMatchmakingBase_X::HandleJoinGameComplete(unsigned long bSuccess, class FString FailReason)
{
	static UFunction* uFnHandleJoinGameComplete = nullptr;

	if (!uFnHandleJoinGameComplete)
	{
		uFnHandleJoinGameComplete = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.HandleJoinGameComplete");
	}

	UOnlineGameMatchmakingBase_X_execHandleJoinGameComplete_Params HandleJoinGameComplete_Params;
	HandleJoinGameComplete_Params.bSuccess = bSuccess;
	memcpy_s(&HandleJoinGameComplete_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnHandleJoinGameComplete, &HandleJoinGameComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.GetMatchmakingStateName
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

struct FName UOnlineGameMatchmakingBase_X::GetMatchmakingStateName()
{
	static UFunction* uFnGetMatchmakingStateName = nullptr;

	if (!uFnGetMatchmakingStateName)
	{
		uFnGetMatchmakingStateName = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.GetMatchmakingStateName");
	}

	UOnlineGameMatchmakingBase_X_execGetMatchmakingStateName_Params GetMatchmakingStateName_Params;

	this->ProcessEvent(uFnGetMatchmakingStateName, &GetMatchmakingStateName_Params, nullptr);

	return GetMatchmakingStateName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmakingBase_X.GetMetrics
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UMatchmakingMetrics_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UMatchmakingMetrics_X* UOnlineGameMatchmakingBase_X::GetMetrics()
{
	static UFunction* uFnGetMetrics = nullptr;

	if (!uFnGetMetrics)
	{
		uFnGetMetrics = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.GetMetrics");
	}

	UOnlineGameMatchmakingBase_X_execGetMetrics_Params GetMetrics_Params;

	this->ProcessEvent(uFnGetMetrics, &GetMetrics_Params, nullptr);

	return GetMetrics_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmakingBase_X.CreateCheckReservation
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UCheckReservation_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UCheckReservation_X* UOnlineGameMatchmakingBase_X::CreateCheckReservation()
{
	static UFunction* uFnCreateCheckReservation = nullptr;

	if (!uFnCreateCheckReservation)
	{
		uFnCreateCheckReservation = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.CreateCheckReservation");
	}

	UOnlineGameMatchmakingBase_X_execCreateCheckReservation_Params CreateCheckReservation_Params;

	this->ProcessEvent(uFnCreateCheckReservation, &CreateCheckReservation_Params, nullptr);

	return CreateCheckReservation_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmakingBase_X.GotoMatchmakingState
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FName                   StateName                      (CPF_Parm)

void UOnlineGameMatchmakingBase_X::GotoMatchmakingState(struct FName StateName)
{
	static UFunction* uFnGotoMatchmakingState = nullptr;

	if (!uFnGotoMatchmakingState)
	{
		uFnGotoMatchmakingState = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.GotoMatchmakingState");
	}

	UOnlineGameMatchmakingBase_X_execGotoMatchmakingState_Params GotoMatchmakingState_Params;
	memcpy_s(&GotoMatchmakingState_Params.StateName, 0x8, &StateName, 0x8);

	this->ProcessEvent(uFnGotoMatchmakingState, &GotoMatchmakingState_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.ClearStartMatchmakingRPC
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmakingBase_X::ClearStartMatchmakingRPC()
{
	static UFunction* uFnClearStartMatchmakingRPC = nullptr;

	if (!uFnClearStartMatchmakingRPC)
	{
		uFnClearStartMatchmakingRPC = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.ClearStartMatchmakingRPC");
	}

	UOnlineGameMatchmakingBase_X_execClearStartMatchmakingRPC_Params ClearStartMatchmakingRPC_Params;

	this->ProcessEvent(uFnClearStartMatchmakingRPC, &ClearStartMatchmakingRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.ClearCheckReservation
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmakingBase_X::ClearCheckReservation()
{
	static UFunction* uFnClearCheckReservation = nullptr;

	if (!uFnClearCheckReservation)
	{
		uFnClearCheckReservation = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.ClearCheckReservation");
	}

	UOnlineGameMatchmakingBase_X_execClearCheckReservation_Params ClearCheckReservation_Params;

	this->ProcessEvent(uFnClearCheckReservation, &ClearCheckReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.OnSearchComplete
// [0x00084002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bCanceled                      (CPF_OptionalParm | CPF_Parm)

void UOnlineGameMatchmakingBase_X::OnSearchComplete(unsigned long bCanceled)
{
	static UFunction* uFnOnSearchComplete = nullptr;

	if (!uFnOnSearchComplete)
	{
		uFnOnSearchComplete = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.OnSearchComplete");
	}

	UOnlineGameMatchmakingBase_X_execOnSearchComplete_Params OnSearchComplete_Params;
	OnSearchComplete_Params.bCanceled = bCanceled;

	this->ProcessEvent(uFnOnSearchComplete, &OnSearchComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.Cancel
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameMatchmakingBase_X::Cancel()
{
	static UFunction* uFnCancel = nullptr;

	if (!uFnCancel)
	{
		uFnCancel = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.Cancel");
	}

	UOnlineGameMatchmakingBase_X_execCancel_Params Cancel_Params;

	this->ProcessEvent(uFnCancel, &Cancel_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.IsSearching
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameMatchmakingBase_X::IsSearching()
{
	static UFunction* uFnIsSearching = nullptr;

	if (!uFnIsSearching)
	{
		uFnIsSearching = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.IsSearching");
	}

	UOnlineGameMatchmakingBase_X_execIsSearching_Params IsSearching_Params;

	this->ProcessEvent(uFnIsSearching, &IsSearching_Params, nullptr);

	return IsSearching_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameStateChangedDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameMatchmakingBase_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         NewDelegate                    (CPF_Parm | CPF_NeedCtorLink)

class UOnlineGameMatchmakingBase_X* UOnlineGameMatchmakingBase_X::AddFindGameStateChangedDelegate(struct FScriptDelegate NewDelegate)
{
	static UFunction* uFnAddFindGameStateChangedDelegate = nullptr;

	if (!uFnAddFindGameStateChangedDelegate)
	{
		uFnAddFindGameStateChangedDelegate = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameStateChangedDelegate");
	}

	UOnlineGameMatchmakingBase_X_execAddFindGameStateChangedDelegate_Params AddFindGameStateChangedDelegate_Params;
	memcpy_s(&AddFindGameStateChangedDelegate_Params.NewDelegate, 0x18, &NewDelegate, 0x18);

	this->ProcessEvent(uFnAddFindGameStateChangedDelegate, &AddFindGameStateChangedDelegate_Params, nullptr);

	return AddFindGameStateChangedDelegate_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameCompleteDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameMatchmakingBase_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         HandleFindGameComplete         (CPF_Parm | CPF_NeedCtorLink)

class UOnlineGameMatchmakingBase_X* UOnlineGameMatchmakingBase_X::AddFindGameCompleteDelegate(struct FScriptDelegate HandleFindGameComplete)
{
	static UFunction* uFnAddFindGameCompleteDelegate = nullptr;

	if (!uFnAddFindGameCompleteDelegate)
	{
		uFnAddFindGameCompleteDelegate = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameCompleteDelegate");
	}

	UOnlineGameMatchmakingBase_X_execAddFindGameCompleteDelegate_Params AddFindGameCompleteDelegate_Params;
	memcpy_s(&AddFindGameCompleteDelegate_Params.HandleFindGameComplete, 0x18, &HandleFindGameComplete, 0x18);

	this->ProcessEvent(uFnAddFindGameCompleteDelegate, &AddFindGameCompleteDelegate_Params, nullptr);

	return AddFindGameCompleteDelegate_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameErrorDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameMatchmakingBase_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         HandleFindGameError            (CPF_Parm | CPF_NeedCtorLink)

class UOnlineGameMatchmakingBase_X* UOnlineGameMatchmakingBase_X::AddFindGameErrorDelegate(struct FScriptDelegate HandleFindGameError)
{
	static UFunction* uFnAddFindGameErrorDelegate = nullptr;

	if (!uFnAddFindGameErrorDelegate)
	{
		uFnAddFindGameErrorDelegate = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameErrorDelegate");
	}

	UOnlineGameMatchmakingBase_X_execAddFindGameErrorDelegate_Params AddFindGameErrorDelegate_Params;
	memcpy_s(&AddFindGameErrorDelegate_Params.HandleFindGameError, 0x18, &HandleFindGameError, 0x18);

	this->ProcessEvent(uFnAddFindGameErrorDelegate, &AddFindGameErrorDelegate_Params, nullptr);

	return AddFindGameErrorDelegate_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameStatusChangedDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameMatchmakingBase_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         HandleFindGameStatusChanged    (CPF_Parm | CPF_NeedCtorLink)

class UOnlineGameMatchmakingBase_X* UOnlineGameMatchmakingBase_X::AddFindGameStatusChangedDelegate(struct FScriptDelegate HandleFindGameStatusChanged)
{
	static UFunction* uFnAddFindGameStatusChangedDelegate = nullptr;

	if (!uFnAddFindGameStatusChangedDelegate)
	{
		uFnAddFindGameStatusChangedDelegate = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.AddFindGameStatusChangedDelegate");
	}

	UOnlineGameMatchmakingBase_X_execAddFindGameStatusChangedDelegate_Params AddFindGameStatusChangedDelegate_Params;
	memcpy_s(&AddFindGameStatusChangedDelegate_Params.HandleFindGameStatusChanged, 0x18, &HandleFindGameStatusChanged, 0x18);

	this->ProcessEvent(uFnAddFindGameStatusChangedDelegate, &AddFindGameStatusChangedDelegate_Params, nullptr);

	return AddFindGameStatusChangedDelegate_Params.ReturnValue;
};

// Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameStateChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FName                   NewState                       (CPF_Parm)

void UOnlineGameMatchmakingBase_X::EventFindGameStateChanged(struct FName NewState)
{
	static UFunction* uFnEventFindGameStateChanged = nullptr;

	if (!uFnEventFindGameStateChanged)
	{
		uFnEventFindGameStateChanged = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameStateChanged");
	}

	UOnlineGameMatchmakingBase_X_execEventFindGameStateChanged_Params EventFindGameStateChanged_Params;
	memcpy_s(&EventFindGameStateChanged_Params.NewState, 0x8, &NewState, 0x8);

	this->ProcessEvent(uFnEventFindGameStateChanged, &EventFindGameStateChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  NewStatus                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameMatchmakingBase_X::EventFindGameError(class FString NewStatus)
{
	static UFunction* uFnEventFindGameError = nullptr;

	if (!uFnEventFindGameError)
	{
		uFnEventFindGameError = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameError");
	}

	UOnlineGameMatchmakingBase_X_execEventFindGameError_Params EventFindGameError_Params;
	memcpy_s(&EventFindGameError_Params.NewStatus, 0x10, &NewStatus, 0x10);

	this->ProcessEvent(uFnEventFindGameError, &EventFindGameError_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameStatus
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  NewStatus                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameMatchmakingBase_X::EventFindGameStatus(class FString NewStatus)
{
	static UFunction* uFnEventFindGameStatus = nullptr;

	if (!uFnEventFindGameStatus)
	{
		uFnEventFindGameStatus = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameStatus");
	}

	UOnlineGameMatchmakingBase_X_execEventFindGameStatus_Params EventFindGameStatus_Params;
	memcpy_s(&EventFindGameStatus_Params.NewStatus, 0x10, &NewStatus, 0x10);

	this->ProcessEvent(uFnEventFindGameStatus, &EventFindGameStatus_Params, nullptr);
};

// Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bCancelled                     (CPF_Parm)

void UOnlineGameMatchmakingBase_X::EventFindGameComplete(unsigned long bCancelled)
{
	static UFunction* uFnEventFindGameComplete = nullptr;

	if (!uFnEventFindGameComplete)
	{
		uFnEventFindGameComplete = UFunction::FindFunction("Function ProjectX.OnlineGameMatchmakingBase_X.EventFindGameComplete");
	}

	UOnlineGameMatchmakingBase_X_execEventFindGameComplete_Params EventFindGameComplete_Params;
	EventFindGameComplete_Params.bCancelled = bCancelled;

	this->ProcessEvent(uFnEventFindGameComplete, &EventFindGameComplete_Params, nullptr);
};

// Function ProjectX.__OnlineGameMatchmaking_X__GetSubRegionPings_0x1.__OnlineGameMatchmaking_X__GetSubRegionPings_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URegionPing_X*           R                              (CPF_Parm)

bool U__OnlineGameMatchmaking_X__GetSubRegionPings_0x1::__OnlineGameMatchmaking_X__GetSubRegionPings_0x1(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__GetSubRegionPings_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__GetSubRegionPings_0x1)
	{
		uFn__OnlineGameMatchmaking_X__GetSubRegionPings_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameMatchmaking_X__GetSubRegionPings_0x1.__OnlineGameMatchmaking_X__GetSubRegionPings_0x1");
	}

	U__OnlineGameMatchmaking_X__GetSubRegionPings_0x1_exec__OnlineGameMatchmaking_X__GetSubRegionPings_0x1_Params __OnlineGameMatchmaking_X__GetSubRegionPings_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__GetSubRegionPings_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__GetSubRegionPings_0x1, &__OnlineGameMatchmaking_X__GetSubRegionPings_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__GetSubRegionPings_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1.__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FDSRegionInfo           R                              (CPF_Parm | CPF_NeedCtorLink)

bool U__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1::__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1(struct FDSRegionInfo R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1)
	{
		uFn__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1.__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1");
	}

	U__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1_exec__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1_Params __OnlineGameMatchmaking_X__OnReceiveGameServer_0x1_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1_Params.R, 0x18, &R, 0x18);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1, &__OnlineGameMatchmaking_X__OnReceiveGameServer_0x1_Params, nullptr);

	return __OnlineGameMatchmaking_X__OnReceiveGameServer_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameMatchmaking_X__RecordStart_0x2.__OnlineGameMatchmaking_X__RecordStart_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URegionPing_X*           R                              (CPF_Parm)

bool U__OnlineGameMatchmaking_X__RecordStart_0x2::__OnlineGameMatchmaking_X__RecordStart_0x2(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameMatchmaking_X__RecordStart_0x2 = nullptr;

	if (!uFn__OnlineGameMatchmaking_X__RecordStart_0x2)
	{
		uFn__OnlineGameMatchmaking_X__RecordStart_0x2 = UFunction::FindFunction("Function ProjectX.__OnlineGameMatchmaking_X__RecordStart_0x2.__OnlineGameMatchmaking_X__RecordStart_0x2");
	}

	U__OnlineGameMatchmaking_X__RecordStart_0x2_exec__OnlineGameMatchmaking_X__RecordStart_0x2_Params __OnlineGameMatchmaking_X__RecordStart_0x2_Params;
	memcpy_s(&__OnlineGameMatchmaking_X__RecordStart_0x2_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameMatchmaking_X__RecordStart_0x2, &__OnlineGameMatchmaking_X__RecordStart_0x2_Params, nullptr);

	return __OnlineGameMatchmaking_X__RecordStart_0x2_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2.__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMember            PM                             (CPF_Parm | CPF_NeedCtorLink)

bool U__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2::__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2(struct FPartyMember PM)
{
	static UFunction* uFn__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2 = nullptr;

	if (!uFn__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2)
	{
		uFn__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2.__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2");
	}

	U__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2_exec__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2_Params __OnlineGameParty_X__BroadcastAllLocalPlayers_0x2_Params;
	memcpy_s(&__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2_Params.PM, 0x170, &PM, 0x170);

	this->ProcessEvent(uFn__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2, &__OnlineGameParty_X__BroadcastAllLocalPlayers_0x2_Params, nullptr);

	return __OnlineGameParty_X__BroadcastAllLocalPlayers_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__HandleJoinLobby_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::__OnlineGameParty_X__HandleJoinLobby_0x1()
{
	static UFunction* uFn__OnlineGameParty_X__HandleJoinLobby_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__HandleJoinLobby_0x1)
	{
		uFn__OnlineGameParty_X__HandleJoinLobby_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__HandleJoinLobby_0x1");
	}

	UOnlineGameParty_X_exec__OnlineGameParty_X__HandleJoinLobby_0x1_Params __OnlineGameParty_X__HandleJoinLobby_0x1_Params;

	this->ProcessEvent(uFn__OnlineGameParty_X__HandleJoinLobby_0x1, &__OnlineGameParty_X__HandleJoinLobby_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__UpdatePartyInfo_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FPartyMember            PM                             (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::__OnlineGameParty_X__UpdatePartyInfo_0x3(struct FPartyMember PM)
{
	static UFunction* uFn__OnlineGameParty_X__UpdatePartyInfo_0x3 = nullptr;

	if (!uFn__OnlineGameParty_X__UpdatePartyInfo_0x3)
	{
		uFn__OnlineGameParty_X__UpdatePartyInfo_0x3 = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__UpdatePartyInfo_0x3");
	}

	UOnlineGameParty_X_exec__OnlineGameParty_X__UpdatePartyInfo_0x3_Params __OnlineGameParty_X__UpdatePartyInfo_0x3_Params;
	memcpy_s(&__OnlineGameParty_X__UpdatePartyInfo_0x3_Params.PM, 0x170, &PM, 0x170);

	this->ProcessEvent(uFn__OnlineGameParty_X__UpdatePartyInfo_0x3, &__OnlineGameParty_X__UpdatePartyInfo_0x3_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__UpdatePartyInfo_0x2
// [0x40840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FLobbyMember            LM                             (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::__OnlineGameParty_X__UpdatePartyInfo_0x2(struct FLobbyMember LM)
{
	static UFunction* uFn__OnlineGameParty_X__UpdatePartyInfo_0x2 = nullptr;

	if (!uFn__OnlineGameParty_X__UpdatePartyInfo_0x2)
	{
		uFn__OnlineGameParty_X__UpdatePartyInfo_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__UpdatePartyInfo_0x2");
	}

	UOnlineGameParty_X_exec__OnlineGameParty_X__UpdatePartyInfo_0x2_Params __OnlineGameParty_X__UpdatePartyInfo_0x2_Params;
	memcpy_s(&__OnlineGameParty_X__UpdatePartyInfo_0x2_Params.LM, 0x68, &LM, 0x68);

	this->ProcessEvent(uFn__OnlineGameParty_X__UpdatePartyInfo_0x2, &__OnlineGameParty_X__UpdatePartyInfo_0x2_Params, nullptr);

	return __OnlineGameParty_X__UpdatePartyInfo_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMember            PM                             (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1(struct FPartyMember PM)
{
	static UFunction* uFn__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1)
	{
		uFn__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1");
	}

	UOnlineGameParty_X_exec__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1_Params __OnlineGameParty_X__BroadcastAllLocalPlayers_0x1_Params;
	memcpy_s(&__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1_Params.PM, 0x170, &PM, 0x170);

	this->ProcessEvent(uFn__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1, &__OnlineGameParty_X__BroadcastAllLocalPlayers_0x1_Params, nullptr);

	return __OnlineGameParty_X__BroadcastAllLocalPlayers_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FPartyMember            Member                         (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameParty_X::__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2(struct FPartyMember Member)
{
	static UFunction* uFn__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2 = nullptr;

	if (!uFn__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2)
	{
		uFn__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2");
	}

	UOnlineGameParty_X_exec__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2_Params __OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2_Params;
	memcpy_s(&__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2_Params.Member, 0x170, &Member, 0x170);

	this->ProcessEvent(uFn__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2, &__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2_Params, nullptr);

	return __OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.__bTradeLocked__ChangeNotifyFunc
// [0x00000000] 
// Parameter info:

void UOnlineGameParty_X::__bTradeLocked__ChangeNotifyFunc()
{
	static UFunction* uFn__bTradeLocked__ChangeNotifyFunc = nullptr;

	if (!uFn__bTradeLocked__ChangeNotifyFunc)
	{
		uFn__bTradeLocked__ChangeNotifyFunc = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.__bTradeLocked__ChangeNotifyFunc");
	}

	UOnlineGameParty_X_exec__bTradeLocked__ChangeNotifyFunc_Params __bTradeLocked__ChangeNotifyFunc_Params;

	this->ProcessEvent(uFn__bTradeLocked__ChangeNotifyFunc, &__bTradeLocked__ChangeNotifyFunc_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandlePlatformPartyIdChanged
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UPartyPlatformSession_X* Session                        (CPF_Parm)

void UOnlineGameParty_X::HandlePlatformPartyIdChanged(class UPartyPlatformSession_X* Session)
{
	static UFunction* uFnHandlePlatformPartyIdChanged = nullptr;

	if (!uFnHandlePlatformPartyIdChanged)
	{
		uFnHandlePlatformPartyIdChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePlatformPartyIdChanged");
	}

	UOnlineGameParty_X_execHandlePlatformPartyIdChanged_Params HandlePlatformPartyIdChanged_Params;
	memcpy_s(&HandlePlatformPartyIdChanged_Params.Session, 0x8, &Session, 0x8);

	this->ProcessEvent(uFnHandlePlatformPartyIdChanged, &HandlePlatformPartyIdChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleSetPlatformPartyMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UPartyMessage_SetPlatformParty_X* Message                        (CPF_Parm)

void UOnlineGameParty_X::HandleSetPlatformPartyMessage(class UOnlineMessageComponent_X* Component, class UPartyMessage_SetPlatformParty_X* Message)
{
	static UFunction* uFnHandleSetPlatformPartyMessage = nullptr;

	if (!uFnHandleSetPlatformPartyMessage)
	{
		uFnHandleSetPlatformPartyMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleSetPlatformPartyMessage");
	}

	UOnlineGameParty_X_execHandleSetPlatformPartyMessage_Params HandleSetPlatformPartyMessage_Params;
	memcpy_s(&HandleSetPlatformPartyMessage_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleSetPlatformPartyMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleSetPlatformPartyMessage, &HandleSetPlatformPartyMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.RequestRejoinPartyInfo
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::RequestRejoinPartyInfo()
{
	static UFunction* uFnRequestRejoinPartyInfo = nullptr;

	if (!uFnRequestRejoinPartyInfo)
	{
		uFnRequestRejoinPartyInfo = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.RequestRejoinPartyInfo");
	}

	UOnlineGameParty_X_execRequestRejoinPartyInfo_Params RequestRejoinPartyInfo_Params;

	this->ProcessEvent(uFnRequestRejoinPartyInfo, &RequestRejoinPartyInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.CheckForPlayerInviteError
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

class UError* UOnlineGameParty_X::CheckForPlayerInviteError(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnCheckForPlayerInviteError = nullptr;

	if (!uFnCheckForPlayerInviteError)
	{
		uFnCheckForPlayerInviteError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CheckForPlayerInviteError");
	}

	UOnlineGameParty_X_execCheckForPlayerInviteError_Params CheckForPlayerInviteError_Params;
	memcpy_s(&CheckForPlayerInviteError_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnCheckForPlayerInviteError, &CheckForPlayerInviteError_Params, nullptr);

	return CheckForPlayerInviteError_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.SendPartyInvite
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::SendPartyInvite(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSendPartyInvite = nullptr;

	if (!uFnSendPartyInvite)
	{
		uFnSendPartyInvite = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SendPartyInvite");
	}

	UOnlineGameParty_X_execSendPartyInvite_Params SendPartyInvite_Params;
	memcpy_s(&SendPartyInvite_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSendPartyInvite, &SendPartyInvite_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandlePartyConfigChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::HandlePartyConfigChanged()
{
	static UFunction* uFnHandlePartyConfigChanged = nullptr;

	if (!uFnHandlePartyConfigChanged)
	{
		uFnHandlePartyConfigChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePartyConfigChanged");
	}

	UOnlineGameParty_X_execHandlePartyConfigChanged_Params HandlePartyConfigChanged_Params;

	this->ProcessEvent(uFnHandlePartyConfigChanged, &HandlePartyConfigChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleMessageForMetrics
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameParty_X::HandleMessageForMetrics(class UOnlineMessageComponent_X* Component, class UObject* Message)
{
	static UFunction* uFnHandleMessageForMetrics = nullptr;

	if (!uFnHandleMessageForMetrics)
	{
		uFnHandleMessageForMetrics = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleMessageForMetrics");
	}

	UOnlineGameParty_X_execHandleMessageForMetrics_Params HandleMessageForMetrics_Params;
	memcpy_s(&HandleMessageForMetrics_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleMessageForMetrics_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleMessageForMetrics, &HandleMessageForMetrics_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.ResolveGuids
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FGuid                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FGuid                   A                              (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FGuid                   B                              (CPF_Const | CPF_Parm | CPF_OutParm)

struct FGuid UOnlineGameParty_X::ResolveGuids(struct FGuid& A, struct FGuid& B)
{
	static UFunction* uFnResolveGuids = nullptr;

	if (!uFnResolveGuids)
	{
		uFnResolveGuids = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ResolveGuids");
	}

	UOnlineGameParty_X_execResolveGuids_Params ResolveGuids_Params;
	memcpy_s(&ResolveGuids_Params.A, 0x10, &A, 0x10);
	memcpy_s(&ResolveGuids_Params.B, 0x10, &B, 0x10);

	this->ProcessEvent(uFnResolveGuids, &ResolveGuids_Params, nullptr);

	memcpy_s(&A, 0x10, &ResolveGuids_Params.A, 0x10);
	memcpy_s(&B, 0x10, &ResolveGuids_Params.B, 0x10);

	return ResolveGuids_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetMemberName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            InMemberId                     (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameParty_X::GetMemberName(struct FUniqueNetId InMemberId)
{
	static UFunction* uFnGetMemberName = nullptr;

	if (!uFnGetMemberName)
	{
		uFnGetMemberName = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetMemberName");
	}

	UOnlineGameParty_X_execGetMemberName_Params GetMemberName_Params;
	memcpy_s(&GetMemberName_Params.InMemberId, 0x48, &InMemberId, 0x48);

	this->ProcessEvent(uFnGetMemberName, &GetMemberName_Params, nullptr);

	return GetMemberName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetPlayersWithPrimaryMemberID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            InPrimaryID                    (CPF_Parm | CPF_NeedCtorLink)

TArray<struct FUniqueNetId> UOnlineGameParty_X::GetPlayersWithPrimaryMemberID(struct FUniqueNetId InPrimaryID)
{
	static UFunction* uFnGetPlayersWithPrimaryMemberID = nullptr;

	if (!uFnGetPlayersWithPrimaryMemberID)
	{
		uFnGetPlayersWithPrimaryMemberID = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetPlayersWithPrimaryMemberID");
	}

	UOnlineGameParty_X_execGetPlayersWithPrimaryMemberID_Params GetPlayersWithPrimaryMemberID_Params;
	memcpy_s(&GetPlayersWithPrimaryMemberID_Params.InPrimaryID, 0x48, &InPrimaryID, 0x48);

	this->ProcessEvent(uFnGetPlayersWithPrimaryMemberID, &GetPlayersWithPrimaryMemberID_Params, nullptr);

	return GetPlayersWithPrimaryMemberID_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetLocalMemberIDs
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FUniqueNetId> UOnlineGameParty_X::GetLocalMemberIDs()
{
	static UFunction* uFnGetLocalMemberIDs = nullptr;

	if (!uFnGetLocalMemberIDs)
	{
		uFnGetLocalMemberIDs = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetLocalMemberIDs");
	}

	UOnlineGameParty_X_execGetLocalMemberIDs_Params GetLocalMemberIDs_Params;

	this->ProcessEvent(uFnGetLocalMemberIDs, &GetLocalMemberIDs_Params, nullptr);

	return GetLocalMemberIDs_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetOrderedPartyMemberIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FUniqueNetId> UOnlineGameParty_X::GetOrderedPartyMemberIDs()
{
	static UFunction* uFnGetOrderedPartyMemberIDs = nullptr;

	if (!uFnGetOrderedPartyMemberIDs)
	{
		uFnGetOrderedPartyMemberIDs = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetOrderedPartyMemberIDs");
	}

	UOnlineGameParty_X_execGetOrderedPartyMemberIDs_Params GetOrderedPartyMemberIDs_Params;

	this->ProcessEvent(uFnGetOrderedPartyMemberIDs, &GetOrderedPartyMemberIDs_Params, nullptr);

	return GetOrderedPartyMemberIDs_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetPartyMemberIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FUniqueNetId> UOnlineGameParty_X::GetPartyMemberIDs()
{
	static UFunction* uFnGetPartyMemberIDs = nullptr;

	if (!uFnGetPartyMemberIDs)
	{
		uFnGetPartyMemberIDs = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetPartyMemberIDs");
	}

	UOnlineGameParty_X_execGetPartyMemberIDs_Params GetPartyMemberIDs_Params;

	this->ProcessEvent(uFnGetPartyMemberIDs, &GetPartyMemberIDs_Params, nullptr);

	return GetPartyMemberIDs_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.HandleSessionCreated
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::HandleSessionCreated()
{
	static UFunction* uFnHandleSessionCreated = nullptr;

	if (!uFnHandleSessionCreated)
	{
		uFnHandleSessionCreated = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleSessionCreated");
	}

	UOnlineGameParty_X_execHandleSessionCreated_Params HandleSessionCreated_Params;

	this->ProcessEvent(uFnHandleSessionCreated, &HandleSessionCreated_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.IsProcessing
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::IsProcessing()
{
	static UFunction* uFnIsProcessing = nullptr;

	if (!uFnIsProcessing)
	{
		uFnIsProcessing = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsProcessing");
	}

	UOnlineGameParty_X_execIsProcessing_Params IsProcessing_Params;

	this->ProcessEvent(uFnIsProcessing, &IsProcessing_Params, nullptr);

	return IsProcessing_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.SetProcessingStatus
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        Status                         (CPF_Parm)

void UOnlineGameParty_X::SetProcessingStatus(uint8_t Status)
{
	static UFunction* uFnSetProcessingStatus = nullptr;

	if (!uFnSetProcessingStatus)
	{
		uFnSetProcessingStatus = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetProcessingStatus");
	}

	UOnlineGameParty_X_execSetProcessingStatus_Params SetProcessingStatus_Params;
	memcpy_s(&SetProcessingStatus_Params.Status, 0x1, &Status, 0x1);

	this->ProcessEvent(uFnSetProcessingStatus, &SetProcessingStatus_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.PrintDebugInfo
// [0x400820102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGameParty_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.PrintDebugInfo");
	}

	UOnlineGameParty_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.GetPlayerRatingString
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)

class FString UOnlineGameParty_X::GetPlayerRatingString(struct FUniqueNetId PlayerID, int32_t Playlist)
{
	static UFunction* uFnGetPlayerRatingString = nullptr;

	if (!uFnGetPlayerRatingString)
	{
		uFnGetPlayerRatingString = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetPlayerRatingString");
	}

	UOnlineGameParty_X_execGetPlayerRatingString_Params GetPlayerRatingString_Params;
	memcpy_s(&GetPlayerRatingString_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPlayerRatingString_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnGetPlayerRatingString, &GetPlayerRatingString_Params, nullptr);

	return GetPlayerRatingString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.OnPartyError
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameParty_X::OnPartyError(class UError* Error)
{
	static UFunction* uFnOnPartyError = nullptr;

	if (!uFnOnPartyError)
	{
		uFnOnPartyError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnPartyError");
	}

	UOnlineGameParty_X_execOnPartyError_Params OnPartyError_Params;
	memcpy_s(&OnPartyError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnOnPartyError, &OnPartyError_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandlePartyError
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandlePartyError(class FString Error)
{
	static UFunction* uFnHandlePartyError = nullptr;

	if (!uFnHandlePartyError)
	{
		uFnHandlePartyError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePartyError");
	}

	UOnlineGameParty_X_execHandlePartyError_Params HandlePartyError_Params;
	memcpy_s(&HandlePartyError_Params.Error, 0x10, &Error, 0x10);

	this->ProcessEvent(uFnHandlePartyError, &HandlePartyError_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.OnPartyChanged
// [0x00084003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// uint8_t                        NewProcessingStatus            (CPF_OptionalParm | CPF_Parm)

void UOnlineGameParty_X::OnPartyChanged(uint8_t NewProcessingStatus)
{
	static UFunction* uFnOnPartyChanged = nullptr;

	if (!uFnOnPartyChanged)
	{
		uFnOnPartyChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnPartyChanged");
	}

	UOnlineGameParty_X_execOnPartyChanged_Params OnPartyChanged_Params;
	memcpy_s(&OnPartyChanged_Params.NewProcessingStatus, 0x1, &NewProcessingStatus, 0x1);

	this->ProcessEvent(uFnOnPartyChanged, &OnPartyChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.TryGetValueInt
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)
// TArray<struct FLobbyMetaData>  MetaData                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// int32_t                        Value                          (CPF_Parm | CPF_OutParm)

bool UOnlineGameParty_X::TryGetValueInt(class FString Key, TArray<struct FLobbyMetaData>& MetaData, int32_t& Value)
{
	static UFunction* uFnTryGetValueInt = nullptr;

	if (!uFnTryGetValueInt)
	{
		uFnTryGetValueInt = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.TryGetValueInt");
	}

	UOnlineGameParty_X_execTryGetValueInt_Params TryGetValueInt_Params;
	memcpy_s(&TryGetValueInt_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&TryGetValueInt_Params.MetaData, 0x10, &MetaData, 0x10);
	memcpy_s(&TryGetValueInt_Params.Value, 0x4, &Value, 0x4);

	this->ProcessEvent(uFnTryGetValueInt, &TryGetValueInt_Params, nullptr);

	memcpy_s(&MetaData, 0x10, &TryGetValueInt_Params.MetaData, 0x10);
	memcpy_s(&Value, 0x4, &TryGetValueInt_Params.Value, 0x4);

	return TryGetValueInt_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.PartyHasDisableCrossPlay
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::PartyHasDisableCrossPlay()
{
	static UFunction* uFnPartyHasDisableCrossPlay = nullptr;

	if (!uFnPartyHasDisableCrossPlay)
	{
		uFnPartyHasDisableCrossPlay = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.PartyHasDisableCrossPlay");
	}

	UOnlineGameParty_X_execPartyHasDisableCrossPlay_Params PartyHasDisableCrossPlay_Params;

	this->ProcessEvent(uFnPartyHasDisableCrossPlay, &PartyHasDisableCrossPlay_Params, nullptr);

	return PartyHasDisableCrossPlay_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.KickForCrossplayDisabled
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::KickForCrossplayDisabled(struct FUniqueNetId MemberId)
{
	static UFunction* uFnKickForCrossplayDisabled = nullptr;

	if (!uFnKickForCrossplayDisabled)
	{
		uFnKickForCrossplayDisabled = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.KickForCrossplayDisabled");
	}

	UOnlineGameParty_X_execKickForCrossplayDisabled_Params KickForCrossplayDisabled_Params;
	memcpy_s(&KickForCrossplayDisabled_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnKickForCrossplayDisabled, &KickForCrossplayDisabled_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HasMultiplePlatforms
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::HasMultiplePlatforms()
{
	static UFunction* uFnHasMultiplePlatforms = nullptr;

	if (!uFnHasMultiplePlatforms)
	{
		uFnHasMultiplePlatforms = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HasMultiplePlatforms");
	}

	UOnlineGameParty_X_execHasMultiplePlatforms_Params HasMultiplePlatforms_Params;

	this->ProcessEvent(uFnHasMultiplePlatforms, &HasMultiplePlatforms_Params, nullptr);

	return HasMultiplePlatforms_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.KickCrossplayDisabledMembers
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::KickCrossplayDisabledMembers()
{
	static UFunction* uFnKickCrossplayDisabledMembers = nullptr;

	if (!uFnKickCrossplayDisabledMembers)
	{
		uFnKickCrossplayDisabledMembers = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.KickCrossplayDisabledMembers");
	}

	UOnlineGameParty_X_execKickCrossplayDisabledMembers_Params KickCrossplayDisabledMembers_Params;

	this->ProcessEvent(uFnKickCrossplayDisabledMembers, &KickCrossplayDisabledMembers_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.SetCrossPlayTextChatForMember
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PartyMemberID                  (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        CrossChatState                 (CPF_Parm)

void UOnlineGameParty_X::SetCrossPlayTextChatForMember(struct FUniqueNetId PartyMemberID, uint8_t CrossChatState)
{
	static UFunction* uFnSetCrossPlayTextChatForMember = nullptr;

	if (!uFnSetCrossPlayTextChatForMember)
	{
		uFnSetCrossPlayTextChatForMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetCrossPlayTextChatForMember");
	}

	UOnlineGameParty_X_execSetCrossPlayTextChatForMember_Params SetCrossPlayTextChatForMember_Params;
	memcpy_s(&SetCrossPlayTextChatForMember_Params.PartyMemberID, 0x48, &PartyMemberID, 0x48);
	memcpy_s(&SetCrossPlayTextChatForMember_Params.CrossChatState, 0x1, &CrossChatState, 0x1);

	this->ProcessEvent(uFnSetCrossPlayTextChatForMember, &SetCrossPlayTextChatForMember_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastCrossTextChatState
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastCrossTextChatState()
{
	static UFunction* uFnBroadcastCrossTextChatState = nullptr;

	if (!uFnBroadcastCrossTextChatState)
	{
		uFnBroadcastCrossTextChatState = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastCrossTextChatState");
	}

	UOnlineGameParty_X_execBroadcastCrossTextChatState_Params BroadcastCrossTextChatState_Params;

	this->ProcessEvent(uFnBroadcastCrossTextChatState, &BroadcastCrossTextChatState_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleCrossPlatformTextChatMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameParty_X::HandleCrossPlatformTextChatMessage(class UOnlineMessageComponent_X* Component, class UObject* Message)
{
	static UFunction* uFnHandleCrossPlatformTextChatMessage = nullptr;

	if (!uFnHandleCrossPlatformTextChatMessage)
	{
		uFnHandleCrossPlatformTextChatMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleCrossPlatformTextChatMessage");
	}

	UOnlineGameParty_X_execHandleCrossPlatformTextChatMessage_Params HandleCrossPlatformTextChatMessage_Params;
	memcpy_s(&HandleCrossPlatformTextChatMessage_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleCrossPlatformTextChatMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleCrossPlatformTextChatMessage, &HandleCrossPlatformTextChatMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.SetDisableCrossPlayForMember
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PartyMemberID                  (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bDisableCrossPlay              (CPF_Parm)

void UOnlineGameParty_X::SetDisableCrossPlayForMember(struct FUniqueNetId PartyMemberID, unsigned long bDisableCrossPlay)
{
	static UFunction* uFnSetDisableCrossPlayForMember = nullptr;

	if (!uFnSetDisableCrossPlayForMember)
	{
		uFnSetDisableCrossPlayForMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetDisableCrossPlayForMember");
	}

	UOnlineGameParty_X_execSetDisableCrossPlayForMember_Params SetDisableCrossPlayForMember_Params;
	memcpy_s(&SetDisableCrossPlayForMember_Params.PartyMemberID, 0x48, &PartyMemberID, 0x48);
	SetDisableCrossPlayForMember_Params.bDisableCrossPlay = bDisableCrossPlay;

	this->ProcessEvent(uFnSetDisableCrossPlayForMember, &SetDisableCrossPlayForMember_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleDisableCrossPlayMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameParty_X::HandleDisableCrossPlayMessage(class UOnlineMessageComponent_X* Component, class UObject* Message)
{
	static UFunction* uFnHandleDisableCrossPlayMessage = nullptr;

	if (!uFnHandleDisableCrossPlayMessage)
	{
		uFnHandleDisableCrossPlayMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleDisableCrossPlayMessage");
	}

	UOnlineGameParty_X_execHandleDisableCrossPlayMessage_Params HandleDisableCrossPlayMessage_Params;
	memcpy_s(&HandleDisableCrossPlayMessage_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleDisableCrossPlayMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleDisableCrossPlayMessage, &HandleDisableCrossPlayMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastDisableCrossPlay
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastDisableCrossPlay()
{
	static UFunction* uFnBroadcastDisableCrossPlay = nullptr;

	if (!uFnBroadcastDisableCrossPlay)
	{
		uFnBroadcastDisableCrossPlay = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastDisableCrossPlay");
	}

	UOnlineGameParty_X_execBroadcastDisableCrossPlay_Params BroadcastDisableCrossPlay_Params;

	this->ProcessEvent(uFnBroadcastDisableCrossPlay, &BroadcastDisableCrossPlay_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.GetAnyLoggedInRestrictionPlayerName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameParty_X::GetAnyLoggedInRestrictionPlayerName()
{
	static UFunction* uFnGetAnyLoggedInRestrictionPlayerName = nullptr;

	if (!uFnGetAnyLoggedInRestrictionPlayerName)
	{
		uFnGetAnyLoggedInRestrictionPlayerName = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetAnyLoggedInRestrictionPlayerName");
	}

	UOnlineGameParty_X_execGetAnyLoggedInRestrictionPlayerName_Params GetAnyLoggedInRestrictionPlayerName_Params;

	this->ProcessEvent(uFnGetAnyLoggedInRestrictionPlayerName, &GetAnyLoggedInRestrictionPlayerName_Params, nullptr);

	return GetAnyLoggedInRestrictionPlayerName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetAnyAppOwnerRestrictionPlayerName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameParty_X::GetAnyAppOwnerRestrictionPlayerName()
{
	static UFunction* uFnGetAnyAppOwnerRestrictionPlayerName = nullptr;

	if (!uFnGetAnyAppOwnerRestrictionPlayerName)
	{
		uFnGetAnyAppOwnerRestrictionPlayerName = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetAnyAppOwnerRestrictionPlayerName");
	}

	UOnlineGameParty_X_execGetAnyAppOwnerRestrictionPlayerName_Params GetAnyAppOwnerRestrictionPlayerName_Params;

	this->ProcessEvent(uFnGetAnyAppOwnerRestrictionPlayerName, &GetAnyAppOwnerRestrictionPlayerName_Params, nullptr);

	return GetAnyAppOwnerRestrictionPlayerName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetMatchmakingRestrictionPlayerName
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint8_t                        Restriction                    (CPF_Parm)

class FString UOnlineGameParty_X::GetMatchmakingRestrictionPlayerName(uint8_t Restriction)
{
	static UFunction* uFnGetMatchmakingRestrictionPlayerName = nullptr;

	if (!uFnGetMatchmakingRestrictionPlayerName)
	{
		uFnGetMatchmakingRestrictionPlayerName = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetMatchmakingRestrictionPlayerName");
	}

	UOnlineGameParty_X_execGetMatchmakingRestrictionPlayerName_Params GetMatchmakingRestrictionPlayerName_Params;
	memcpy_s(&GetMatchmakingRestrictionPlayerName_Params.Restriction, 0x1, &Restriction, 0x1);

	this->ProcessEvent(uFnGetMatchmakingRestrictionPlayerName, &GetMatchmakingRestrictionPlayerName_Params, nullptr);

	return GetMatchmakingRestrictionPlayerName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetMatchmakingRestrictionError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameParty_X::GetMatchmakingRestrictionError()
{
	static UFunction* uFnGetMatchmakingRestrictionError = nullptr;

	if (!uFnGetMatchmakingRestrictionError)
	{
		uFnGetMatchmakingRestrictionError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetMatchmakingRestrictionError");
	}

	UOnlineGameParty_X_execGetMatchmakingRestrictionError_Params GetMatchmakingRestrictionError_Params;

	this->ProcessEvent(uFnGetMatchmakingRestrictionError, &GetMatchmakingRestrictionError_Params, nullptr);

	return GetMatchmakingRestrictionError_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsPlayerInMainMenu
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::IsPlayerInMainMenu(struct FUniqueNetId MemberId)
{
	static UFunction* uFnIsPlayerInMainMenu = nullptr;

	if (!uFnIsPlayerInMainMenu)
	{
		uFnIsPlayerInMainMenu = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsPlayerInMainMenu");
	}

	UOnlineGameParty_X_execIsPlayerInMainMenu_Params IsPlayerInMainMenu_Params;
	memcpy_s(&IsPlayerInMainMenu_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnIsPlayerInMainMenu, &IsPlayerInMainMenu_Params, nullptr);

	return IsPlayerInMainMenu_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsPlayerInMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::IsPlayerInMatch(struct FUniqueNetId MemberId)
{
	static UFunction* uFnIsPlayerInMatch = nullptr;

	if (!uFnIsPlayerInMatch)
	{
		uFnIsPlayerInMatch = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsPlayerInMatch");
	}

	UOnlineGameParty_X_execIsPlayerInMatch_Params IsPlayerInMatch_Params;
	memcpy_s(&IsPlayerInMatch_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnIsPlayerInMatch, &IsPlayerInMatch_Params, nullptr);

	return IsPlayerInMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.SetAvailableForMatchmakingForMember
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PartyMemberID                  (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        MatchmakeRestrictions          (CPF_Parm)

void UOnlineGameParty_X::SetAvailableForMatchmakingForMember(struct FUniqueNetId PartyMemberID, int32_t MatchmakeRestrictions)
{
	static UFunction* uFnSetAvailableForMatchmakingForMember = nullptr;

	if (!uFnSetAvailableForMatchmakingForMember)
	{
		uFnSetAvailableForMatchmakingForMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetAvailableForMatchmakingForMember");
	}

	UOnlineGameParty_X_execSetAvailableForMatchmakingForMember_Params SetAvailableForMatchmakingForMember_Params;
	memcpy_s(&SetAvailableForMatchmakingForMember_Params.PartyMemberID, 0x48, &PartyMemberID, 0x48);
	memcpy_s(&SetAvailableForMatchmakingForMember_Params.MatchmakeRestrictions, 0x4, &MatchmakeRestrictions, 0x4);

	this->ProcessEvent(uFnSetAvailableForMatchmakingForMember, &SetAvailableForMatchmakingForMember_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleMatchmakingAvailability
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameParty_X::HandleMatchmakingAvailability(class UOnlineMessageComponent_X* Component, class UObject* Message)
{
	static UFunction* uFnHandleMatchmakingAvailability = nullptr;

	if (!uFnHandleMatchmakingAvailability)
	{
		uFnHandleMatchmakingAvailability = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleMatchmakingAvailability");
	}

	UOnlineGameParty_X_execHandleMatchmakingAvailability_Params HandleMatchmakingAvailability_Params;
	memcpy_s(&HandleMatchmakingAvailability_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleMatchmakingAvailability_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleMatchmakingAvailability, &HandleMatchmakingAvailability_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BuildMatchmakingRestrictions
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGameParty_X::BuildMatchmakingRestrictions()
{
	static UFunction* uFnBuildMatchmakingRestrictions = nullptr;

	if (!uFnBuildMatchmakingRestrictions)
	{
		uFnBuildMatchmakingRestrictions = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BuildMatchmakingRestrictions");
	}

	UOnlineGameParty_X_execBuildMatchmakingRestrictions_Params BuildMatchmakingRestrictions_Params;

	this->ProcessEvent(uFnBuildMatchmakingRestrictions, &BuildMatchmakingRestrictions_Params, nullptr);

	return BuildMatchmakingRestrictions_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.BroadcastMatchmakingAvailabilityDelayed
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastMatchmakingAvailabilityDelayed()
{
	static UFunction* uFnBroadcastMatchmakingAvailabilityDelayed = nullptr;

	if (!uFnBroadcastMatchmakingAvailabilityDelayed)
	{
		uFnBroadcastMatchmakingAvailabilityDelayed = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastMatchmakingAvailabilityDelayed");
	}

	UOnlineGameParty_X_execBroadcastMatchmakingAvailabilityDelayed_Params BroadcastMatchmakingAvailabilityDelayed_Params;

	this->ProcessEvent(uFnBroadcastMatchmakingAvailabilityDelayed, &BroadcastMatchmakingAvailabilityDelayed_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastMatchmakingAvailability
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastMatchmakingAvailability()
{
	static UFunction* uFnBroadcastMatchmakingAvailability = nullptr;

	if (!uFnBroadcastMatchmakingAvailability)
	{
		uFnBroadcastMatchmakingAvailability = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastMatchmakingAvailability");
	}

	UOnlineGameParty_X_execBroadcastMatchmakingAvailability_Params BroadcastMatchmakingAvailability_Params;

	this->ProcessEvent(uFnBroadcastMatchmakingAvailability, &BroadcastMatchmakingAvailability_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastAllLocalPlayers
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastAllLocalPlayers()
{
	static UFunction* uFnBroadcastAllLocalPlayers = nullptr;

	if (!uFnBroadcastAllLocalPlayers)
	{
		uFnBroadcastAllLocalPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastAllLocalPlayers");
	}

	UOnlineGameParty_X_execBroadcastAllLocalPlayers_Params BroadcastAllLocalPlayers_Params;

	this->ProcessEvent(uFnBroadcastAllLocalPlayers, &BroadcastAllLocalPlayers_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastLocalPlayersDelayed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastLocalPlayersDelayed()
{
	static UFunction* uFnBroadcastLocalPlayersDelayed = nullptr;

	if (!uFnBroadcastLocalPlayersDelayed)
	{
		uFnBroadcastLocalPlayersDelayed = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastLocalPlayersDelayed");
	}

	UOnlineGameParty_X_execBroadcastLocalPlayersDelayed_Params BroadcastLocalPlayersDelayed_Params;

	this->ProcessEvent(uFnBroadcastLocalPlayersDelayed, &BroadcastLocalPlayersDelayed_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastLocalPlayers
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastLocalPlayers()
{
	static UFunction* uFnBroadcastLocalPlayers = nullptr;

	if (!uFnBroadcastLocalPlayers)
	{
		uFnBroadcastLocalPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastLocalPlayers");
	}

	UOnlineGameParty_X_execBroadcastLocalPlayers_Params BroadcastLocalPlayers_Params;

	this->ProcessEvent(uFnBroadcastLocalPlayers, &BroadcastLocalPlayers_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.ShouldLeavePartyOnDisconnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::ShouldLeavePartyOnDisconnect()
{
	static UFunction* uFnShouldLeavePartyOnDisconnect = nullptr;

	if (!uFnShouldLeavePartyOnDisconnect)
	{
		uFnShouldLeavePartyOnDisconnect = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ShouldLeavePartyOnDisconnect");
	}

	UOnlineGameParty_X_execShouldLeavePartyOnDisconnect_Params ShouldLeavePartyOnDisconnect_Params;

	this->ProcessEvent(uFnShouldLeavePartyOnDisconnect, &ShouldLeavePartyOnDisconnect_Params, nullptr);

	return ShouldLeavePartyOnDisconnect_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.HandlePsyNetLoginChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlineGameParty_X::HandlePsyNetLoginChanged(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnHandlePsyNetLoginChanged = nullptr;

	if (!uFnHandlePsyNetLoginChanged)
	{
		uFnHandlePsyNetLoginChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePsyNetLoginChanged");
	}

	UOnlineGameParty_X_execHandlePsyNetLoginChanged_Params HandlePsyNetLoginChanged_Params;
	memcpy_s(&HandlePsyNetLoginChanged_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnHandlePsyNetLoginChanged, &HandlePsyNetLoginChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleLocalPlayerLoginStatusChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlineGameParty_X::HandleLocalPlayerLoginStatusChanged(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnHandleLocalPlayerLoginStatusChanged = nullptr;

	if (!uFnHandleLocalPlayerLoginStatusChanged)
	{
		uFnHandleLocalPlayerLoginStatusChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLocalPlayerLoginStatusChanged");
	}

	UOnlineGameParty_X_execHandleLocalPlayerLoginStatusChanged_Params HandleLocalPlayerLoginStatusChanged_Params;
	memcpy_s(&HandleLocalPlayerLoginStatusChanged_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnHandleLocalPlayerLoginStatusChanged, &HandleLocalPlayerLoginStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleLocalPlayerLeave
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            Player                         (CPF_Parm)

void UOnlineGameParty_X::HandleLocalPlayerLeave(class ULocalPlayer* Player)
{
	static UFunction* uFnHandleLocalPlayerLeave = nullptr;

	if (!uFnHandleLocalPlayerLeave)
	{
		uFnHandleLocalPlayerLeave = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLocalPlayerLeave");
	}

	UOnlineGameParty_X_execHandleLocalPlayerLeave_Params HandleLocalPlayerLeave_Params;
	memcpy_s(&HandleLocalPlayerLeave_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnHandleLocalPlayerLeave, &HandleLocalPlayerLeave_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.UpdatePartyMember
// [0x20080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer_X*          Player                         (CPF_Parm)

void UOnlineGameParty_X::UpdatePartyMember(class ULocalPlayer_X* Player)
{
	static UFunction* uFnUpdatePartyMember = nullptr;

	if (!uFnUpdatePartyMember)
	{
		uFnUpdatePartyMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.UpdatePartyMember");
	}

	UOnlineGameParty_X_execUpdatePartyMember_Params UpdatePartyMember_Params;
	memcpy_s(&UpdatePartyMember_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnUpdatePartyMember, &UpdatePartyMember_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleOnlinePlayerNameChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlineGameParty_X::HandleOnlinePlayerNameChanged(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnHandleOnlinePlayerNameChanged = nullptr;

	if (!uFnHandleOnlinePlayerNameChanged)
	{
		uFnHandleOnlinePlayerNameChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleOnlinePlayerNameChanged");
	}

	UOnlineGameParty_X_execHandleOnlinePlayerNameChanged_Params HandleOnlinePlayerNameChanged_Params;
	memcpy_s(&HandleOnlinePlayerNameChanged_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnHandleOnlinePlayerNameChanged, &HandleOnlinePlayerNameChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleLocalPlayerJoin
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            Player                         (CPF_Parm)

void UOnlineGameParty_X::HandleLocalPlayerJoin(class ULocalPlayer* Player)
{
	static UFunction* uFnHandleLocalPlayerJoin = nullptr;

	if (!uFnHandleLocalPlayerJoin)
	{
		uFnHandleLocalPlayerJoin = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLocalPlayerJoin");
	}

	UOnlineGameParty_X_execHandleLocalPlayerJoin_Params HandleLocalPlayerJoin_Params;
	memcpy_s(&HandleLocalPlayerJoin_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnHandleLocalPlayerJoin, &HandleLocalPlayerJoin_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.ProcessLocalPlayersMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_LocalPlayers_X* Message                        (CPF_Parm)

void UOnlineGameParty_X::ProcessLocalPlayersMessage(class UPartyMessage_LocalPlayers_X* Message)
{
	static UFunction* uFnProcessLocalPlayersMessage = nullptr;

	if (!uFnProcessLocalPlayersMessage)
	{
		uFnProcessLocalPlayersMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ProcessLocalPlayersMessage");
	}

	UOnlineGameParty_X_execProcessLocalPlayersMessage_Params ProcessLocalPlayersMessage_Params;
	memcpy_s(&ProcessLocalPlayersMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnProcessLocalPlayersMessage, &ProcessLocalPlayersMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleLocalPlayers
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UObject*                 ObjMessage                     (CPF_Parm)

void UOnlineGameParty_X::HandleLocalPlayers(class UOnlineMessageComponent_X* Component, class UObject* ObjMessage)
{
	static UFunction* uFnHandleLocalPlayers = nullptr;

	if (!uFnHandleLocalPlayers)
	{
		uFnHandleLocalPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLocalPlayers");
	}

	UOnlineGameParty_X_execHandleLocalPlayers_Params HandleLocalPlayers_Params;
	memcpy_s(&HandleLocalPlayers_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleLocalPlayers_Params.ObjMessage, 0x8, &ObjMessage, 0x8);

	this->ProcessEvent(uFnHandleLocalPlayers, &HandleLocalPlayers_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.AllowSplitScreenPlayer
// [0x00420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ControllerId                   (CPF_Parm)
// class UError*                  OutError                       (CPF_Parm | CPF_OutParm)

bool UOnlineGameParty_X::AllowSplitScreenPlayer(int32_t ControllerId, class UError*& OutError)
{
	static UFunction* uFnAllowSplitScreenPlayer = nullptr;

	if (!uFnAllowSplitScreenPlayer)
	{
		uFnAllowSplitScreenPlayer = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.AllowSplitScreenPlayer");
	}

	UOnlineGameParty_X_execAllowSplitScreenPlayer_Params AllowSplitScreenPlayer_Params;
	memcpy_s(&AllowSplitScreenPlayer_Params.ControllerId, 0x4, &ControllerId, 0x4);
	memcpy_s(&AllowSplitScreenPlayer_Params.OutError, 0x8, &OutError, 0x8);

	this->ProcessEvent(uFnAllowSplitScreenPlayer, &AllowSplitScreenPlayer_Params, nullptr);

	memcpy_s(&OutError, 0x8, &AllowSplitScreenPlayer_Params.OutError, 0x8);

	return AllowSplitScreenPlayer_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.HasPartyMembers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::HasPartyMembers()
{
	static UFunction* uFnHasPartyMembers = nullptr;

	if (!uFnHasPartyMembers)
	{
		uFnHasPartyMembers = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HasPartyMembers");
	}

	UOnlineGameParty_X_execHasPartyMembers_Params HasPartyMembers_Params;

	this->ProcessEvent(uFnHasPartyMembers, &HasPartyMembers_Params, nullptr);

	return HasPartyMembers_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetPartySize
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGameParty_X::GetPartySize()
{
	static UFunction* uFnGetPartySize = nullptr;

	if (!uFnGetPartySize)
	{
		uFnGetPartySize = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetPartySize");
	}

	UOnlineGameParty_X_execGetPartySize_Params GetPartySize_Params;

	this->ProcessEvent(uFnGetPartySize, &GetPartySize_Params, nullptr);

	return GetPartySize_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.HandleClientReservationMessage_ConnectionValid
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)
// struct FJoinMatchSettings      Settings                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandleClientReservationMessage_ConnectionValid(struct FServerReservationData Reservation, struct FJoinMatchSettings Settings)
{
	static UFunction* uFnHandleClientReservationMessage_ConnectionValid = nullptr;

	if (!uFnHandleClientReservationMessage_ConnectionValid)
	{
		uFnHandleClientReservationMessage_ConnectionValid = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleClientReservationMessage_ConnectionValid");
	}

	UOnlineGameParty_X_execHandleClientReservationMessage_ConnectionValid_Params HandleClientReservationMessage_ConnectionValid_Params;
	memcpy_s(&HandleClientReservationMessage_ConnectionValid_Params.Reservation, 0x70, &Reservation, 0x70);
	memcpy_s(&HandleClientReservationMessage_ConnectionValid_Params.Settings, 0x20, &Settings, 0x20);

	this->ProcessEvent(uFnHandleClientReservationMessage_ConnectionValid, &HandleClientReservationMessage_ConnectionValid_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleClientReservationMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UClientReservationMessage_X* Message                        (CPF_Parm)

void UOnlineGameParty_X::HandleClientReservationMessage(class UIReservationConnection_X* Connection, class UClientReservationMessage_X* Message)
{
	static UFunction* uFnHandleClientReservationMessage = nullptr;

	if (!uFnHandleClientReservationMessage)
	{
		uFnHandleClientReservationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleClientReservationMessage");
	}

	UOnlineGameParty_X_execHandleClientReservationMessage_Params HandleClientReservationMessage_Params;
	memcpy_s(&HandleClientReservationMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandleClientReservationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleClientReservationMessage, &HandleClientReservationMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleSearchStatus
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameParty_X::HandleSearchStatus(class UOnlineMessageComponent_X* Component, class UObject* Message)
{
	static UFunction* uFnHandleSearchStatus = nullptr;

	if (!uFnHandleSearchStatus)
	{
		uFnHandleSearchStatus = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleSearchStatus");
	}

	UOnlineGameParty_X_execHandleSearchStatus_Params HandleSearchStatus_Params;
	memcpy_s(&HandleSearchStatus_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleSearchStatus_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleSearchStatus, &HandleSearchStatus_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastSearchStatus
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastSearchStatus()
{
	static UFunction* uFnBroadcastSearchStatus = nullptr;

	if (!uFnBroadcastSearchStatus)
	{
		uFnBroadcastSearchStatus = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastSearchStatus");
	}

	UOnlineGameParty_X_execBroadcastSearchStatus_Params BroadcastSearchStatus_Params;

	this->ProcessEvent(uFnBroadcastSearchStatus, &BroadcastSearchStatus_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.GetSearchStatusMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_SearchStatus_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPartyMessage_SearchStatus_X* UOnlineGameParty_X::GetSearchStatusMessage()
{
	static UFunction* uFnGetSearchStatusMessage = nullptr;

	if (!uFnGetSearchStatusMessage)
	{
		uFnGetSearchStatusMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetSearchStatusMessage");
	}

	UOnlineGameParty_X_execGetSearchStatusMessage_Params GetSearchStatusMessage_Params;

	this->ProcessEvent(uFnGetSearchStatusMessage, &GetSearchStatusMessage_Params, nullptr);

	return GetSearchStatusMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.TogglePartyLock
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::TogglePartyLock()
{
	static UFunction* uFnTogglePartyLock = nullptr;

	if (!uFnTogglePartyLock)
	{
		uFnTogglePartyLock = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.TogglePartyLock");
	}

	UOnlineGameParty_X_execTogglePartyLock_Params TogglePartyLock_Params;

	this->ProcessEvent(uFnTogglePartyLock, &TogglePartyLock_Params, nullptr);

	return TogglePartyLock_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetMaxPartySize
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGameParty_X::GetMaxPartySize()
{
	static UFunction* uFnGetMaxPartySize = nullptr;

	if (!uFnGetMaxPartySize)
	{
		uFnGetMaxPartySize = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetMaxPartySize");
	}

	UOnlineGameParty_X_execGetMaxPartySize_Params GetMaxPartySize_Params;

	this->ProcessEvent(uFnGetMaxPartySize, &GetMaxPartySize_Params, nullptr);

	return GetMaxPartySize_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.AllowPartySize
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InSize                         (CPF_Parm)

bool UOnlineGameParty_X::AllowPartySize(int32_t InSize)
{
	static UFunction* uFnAllowPartySize = nullptr;

	if (!uFnAllowPartySize)
	{
		uFnAllowPartySize = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.AllowPartySize");
	}

	UOnlineGameParty_X_execAllowPartySize_Params AllowPartySize_Params;
	memcpy_s(&AllowPartySize_Params.InSize, 0x4, &InSize, 0x4);

	this->ProcessEvent(uFnAllowPartySize, &AllowPartySize_Params, nullptr);

	return AllowPartySize_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsPartyOverFull
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::IsPartyOverFull()
{
	static UFunction* uFnIsPartyOverFull = nullptr;

	if (!uFnIsPartyOverFull)
	{
		uFnIsPartyOverFull = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsPartyOverFull");
	}

	UOnlineGameParty_X_execIsPartyOverFull_Params IsPartyOverFull_Params;

	this->ProcessEvent(uFnIsPartyOverFull, &IsPartyOverFull_Params, nullptr);

	return IsPartyOverFull_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.AllowNewMember
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::AllowNewMember()
{
	static UFunction* uFnAllowNewMember = nullptr;

	if (!uFnAllowNewMember)
	{
		uFnAllowNewMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.AllowNewMember");
	}

	UOnlineGameParty_X_execAllowNewMember_Params AllowNewMember_Params;

	this->ProcessEvent(uFnAllowNewMember, &AllowNewMember_Params, nullptr);

	return AllowNewMember_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.UpdatePartyLock
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::UpdatePartyLock()
{
	static UFunction* uFnUpdatePartyLock = nullptr;

	if (!uFnUpdatePartyLock)
	{
		uFnUpdatePartyLock = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.UpdatePartyLock");
	}

	UOnlineGameParty_X_execUpdatePartyLock_Params UpdatePartyLock_Params;

	this->ProcessEvent(uFnUpdatePartyLock, &UpdatePartyLock_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleFindGameStateChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FName                   NewState                       (CPF_Parm)

void UOnlineGameParty_X::HandleFindGameStateChanged(struct FName NewState)
{
	static UFunction* uFnHandleFindGameStateChanged = nullptr;

	if (!uFnHandleFindGameStateChanged)
	{
		uFnHandleFindGameStateChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleFindGameStateChanged");
	}

	UOnlineGameParty_X_execHandleFindGameStateChanged_Params HandleFindGameStateChanged_Params;
	memcpy_s(&HandleFindGameStateChanged_Params.NewState, 0x8, &NewState, 0x8);

	this->ProcessEvent(uFnHandleFindGameStateChanged, &HandleFindGameStateChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.ClearLastServerAddress
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::ClearLastServerAddress()
{
	static UFunction* uFnClearLastServerAddress = nullptr;

	if (!uFnClearLastServerAddress)
	{
		uFnClearLastServerAddress = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ClearLastServerAddress");
	}

	UOnlineGameParty_X_execClearLastServerAddress_Params ClearLastServerAddress_Params;

	this->ProcessEvent(uFnClearLastServerAddress, &ClearLastServerAddress_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.OnNewGameInfoCreated
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             Game                           (CPF_Parm)

void UOnlineGameParty_X::OnNewGameInfoCreated(class AGameInfo_X* Game)
{
	static UFunction* uFnOnNewGameInfoCreated = nullptr;

	if (!uFnOnNewGameInfoCreated)
	{
		uFnOnNewGameInfoCreated = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnNewGameInfoCreated");
	}

	UOnlineGameParty_X_execOnNewGameInfoCreated_Params OnNewGameInfoCreated_Params;
	memcpy_s(&OnNewGameInfoCreated_Params.Game, 0x8, &Game, 0x8);

	this->ProcessEvent(uFnOnNewGameInfoCreated, &OnNewGameInfoCreated_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.OnNewSettingsChosen
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlaylistId                     (CPF_Parm)

void UOnlineGameParty_X::OnNewSettingsChosen(int32_t PlaylistId)
{
	static UFunction* uFnOnNewSettingsChosen = nullptr;

	if (!uFnOnNewSettingsChosen)
	{
		uFnOnNewSettingsChosen = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnNewSettingsChosen");
	}

	UOnlineGameParty_X_execOnNewSettingsChosen_Params OnNewSettingsChosen_Params;
	memcpy_s(&OnNewSettingsChosen_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnOnNewSettingsChosen, &OnNewSettingsChosen_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.OnNewGame
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::OnNewGame()
{
	static UFunction* uFnOnNewGame = nullptr;

	if (!uFnOnNewGame)
	{
		uFnOnNewGame = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnNewGame");
	}

	UOnlineGameParty_X_execOnNewGame_Params OnNewGame_Params;

	this->ProcessEvent(uFnOnNewGame, &OnNewGame_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.SetMatchmakingSearching
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bState                         (CPF_Parm)

void UOnlineGameParty_X::SetMatchmakingSearching(unsigned long bState)
{
	static UFunction* uFnSetMatchmakingSearching = nullptr;

	if (!uFnSetMatchmakingSearching)
	{
		uFnSetMatchmakingSearching = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetMatchmakingSearching");
	}

	UOnlineGameParty_X_execSetMatchmakingSearching_Params SetMatchmakingSearching_Params;
	SetMatchmakingSearching_Params.bState = bState;

	this->ProcessEvent(uFnSetMatchmakingSearching, &SetMatchmakingSearching_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.SetSearchState
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   SearchState                    (CPF_Parm)

void UOnlineGameParty_X::SetSearchState(struct FName SearchState)
{
	static UFunction* uFnSetSearchState = nullptr;

	if (!uFnSetSearchState)
	{
		uFnSetSearchState = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetSearchState");
	}

	UOnlineGameParty_X_execSetSearchState_Params SetSearchState_Params;
	memcpy_s(&SetSearchState_Params.SearchState, 0x8, &SearchState, 0x8);

	this->ProcessEvent(uFnSetSearchState, &SetSearchState_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.GetLocalMemberIndex
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGameParty_X::GetLocalMemberIndex()
{
	static UFunction* uFnGetLocalMemberIndex = nullptr;

	if (!uFnGetLocalMemberIndex)
	{
		uFnGetLocalMemberIndex = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetLocalMemberIndex");
	}

	UOnlineGameParty_X_execGetLocalMemberIndex_Params GetLocalMemberIndex_Params;

	this->ProcessEvent(uFnGetLocalMemberIndex, &GetLocalMemberIndex_Params, nullptr);

	return GetLocalMemberIndex_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetLocalMemberId
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FUniqueNetId UOnlineGameParty_X::GetLocalMemberId()
{
	static UFunction* uFnGetLocalMemberId = nullptr;

	if (!uFnGetLocalMemberId)
	{
		uFnGetLocalMemberId = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetLocalMemberId");
	}

	UOnlineGameParty_X_execGetLocalMemberId_Params GetLocalMemberId_Params;

	this->ProcessEvent(uFnGetLocalMemberId, &GetLocalMemberId_Params, nullptr);

	return GetLocalMemberId_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsMemberLocal
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::IsMemberLocal(struct FUniqueNetId MemberId)
{
	static UFunction* uFnIsMemberLocal = nullptr;

	if (!uFnIsMemberLocal)
	{
		uFnIsMemberLocal = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsMemberLocal");
	}

	UOnlineGameParty_X_execIsMemberLocal_Params IsMemberLocal_Params;
	memcpy_s(&IsMemberLocal_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnIsMemberLocal, &IsMemberLocal_Params, nullptr);

	return IsMemberLocal_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.HasRemoteMember
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::HasRemoteMember()
{
	static UFunction* uFnHasRemoteMember = nullptr;

	if (!uFnHasRemoteMember)
	{
		uFnHasRemoteMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HasRemoteMember");
	}

	UOnlineGameParty_X_execHasRemoteMember_Params HasRemoteMember_Params;

	this->ProcessEvent(uFnHasRemoteMember, &HasRemoteMember_Params, nullptr);

	return HasRemoteMember_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.OnPartyLeaderChanged
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::OnPartyLeaderChanged()
{
	static UFunction* uFnOnPartyLeaderChanged = nullptr;

	if (!uFnOnPartyLeaderChanged)
	{
		uFnOnPartyLeaderChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnPartyLeaderChanged");
	}

	UOnlineGameParty_X_execOnPartyLeaderChanged_Params OnPartyLeaderChanged_Params;

	this->ProcessEvent(uFnOnPartyLeaderChanged, &OnPartyLeaderChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.GetKickedFromPartyError
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Reason                         (CPF_Parm)

class UError* UOnlineGameParty_X::GetKickedFromPartyError(uint8_t Reason)
{
	static UFunction* uFnGetKickedFromPartyError = nullptr;

	if (!uFnGetKickedFromPartyError)
	{
		uFnGetKickedFromPartyError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetKickedFromPartyError");
	}

	UOnlineGameParty_X_execGetKickedFromPartyError_Params GetKickedFromPartyError_Params;
	memcpy_s(&GetKickedFromPartyError_Params.Reason, 0x1, &Reason, 0x1);

	this->ProcessEvent(uFnGetKickedFromPartyError, &GetKickedFromPartyError_Params, nullptr);

	return GetKickedFromPartyError_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.KickedFromParty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        Reason                         (CPF_Parm)

void UOnlineGameParty_X::KickedFromParty(uint8_t Reason)
{
	static UFunction* uFnKickedFromParty = nullptr;

	if (!uFnKickedFromParty)
	{
		uFnKickedFromParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.KickedFromParty");
	}

	UOnlineGameParty_X_execKickedFromParty_Params KickedFromParty_Params;
	memcpy_s(&KickedFromParty_Params.Reason, 0x1, &Reason, 0x1);

	this->ProcessEvent(uFnKickedFromParty, &KickedFromParty_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleKickMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameParty_X::HandleKickMessage(class UOnlineMessageComponent_X* Component, class UObject* Message)
{
	static UFunction* uFnHandleKickMessage = nullptr;

	if (!uFnHandleKickMessage)
	{
		uFnHandleKickMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleKickMessage");
	}

	UOnlineGameParty_X_execHandleKickMessage_Params HandleKickMessage_Params;
	memcpy_s(&HandleKickMessage_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleKickMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleKickMessage, &HandleKickMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleLobbySettingsUpdateMessage
// [0x20080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UPartyMessage_LobbySettings_X* LobbySettingsMessage           (CPF_Parm)

void UOnlineGameParty_X::HandleLobbySettingsUpdateMessage(class UOnlineMessageComponent_X* Component, class UPartyMessage_LobbySettings_X* LobbySettingsMessage)
{
	static UFunction* uFnHandleLobbySettingsUpdateMessage = nullptr;

	if (!uFnHandleLobbySettingsUpdateMessage)
	{
		uFnHandleLobbySettingsUpdateMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLobbySettingsUpdateMessage");
	}

	UOnlineGameParty_X_execHandleLobbySettingsUpdateMessage_Params HandleLobbySettingsUpdateMessage_Params;
	memcpy_s(&HandleLobbySettingsUpdateMessage_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleLobbySettingsUpdateMessage_Params.LobbySettingsMessage, 0x8, &LobbySettingsMessage, 0x8);

	this->ProcessEvent(uFnHandleLobbySettingsUpdateMessage, &HandleLobbySettingsUpdateMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleLobbyDestroyed
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// uint8_t                        Reason                         (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

void UOnlineGameParty_X::HandleLobbyDestroyed(uint8_t Reason, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnHandleLobbyDestroyed = nullptr;

	if (!uFnHandleLobbyDestroyed)
	{
		uFnHandleLobbyDestroyed = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLobbyDestroyed");
	}

	UOnlineGameParty_X_execHandleLobbyDestroyed_Params HandleLobbyDestroyed_Params;
	memcpy_s(&HandleLobbyDestroyed_Params.Reason, 0x1, &Reason, 0x1);
	memcpy_s(&HandleLobbyDestroyed_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnHandleLobbyDestroyed, &HandleLobbyDestroyed_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &HandleLobbyDestroyed_Params.LobbyId, 0x10);
};

// Function ProjectX.OnlineGameParty_X.HandleLobbyReceiveBinaryData
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        MemberIndex                    (CPF_Parm)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<uint8_t>                Data                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandleLobbyReceiveBinaryData(int32_t MemberIndex, struct FActiveLobbyInfo& LobbyInfo, TArray<uint8_t>& Data)
{
	static UFunction* uFnHandleLobbyReceiveBinaryData = nullptr;

	if (!uFnHandleLobbyReceiveBinaryData)
	{
		uFnHandleLobbyReceiveBinaryData = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLobbyReceiveBinaryData");
	}

	UOnlineGameParty_X_execHandleLobbyReceiveBinaryData_Params HandleLobbyReceiveBinaryData_Params;
	memcpy_s(&HandleLobbyReceiveBinaryData_Params.MemberIndex, 0x4, &MemberIndex, 0x4);
	memcpy_s(&HandleLobbyReceiveBinaryData_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&HandleLobbyReceiveBinaryData_Params.Data, 0x10, &Data, 0x10);

	this->ProcessEvent(uFnHandleLobbyReceiveBinaryData, &HandleLobbyReceiveBinaryData_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &HandleLobbyReceiveBinaryData_Params.LobbyInfo, 0x30);
	memcpy_s(&Data, 0x10, &HandleLobbyReceiveBinaryData_Params.Data, 0x10);
};

// Function ProjectX.OnlineGameParty_X.RemoveAllPartyMembers
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::RemoveAllPartyMembers()
{
	static UFunction* uFnRemoveAllPartyMembers = nullptr;

	if (!uFnRemoveAllPartyMembers)
	{
		uFnRemoveAllPartyMembers = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.RemoveAllPartyMembers");
	}

	UOnlineGameParty_X_execRemoveAllPartyMembers_Params RemoveAllPartyMembers_Params;

	this->ProcessEvent(uFnRemoveAllPartyMembers, &RemoveAllPartyMembers_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.RemovePartyMemberByLocalPlayer
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer*            Player                         (CPF_Parm)

void UOnlineGameParty_X::RemovePartyMemberByLocalPlayer(class ULocalPlayer* Player)
{
	static UFunction* uFnRemovePartyMemberByLocalPlayer = nullptr;

	if (!uFnRemovePartyMemberByLocalPlayer)
	{
		uFnRemovePartyMemberByLocalPlayer = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.RemovePartyMemberByLocalPlayer");
	}

	UOnlineGameParty_X_execRemovePartyMemberByLocalPlayer_Params RemovePartyMemberByLocalPlayer_Params;
	memcpy_s(&RemovePartyMemberByLocalPlayer_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnRemovePartyMemberByLocalPlayer, &RemovePartyMemberByLocalPlayer_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.RemovePartyMemberByIDWithNotify
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::RemovePartyMemberByIDWithNotify(struct FUniqueNetId MemberId)
{
	static UFunction* uFnRemovePartyMemberByIDWithNotify = nullptr;

	if (!uFnRemovePartyMemberByIDWithNotify)
	{
		uFnRemovePartyMemberByIDWithNotify = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.RemovePartyMemberByIDWithNotify");
	}

	UOnlineGameParty_X_execRemovePartyMemberByIDWithNotify_Params RemovePartyMemberByIDWithNotify_Params;
	memcpy_s(&RemovePartyMemberByIDWithNotify_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnRemovePartyMemberByIDWithNotify, &RemovePartyMemberByIDWithNotify_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.RemovePartyMemberByID
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::RemovePartyMemberByID(struct FUniqueNetId MemberId)
{
	static UFunction* uFnRemovePartyMemberByID = nullptr;

	if (!uFnRemovePartyMemberByID)
	{
		uFnRemovePartyMemberByID = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.RemovePartyMemberByID");
	}

	UOnlineGameParty_X_execRemovePartyMemberByID_Params RemovePartyMemberByID_Params;
	memcpy_s(&RemovePartyMemberByID_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnRemovePartyMemberByID, &RemovePartyMemberByID_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.AddPartyMember
// [0x00084003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PrimaryMemberId                (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  MemberName                     (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        ControllerId                   (CPF_OptionalParm | CPF_Parm)

int32_t UOnlineGameParty_X::AddPartyMember(struct FUniqueNetId PrimaryMemberId, struct FUniqueNetId MemberId, class FString MemberName, int32_t ControllerId)
{
	static UFunction* uFnAddPartyMember = nullptr;

	if (!uFnAddPartyMember)
	{
		uFnAddPartyMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.AddPartyMember");
	}

	UOnlineGameParty_X_execAddPartyMember_Params AddPartyMember_Params;
	memcpy_s(&AddPartyMember_Params.PrimaryMemberId, 0x48, &PrimaryMemberId, 0x48);
	memcpy_s(&AddPartyMember_Params.MemberId, 0x48, &MemberId, 0x48);
	memcpy_s(&AddPartyMember_Params.MemberName, 0x10, &MemberName, 0x10);
	memcpy_s(&AddPartyMember_Params.ControllerId, 0x4, &ControllerId, 0x4);

	this->ProcessEvent(uFnAddPartyMember, &AddPartyMember_Params, nullptr);

	return AddPartyMember_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.OnEditExistingPartyMember
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        PartyMemberIdx                 (CPF_Parm)

void UOnlineGameParty_X::OnEditExistingPartyMember(int32_t PartyMemberIdx)
{
	static UFunction* uFnOnEditExistingPartyMember = nullptr;

	if (!uFnOnEditExistingPartyMember)
	{
		uFnOnEditExistingPartyMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnEditExistingPartyMember");
	}

	UOnlineGameParty_X_execOnEditExistingPartyMember_Params OnEditExistingPartyMember_Params;
	memcpy_s(&OnEditExistingPartyMember_Params.PartyMemberIdx, 0x4, &PartyMemberIdx, 0x4);

	this->ProcessEvent(uFnOnEditExistingPartyMember, &OnEditExistingPartyMember_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.OnAddNewPartyMember
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        PartyMemberIdx                 (CPF_Parm)

void UOnlineGameParty_X::OnAddNewPartyMember(int32_t PartyMemberIdx)
{
	static UFunction* uFnOnAddNewPartyMember = nullptr;

	if (!uFnOnAddNewPartyMember)
	{
		uFnOnAddNewPartyMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnAddNewPartyMember");
	}

	UOnlineGameParty_X_execOnAddNewPartyMember_Params OnAddNewPartyMember_Params;
	memcpy_s(&OnAddNewPartyMember_Params.PartyMemberIdx, 0x4, &PartyMemberIdx, 0x4);

	this->ProcessEvent(uFnOnAddNewPartyMember, &OnAddNewPartyMember_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.UpdatePartyInfo
// [0x00C40003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FActiveLobbyInfo        Lobby                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameParty_X::UpdatePartyInfo(struct FActiveLobbyInfo& Lobby)
{
	static UFunction* uFnUpdatePartyInfo = nullptr;

	if (!uFnUpdatePartyInfo)
	{
		uFnUpdatePartyInfo = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.UpdatePartyInfo");
	}

	UOnlineGameParty_X_execUpdatePartyInfo_Params UpdatePartyInfo_Params;
	memcpy_s(&UpdatePartyInfo_Params.Lobby, 0x30, &Lobby, 0x30);

	this->ProcessEvent(uFnUpdatePartyInfo, &UpdatePartyInfo_Params, nullptr);

	memcpy_s(&Lobby, 0x30, &UpdatePartyInfo_Params.Lobby, 0x30);
};

// Function ProjectX.OnlineGameParty_X.UpdatePartyLeader
// [0x00C40003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FActiveLobbyInfo        Lobby                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameParty_X::UpdatePartyLeader(struct FActiveLobbyInfo& Lobby)
{
	static UFunction* uFnUpdatePartyLeader = nullptr;

	if (!uFnUpdatePartyLeader)
	{
		uFnUpdatePartyLeader = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.UpdatePartyLeader");
	}

	UOnlineGameParty_X_execUpdatePartyLeader_Params UpdatePartyLeader_Params;
	memcpy_s(&UpdatePartyLeader_Params.Lobby, 0x30, &Lobby, 0x30);

	this->ProcessEvent(uFnUpdatePartyLeader, &UpdatePartyLeader_Params, nullptr);

	memcpy_s(&Lobby, 0x30, &UpdatePartyLeader_Params.Lobby, 0x30);
};

// Function ProjectX.OnlineGameParty_X.HandleLobbySettingsUpdated
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FActiveLobbyInfo        Lobby                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandleLobbySettingsUpdated(struct FActiveLobbyInfo& Lobby)
{
	static UFunction* uFnHandleLobbySettingsUpdated = nullptr;

	if (!uFnHandleLobbySettingsUpdated)
	{
		uFnHandleLobbySettingsUpdated = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLobbySettingsUpdated");
	}

	UOnlineGameParty_X_execHandleLobbySettingsUpdated_Params HandleLobbySettingsUpdated_Params;
	memcpy_s(&HandleLobbySettingsUpdated_Params.Lobby, 0x30, &Lobby, 0x30);

	this->ProcessEvent(uFnHandleLobbySettingsUpdated, &HandleLobbySettingsUpdated_Params, nullptr);

	memcpy_s(&Lobby, 0x30, &HandleLobbySettingsUpdated_Params.Lobby, 0x30);
};

// Function ProjectX.OnlineGameParty_X.OnNewLobby
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::OnNewLobby()
{
	static UFunction* uFnOnNewLobby = nullptr;

	if (!uFnOnNewLobby)
	{
		uFnOnNewLobby = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnNewLobby");
	}

	UOnlineGameParty_X_execOnNewLobby_Params OnNewLobby_Params;

	this->ProcessEvent(uFnOnNewLobby, &OnNewLobby_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastPartyInfo
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastPartyInfo()
{
	static UFunction* uFnBroadcastPartyInfo = nullptr;

	if (!uFnBroadcastPartyInfo)
	{
		uFnBroadcastPartyInfo = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastPartyInfo");
	}

	UOnlineGameParty_X_execBroadcastPartyInfo_Params BroadcastPartyInfo_Params;

	this->ProcessEvent(uFnBroadcastPartyInfo, &BroadcastPartyInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleJoinLobby_ConnectionValid
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::HandleJoinLobby_ConnectionValid()
{
	static UFunction* uFnHandleJoinLobby_ConnectionValid = nullptr;

	if (!uFnHandleJoinLobby_ConnectionValid)
	{
		uFnHandleJoinLobby_ConnectionValid = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleJoinLobby_ConnectionValid");
	}

	UOnlineGameParty_X_execHandleJoinLobby_ConnectionValid_Params HandleJoinLobby_ConnectionValid_Params;

	this->ProcessEvent(uFnHandleJoinLobby_ConnectionValid, &HandleJoinLobby_ConnectionValid_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleJoinLobby
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyUID                       (CPF_Const | CPF_Parm | CPF_OutParm)

void UOnlineGameParty_X::HandleJoinLobby(unsigned long bWasSuccessful, class FString Error, struct FActiveLobbyInfo& LobbyInfo, struct FUniqueLobbyId& LobbyUID)
{
	static UFunction* uFnHandleJoinLobby = nullptr;

	if (!uFnHandleJoinLobby)
	{
		uFnHandleJoinLobby = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleJoinLobby");
	}

	UOnlineGameParty_X_execHandleJoinLobby_Params HandleJoinLobby_Params;
	HandleJoinLobby_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&HandleJoinLobby_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&HandleJoinLobby_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&HandleJoinLobby_Params.LobbyUID, 0x10, &LobbyUID, 0x10);

	this->ProcessEvent(uFnHandleJoinLobby, &HandleJoinLobby_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &HandleJoinLobby_Params.LobbyInfo, 0x30);
	memcpy_s(&LobbyUID, 0x10, &HandleJoinLobby_Params.LobbyUID, 0x10);
};

// Function ProjectX.OnlineGameParty_X.GetJoinPartyError
// [0x00480002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UError* UOnlineGameParty_X::GetJoinPartyError(struct FActiveLobbyInfo& LobbyInfo)
{
	static UFunction* uFnGetJoinPartyError = nullptr;

	if (!uFnGetJoinPartyError)
	{
		uFnGetJoinPartyError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetJoinPartyError");
	}

	UOnlineGameParty_X_execGetJoinPartyError_Params GetJoinPartyError_Params;
	memcpy_s(&GetJoinPartyError_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);

	this->ProcessEvent(uFnGetJoinPartyError, &GetJoinPartyError_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &GetJoinPartyError_Params.LobbyInfo, 0x30);

	return GetJoinPartyError_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.CheckForJoinPartyError
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UError* UOnlineGameParty_X::CheckForJoinPartyError(struct FActiveLobbyInfo& LobbyInfo)
{
	static UFunction* uFnCheckForJoinPartyError = nullptr;

	if (!uFnCheckForJoinPartyError)
	{
		uFnCheckForJoinPartyError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CheckForJoinPartyError");
	}

	UOnlineGameParty_X_execCheckForJoinPartyError_Params CheckForJoinPartyError_Params;
	memcpy_s(&CheckForJoinPartyError_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);

	this->ProcessEvent(uFnCheckForJoinPartyError, &CheckForJoinPartyError_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &CheckForJoinPartyError_Params.LobbyInfo, 0x30);

	return CheckForJoinPartyError_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.BroadcastStateDelayed
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastStateDelayed()
{
	static UFunction* uFnBroadcastStateDelayed = nullptr;

	if (!uFnBroadcastStateDelayed)
	{
		uFnBroadcastStateDelayed = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastStateDelayed");
	}

	UOnlineGameParty_X_execBroadcastStateDelayed_Params BroadcastStateDelayed_Params;

	this->ProcessEvent(uFnBroadcastStateDelayed, &BroadcastStateDelayed_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastState
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastState()
{
	static UFunction* uFnBroadcastState = nullptr;

	if (!uFnBroadcastState)
	{
		uFnBroadcastState = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastState");
	}

	UOnlineGameParty_X_execBroadcastState_Params BroadcastState_Params;

	this->ProcessEvent(uFnBroadcastState, &BroadcastState_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.CheckForJoiningPlayerKick
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::CheckForJoiningPlayerKick(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnCheckForJoiningPlayerKick = nullptr;

	if (!uFnCheckForJoiningPlayerKick)
	{
		uFnCheckForJoiningPlayerKick = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CheckForJoiningPlayerKick");
	}

	UOnlineGameParty_X_execCheckForJoiningPlayerKick_Params CheckForJoiningPlayerKick_Params;
	memcpy_s(&CheckForJoiningPlayerKick_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnCheckForJoiningPlayerKick, &CheckForJoiningPlayerKick_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleLobbyMemberStatusUpdate
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        MemberIndex                    (CPF_Parm)
// int32_t                        InstigatorIndex                (CPF_Parm)
// class FString                  Status                         (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandleLobbyMemberStatusUpdate(int32_t MemberIndex, int32_t InstigatorIndex, class FString Status, struct FActiveLobbyInfo& LobbyInfo)
{
	static UFunction* uFnHandleLobbyMemberStatusUpdate = nullptr;

	if (!uFnHandleLobbyMemberStatusUpdate)
	{
		uFnHandleLobbyMemberStatusUpdate = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleLobbyMemberStatusUpdate");
	}

	UOnlineGameParty_X_execHandleLobbyMemberStatusUpdate_Params HandleLobbyMemberStatusUpdate_Params;
	memcpy_s(&HandleLobbyMemberStatusUpdate_Params.MemberIndex, 0x4, &MemberIndex, 0x4);
	memcpy_s(&HandleLobbyMemberStatusUpdate_Params.InstigatorIndex, 0x4, &InstigatorIndex, 0x4);
	memcpy_s(&HandleLobbyMemberStatusUpdate_Params.Status, 0x10, &Status, 0x10);
	memcpy_s(&HandleLobbyMemberStatusUpdate_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);

	this->ProcessEvent(uFnHandleLobbyMemberStatusUpdate, &HandleLobbyMemberStatusUpdate_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &HandleLobbyMemberStatusUpdate_Params.LobbyInfo, 0x30);
};

// Function ProjectX.OnlineGameParty_X.CancelJoinGameFromPartyDestroyed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::CancelJoinGameFromPartyDestroyed(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnCancelJoinGameFromPartyDestroyed = nullptr;

	if (!uFnCancelJoinGameFromPartyDestroyed)
	{
		uFnCancelJoinGameFromPartyDestroyed = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CancelJoinGameFromPartyDestroyed");
	}

	UOnlineGameParty_X_execCancelJoinGameFromPartyDestroyed_Params CancelJoinGameFromPartyDestroyed_Params;
	memcpy_s(&CancelJoinGameFromPartyDestroyed_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnCancelJoinGameFromPartyDestroyed, &CancelJoinGameFromPartyDestroyed_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandlePartyJoinGameComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  FailReason                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandlePartyJoinGameComplete(unsigned long bSuccess, class FString FailReason)
{
	static UFunction* uFnHandlePartyJoinGameComplete = nullptr;

	if (!uFnHandlePartyJoinGameComplete)
	{
		uFnHandlePartyJoinGameComplete = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePartyJoinGameComplete");
	}

	UOnlineGameParty_X_execHandlePartyJoinGameComplete_Params HandlePartyJoinGameComplete_Params;
	HandlePartyJoinGameComplete_Params.bSuccess = bSuccess;
	memcpy_s(&HandlePartyJoinGameComplete_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnHandlePartyJoinGameComplete, &HandlePartyJoinGameComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleFindServerError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameParty_X::HandleFindServerError(class UError* Error)
{
	static UFunction* uFnHandleFindServerError = nullptr;

	if (!uFnHandleFindServerError)
	{
		uFnHandleFindServerError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleFindServerError");
	}

	UOnlineGameParty_X_execHandleFindServerError_Params HandleFindServerError_Params;
	memcpy_s(&HandleFindServerError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleFindServerError, &HandleFindServerError_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleFindServer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)
// struct FJoinMatchSettings      Settings                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandleFindServer(struct FServerReservationData Reservation, struct FJoinMatchSettings Settings)
{
	static UFunction* uFnHandleFindServer = nullptr;

	if (!uFnHandleFindServer)
	{
		uFnHandleFindServer = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleFindServer");
	}

	UOnlineGameParty_X_execHandleFindServer_Params HandleFindServer_Params;
	memcpy_s(&HandleFindServer_Params.Reservation, 0x70, &Reservation, 0x70);
	memcpy_s(&HandleFindServer_Params.Settings, 0x20, &Settings, 0x20);

	this->ProcessEvent(uFnHandleFindServer, &HandleFindServer_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleConfirmJoinGame_ConnectionValid
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FPartyJoinMatchSettings InSettings                     (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandleConfirmJoinGame_ConnectionValid(struct FPartyJoinMatchSettings InSettings)
{
	static UFunction* uFnHandleConfirmJoinGame_ConnectionValid = nullptr;

	if (!uFnHandleConfirmJoinGame_ConnectionValid)
	{
		uFnHandleConfirmJoinGame_ConnectionValid = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleConfirmJoinGame_ConnectionValid");
	}

	UOnlineGameParty_X_execHandleConfirmJoinGame_ConnectionValid_Params HandleConfirmJoinGame_ConnectionValid_Params;
	memcpy_s(&HandleConfirmJoinGame_ConnectionValid_Params.InSettings, 0x58, &InSettings, 0x58);

	this->ProcessEvent(uFnHandleConfirmJoinGame_ConnectionValid, &HandleConfirmJoinGame_ConnectionValid_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleConfirmJoinGame
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FPartyJoinMatchSettings InSettings                     (CPF_Const | CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandleConfirmJoinGame(struct FPartyJoinMatchSettings InSettings)
{
	static UFunction* uFnHandleConfirmJoinGame = nullptr;

	if (!uFnHandleConfirmJoinGame)
	{
		uFnHandleConfirmJoinGame = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleConfirmJoinGame");
	}

	UOnlineGameParty_X_execHandleConfirmJoinGame_Params HandleConfirmJoinGame_Params;
	memcpy_s(&HandleConfirmJoinGame_Params.InSettings, 0x58, &InSettings, 0x58);

	this->ProcessEvent(uFnHandleConfirmJoinGame, &HandleConfirmJoinGame_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.JoinFriend
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PartyMemberID                  (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::JoinFriend(struct FUniqueNetId PartyMemberID)
{
	static UFunction* uFnJoinFriend = nullptr;

	if (!uFnJoinFriend)
	{
		uFnJoinFriend = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.JoinFriend");
	}

	UOnlineGameParty_X_execJoinFriend_Params JoinFriend_Params;
	memcpy_s(&JoinFriend_Params.PartyMemberID, 0x48, &PartyMemberID, 0x48);

	this->ProcessEvent(uFnJoinFriend, &JoinFriend_Params, nullptr);

	return JoinFriend_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.WantsToFollowTheLeaderOutOfGame
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::WantsToFollowTheLeaderOutOfGame()
{
	static UFunction* uFnWantsToFollowTheLeaderOutOfGame = nullptr;

	if (!uFnWantsToFollowTheLeaderOutOfGame)
	{
		uFnWantsToFollowTheLeaderOutOfGame = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.WantsToFollowTheLeaderOutOfGame");
	}

	UOnlineGameParty_X_execWantsToFollowTheLeaderOutOfGame_Params WantsToFollowTheLeaderOutOfGame_Params;

	this->ProcessEvent(uFnWantsToFollowTheLeaderOutOfGame, &WantsToFollowTheLeaderOutOfGame_Params, nullptr);

	return WantsToFollowTheLeaderOutOfGame_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetPartyMemberPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PartyMemberNetId               (CPF_Parm | CPF_NeedCtorLink)

class UGameSettingPlaylist_X* UOnlineGameParty_X::GetPartyMemberPlaylist(struct FUniqueNetId PartyMemberNetId)
{
	static UFunction* uFnGetPartyMemberPlaylist = nullptr;

	if (!uFnGetPartyMemberPlaylist)
	{
		uFnGetPartyMemberPlaylist = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetPartyMemberPlaylist");
	}

	UOnlineGameParty_X_execGetPartyMemberPlaylist_Params GetPartyMemberPlaylist_Params;
	memcpy_s(&GetPartyMemberPlaylist_Params.PartyMemberNetId, 0x48, &PartyMemberNetId, 0x48);

	this->ProcessEvent(uFnGetPartyMemberPlaylist, &GetPartyMemberPlaylist_Params, nullptr);

	return GetPartyMemberPlaylist_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsInSameMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PartyMemberA                   (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PartyMemberB                   (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::IsInSameMatch(struct FUniqueNetId PartyMemberA, struct FUniqueNetId PartyMemberB)
{
	static UFunction* uFnIsInSameMatch = nullptr;

	if (!uFnIsInSameMatch)
	{
		uFnIsInSameMatch = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsInSameMatch");
	}

	UOnlineGameParty_X_execIsInSameMatch_Params IsInSameMatch_Params;
	memcpy_s(&IsInSameMatch_Params.PartyMemberA, 0x48, &PartyMemberA, 0x48);
	memcpy_s(&IsInSameMatch_Params.PartyMemberB, 0x48, &PartyMemberB, 0x48);

	this->ProcessEvent(uFnIsInSameMatch, &IsInSameMatch_Params, nullptr);

	return IsInSameMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetServerName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PartyMember                    (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameParty_X::GetServerName(struct FUniqueNetId PartyMember)
{
	static UFunction* uFnGetServerName = nullptr;

	if (!uFnGetServerName)
	{
		uFnGetServerName = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetServerName");
	}

	UOnlineGameParty_X_execGetServerName_Params GetServerName_Params;
	memcpy_s(&GetServerName_Params.PartyMember, 0x48, &PartyMember, 0x48);

	this->ProcessEvent(uFnGetServerName, &GetServerName_Params, nullptr);

	return GetServerName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.HandlePartyJoinGame
// [0x20080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UPartyMessage_JoinGame_X* Message                        (CPF_Parm)

void UOnlineGameParty_X::HandlePartyJoinGame(class UOnlineMessageComponent_X* Component, class UPartyMessage_JoinGame_X* Message)
{
	static UFunction* uFnHandlePartyJoinGame = nullptr;

	if (!uFnHandlePartyJoinGame)
	{
		uFnHandlePartyJoinGame = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePartyJoinGame");
	}

	UOnlineGameParty_X_execHandlePartyJoinGame_Params HandlePartyJoinGame_Params;
	memcpy_s(&HandlePartyJoinGame_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandlePartyJoinGame_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandlePartyJoinGame, &HandlePartyJoinGame_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.CanBroadcastMatchmakingMessages
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::CanBroadcastMatchmakingMessages()
{
	static UFunction* uFnCanBroadcastMatchmakingMessages = nullptr;

	if (!uFnCanBroadcastMatchmakingMessages)
	{
		uFnCanBroadcastMatchmakingMessages = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CanBroadcastMatchmakingMessages");
	}

	UOnlineGameParty_X_execCanBroadcastMatchmakingMessages_Params CanBroadcastMatchmakingMessages_Params;

	this->ProcessEvent(uFnCanBroadcastMatchmakingMessages, &CanBroadcastMatchmakingMessages_Params, nullptr);

	return CanBroadcastMatchmakingMessages_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.BroadcastCancelJoinMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastCancelJoinMessage()
{
	static UFunction* uFnBroadcastCancelJoinMessage = nullptr;

	if (!uFnBroadcastCancelJoinMessage)
	{
		uFnBroadcastCancelJoinMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastCancelJoinMessage");
	}

	UOnlineGameParty_X_execBroadcastCancelJoinMessage_Params BroadcastCancelJoinMessage_Params;

	this->ProcessEvent(uFnBroadcastCancelJoinMessage, &BroadcastCancelJoinMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastPartyServer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::BroadcastPartyServer()
{
	static UFunction* uFnBroadcastPartyServer = nullptr;

	if (!uFnBroadcastPartyServer)
	{
		uFnBroadcastPartyServer = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastPartyServer");
	}

	UOnlineGameParty_X_execBroadcastPartyServer_Params BroadcastPartyServer_Params;

	this->ProcessEvent(uFnBroadcastPartyServer, &BroadcastPartyServer_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleServerReserved
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::HandleServerReserved()
{
	static UFunction* uFnHandleServerReserved = nullptr;

	if (!uFnHandleServerReserved)
	{
		uFnHandleServerReserved = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleServerReserved");
	}

	UOnlineGameParty_X_execHandleServerReserved_Params HandleServerReserved_Params;

	this->ProcessEvent(uFnHandleServerReserved, &HandleServerReserved_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandleJoinGameComplete
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  FailReason                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandleJoinGameComplete(unsigned long bSuccess, class FString FailReason)
{
	static UFunction* uFnHandleJoinGameComplete = nullptr;

	if (!uFnHandleJoinGameComplete)
	{
		uFnHandleJoinGameComplete = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandleJoinGameComplete");
	}

	UOnlineGameParty_X_execHandleJoinGameComplete_Params HandleJoinGameComplete_Params;
	HandleJoinGameComplete_Params.bSuccess = bSuccess;
	memcpy_s(&HandleJoinGameComplete_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnHandleJoinGameComplete, &HandleJoinGameComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.GetPartyMemberServer
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPartyMemberServer      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FPartyMemberServer UOnlineGameParty_X::GetPartyMemberServer()
{
	static UFunction* uFnGetPartyMemberServer = nullptr;

	if (!uFnGetPartyMemberServer)
	{
		uFnGetPartyMemberServer = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetPartyMemberServer");
	}

	UOnlineGameParty_X_execGetPartyMemberServer_Params GetPartyMemberServer_Params;

	this->ProcessEvent(uFnGetPartyMemberServer, &GetPartyMemberServer_Params, nullptr);

	return GetPartyMemberServer_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.HandlePartyMemberJoinGame
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UPartyMessage_PartyMemberJoinGame_X* MessageObject                  (CPF_Parm)

void UOnlineGameParty_X::HandlePartyMemberJoinGame(class UOnlineMessageComponent_X* Component, class UPartyMessage_PartyMemberJoinGame_X* MessageObject)
{
	static UFunction* uFnHandlePartyMemberJoinGame = nullptr;

	if (!uFnHandlePartyMemberJoinGame)
	{
		uFnHandlePartyMemberJoinGame = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePartyMemberJoinGame");
	}

	UOnlineGameParty_X_execHandlePartyMemberJoinGame_Params HandlePartyMemberJoinGame_Params;
	memcpy_s(&HandlePartyMemberJoinGame_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandlePartyMemberJoinGame_Params.MessageObject, 0x8, &MessageObject, 0x8);

	this->ProcessEvent(uFnHandlePartyMemberJoinGame, &HandlePartyMemberJoinGame_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.ClearServersForPostGameRankedMatch
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::ClearServersForPostGameRankedMatch()
{
	static UFunction* uFnClearServersForPostGameRankedMatch = nullptr;

	if (!uFnClearServersForPostGameRankedMatch)
	{
		uFnClearServersForPostGameRankedMatch = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ClearServersForPostGameRankedMatch");
	}

	UOnlineGameParty_X_execClearServersForPostGameRankedMatch_Params ClearServersForPostGameRankedMatch_Params;

	this->ProcessEvent(uFnClearServersForPostGameRankedMatch, &ClearServersForPostGameRankedMatch_Params, nullptr);

	return ClearServersForPostGameRankedMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.SetPartyMemberJoinGame
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FPartyMemberServer      Server                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::SetPartyMemberJoinGame(struct FUniqueNetId& PlayerID, struct FPartyMemberServer& Server)
{
	static UFunction* uFnSetPartyMemberJoinGame = nullptr;

	if (!uFnSetPartyMemberJoinGame)
	{
		uFnSetPartyMemberJoinGame = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetPartyMemberJoinGame");
	}

	UOnlineGameParty_X_execSetPartyMemberJoinGame_Params SetPartyMemberJoinGame_Params;
	memcpy_s(&SetPartyMemberJoinGame_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&SetPartyMemberJoinGame_Params.Server, 0x48, &Server, 0x48);

	this->ProcessEvent(uFnSetPartyMemberJoinGame, &SetPartyMemberJoinGame_Params, nullptr);

	memcpy_s(&PlayerID, 0x48, &SetPartyMemberJoinGame_Params.PlayerID, 0x48);
	memcpy_s(&Server, 0x48, &SetPartyMemberJoinGame_Params.Server, 0x48);

	return SetPartyMemberJoinGame_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.BroadcastPartyMemberServer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FPartyMemberServer      Server                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::BroadcastPartyMemberServer(struct FPartyMemberServer Server)
{
	static UFunction* uFnBroadcastPartyMemberServer = nullptr;

	if (!uFnBroadcastPartyMemberServer)
	{
		uFnBroadcastPartyMemberServer = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastPartyMemberServer");
	}

	UOnlineGameParty_X_execBroadcastPartyMemberServer_Params BroadcastPartyMemberServer_Params;
	memcpy_s(&BroadcastPartyMemberServer_Params.Server, 0x48, &Server, 0x48);

	this->ProcessEvent(uFnBroadcastPartyMemberServer, &BroadcastPartyMemberServer_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.BroadcastLobbySettings
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::BroadcastLobbySettings(struct FActiveLobbyInfo LobbyInfo)
{
	static UFunction* uFnBroadcastLobbySettings = nullptr;

	if (!uFnBroadcastLobbySettings)
	{
		uFnBroadcastLobbySettings = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.BroadcastLobbySettings");
	}

	UOnlineGameParty_X_execBroadcastLobbySettings_Params BroadcastLobbySettings_Params;
	memcpy_s(&BroadcastLobbySettings_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);

	this->ProcessEvent(uFnBroadcastLobbySettings, &BroadcastLobbySettings_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.SetLeader
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            NewLeader                      (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::SetLeader(struct FUniqueNetId NewLeader)
{
	static UFunction* uFnSetLeader = nullptr;

	if (!uFnSetLeader)
	{
		uFnSetLeader = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetLeader");
	}

	UOnlineGameParty_X_execSetLeader_Params SetLeader_Params;
	memcpy_s(&SetLeader_Params.NewLeader, 0x48, &NewLeader, 0x48);

	this->ProcessEvent(uFnSetLeader, &SetLeader_Params, nullptr);

	return SetLeader_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsPrimaryPlayerIndex
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        MemberIdx                      (CPF_Parm)

bool UOnlineGameParty_X::IsPrimaryPlayerIndex(int32_t MemberIdx)
{
	static UFunction* uFnIsPrimaryPlayerIndex = nullptr;

	if (!uFnIsPrimaryPlayerIndex)
	{
		uFnIsPrimaryPlayerIndex = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsPrimaryPlayerIndex");
	}

	UOnlineGameParty_X_execIsPrimaryPlayerIndex_Params IsPrimaryPlayerIndex_Params;
	memcpy_s(&IsPrimaryPlayerIndex_Params.MemberIdx, 0x4, &MemberIdx, 0x4);

	this->ProcessEvent(uFnIsPrimaryPlayerIndex, &IsPrimaryPlayerIndex_Params, nullptr);

	return IsPrimaryPlayerIndex_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsPrimaryPlayer
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::IsPrimaryPlayer(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnIsPrimaryPlayer = nullptr;

	if (!uFnIsPrimaryPlayer)
	{
		uFnIsPrimaryPlayer = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsPrimaryPlayer");
	}

	UOnlineGameParty_X_execIsPrimaryPlayer_Params IsPrimaryPlayer_Params;
	memcpy_s(&IsPrimaryPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnIsPrimaryPlayer, &IsPrimaryPlayer_Params, nullptr);

	memcpy_s(&PlayerID, 0x48, &IsPrimaryPlayer_Params.PlayerID, 0x48);

	return IsPrimaryPlayer_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsPlayerInParty
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::IsPlayerInParty(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnIsPlayerInParty = nullptr;

	if (!uFnIsPlayerInParty)
	{
		uFnIsPlayerInParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsPlayerInParty");
	}

	UOnlineGameParty_X_execIsPlayerInParty_Params IsPlayerInParty_Params;
	memcpy_s(&IsPlayerInParty_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnIsPlayerInParty, &IsPlayerInParty_Params, nullptr);

	memcpy_s(&PlayerID, 0x48, &IsPlayerInParty_Params.PlayerID, 0x48);

	return IsPlayerInParty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.KickPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Reason                         (CPF_Parm)

bool UOnlineGameParty_X::KickPlayer(struct FUniqueNetId PlayerID, uint8_t Reason)
{
	static UFunction* uFnKickPlayer = nullptr;

	if (!uFnKickPlayer)
	{
		uFnKickPlayer = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.KickPlayer");
	}

	UOnlineGameParty_X_execKickPlayer_Params KickPlayer_Params;
	memcpy_s(&KickPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&KickPlayer_Params.Reason, 0x1, &Reason, 0x1);

	this->ProcessEvent(uFnKickPlayer, &KickPlayer_Params, nullptr);

	return KickPlayer_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.ShowPlatformInviteUI
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        LocalUserNum                   (CPF_Parm)

bool UOnlineGameParty_X::ShowPlatformInviteUI(uint8_t LocalUserNum)
{
	static UFunction* uFnShowPlatformInviteUI = nullptr;

	if (!uFnShowPlatformInviteUI)
	{
		uFnShowPlatformInviteUI = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ShowPlatformInviteUI");
	}

	UOnlineGameParty_X_execShowPlatformInviteUI_Params ShowPlatformInviteUI_Params;
	memcpy_s(&ShowPlatformInviteUI_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);

	this->ProcessEvent(uFnShowPlatformInviteUI, &ShowPlatformInviteUI_Params, nullptr);

	return ShowPlatformInviteUI_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.GetShowPlatformInviteUIError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameParty_X::GetShowPlatformInviteUIError()
{
	static UFunction* uFnGetShowPlatformInviteUIError = nullptr;

	if (!uFnGetShowPlatformInviteUIError)
	{
		uFnGetShowPlatformInviteUIError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetShowPlatformInviteUIError");
	}

	UOnlineGameParty_X_execGetShowPlatformInviteUIError_Params GetShowPlatformInviteUIError_Params;

	this->ProcessEvent(uFnGetShowPlatformInviteUIError, &GetShowPlatformInviteUIError_Params, nullptr);

	return GetShowPlatformInviteUIError_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.CanShowPlatformInviteUI
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::CanShowPlatformInviteUI()
{
	static UFunction* uFnCanShowPlatformInviteUI = nullptr;

	if (!uFnCanShowPlatformInviteUI)
	{
		uFnCanShowPlatformInviteUI = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CanShowPlatformInviteUI");
	}

	UOnlineGameParty_X_execCanShowPlatformInviteUI_Params CanShowPlatformInviteUI_Params;

	this->ProcessEvent(uFnCanShowPlatformInviteUI, &CanShowPlatformInviteUI_Params, nullptr);

	return CanShowPlatformInviteUI_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.ShowInviteUI
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        LocalUserNum                   (CPF_Parm)

bool UOnlineGameParty_X::ShowInviteUI(uint8_t LocalUserNum)
{
	static UFunction* uFnShowInviteUI = nullptr;

	if (!uFnShowInviteUI)
	{
		uFnShowInviteUI = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ShowInviteUI");
	}

	UOnlineGameParty_X_execShowInviteUI_Params ShowInviteUI_Params;
	memcpy_s(&ShowInviteUI_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);

	this->ProcessEvent(uFnShowInviteUI, &ShowInviteUI_Params, nullptr);

	return ShowInviteUI_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.LeaveParty
// [0x00820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Reason                         (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::LeaveParty(class FString Reason)
{
	static UFunction* uFnLeaveParty = nullptr;

	if (!uFnLeaveParty)
	{
		uFnLeaveParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.LeaveParty");
	}

	UOnlineGameParty_X_execLeaveParty_Params LeaveParty_Params;
	memcpy_s(&LeaveParty_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnLeaveParty, &LeaveParty_Params, nullptr);

	return LeaveParty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsInCurrentGame
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameParty_X::IsInCurrentGame(struct FUniqueNetId MemberId)
{
	static UFunction* uFnIsInCurrentGame = nullptr;

	if (!uFnIsInCurrentGame)
	{
		uFnIsInCurrentGame = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsInCurrentGame");
	}

	UOnlineGameParty_X_execIsInCurrentGame_Params IsInCurrentGame_Params;
	memcpy_s(&IsInCurrentGame_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnIsInCurrentGame, &IsInCurrentGame_Params, nullptr);

	return IsInCurrentGame_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsPartyLeader
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::IsPartyLeader()
{
	static UFunction* uFnIsPartyLeader = nullptr;

	if (!uFnIsPartyLeader)
	{
		uFnIsPartyLeader = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsPartyLeader");
	}

	UOnlineGameParty_X_execIsPartyLeader_Params IsPartyLeader_Params;

	this->ProcessEvent(uFnIsPartyLeader, &IsPartyLeader_Params, nullptr);

	return IsPartyLeader_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsInPartyID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          InPartyId                      (CPF_Parm)

bool UOnlineGameParty_X::IsInPartyID(struct FUniqueLobbyId InPartyId)
{
	static UFunction* uFnIsInPartyID = nullptr;

	if (!uFnIsInPartyID)
	{
		uFnIsInPartyID = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsInPartyID");
	}

	UOnlineGameParty_X_execIsInPartyID_Params IsInPartyID_Params;
	memcpy_s(&IsInPartyID_Params.InPartyId, 0x10, &InPartyId, 0x10);

	this->ProcessEvent(uFnIsInPartyID, &IsInPartyID_Params, nullptr);

	return IsInPartyID_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.IsInParty
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::IsInParty()
{
	static UFunction* uFnIsInParty = nullptr;

	if (!uFnIsInParty)
	{
		uFnIsInParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsInParty");
	}

	UOnlineGameParty_X_execIsInParty_Params IsInParty_Params;

	this->ProcessEvent(uFnIsInParty, &IsInParty_Params, nullptr);

	return IsInParty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.JoinParty
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FUniqueLobbyId          InPartyId                      (CPF_Const | CPF_Parm | CPF_OutParm)

void UOnlineGameParty_X::JoinParty(int32_t LocalPlayerNum, struct FUniqueLobbyId& InPartyId)
{
	static UFunction* uFnJoinParty = nullptr;

	if (!uFnJoinParty)
	{
		uFnJoinParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.JoinParty");
	}

	UOnlineGameParty_X_execJoinParty_Params JoinParty_Params;
	memcpy_s(&JoinParty_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&JoinParty_Params.InPartyId, 0x10, &InPartyId, 0x10);

	this->ProcessEvent(uFnJoinParty, &JoinParty_Params, nullptr);

	memcpy_s(&InPartyId, 0x10, &JoinParty_Params.InPartyId, 0x10);
};

// Function ProjectX.OnlineGameParty_X.CheckPartyTimeout
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::CheckPartyTimeout()
{
	static UFunction* uFnCheckPartyTimeout = nullptr;

	if (!uFnCheckPartyTimeout)
	{
		uFnCheckPartyTimeout = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CheckPartyTimeout");
	}

	UOnlineGameParty_X_execCheckPartyTimeout_Params CheckPartyTimeout_Params;

	this->ProcessEvent(uFnCheckPartyTimeout, &CheckPartyTimeout_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.StartPartyTimeout
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::StartPartyTimeout()
{
	static UFunction* uFnStartPartyTimeout = nullptr;

	if (!uFnStartPartyTimeout)
	{
		uFnStartPartyTimeout = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.StartPartyTimeout");
	}

	UOnlineGameParty_X_execStartPartyTimeout_Params StartPartyTimeout_Params;

	this->ProcessEvent(uFnStartPartyTimeout, &StartPartyTimeout_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.OnPartyCreated
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          InPartyId                      (CPF_Const | CPF_Parm | CPF_OutParm)

void UOnlineGameParty_X::OnPartyCreated(unsigned long bWasSuccessful, class FString Error, struct FUniqueLobbyId& InPartyId)
{
	static UFunction* uFnOnPartyCreated = nullptr;

	if (!uFnOnPartyCreated)
	{
		uFnOnPartyCreated = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnPartyCreated");
	}

	UOnlineGameParty_X_execOnPartyCreated_Params OnPartyCreated_Params;
	OnPartyCreated_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&OnPartyCreated_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&OnPartyCreated_Params.InPartyId, 0x10, &InPartyId, 0x10);

	this->ProcessEvent(uFnOnPartyCreated, &OnPartyCreated_Params, nullptr);

	memcpy_s(&InPartyId, 0x10, &OnPartyCreated_Params.InPartyId, 0x10);
};

// Function ProjectX.OnlineGameParty_X.CreatePartyInternal_ConnectionChecked
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  ConnectionError                (CPF_Parm)
// class UOnlineLobbyInterface*   LobbyInterface                 (CPF_Parm)
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FScriptDelegate         Handler                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::CreatePartyInternal_ConnectionChecked(class UError* ConnectionError, class UOnlineLobbyInterface* LobbyInterface, int32_t LocalPlayerNum, struct FScriptDelegate Handler)
{
	static UFunction* uFnCreatePartyInternal_ConnectionChecked = nullptr;

	if (!uFnCreatePartyInternal_ConnectionChecked)
	{
		uFnCreatePartyInternal_ConnectionChecked = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CreatePartyInternal_ConnectionChecked");
	}

	UOnlineGameParty_X_execCreatePartyInternal_ConnectionChecked_Params CreatePartyInternal_ConnectionChecked_Params;
	memcpy_s(&CreatePartyInternal_ConnectionChecked_Params.ConnectionError, 0x8, &ConnectionError, 0x8);
	memcpy_s(&CreatePartyInternal_ConnectionChecked_Params.LobbyInterface, 0x10, &LobbyInterface, 0x10);
	memcpy_s(&CreatePartyInternal_ConnectionChecked_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&CreatePartyInternal_ConnectionChecked_Params.Handler, 0x18, &Handler, 0x18);

	this->ProcessEvent(uFnCreatePartyInternal_ConnectionChecked, &CreatePartyInternal_ConnectionChecked_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.CreatePartyInternal
// [0x00044003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineLobbyInterface*   LobbyInterface                 (CPF_Parm)
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FScriptDelegate         Handler                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::CreatePartyInternal(class UOnlineLobbyInterface* LobbyInterface, int32_t LocalPlayerNum, struct FScriptDelegate Handler)
{
	static UFunction* uFnCreatePartyInternal = nullptr;

	if (!uFnCreatePartyInternal)
	{
		uFnCreatePartyInternal = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CreatePartyInternal");
	}

	UOnlineGameParty_X_execCreatePartyInternal_Params CreatePartyInternal_Params;
	memcpy_s(&CreatePartyInternal_Params.LobbyInterface, 0x10, &LobbyInterface, 0x10);
	memcpy_s(&CreatePartyInternal_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&CreatePartyInternal_Params.Handler, 0x18, &Handler, 0x18);

	this->ProcessEvent(uFnCreatePartyInternal, &CreatePartyInternal_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.CreatePlatformParty
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FScriptDelegate         Handler                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::CreatePlatformParty(int32_t LocalPlayerNum, struct FScriptDelegate Handler)
{
	static UFunction* uFnCreatePlatformParty = nullptr;

	if (!uFnCreatePlatformParty)
	{
		uFnCreatePlatformParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CreatePlatformParty");
	}

	UOnlineGameParty_X_execCreatePlatformParty_Params CreatePlatformParty_Params;
	memcpy_s(&CreatePlatformParty_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&CreatePlatformParty_Params.Handler, 0x18, &Handler, 0x18);

	this->ProcessEvent(uFnCreatePlatformParty, &CreatePlatformParty_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.CreateParty
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FScriptDelegate         Handler                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::CreateParty(int32_t LocalPlayerNum, struct FScriptDelegate Handler)
{
	static UFunction* uFnCreateParty = nullptr;

	if (!uFnCreateParty)
	{
		uFnCreateParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.CreateParty");
	}

	UOnlineGameParty_X_execCreateParty_Params CreateParty_Params;
	memcpy_s(&CreateParty_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&CreateParty_Params.Handler, 0x18, &Handler, 0x18);

	this->ProcessEvent(uFnCreateParty, &CreateParty_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.GetCreatePartyLobbyInterface
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineLobbyInterface*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineLobbyInterface* UOnlineGameParty_X::GetCreatePartyLobbyInterface()
{
	static UFunction* uFnGetCreatePartyLobbyInterface = nullptr;

	if (!uFnGetCreatePartyLobbyInterface)
	{
		uFnGetCreatePartyLobbyInterface = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetCreatePartyLobbyInterface");
	}

	UOnlineGameParty_X_execGetCreatePartyLobbyInterface_Params GetCreatePartyLobbyInterface_Params;

	this->ProcessEvent(uFnGetCreatePartyLobbyInterface, &GetCreatePartyLobbyInterface_Params, nullptr);

	return GetCreatePartyLobbyInterface_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.ShouldCreatePsyNetParty
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::ShouldCreatePsyNetParty()
{
	static UFunction* uFnShouldCreatePsyNetParty = nullptr;

	if (!uFnShouldCreatePsyNetParty)
	{
		uFnShouldCreatePsyNetParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ShouldCreatePsyNetParty");
	}

	UOnlineGameParty_X_execShouldCreatePsyNetParty_Params ShouldCreatePsyNetParty_Params;

	this->ProcessEvent(uFnShouldCreatePsyNetParty, &ShouldCreatePsyNetParty_Params, nullptr);

	return ShouldCreatePsyNetParty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.SetLobbyInterfacePsyNet
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::SetLobbyInterfacePsyNet()
{
	static UFunction* uFnSetLobbyInterfacePsyNet = nullptr;

	if (!uFnSetLobbyInterfacePsyNet)
	{
		uFnSetLobbyInterfacePsyNet = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetLobbyInterfacePsyNet");
	}

	UOnlineGameParty_X_execSetLobbyInterfacePsyNet_Params SetLobbyInterfacePsyNet_Params;

	this->ProcessEvent(uFnSetLobbyInterfacePsyNet, &SetLobbyInterfacePsyNet_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.SetLobbyInterfacePlatform
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::SetLobbyInterfacePlatform()
{
	static UFunction* uFnSetLobbyInterfacePlatform = nullptr;

	if (!uFnSetLobbyInterfacePlatform)
	{
		uFnSetLobbyInterfacePlatform = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetLobbyInterfacePlatform");
	}

	UOnlineGameParty_X_execSetLobbyInterfacePlatform_Params SetLobbyInterfacePlatform_Params;

	this->ProcessEvent(uFnSetLobbyInterfacePlatform, &SetLobbyInterfacePlatform_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.ShortCircuitPartyInvitedPrompt
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          InLobbyId                      (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            InviterId                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameParty_X::ShortCircuitPartyInvitedPrompt(struct FUniqueLobbyId& InLobbyId, struct FUniqueNetId& InviterId)
{
	static UFunction* uFnShortCircuitPartyInvitedPrompt = nullptr;

	if (!uFnShortCircuitPartyInvitedPrompt)
	{
		uFnShortCircuitPartyInvitedPrompt = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.ShortCircuitPartyInvitedPrompt");
	}

	UOnlineGameParty_X_execShortCircuitPartyInvitedPrompt_Params ShortCircuitPartyInvitedPrompt_Params;
	memcpy_s(&ShortCircuitPartyInvitedPrompt_Params.InLobbyId, 0x10, &InLobbyId, 0x10);
	memcpy_s(&ShortCircuitPartyInvitedPrompt_Params.InviterId, 0x48, &InviterId, 0x48);

	this->ProcessEvent(uFnShortCircuitPartyInvitedPrompt, &ShortCircuitPartyInvitedPrompt_Params, nullptr);

	memcpy_s(&InLobbyId, 0x10, &ShortCircuitPartyInvitedPrompt_Params.InLobbyId, 0x10);
	memcpy_s(&InviterId, 0x48, &ShortCircuitPartyInvitedPrompt_Params.InviterId, 0x48);
};

// Function ProjectX.OnlineGameParty_X.HandlePartySizeTracker
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::HandlePartySizeTracker(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnHandlePartySizeTracker = nullptr;

	if (!uFnHandlePartySizeTracker)
	{
		uFnHandlePartySizeTracker = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePartySizeTracker");
	}

	UOnlineGameParty_X_execHandlePartySizeTracker_Params HandlePartySizeTracker_Params;
	memcpy_s(&HandlePartySizeTracker_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnHandlePartySizeTracker, &HandlePartySizeTracker_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.HandlePrimaryPlayerIdChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameAccount_X*    InAccount                      (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::HandlePrimaryPlayerIdChanged(class UOnlineGameAccount_X* InAccount, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnHandlePrimaryPlayerIdChanged = nullptr;

	if (!uFnHandlePrimaryPlayerIdChanged)
	{
		uFnHandlePrimaryPlayerIdChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.HandlePrimaryPlayerIdChanged");
	}

	UOnlineGameParty_X_execHandlePrimaryPlayerIdChanged_Params HandlePrimaryPlayerIdChanged_Params;
	memcpy_s(&HandlePrimaryPlayerIdChanged_Params.InAccount, 0x8, &InAccount, 0x8);
	memcpy_s(&HandlePrimaryPlayerIdChanged_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnHandlePrimaryPlayerIdChanged, &HandlePrimaryPlayerIdChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.GetMetrics
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMetrics_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UPartyMetrics_X* UOnlineGameParty_X::GetMetrics()
{
	static UFunction* uFnGetMetrics = nullptr;

	if (!uFnGetMetrics)
	{
		uFnGetMetrics = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.GetMetrics");
	}

	UOnlineGameParty_X_execGetMetrics_Params GetMetrics_Params;

	this->ProcessEvent(uFnGetMetrics, &GetMetrics_Params, nullptr);

	return GetMetrics_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.SetLobbyInterface
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineLobbyInterface*   Lobby                          (CPF_Parm)

void UOnlineGameParty_X::SetLobbyInterface(class UOnlineLobbyInterface* Lobby)
{
	static UFunction* uFnSetLobbyInterface = nullptr;

	if (!uFnSetLobbyInterface)
	{
		uFnSetLobbyInterface = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.SetLobbyInterface");
	}

	UOnlineGameParty_X_execSetLobbyInterface_Params SetLobbyInterface_Params;
	memcpy_s(&SetLobbyInterface_Params.Lobby, 0x10, &Lobby, 0x10);

	this->ProcessEvent(uFnSetLobbyInterface, &SetLobbyInterface_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.IsUsingPsyNetParty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameParty_X::IsUsingPsyNetParty()
{
	static UFunction* uFnIsUsingPsyNetParty = nullptr;

	if (!uFnIsUsingPsyNetParty)
	{
		uFnIsUsingPsyNetParty = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.IsUsingPsyNetParty");
	}

	UOnlineGameParty_X_execIsUsingPsyNetParty_Params IsUsingPsyNetParty_Params;

	this->ProcessEvent(uFnIsUsingPsyNetParty, &IsUsingPsyNetParty_Params, nullptr);

	return IsUsingPsyNetParty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameParty_X.InitLobbyInterfaces
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::InitLobbyInterfaces()
{
	static UFunction* uFnInitLobbyInterfaces = nullptr;

	if (!uFnInitLobbyInterfaces)
	{
		uFnInitLobbyInterfaces = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.InitLobbyInterfaces");
	}

	UOnlineGameParty_X_execInitLobbyInterfaces_Params InitLobbyInterfaces_Params;

	this->ProcessEvent(uFnInitLobbyInterfaces, &InitLobbyInterfaces_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.OnExit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::OnExit()
{
	static UFunction* uFnOnExit = nullptr;

	if (!uFnOnExit)
	{
		uFnOnExit = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnExit");
	}

	UOnlineGameParty_X_execOnExit_Params OnExit_Params;

	this->ProcessEvent(uFnOnExit, &OnExit_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnInit");
	}

	UOnlineGameParty_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventRemovePartyMember
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FUniqueNetId            InMemberId                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::EventRemovePartyMember(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId)
{
	static UFunction* uFnEventRemovePartyMember = nullptr;

	if (!uFnEventRemovePartyMember)
	{
		uFnEventRemovePartyMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventRemovePartyMember");
	}

	UOnlineGameParty_X_execEventRemovePartyMember_Params EventRemovePartyMember_Params;
	memcpy_s(&EventRemovePartyMember_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventRemovePartyMember_Params.InMemberId, 0x48, &InMemberId, 0x48);

	this->ProcessEvent(uFnEventRemovePartyMember, &EventRemovePartyMember_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventAddPartyMember
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FUniqueNetId            InMemberId                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::EventAddPartyMember(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId)
{
	static UFunction* uFnEventAddPartyMember = nullptr;

	if (!uFnEventAddPartyMember)
	{
		uFnEventAddPartyMember = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventAddPartyMember");
	}

	UOnlineGameParty_X_execEventAddPartyMember_Params EventAddPartyMember_Params;
	memcpy_s(&EventAddPartyMember_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventAddPartyMember_Params.InMemberId, 0x48, &InMemberId, 0x48);

	this->ProcessEvent(uFnEventAddPartyMember, &EventAddPartyMember_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventStartedJoinFriend
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameParty_X::EventStartedJoinFriend()
{
	static UFunction* uFnEventStartedJoinFriend = nullptr;

	if (!uFnEventStartedJoinFriend)
	{
		uFnEventStartedJoinFriend = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventStartedJoinFriend");
	}

	UOnlineGameParty_X_execEventStartedJoinFriend_Params EventStartedJoinFriend_Params;

	this->ProcessEvent(uFnEventStartedJoinFriend, &EventStartedJoinFriend_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPlayerInMatchChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FUniqueNetId            InMemberId                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::EventPlayerInMatchChanged(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId)
{
	static UFunction* uFnEventPlayerInMatchChanged = nullptr;

	if (!uFnEventPlayerInMatchChanged)
	{
		uFnEventPlayerInMatchChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPlayerInMatchChanged");
	}

	UOnlineGameParty_X_execEventPlayerInMatchChanged_Params EventPlayerInMatchChanged_Params;
	memcpy_s(&EventPlayerInMatchChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventPlayerInMatchChanged_Params.InMemberId, 0x48, &InMemberId, 0x48);

	this->ProcessEvent(uFnEventPlayerInMatchChanged, &EventPlayerInMatchChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventDisableCrossPlayChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::EventDisableCrossPlayChanged(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnEventDisableCrossPlayChanged = nullptr;

	if (!uFnEventDisableCrossPlayChanged)
	{
		uFnEventDisableCrossPlayChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventDisableCrossPlayChanged");
	}

	UOnlineGameParty_X_execEventDisableCrossPlayChanged_Params EventDisableCrossPlayChanged_Params;
	memcpy_s(&EventDisableCrossPlayChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnEventDisableCrossPlayChanged, &EventDisableCrossPlayChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventProcessingStatusChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::EventProcessingStatusChanged(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnEventProcessingStatusChanged = nullptr;

	if (!uFnEventProcessingStatusChanged)
	{
		uFnEventProcessingStatusChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventProcessingStatusChanged");
	}

	UOnlineGameParty_X_execEventProcessingStatusChanged_Params EventProcessingStatusChanged_Params;
	memcpy_s(&EventProcessingStatusChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnEventProcessingStatusChanged, &EventProcessingStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventLeaderLeftOnlineGame
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::EventLeaderLeftOnlineGame(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnEventLeaderLeftOnlineGame = nullptr;

	if (!uFnEventLeaderLeftOnlineGame)
	{
		uFnEventLeaderLeftOnlineGame = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventLeaderLeftOnlineGame");
	}

	UOnlineGameParty_X_execEventLeaderLeftOnlineGame_Params EventLeaderLeftOnlineGame_Params;
	memcpy_s(&EventLeaderLeftOnlineGame_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnEventLeaderLeftOnlineGame, &EventLeaderLeftOnlineGame_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventConfirmJoinGameMessage
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::EventConfirmJoinGameMessage(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnEventConfirmJoinGameMessage = nullptr;

	if (!uFnEventConfirmJoinGameMessage)
	{
		uFnEventConfirmJoinGameMessage = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventConfirmJoinGameMessage");
	}

	UOnlineGameParty_X_execEventConfirmJoinGameMessage_Params EventConfirmJoinGameMessage_Params;
	memcpy_s(&EventConfirmJoinGameMessage_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnEventConfirmJoinGameMessage, &EventConfirmJoinGameMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPartyDestroyed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::EventPartyDestroyed(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnEventPartyDestroyed = nullptr;

	if (!uFnEventPartyDestroyed)
	{
		uFnEventPartyDestroyed = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartyDestroyed");
	}

	UOnlineGameParty_X_execEventPartyDestroyed_Params EventPartyDestroyed_Params;
	memcpy_s(&EventPartyDestroyed_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnEventPartyDestroyed, &EventPartyDestroyed_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPartyJoinGameSuccess
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::EventPartyJoinGameSuccess(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnEventPartyJoinGameSuccess = nullptr;

	if (!uFnEventPartyJoinGameSuccess)
	{
		uFnEventPartyJoinGameSuccess = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartyJoinGameSuccess");
	}

	UOnlineGameParty_X_execEventPartyJoinGameSuccess_Params EventPartyJoinGameSuccess_Params;
	memcpy_s(&EventPartyJoinGameSuccess_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnEventPartyJoinGameSuccess, &EventPartyJoinGameSuccess_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPartyJoinGameError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// class FString                  LocalizedErrorString           (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::EventPartyJoinGameError(class UOnlineGameParty_X* PartyObject, class FString LocalizedErrorString)
{
	static UFunction* uFnEventPartyJoinGameError = nullptr;

	if (!uFnEventPartyJoinGameError)
	{
		uFnEventPartyJoinGameError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartyJoinGameError");
	}

	UOnlineGameParty_X_execEventPartyJoinGameError_Params EventPartyJoinGameError_Params;
	memcpy_s(&EventPartyJoinGameError_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventPartyJoinGameError_Params.LocalizedErrorString, 0x10, &LocalizedErrorString, 0x10);

	this->ProcessEvent(uFnEventPartyJoinGameError, &EventPartyJoinGameError_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPartyError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameParty_X::EventPartyError(class UOnlineGameParty_X* PartyObject, class UError* Error)
{
	static UFunction* uFnEventPartyError = nullptr;

	if (!uFnEventPartyError)
	{
		uFnEventPartyError = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartyError");
	}

	UOnlineGameParty_X_execEventPartyError_Params EventPartyError_Params;
	memcpy_s(&EventPartyError_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventPartyError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventPartyError, &EventPartyError_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventSearchStatusChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// class UPartyMessage_SearchStatus_X* StatusMessage                  (CPF_Parm)

void UOnlineGameParty_X::EventSearchStatusChanged(class UOnlineGameParty_X* PartyObject, class UPartyMessage_SearchStatus_X* StatusMessage)
{
	static UFunction* uFnEventSearchStatusChanged = nullptr;

	if (!uFnEventSearchStatusChanged)
	{
		uFnEventSearchStatusChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventSearchStatusChanged");
	}

	UOnlineGameParty_X_execEventSearchStatusChanged_Params EventSearchStatusChanged_Params;
	memcpy_s(&EventSearchStatusChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventSearchStatusChanged_Params.StatusMessage, 0x8, &StatusMessage, 0x8);

	this->ProcessEvent(uFnEventSearchStatusChanged, &EventSearchStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPartyLeaderChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FUniqueNetId            NewLeader                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameParty_X::EventPartyLeaderChanged(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId NewLeader)
{
	static UFunction* uFnEventPartyLeaderChanged = nullptr;

	if (!uFnEventPartyLeaderChanged)
	{
		uFnEventPartyLeaderChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartyLeaderChanged");
	}

	UOnlineGameParty_X_execEventPartyLeaderChanged_Params EventPartyLeaderChanged_Params;
	memcpy_s(&EventPartyLeaderChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventPartyLeaderChanged_Params.NewLeader, 0x48, &NewLeader, 0x48);

	this->ProcessEvent(uFnEventPartyLeaderChanged, &EventPartyLeaderChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPartySizeChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// int32_t                        NewSize                        (CPF_Parm)
// int32_t                        OldSize                        (CPF_Parm)

void UOnlineGameParty_X::EventPartySizeChanged(class UOnlineGameParty_X* PartyObject, int32_t NewSize, int32_t OldSize)
{
	static UFunction* uFnEventPartySizeChanged = nullptr;

	if (!uFnEventPartySizeChanged)
	{
		uFnEventPartySizeChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartySizeChanged");
	}

	UOnlineGameParty_X_execEventPartySizeChanged_Params EventPartySizeChanged_Params;
	memcpy_s(&EventPartySizeChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventPartySizeChanged_Params.NewSize, 0x4, &NewSize, 0x4);
	memcpy_s(&EventPartySizeChanged_Params.OldSize, 0x4, &OldSize, 0x4);

	this->ProcessEvent(uFnEventPartySizeChanged, &EventPartySizeChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPartyMemberXPLevelChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::EventPartyMemberXPLevelChanged(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnEventPartyMemberXPLevelChanged = nullptr;

	if (!uFnEventPartyMemberXPLevelChanged)
	{
		uFnEventPartyMemberXPLevelChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartyMemberXPLevelChanged");
	}

	UOnlineGameParty_X_execEventPartyMemberXPLevelChanged_Params EventPartyMemberXPLevelChanged_Params;
	memcpy_s(&EventPartyMemberXPLevelChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnEventPartyMemberXPLevelChanged, &EventPartyMemberXPLevelChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPartyChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameParty_X::EventPartyChanged(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnEventPartyChanged = nullptr;

	if (!uFnEventPartyChanged)
	{
		uFnEventPartyChanged = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartyChanged");
	}

	UOnlineGameParty_X_execEventPartyChanged_Params EventPartyChanged_Params;
	memcpy_s(&EventPartyChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnEventPartyChanged, &EventPartyChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameParty_X.EventPlayerInvitedSilent
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          InPartyId                      (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            InviterId                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameParty_X::EventPlayerInvitedSilent(class UOnlineGameParty_X* PartyObject, struct FScriptDelegate Callback, struct FUniqueLobbyId& InPartyId, struct FUniqueNetId& InviterId)
{
	static UFunction* uFnEventPlayerInvitedSilent = nullptr;

	if (!uFnEventPlayerInvitedSilent)
	{
		uFnEventPlayerInvitedSilent = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPlayerInvitedSilent");
	}

	UOnlineGameParty_X_execEventPlayerInvitedSilent_Params EventPlayerInvitedSilent_Params;
	memcpy_s(&EventPlayerInvitedSilent_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventPlayerInvitedSilent_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&EventPlayerInvitedSilent_Params.InPartyId, 0x10, &InPartyId, 0x10);
	memcpy_s(&EventPlayerInvitedSilent_Params.InviterId, 0x48, &InviterId, 0x48);

	this->ProcessEvent(uFnEventPlayerInvitedSilent, &EventPlayerInvitedSilent_Params, nullptr);

	memcpy_s(&InPartyId, 0x10, &EventPlayerInvitedSilent_Params.InPartyId, 0x10);
	memcpy_s(&InviterId, 0x48, &EventPlayerInvitedSilent_Params.InviterId, 0x48);
};

// Function ProjectX.OnlineGameParty_X.EventPlayerInvited
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          InPartyId                      (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            FriendId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameParty_X::EventPlayerInvited(class UOnlineGameParty_X* PartyObject, struct FScriptDelegate Callback, struct FUniqueLobbyId& InPartyId, struct FUniqueNetId& FriendId)
{
	static UFunction* uFnEventPlayerInvited = nullptr;

	if (!uFnEventPlayerInvited)
	{
		uFnEventPlayerInvited = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPlayerInvited");
	}

	UOnlineGameParty_X_execEventPlayerInvited_Params EventPlayerInvited_Params;
	memcpy_s(&EventPlayerInvited_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&EventPlayerInvited_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&EventPlayerInvited_Params.InPartyId, 0x10, &InPartyId, 0x10);
	memcpy_s(&EventPlayerInvited_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnEventPlayerInvited, &EventPlayerInvited_Params, nullptr);

	memcpy_s(&InPartyId, 0x10, &EventPlayerInvited_Params.InPartyId, 0x10);
	memcpy_s(&FriendId, 0x48, &EventPlayerInvited_Params.FriendId, 0x48);
};

// Function ProjectX.OnlineGameParty_X.OnPartyInviteAccepted
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FUniqueLobbyId          InPartyId                      (CPF_Const | CPF_Parm | CPF_OutParm)

void UOnlineGameParty_X::OnPartyInviteAccepted(int32_t LocalPlayerNum, struct FUniqueLobbyId& InPartyId)
{
	static UFunction* uFnOnPartyInviteAccepted = nullptr;

	if (!uFnOnPartyInviteAccepted)
	{
		uFnOnPartyInviteAccepted = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.OnPartyInviteAccepted");
	}

	UOnlineGameParty_X_execOnPartyInviteAccepted_Params OnPartyInviteAccepted_Params;
	memcpy_s(&OnPartyInviteAccepted_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&OnPartyInviteAccepted_Params.InPartyId, 0x10, &InPartyId, 0x10);

	this->ProcessEvent(uFnOnPartyInviteAccepted, &OnPartyInviteAccepted_Params, nullptr);

	memcpy_s(&InPartyId, 0x10, &OnPartyInviteAccepted_Params.InPartyId, 0x10);
};

// Function ProjectX.OnlineGameParty_X.EventPartyCreated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// unsigned long                  bWasSuccessful                 (CPF_Parm)

void UOnlineGameParty_X::EventPartyCreated(class UOnlineGameParty_X* PartyObject, unsigned long bWasSuccessful)
{
	static UFunction* uFnEventPartyCreated = nullptr;

	if (!uFnEventPartyCreated)
	{
		uFnEventPartyCreated = UFunction::FindFunction("Function ProjectX.OnlineGameParty_X.EventPartyCreated");
	}

	UOnlineGameParty_X_execEventPartyCreated_Params EventPartyCreated_Params;
	memcpy_s(&EventPartyCreated_Params.PartyObject, 0x8, &PartyObject, 0x8);
	EventPartyCreated_Params.bWasSuccessful = bWasSuccessful;

	this->ProcessEvent(uFnEventPartyCreated, &EventPartyCreated_Params, nullptr);
};

// Function ProjectX.GRI_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void AGRI_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.GRI_X.PrintDebugInfo");
	}

	AGRI_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.GRI_X.SetMatchGUID
// [0x00080103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  Id                             (CPF_Parm | CPF_NeedCtorLink)

void AGRI_X::SetMatchGUID(class FString Id)
{
	static UFunction* uFnSetMatchGUID = nullptr;

	if (!uFnSetMatchGUID)
	{
		uFnSetMatchGUID = UFunction::FindFunction("Function ProjectX.GRI_X.SetMatchGUID");
	}

	AGRI_X_execSetMatchGUID_Params SetMatchGUID_Params;
	memcpy_s(&SetMatchGUID_Params.Id, 0x10, &Id, 0x10);

	this->ProcessEvent(uFnSetMatchGUID, &SetMatchGUID_Params, nullptr);
};

// Function ProjectX.GRI_X.HandleMatchGUIDChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* OnlineGameDS                   (CPF_Parm)

void AGRI_X::HandleMatchGUIDChanged(class UOnlineGameDedicatedServer_X* OnlineGameDS)
{
	static UFunction* uFnHandleMatchGUIDChanged = nullptr;

	if (!uFnHandleMatchGUIDChanged)
	{
		uFnHandleMatchGUIDChanged = UFunction::FindFunction("Function ProjectX.GRI_X.HandleMatchGUIDChanged");
	}

	AGRI_X_execHandleMatchGUIDChanged_Params HandleMatchGUIDChanged_Params;
	memcpy_s(&HandleMatchGUIDChanged_Params.OnlineGameDS, 0x8, &OnlineGameDS, 0x8);

	this->ProcessEvent(uFnHandleMatchGUIDChanged, &HandleMatchGUIDChanged_Params, nullptr);
};

// Function ProjectX.GRI_X.IsPlaylistRanked
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGRI_X::IsPlaylistRanked()
{
	static UFunction* uFnIsPlaylistRanked = nullptr;

	if (!uFnIsPlaylistRanked)
	{
		uFnIsPlaylistRanked = UFunction::FindFunction("Function ProjectX.GRI_X.IsPlaylistRanked");
	}

	AGRI_X_execIsPlaylistRanked_Params IsPlaylistRanked_Params;

	this->ProcessEvent(uFnIsPlaylistRanked, &IsPlaylistRanked_Params, nullptr);

	return IsPlaylistRanked_Params.ReturnValue;
};

// Function ProjectX.GRI_X.GetPlaylist
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGameSettingPlaylist_X* AGRI_X::GetPlaylist()
{
	static UFunction* uFnGetPlaylist = nullptr;

	if (!uFnGetPlaylist)
	{
		uFnGetPlaylist = UFunction::FindFunction("Function ProjectX.GRI_X.GetPlaylist");
	}

	AGRI_X_execGetPlaylist_Params GetPlaylist_Params;

	this->ProcessEvent(uFnGetPlaylist, &GetPlaylist_Params, nullptr);

	return GetPlaylist_Params.ReturnValue;
};

// Function ProjectX.GRI_X.PlayerIsInCurrentGame
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

bool AGRI_X::PlayerIsInCurrentGame(struct FUniqueNetId MemberId)
{
	static UFunction* uFnPlayerIsInCurrentGame = nullptr;

	if (!uFnPlayerIsInCurrentGame)
	{
		uFnPlayerIsInCurrentGame = UFunction::FindFunction("Function ProjectX.GRI_X.PlayerIsInCurrentGame");
	}

	AGRI_X_execPlayerIsInCurrentGame_Params PlayerIsInCurrentGame_Params;
	memcpy_s(&PlayerIsInCurrentGame_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnPlayerIsInCurrentGame, &PlayerIsInCurrentGame_Params, nullptr);

	return PlayerIsInCurrentGame_Params.ReturnValue;
};

// Function ProjectX.GRI_X.GetReservationDebugString
// [0x00040103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReplicatedReservationData Data                           (CPF_Parm | CPF_NeedCtorLink)

class FString AGRI_X::GetReservationDebugString(struct FReplicatedReservationData Data)
{
	static UFunction* uFnGetReservationDebugString = nullptr;

	if (!uFnGetReservationDebugString)
	{
		uFnGetReservationDebugString = UFunction::FindFunction("Function ProjectX.GRI_X.GetReservationDebugString");
	}

	AGRI_X_execGetReservationDebugString_Params GetReservationDebugString_Params;
	memcpy_s(&GetReservationDebugString_Params.Data, 0x60, &Data, 0x60);

	this->ProcessEvent(uFnGetReservationDebugString, &GetReservationDebugString_Params, nullptr);

	return GetReservationDebugString_Params.ReturnValue;
};

// Function ProjectX.GRI_X.GetOnlineGameDedicated
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGameDedicatedServer_X* AGRI_X::GetOnlineGameDedicated()
{
	static UFunction* uFnGetOnlineGameDedicated = nullptr;

	if (!uFnGetOnlineGameDedicated)
	{
		uFnGetOnlineGameDedicated = UFunction::FindFunction("Function ProjectX.GRI_X.GetOnlineGameDedicated");
	}

	AGRI_X_execGetOnlineGameDedicated_Params GetOnlineGameDedicated_Params;

	this->ProcessEvent(uFnGetOnlineGameDedicated, &GetOnlineGameDedicated_Params, nullptr);

	return GetOnlineGameDedicated_Params.ReturnValue;
};

// Function ProjectX.GRI_X.GetOnlineGameBase
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGame_Base_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGame_Base_X* AGRI_X::GetOnlineGameBase()
{
	static UFunction* uFnGetOnlineGameBase = nullptr;

	if (!uFnGetOnlineGameBase)
	{
		uFnGetOnlineGameBase = UFunction::FindFunction("Function ProjectX.GRI_X.GetOnlineGameBase");
	}

	AGRI_X_execGetOnlineGameBase_Params GetOnlineGameBase_Params;

	this->ProcessEvent(uFnGetOnlineGameBase, &GetOnlineGameBase_Params, nullptr);

	return GetOnlineGameBase_Params.ReturnValue;
};

// Function ProjectX.GRI_X.GetOnlineGame
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGame_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlineGame_X* AGRI_X::GetOnlineGame()
{
	static UFunction* uFnGetOnlineGame = nullptr;

	if (!uFnGetOnlineGame)
	{
		uFnGetOnlineGame = UFunction::FindFunction("Function ProjectX.GRI_X.GetOnlineGame");
	}

	AGRI_X_execGetOnlineGame_Params GetOnlineGame_Params;

	this->ProcessEvent(uFnGetOnlineGame, &GetOnlineGame_Params, nullptr);

	return GetOnlineGame_Params.ReturnValue;
};

// Function ProjectX.GRI_X.HasSelectedGameData
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool AGRI_X::HasSelectedGameData()
{
	static UFunction* uFnHasSelectedGameData = nullptr;

	if (!uFnHasSelectedGameData)
	{
		uFnHasSelectedGameData = UFunction::FindFunction("Function ProjectX.GRI_X.HasSelectedGameData");
	}

	AGRI_X_execHasSelectedGameData_Params HasSelectedGameData_Params;

	this->ProcessEvent(uFnHasSelectedGameData, &HasSelectedGameData_Params, nullptr);

	return HasSelectedGameData_Params.ReturnValue;
};

// Function ProjectX.GRI_X.SetGameStarted
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void AGRI_X::SetGameStarted()
{
	static UFunction* uFnSetGameStarted = nullptr;

	if (!uFnSetGameStarted)
	{
		uFnSetGameStarted = UFunction::FindFunction("Function ProjectX.GRI_X.SetGameStarted");
	}

	AGRI_X_execSetGameStarted_Params SetGameStarted_Params;

	this->ProcessEvent(uFnSetGameStarted, &SetGameStarted_Params, nullptr);
};

// Function ProjectX.GRI_X.SetOfflineGameData
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   PlaylistName                   (CPF_Parm)

void AGRI_X::SetOfflineGameData(struct FName PlaylistName)
{
	static UFunction* uFnSetOfflineGameData = nullptr;

	if (!uFnSetOfflineGameData)
	{
		uFnSetOfflineGameData = UFunction::FindFunction("Function ProjectX.GRI_X.SetOfflineGameData");
	}

	AGRI_X_execSetOfflineGameData_Params SetOfflineGameData_Params;
	memcpy_s(&SetOfflineGameData_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnSetOfflineGameData, &SetOfflineGameData_Params, nullptr);
};

// Function ProjectX.GRI_X.NotifyOnGameDataSelected
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void AGRI_X::NotifyOnGameDataSelected(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnGameDataSelected = nullptr;

	if (!uFnNotifyOnGameDataSelected)
	{
		uFnNotifyOnGameDataSelected = UFunction::FindFunction("Function ProjectX.GRI_X.NotifyOnGameDataSelected");
	}

	AGRI_X_execNotifyOnGameDataSelected_Params NotifyOnGameDataSelected_Params;
	memcpy_s(&NotifyOnGameDataSelected_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnGameDataSelected, &NotifyOnGameDataSelected_Params, nullptr);
};

// Function ProjectX.GRI_X.SetGameData
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        NewPlaylistID                  (CPF_Parm)
// int32_t                        MutatorIndex                   (CPF_Parm)

void AGRI_X::SetGameData(int32_t NewPlaylistID, int32_t MutatorIndex)
{
	static UFunction* uFnSetGameData = nullptr;

	if (!uFnSetGameData)
	{
		uFnSetGameData = UFunction::FindFunction("Function ProjectX.GRI_X.SetGameData");
	}

	AGRI_X_execSetGameData_Params SetGameData_Params;
	memcpy_s(&SetGameData_Params.NewPlaylistID, 0x4, &NewPlaylistID, 0x4);
	memcpy_s(&SetGameData_Params.MutatorIndex, 0x4, &MutatorIndex, 0x4);

	this->ProcessEvent(uFnSetGameData, &SetGameData_Params, nullptr);
};

// Function ProjectX.GRI_X.HandleGamePlaylistSet
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* DedicatedServer                (CPF_Parm)

void AGRI_X::HandleGamePlaylistSet(class UOnlineGameDedicatedServer_X* DedicatedServer)
{
	static UFunction* uFnHandleGamePlaylistSet = nullptr;

	if (!uFnHandleGamePlaylistSet)
	{
		uFnHandleGamePlaylistSet = UFunction::FindFunction("Function ProjectX.GRI_X.HandleGamePlaylistSet");
	}

	AGRI_X_execHandleGamePlaylistSet_Params HandleGamePlaylistSet_Params;
	memcpy_s(&HandleGamePlaylistSet_Params.DedicatedServer, 0x8, &DedicatedServer, 0x8);

	this->ProcessEvent(uFnHandleGamePlaylistSet, &HandleGamePlaylistSet_Params, nullptr);
};

// Function ProjectX.GRI_X.OnReservationsUpdated
// [0x00080103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void AGRI_X::OnReservationsUpdated()
{
	static UFunction* uFnOnReservationsUpdated = nullptr;

	if (!uFnOnReservationsUpdated)
	{
		uFnOnReservationsUpdated = UFunction::FindFunction("Function ProjectX.GRI_X.OnReservationsUpdated");
	}

	AGRI_X_execOnReservationsUpdated_Params OnReservationsUpdated_Params;

	this->ProcessEvent(uFnOnReservationsUpdated, &OnReservationsUpdated_Params, nullptr);
};

// Function ProjectX.GRI_X.SetReservations
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// TArray<struct FReplicatedReservationData> InReservations                 (CPF_Parm | CPF_NeedCtorLink)

void AGRI_X::SetReservations(TArray<struct FReplicatedReservationData> InReservations)
{
	static UFunction* uFnSetReservations = nullptr;

	if (!uFnSetReservations)
	{
		uFnSetReservations = UFunction::FindFunction("Function ProjectX.GRI_X.SetReservations");
	}

	AGRI_X_execSetReservations_Params SetReservations_Params;
	memcpy_s(&SetReservations_Params.InReservations, 0x10, &InReservations, 0x10);

	this->ProcessEvent(uFnSetReservations, &SetReservations_Params, nullptr);
};

// Function ProjectX.GRI_X.ConvertReservation
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FReplicatedReservationData ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReservationData        Data                           (CPF_Parm | CPF_NeedCtorLink)

struct FReplicatedReservationData AGRI_X::ConvertReservation(struct FReservationData Data)
{
	static UFunction* uFnConvertReservation = nullptr;

	if (!uFnConvertReservation)
	{
		uFnConvertReservation = UFunction::FindFunction("Function ProjectX.GRI_X.ConvertReservation");
	}

	AGRI_X_execConvertReservation_Params ConvertReservation_Params;
	memcpy_s(&ConvertReservation_Params.Data, 0x108, &Data, 0x108);

	this->ProcessEvent(uFnConvertReservation, &ConvertReservation_Params, nullptr);

	return ConvertReservation_Params.ReturnValue;
};

// Function ProjectX.GRI_X.UpdateReservations
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void AGRI_X::UpdateReservations()
{
	static UFunction* uFnUpdateReservations = nullptr;

	if (!uFnUpdateReservations)
	{
		uFnUpdateReservations = UFunction::FindFunction("Function ProjectX.GRI_X.UpdateReservations");
	}

	AGRI_X_execUpdateReservations_Params UpdateReservations_Params;

	this->ProcessEvent(uFnUpdateReservations, &UpdateReservations_Params, nullptr);
};

// Function ProjectX.GRI_X.ReplicatedEvent
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FName                   VarName                        (CPF_Parm)

void AGRI_X::eventReplicatedEvent(struct FName VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function ProjectX.GRI_X.ReplicatedEvent");
	}

	AGRI_X_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memcpy_s(&ReplicatedEvent_Params.VarName, 0x8, &VarName, 0x8);

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function ProjectX.GRI_X.PostBeginPlay
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AGRI_X::eventPostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function ProjectX.GRI_X.PostBeginPlay");
	}

	AGRI_X_eventPostBeginPlay_Params PostBeginPlay_Params;

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function ProjectX.GRI_X.EventMatchGUIDChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  GRI                            (CPF_Parm)

void AGRI_X::EventMatchGUIDChanged(class AGRI_X* GRI)
{
	static UFunction* uFnEventMatchGUIDChanged = nullptr;

	if (!uFnEventMatchGUIDChanged)
	{
		uFnEventMatchGUIDChanged = UFunction::FindFunction("Function ProjectX.GRI_X.EventMatchGUIDChanged");
	}

	AGRI_X_execEventMatchGUIDChanged_Params EventMatchGUIDChanged_Params;
	memcpy_s(&EventMatchGUIDChanged_Params.GRI, 0x8, &GRI, 0x8);

	this->ProcessEvent(uFnEventMatchGUIDChanged, &EventMatchGUIDChanged_Params, nullptr);
};

// Function ProjectX.GRI_X.EventGameStarted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  GRI                            (CPF_Parm)

void AGRI_X::EventGameStarted(class AGRI_X* GRI)
{
	static UFunction* uFnEventGameStarted = nullptr;

	if (!uFnEventGameStarted)
	{
		uFnEventGameStarted = UFunction::FindFunction("Function ProjectX.GRI_X.EventGameStarted");
	}

	AGRI_X_execEventGameStarted_Params EventGameStarted_Params;
	memcpy_s(&EventGameStarted_Params.GRI, 0x8, &GRI, 0x8);

	this->ProcessEvent(uFnEventGameStarted, &EventGameStarted_Params, nullptr);
};

// Function ProjectX.GRI_X.EventServerNameChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  GRI                            (CPF_Parm)

void AGRI_X::EventServerNameChanged(class AGRI_X* GRI)
{
	static UFunction* uFnEventServerNameChanged = nullptr;

	if (!uFnEventServerNameChanged)
	{
		uFnEventServerNameChanged = UFunction::FindFunction("Function ProjectX.GRI_X.EventServerNameChanged");
	}

	AGRI_X_execEventServerNameChanged_Params EventServerNameChanged_Params;
	memcpy_s(&EventServerNameChanged_Params.GRI, 0x8, &GRI, 0x8);

	this->ProcessEvent(uFnEventServerNameChanged, &EventServerNameChanged_Params, nullptr);
};

// Function ProjectX.GRI_X.EventReservationsUpdated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  GRI                            (CPF_Parm)

void AGRI_X::EventReservationsUpdated(class AGRI_X* GRI)
{
	static UFunction* uFnEventReservationsUpdated = nullptr;

	if (!uFnEventReservationsUpdated)
	{
		uFnEventReservationsUpdated = UFunction::FindFunction("Function ProjectX.GRI_X.EventReservationsUpdated");
	}

	AGRI_X_execEventReservationsUpdated_Params EventReservationsUpdated_Params;
	memcpy_s(&EventReservationsUpdated_Params.GRI, 0x8, &GRI, 0x8);

	this->ProcessEvent(uFnEventReservationsUpdated, &EventReservationsUpdated_Params, nullptr);
};

// Function ProjectX.GRI_X.EventGameDataSelected
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlaylistId                     (CPF_Parm)
// int32_t                        MutatorIndex                   (CPF_Parm)

void AGRI_X::EventGameDataSelected(int32_t PlaylistId, int32_t MutatorIndex)
{
	static UFunction* uFnEventGameDataSelected = nullptr;

	if (!uFnEventGameDataSelected)
	{
		uFnEventGameDataSelected = UFunction::FindFunction("Function ProjectX.GRI_X.EventGameDataSelected");
	}

	AGRI_X_execEventGameDataSelected_Params EventGameDataSelected_Params;
	memcpy_s(&EventGameDataSelected_Params.PlaylistId, 0x4, &PlaylistId, 0x4);
	memcpy_s(&EventGameDataSelected_Params.MutatorIndex, 0x4, &MutatorIndex, 0x4);

	this->ProcessEvent(uFnEventGameDataSelected, &EventGameDataSelected_Params, nullptr);
};

// Function ProjectX.GRI_X.EventSpawned
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  GRI                            (CPF_Parm)

void AGRI_X::EventSpawned(class AGRI_X* GRI)
{
	static UFunction* uFnEventSpawned = nullptr;

	if (!uFnEventSpawned)
	{
		uFnEventSpawned = UFunction::FindFunction("Function ProjectX.GRI_X.EventSpawned");
	}

	AGRI_X_execEventSpawned_Params EventSpawned_Params;
	memcpy_s(&EventSpawned_Params.GRI, 0x8, &GRI, 0x8);

	this->ProcessEvent(uFnEventSpawned, &EventSpawned_Params, nullptr);
};

// Function ProjectX.PartyMessage_X.BroadcastOn
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UOnlineLobbyInterface*   LobbyInterface                 (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Parm)

bool UPartyMessage_X::BroadcastOn(class UOnlineLobbyInterface* LobbyInterface, struct FUniqueLobbyId LobbyId)
{
	static UFunction* uFnBroadcastOn = nullptr;

	if (!uFnBroadcastOn)
	{
		uFnBroadcastOn = UFunction::FindFunction("Function ProjectX.PartyMessage_X.BroadcastOn");
	}

	UPartyMessage_X_execBroadcastOn_Params BroadcastOn_Params;
	memcpy_s(&BroadcastOn_Params.LobbyInterface, 0x10, &LobbyInterface, 0x10);
	memcpy_s(&BroadcastOn_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnBroadcastOn, &BroadcastOn_Params, nullptr);

	return BroadcastOn_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_X.Broadcast
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPartyMessage_X::Broadcast()
{
	static UFunction* uFnBroadcast = nullptr;

	if (!uFnBroadcast)
	{
		uFnBroadcast = UFunction::FindFunction("Function ProjectX.PartyMessage_X.Broadcast");
	}

	UPartyMessage_X_execBroadcast_Params Broadcast_Params;

	this->ProcessEvent(uFnBroadcast, &Broadcast_Params, nullptr);

	return Broadcast_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_SearchStatus_X.SetPreferredPlaylists
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_SearchStatus_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<int32_t>                InPlaylists                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UPartyMessage_SearchStatus_X* UPartyMessage_SearchStatus_X::SetPreferredPlaylists(TArray<int32_t>& InPlaylists)
{
	static UFunction* uFnSetPreferredPlaylists = nullptr;

	if (!uFnSetPreferredPlaylists)
	{
		uFnSetPreferredPlaylists = UFunction::FindFunction("Function ProjectX.PartyMessage_SearchStatus_X.SetPreferredPlaylists");
	}

	UPartyMessage_SearchStatus_X_execSetPreferredPlaylists_Params SetPreferredPlaylists_Params;
	memcpy_s(&SetPreferredPlaylists_Params.InPlaylists, 0x10, &InPlaylists, 0x10);

	this->ProcessEvent(uFnSetPreferredPlaylists, &SetPreferredPlaylists_Params, nullptr);

	memcpy_s(&InPlaylists, 0x10, &SetPreferredPlaylists_Params.InPlaylists, 0x10);

	return SetPreferredPlaylists_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_SearchStatus_X.SetIsSearching
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_SearchStatus_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bValue                         (CPF_Parm)

class UPartyMessage_SearchStatus_X* UPartyMessage_SearchStatus_X::SetIsSearching(unsigned long bValue)
{
	static UFunction* uFnSetIsSearching = nullptr;

	if (!uFnSetIsSearching)
	{
		uFnSetIsSearching = UFunction::FindFunction("Function ProjectX.PartyMessage_SearchStatus_X.SetIsSearching");
	}

	UPartyMessage_SearchStatus_X_execSetIsSearching_Params SetIsSearching_Params;
	SetIsSearching_Params.bValue = bValue;

	this->ProcessEvent(uFnSetIsSearching, &SetIsSearching_Params, nullptr);

	return SetIsSearching_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_SearchStatus_X.SetSearchState
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_SearchStatus_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   InSearchState                  (CPF_Parm)

class UPartyMessage_SearchStatus_X* UPartyMessage_SearchStatus_X::SetSearchState(struct FName InSearchState)
{
	static UFunction* uFnSetSearchState = nullptr;

	if (!uFnSetSearchState)
	{
		uFnSetSearchState = UFunction::FindFunction("Function ProjectX.PartyMessage_SearchStatus_X.SetSearchState");
	}

	UPartyMessage_SearchStatus_X_execSetSearchState_Params SetSearchState_Params;
	memcpy_s(&SetSearchState_Params.InSearchState, 0x8, &InSearchState, 0x8);

	this->ProcessEvent(uFnSetSearchState, &SetSearchState_Params, nullptr);

	return SetSearchState_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_LobbySettings_X.SetBuildID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_LobbySettings_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InBuildID                      (CPF_Parm)

class UPartyMessage_LobbySettings_X* UPartyMessage_LobbySettings_X::SetBuildID(int32_t InBuildID)
{
	static UFunction* uFnSetBuildID = nullptr;

	if (!uFnSetBuildID)
	{
		uFnSetBuildID = UFunction::FindFunction("Function ProjectX.PartyMessage_LobbySettings_X.SetBuildID");
	}

	UPartyMessage_LobbySettings_X_execSetBuildID_Params SetBuildID_Params;
	memcpy_s(&SetBuildID_Params.InBuildID, 0x4, &InBuildID, 0x4);

	this->ProcessEvent(uFnSetBuildID, &SetBuildID_Params, nullptr);

	return SetBuildID_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_Kick_X.SetReason
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_Kick_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        InKickReason                   (CPF_Parm)

class UPartyMessage_Kick_X* UPartyMessage_Kick_X::SetReason(uint8_t InKickReason)
{
	static UFunction* uFnSetReason = nullptr;

	if (!uFnSetReason)
	{
		uFnSetReason = UFunction::FindFunction("Function ProjectX.PartyMessage_Kick_X.SetReason");
	}

	UPartyMessage_Kick_X_execSetReason_Params SetReason_Params;
	memcpy_s(&SetReason_Params.InKickReason, 0x1, &InKickReason, 0x1);

	this->ProcessEvent(uFnSetReason, &SetReason_Params, nullptr);

	return SetReason_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_Kick_X.SetKicked
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_Kick_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayer                       (CPF_Parm | CPF_NeedCtorLink)

class UPartyMessage_Kick_X* UPartyMessage_Kick_X::SetKicked(struct FUniqueNetId InPlayer)
{
	static UFunction* uFnSetKicked = nullptr;

	if (!uFnSetKicked)
	{
		uFnSetKicked = UFunction::FindFunction("Function ProjectX.PartyMessage_Kick_X.SetKicked");
	}

	UPartyMessage_Kick_X_execSetKicked_Params SetKicked_Params;
	memcpy_s(&SetKicked_Params.InPlayer, 0x48, &InPlayer, 0x48);

	this->ProcessEvent(uFnSetKicked, &SetKicked_Params, nullptr);

	return SetKicked_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_LocalPlayers_X.AddMember
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FPartyMember            Member                         (CPF_Parm | CPF_NeedCtorLink)

void UPartyMessage_LocalPlayers_X::AddMember(struct FPartyMember Member)
{
	static UFunction* uFnAddMember = nullptr;

	if (!uFnAddMember)
	{
		uFnAddMember = UFunction::FindFunction("Function ProjectX.PartyMessage_LocalPlayers_X.AddMember");
	}

	UPartyMessage_LocalPlayers_X_execAddMember_Params AddMember_Params;
	memcpy_s(&AddMember_Params.Member, 0x170, &Member, 0x170);

	this->ProcessEvent(uFnAddMember, &AddMember_Params, nullptr);
};

// Function ProjectX.PartyMessage_LocalPlayers_X.AddPlayer
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_LocalPlayers_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)

class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::AddPlayer(struct FUniqueNetId PlayerID, class FString PlayerName)
{
	static UFunction* uFnAddPlayer = nullptr;

	if (!uFnAddPlayer)
	{
		uFnAddPlayer = UFunction::FindFunction("Function ProjectX.PartyMessage_LocalPlayers_X.AddPlayer");
	}

	UPartyMessage_LocalPlayers_X_execAddPlayer_Params AddPlayer_Params;
	memcpy_s(&AddPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AddPlayer_Params.PlayerName, 0x10, &PlayerName, 0x10);

	this->ProcessEvent(uFnAddPlayer, &AddPlayer_Params, nullptr);

	return AddPlayer_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_LocalPlayers_X.AddOnlinePlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_LocalPlayers_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::AddOnlinePlayer(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnAddOnlinePlayer = nullptr;

	if (!uFnAddOnlinePlayer)
	{
		uFnAddOnlinePlayer = UFunction::FindFunction("Function ProjectX.PartyMessage_LocalPlayers_X.AddOnlinePlayer");
	}

	UPartyMessage_LocalPlayers_X_execAddOnlinePlayer_Params AddOnlinePlayer_Params;
	memcpy_s(&AddOnlinePlayer_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnAddOnlinePlayer, &AddOnlinePlayer_Params, nullptr);

	return AddOnlinePlayer_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_LocalPlayers_X.SetPrimaryMemberId
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_LocalPlayers_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPrimaryMemberId              (CPF_Parm | CPF_NeedCtorLink)

class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::SetPrimaryMemberId(struct FUniqueNetId InPrimaryMemberId)
{
	static UFunction* uFnSetPrimaryMemberId = nullptr;

	if (!uFnSetPrimaryMemberId)
	{
		uFnSetPrimaryMemberId = UFunction::FindFunction("Function ProjectX.PartyMessage_LocalPlayers_X.SetPrimaryMemberId");
	}

	UPartyMessage_LocalPlayers_X_execSetPrimaryMemberId_Params SetPrimaryMemberId_Params;
	memcpy_s(&SetPrimaryMemberId_Params.InPrimaryMemberId, 0x48, &InPrimaryMemberId, 0x48);

	this->ProcessEvent(uFnSetPrimaryMemberId, &SetPrimaryMemberId_Params, nullptr);

	return SetPrimaryMemberId_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_LocalPlayers_X.AddOnlinePlayers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_LocalPlayers_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPartyMessage_LocalPlayers_X* UPartyMessage_LocalPlayers_X::AddOnlinePlayers()
{
	static UFunction* uFnAddOnlinePlayers = nullptr;

	if (!uFnAddOnlinePlayers)
	{
		uFnAddOnlinePlayers = UFunction::FindFunction("Function ProjectX.PartyMessage_LocalPlayers_X.AddOnlinePlayers");
	}

	UPartyMessage_LocalPlayers_X_execAddOnlinePlayers_Params AddOnlinePlayers_Params;

	this->ProcessEvent(uFnAddOnlinePlayers, &AddOnlinePlayers_Params, nullptr);

	return AddOnlinePlayers_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_MatchmakingAvailability_X.SetMatchmakeRestrictions
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_MatchmakingAvailability_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InRestrictions                 (CPF_Parm)

class UPartyMessage_MatchmakingAvailability_X* UPartyMessage_MatchmakingAvailability_X::SetMatchmakeRestrictions(int32_t InRestrictions)
{
	static UFunction* uFnSetMatchmakeRestrictions = nullptr;

	if (!uFnSetMatchmakeRestrictions)
	{
		uFnSetMatchmakeRestrictions = UFunction::FindFunction("Function ProjectX.PartyMessage_MatchmakingAvailability_X.SetMatchmakeRestrictions");
	}

	UPartyMessage_MatchmakingAvailability_X_execSetMatchmakeRestrictions_Params SetMatchmakeRestrictions_Params;
	memcpy_s(&SetMatchmakeRestrictions_Params.InRestrictions, 0x4, &InRestrictions, 0x4);

	this->ProcessEvent(uFnSetMatchmakeRestrictions, &SetMatchmakeRestrictions_Params, nullptr);

	return SetMatchmakeRestrictions_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_JoinGame_X.SetSettings
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_JoinGame_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyJoinMatchSettings InSettings                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UPartyMessage_JoinGame_X* UPartyMessage_JoinGame_X::SetSettings(struct FPartyJoinMatchSettings& InSettings)
{
	static UFunction* uFnSetSettings = nullptr;

	if (!uFnSetSettings)
	{
		uFnSetSettings = UFunction::FindFunction("Function ProjectX.PartyMessage_JoinGame_X.SetSettings");
	}

	UPartyMessage_JoinGame_X_execSetSettings_Params SetSettings_Params;
	memcpy_s(&SetSettings_Params.InSettings, 0x58, &InSettings, 0x58);

	this->ProcessEvent(uFnSetSettings, &SetSettings_Params, nullptr);

	memcpy_s(&InSettings, 0x58, &SetSettings_Params.InSettings, 0x58);

	return SetSettings_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_PartyMemberJoinGame_X.SetPartyMemberServer
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_PartyMemberJoinGame_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMemberServer      InServer                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UPartyMessage_PartyMemberJoinGame_X* UPartyMessage_PartyMemberJoinGame_X::SetPartyMemberServer(struct FPartyMemberServer& InServer)
{
	static UFunction* uFnSetPartyMemberServer = nullptr;

	if (!uFnSetPartyMemberServer)
	{
		uFnSetPartyMemberServer = UFunction::FindFunction("Function ProjectX.PartyMessage_PartyMemberJoinGame_X.SetPartyMemberServer");
	}

	UPartyMessage_PartyMemberJoinGame_X_execSetPartyMemberServer_Params SetPartyMemberServer_Params;
	memcpy_s(&SetPartyMemberServer_Params.InServer, 0x48, &InServer, 0x48);

	this->ProcessEvent(uFnSetPartyMemberServer, &SetPartyMemberServer_Params, nullptr);

	memcpy_s(&InServer, 0x48, &SetPartyMemberServer_Params.InServer, 0x48);

	return SetPartyMemberServer_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_DisableCrossPlay_X.SetDisableCrossPlay
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_DisableCrossPlay_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  InDisableCrossplay             (CPF_Parm)

class UPartyMessage_DisableCrossPlay_X* UPartyMessage_DisableCrossPlay_X::SetDisableCrossPlay(unsigned long InDisableCrossplay)
{
	static UFunction* uFnSetDisableCrossPlay = nullptr;

	if (!uFnSetDisableCrossPlay)
	{
		uFnSetDisableCrossPlay = UFunction::FindFunction("Function ProjectX.PartyMessage_DisableCrossPlay_X.SetDisableCrossPlay");
	}

	UPartyMessage_DisableCrossPlay_X_execSetDisableCrossPlay_Params SetDisableCrossPlay_Params;
	SetDisableCrossPlay_Params.InDisableCrossplay = InDisableCrossplay;

	this->ProcessEvent(uFnSetDisableCrossPlay, &SetDisableCrossPlay_Params, nullptr);

	return SetDisableCrossPlay_Params.ReturnValue;
};

// Function ProjectX.PartyMessage_CrossPlayTextChat_X.SetCrossPlayTextChatState
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPartyMessage_CrossPlayTextChat_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        InCrossChatState               (CPF_Parm)

class UPartyMessage_CrossPlayTextChat_X* UPartyMessage_CrossPlayTextChat_X::SetCrossPlayTextChatState(uint8_t InCrossChatState)
{
	static UFunction* uFnSetCrossPlayTextChatState = nullptr;

	if (!uFnSetCrossPlayTextChatState)
	{
		uFnSetCrossPlayTextChatState = UFunction::FindFunction("Function ProjectX.PartyMessage_CrossPlayTextChat_X.SetCrossPlayTextChatState");
	}

	UPartyMessage_CrossPlayTextChat_X_execSetCrossPlayTextChatState_Params SetCrossPlayTextChatState_Params;
	memcpy_s(&SetCrossPlayTextChatState_Params.InCrossChatState, 0x1, &InCrossChatState, 0x1);

	this->ProcessEvent(uFnSetCrossPlayTextChatState, &SetCrossPlayTextChatState_Params, nullptr);

	return SetCrossPlayTextChatState_Params.ReturnValue;
};

// Function ProjectX.OnlineGameJoinGame_X.HandleCanPlayOnline
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       PrivilegeCheck                 (CPF_Parm)

void UOnlineGameJoinGame_X::HandleCanPlayOnline(class UPrivilegeCheck_X* PrivilegeCheck)
{
	static UFunction* uFnHandleCanPlayOnline = nullptr;

	if (!uFnHandleCanPlayOnline)
	{
		uFnHandleCanPlayOnline = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleCanPlayOnline");
	}

	UOnlineGameJoinGame_X_execHandleCanPlayOnline_Params HandleCanPlayOnline_Params;
	memcpy_s(&HandleCanPlayOnline_Params.PrivilegeCheck, 0x8, &PrivilegeCheck, 0x8);

	this->ProcessEvent(uFnHandleCanPlayOnline, &HandleCanPlayOnline_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.GoToNextState
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::GoToNextState()
{
	static UFunction* uFnGoToNextState = nullptr;

	if (!uFnGoToNextState)
	{
		uFnGoToNextState = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.GoToNextState");
	}

	UOnlineGameJoinGame_X_execGoToNextState_Params GoToNextState_Params;

	this->ProcessEvent(uFnGoToNextState, &GoToNextState_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.HandleCancelJoin
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameJoinGame_X::HandleCancelJoin(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnHandleCancelJoin = nullptr;

	if (!uFnHandleCancelJoin)
	{
		uFnHandleCancelJoin = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleCancelJoin");
	}

	UOnlineGameJoinGame_X_execHandleCancelJoin_Params HandleCancelJoin_Params;
	memcpy_s(&HandleCancelJoin_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandleCancelJoin_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleCancelJoin, &HandleCancelJoin_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.SendReservation
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::SendReservation()
{
	static UFunction* uFnSendReservation = nullptr;

	if (!uFnSendReservation)
	{
		uFnSendReservation = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.SendReservation");
	}

	UOnlineGameJoinGame_X_execSendReservation_Params SendReservation_Params;

	this->ProcessEvent(uFnSendReservation, &SendReservation_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.SendReservationMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::SendReservationMessage()
{
	static UFunction* uFnSendReservationMessage = nullptr;

	if (!uFnSendReservationMessage)
	{
		uFnSendReservationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.SendReservationMessage");
	}

	UOnlineGameJoinGame_X_execSendReservationMessage_Params SendReservationMessage_Params;

	this->ProcessEvent(uFnSendReservationMessage, &SendReservationMessage_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.GetMetrics
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UMatchmakingMetrics_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UMatchmakingMetrics_X* UOnlineGameJoinGame_X::GetMetrics()
{
	static UFunction* uFnGetMetrics = nullptr;

	if (!uFnGetMetrics)
	{
		uFnGetMetrics = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.GetMetrics");
	}

	UOnlineGameJoinGame_X_execGetMetrics_Params GetMetrics_Params;

	this->ProcessEvent(uFnGetMetrics, &GetMetrics_Params, nullptr);

	return GetMetrics_Params.ReturnValue;
};

// Function ProjectX.OnlineGameJoinGame_X.HandleConnection
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UReservationBeacon_X*    Beacon                         (CPF_Parm | CPF_EditInline)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

void UOnlineGameJoinGame_X::HandleConnection(class UReservationBeacon_X* Beacon, class UIReservationConnection_X* Connection)
{
	static UFunction* uFnHandleConnection = nullptr;

	if (!uFnHandleConnection)
	{
		uFnHandleConnection = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleConnection");
	}

	UOnlineGameJoinGame_X_execHandleConnection_Params HandleConnection_Params;
	memcpy_s(&HandleConnection_Params.Beacon, 0x8, &Beacon, 0x8);
	memcpy_s(&HandleConnection_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnHandleConnection, &HandleConnection_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.HandleDisconnection
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UReservationBeacon_X*    Beacon                         (CPF_Parm | CPF_EditInline)
// class UIReservationConnection_X* Connection                     (CPF_Parm)

void UOnlineGameJoinGame_X::HandleDisconnection(class UReservationBeacon_X* Beacon, class UIReservationConnection_X* Connection)
{
	static UFunction* uFnHandleDisconnection = nullptr;

	if (!uFnHandleDisconnection)
	{
		uFnHandleDisconnection = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleDisconnection");
	}

	UOnlineGameJoinGame_X_execHandleDisconnection_Params HandleDisconnection_Params;
	memcpy_s(&HandleDisconnection_Params.Beacon, 0x8, &Beacon, 0x8);
	memcpy_s(&HandleDisconnection_Params.Connection, 0x10, &Connection, 0x10);

	this->ProcessEvent(uFnHandleDisconnection, &HandleDisconnection_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.JoinServer
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UReservationsReadyMessage_X* Message                        (CPF_Parm)

void UOnlineGameJoinGame_X::JoinServer(class UReservationsReadyMessage_X* Message)
{
	static UFunction* uFnJoinServer = nullptr;

	if (!uFnJoinServer)
	{
		uFnJoinServer = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.JoinServer");
	}

	UOnlineGameJoinGame_X_execJoinServer_Params JoinServer_Params;
	memcpy_s(&JoinServer_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnJoinServer, &JoinServer_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.TravelToServer
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::TravelToServer()
{
	static UFunction* uFnTravelToServer = nullptr;

	if (!uFnTravelToServer)
	{
		uFnTravelToServer = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.TravelToServer");
	}

	UOnlineGameJoinGame_X_execTravelToServer_Params TravelToServer_Params;

	this->ProcessEvent(uFnTravelToServer, &TravelToServer_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.CreateReservationMessage
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAddReservationMessage_X* UOnlineGameJoinGame_X::CreateReservationMessage()
{
	static UFunction* uFnCreateReservationMessage = nullptr;

	if (!uFnCreateReservationMessage)
	{
		uFnCreateReservationMessage = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.CreateReservationMessage");
	}

	UOnlineGameJoinGame_X_execCreateReservationMessage_Params CreateReservationMessage_Params;

	this->ProcessEvent(uFnCreateReservationMessage, &CreateReservationMessage_Params, nullptr);

	return CreateReservationMessage_Params.ReturnValue;
};

// Function ProjectX.OnlineGameJoinGame_X.SendServerReservedEvent
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::SendServerReservedEvent()
{
	static UFunction* uFnSendServerReservedEvent = nullptr;

	if (!uFnSendServerReservedEvent)
	{
		uFnSendServerReservedEvent = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.SendServerReservedEvent");
	}

	UOnlineGameJoinGame_X_execSendServerReservedEvent_Params SendServerReservedEvent_Params;

	this->ProcessEvent(uFnSendServerReservedEvent, &SendServerReservedEvent_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.StartConnectToServer
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::StartConnectToServer()
{
	static UFunction* uFnStartConnectToServer = nullptr;

	if (!uFnStartConnectToServer)
	{
		uFnStartConnectToServer = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.StartConnectToServer");
	}

	UOnlineGameJoinGame_X_execStartConnectToServer_Params StartConnectToServer_Params;

	this->ProcessEvent(uFnStartConnectToServer, &StartConnectToServer_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.CheckAllLocalPlayersHaveJoined
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPlayer*                 JoinedPlayer                   (CPF_Parm)

void UOnlineGameJoinGame_X::CheckAllLocalPlayersHaveJoined(class UPlayer* JoinedPlayer)
{
	static UFunction* uFnCheckAllLocalPlayersHaveJoined = nullptr;

	if (!uFnCheckAllLocalPlayersHaveJoined)
	{
		uFnCheckAllLocalPlayersHaveJoined = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.CheckAllLocalPlayersHaveJoined");
	}

	UOnlineGameJoinGame_X_execCheckAllLocalPlayersHaveJoined_Params CheckAllLocalPlayersHaveJoined_Params;
	memcpy_s(&CheckAllLocalPlayersHaveJoined_Params.JoinedPlayer, 0x8, &JoinedPlayer, 0x8);

	this->ProcessEvent(uFnCheckAllLocalPlayersHaveJoined, &CheckAllLocalPlayersHaveJoined_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.HandleInternetConnectionChanged
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bConnected                     (CPF_Parm)

void UOnlineGameJoinGame_X::HandleInternetConnectionChanged(unsigned long bConnected)
{
	static UFunction* uFnHandleInternetConnectionChanged = nullptr;

	if (!uFnHandleInternetConnectionChanged)
	{
		uFnHandleInternetConnectionChanged = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleInternetConnectionChanged");
	}

	UOnlineGameJoinGame_X_execHandleInternetConnectionChanged_Params HandleInternetConnectionChanged_Params;
	HandleInternetConnectionChanged_Params.bConnected = bConnected;

	this->ProcessEvent(uFnHandleInternetConnectionChanged, &HandleInternetConnectionChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.OnAllPlayersJoined
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::OnAllPlayersJoined()
{
	static UFunction* uFnOnAllPlayersJoined = nullptr;

	if (!uFnOnAllPlayersJoined)
	{
		uFnOnAllPlayersJoined = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.OnAllPlayersJoined");
	}

	UOnlineGameJoinGame_X_execOnAllPlayersJoined_Params OnAllPlayersJoined_Params;

	this->ProcessEvent(uFnOnAllPlayersJoined, &OnAllPlayersJoined_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.MigrateToNewServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FServerConnectionInfo   ConnectionInfo                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameJoinGame_X::MigrateToNewServer(struct FServerConnectionInfo ConnectionInfo)
{
	static UFunction* uFnMigrateToNewServer = nullptr;

	if (!uFnMigrateToNewServer)
	{
		uFnMigrateToNewServer = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.MigrateToNewServer");
	}

	UOnlineGameJoinGame_X_execMigrateToNewServer_Params MigrateToNewServer_Params;
	memcpy_s(&MigrateToNewServer_Params.ConnectionInfo, 0x30, &ConnectionInfo, 0x30);

	this->ProcessEvent(uFnMigrateToNewServer, &MigrateToNewServer_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGameJoinGame_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.PrintDebugInfo");
	}

	UOnlineGameJoinGame_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.IsInTransition
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameJoinGame_X::IsInTransition()
{
	static UFunction* uFnIsInTransition = nullptr;

	if (!uFnIsInTransition)
	{
		uFnIsInTransition = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.IsInTransition");
	}

	UOnlineGameJoinGame_X_execIsInTransition_Params IsInTransition_Params;

	this->ProcessEvent(uFnIsInTransition, &IsInTransition_Params, nullptr);

	return IsInTransition_Params.ReturnValue;
};

// Function ProjectX.OnlineGameJoinGame_X.SendPing
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::SendPing()
{
	static UFunction* uFnSendPing = nullptr;

	if (!uFnSendPing)
	{
		uFnSendPing = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.SendPing");
	}

	UOnlineGameJoinGame_X_execSendPing_Params SendPing_Params;

	this->ProcessEvent(uFnSendPing, &SendPing_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.GotoJoinGameState
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FName                   NewStateName                   (CPF_Parm)

void UOnlineGameJoinGame_X::GotoJoinGameState(struct FName NewStateName)
{
	static UFunction* uFnGotoJoinGameState = nullptr;

	if (!uFnGotoJoinGameState)
	{
		uFnGotoJoinGameState = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.GotoJoinGameState");
	}

	UOnlineGameJoinGame_X_execGotoJoinGameState_Params GotoJoinGameState_Params;
	memcpy_s(&GotoJoinGameState_Params.NewStateName, 0x8, &NewStateName, 0x8);

	this->ProcessEvent(uFnGotoJoinGameState, &GotoJoinGameState_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.HandleConnectionResponse
// [0x00080001] (FUNC_Final | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameJoinGame_X::HandleConnectionResponse(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnHandleConnectionResponse = nullptr;

	if (!uFnHandleConnectionResponse)
	{
		uFnHandleConnectionResponse = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleConnectionResponse");
	}

	UOnlineGameJoinGame_X_execHandleConnectionResponse_Params HandleConnectionResponse_Params;
	memcpy_s(&HandleConnectionResponse_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandleConnectionResponse_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleConnectionResponse, &HandleConnectionResponse_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.HandleReservationResponse
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UObject*                 Message                        (CPF_Parm)

void UOnlineGameJoinGame_X::HandleReservationResponse(class UIReservationConnection_X* Connection, class UObject* Message)
{
	static UFunction* uFnHandleReservationResponse = nullptr;

	if (!uFnHandleReservationResponse)
	{
		uFnHandleReservationResponse = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleReservationResponse");
	}

	UOnlineGameJoinGame_X_execHandleReservationResponse_Params HandleReservationResponse_Params;
	memcpy_s(&HandleReservationResponse_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandleReservationResponse_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleReservationResponse, &HandleReservationResponse_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.HandleConnectionFailed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        MessageType                    (CPF_Parm)
// class FString                  Title                          (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameJoinGame_X::HandleConnectionFailed(uint8_t MessageType, class FString Title, class FString Message)
{
	static UFunction* uFnHandleConnectionFailed = nullptr;

	if (!uFnHandleConnectionFailed)
	{
		uFnHandleConnectionFailed = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleConnectionFailed");
	}

	UOnlineGameJoinGame_X_execHandleConnectionFailed_Params HandleConnectionFailed_Params;
	memcpy_s(&HandleConnectionFailed_Params.MessageType, 0x1, &MessageType, 0x1);
	memcpy_s(&HandleConnectionFailed_Params.Title, 0x10, &Title, 0x10);
	memcpy_s(&HandleConnectionFailed_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnHandleConnectionFailed, &HandleConnectionFailed_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.OnJoinGameComplete
// [0x00084002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  FailReason                     (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameJoinGame_X::OnJoinGameComplete(unsigned long bSuccess, class FString FailReason)
{
	static UFunction* uFnOnJoinGameComplete = nullptr;

	if (!uFnOnJoinGameComplete)
	{
		uFnOnJoinGameComplete = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.OnJoinGameComplete");
	}

	UOnlineGameJoinGame_X_execOnJoinGameComplete_Params OnJoinGameComplete_Params;
	OnJoinGameComplete_Params.bSuccess = bSuccess;
	memcpy_s(&OnJoinGameComplete_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnOnJoinGameComplete, &OnJoinGameComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.SetActiveServerData
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FActiveServerData       NewValue                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameJoinGame_X::SetActiveServerData(struct FActiveServerData& NewValue)
{
	static UFunction* uFnSetActiveServerData = nullptr;

	if (!uFnSetActiveServerData)
	{
		uFnSetActiveServerData = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.SetActiveServerData");
	}

	UOnlineGameJoinGame_X_execSetActiveServerData_Params SetActiveServerData_Params;
	memcpy_s(&SetActiveServerData_Params.NewValue, 0xA0, &NewValue, 0xA0);

	this->ProcessEvent(uFnSetActiveServerData, &SetActiveServerData_Params, nullptr);

	memcpy_s(&NewValue, 0xA0, &SetActiveServerData_Params.NewValue, 0xA0);
};

// Function ProjectX.OnlineGameJoinGame_X.ClearActiveServerData
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::ClearActiveServerData()
{
	static UFunction* uFnClearActiveServerData = nullptr;

	if (!uFnClearActiveServerData)
	{
		uFnClearActiveServerData = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.ClearActiveServerData");
	}

	UOnlineGameJoinGame_X_execClearActiveServerData_Params ClearActiveServerData_Params;

	this->ProcessEvent(uFnClearActiveServerData, &ClearActiveServerData_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.HandleGameInfoSpawned
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class AGameInfo_X*             InGameInfo                     (CPF_Parm)

void UOnlineGameJoinGame_X::HandleGameInfoSpawned(class AGameInfo_X* InGameInfo)
{
	static UFunction* uFnHandleGameInfoSpawned = nullptr;

	if (!uFnHandleGameInfoSpawned)
	{
		uFnHandleGameInfoSpawned = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.HandleGameInfoSpawned");
	}

	UOnlineGameJoinGame_X_execHandleGameInfoSpawned_Params HandleGameInfoSpawned_Params;
	memcpy_s(&HandleGameInfoSpawned_Params.InGameInfo, 0x8, &InGameInfo, 0x8);

	this->ProcessEvent(uFnHandleGameInfoSpawned, &HandleGameInfoSpawned_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.IsJoiningGame
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameJoinGame_X::IsJoiningGame()
{
	static UFunction* uFnIsJoiningGame = nullptr;

	if (!uFnIsJoiningGame)
	{
		uFnIsJoiningGame = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.IsJoiningGame");
	}

	UOnlineGameJoinGame_X_execIsJoiningGame_Params IsJoiningGame_Params;

	this->ProcessEvent(uFnIsJoiningGame, &IsJoiningGame_Params, nullptr);

	return IsJoiningGame_Params.ReturnValue;
};

// Function ProjectX.OnlineGameJoinGame_X.CancelJoin
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::CancelJoin()
{
	static UFunction* uFnCancelJoin = nullptr;

	if (!uFnCancelJoin)
	{
		uFnCancelJoin = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.CancelJoin");
	}

	UOnlineGameJoinGame_X_execCancelJoin_Params CancelJoin_Params;

	this->ProcessEvent(uFnCancelJoin, &CancelJoin_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.StartJoinCustomMatch
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)
// struct FJoinMatchSettings      JoinSettings                   (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FCustomMatchSettings    InSettings                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameJoinGame_X::StartJoinCustomMatch(struct FServerReservationData Reservation, struct FJoinMatchSettings JoinSettings, struct FCustomMatchSettings& InSettings)
{
	static UFunction* uFnStartJoinCustomMatch = nullptr;

	if (!uFnStartJoinCustomMatch)
	{
		uFnStartJoinCustomMatch = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.StartJoinCustomMatch");
	}

	UOnlineGameJoinGame_X_execStartJoinCustomMatch_Params StartJoinCustomMatch_Params;
	memcpy_s(&StartJoinCustomMatch_Params.Reservation, 0x70, &Reservation, 0x70);
	memcpy_s(&StartJoinCustomMatch_Params.JoinSettings, 0x20, &JoinSettings, 0x20);
	memcpy_s(&StartJoinCustomMatch_Params.InSettings, 0x90, &InSettings, 0x90);

	this->ProcessEvent(uFnStartJoinCustomMatch, &StartJoinCustomMatch_Params, nullptr);

	memcpy_s(&InSettings, 0x90, &StartJoinCustomMatch_Params.InSettings, 0x90);

	return StartJoinCustomMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameJoinGame_X.StartJoinPrivateMatch
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)
// struct FJoinMatchSettings      JoinSettings                   (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FCustomMatchSettings    InSettings                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlineGameJoinGame_X::StartJoinPrivateMatch(struct FServerReservationData Reservation, struct FJoinMatchSettings JoinSettings, struct FCustomMatchSettings& InSettings)
{
	static UFunction* uFnStartJoinPrivateMatch = nullptr;

	if (!uFnStartJoinPrivateMatch)
	{
		uFnStartJoinPrivateMatch = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.StartJoinPrivateMatch");
	}

	UOnlineGameJoinGame_X_execStartJoinPrivateMatch_Params StartJoinPrivateMatch_Params;
	memcpy_s(&StartJoinPrivateMatch_Params.Reservation, 0x70, &Reservation, 0x70);
	memcpy_s(&StartJoinPrivateMatch_Params.JoinSettings, 0x20, &JoinSettings, 0x20);
	memcpy_s(&StartJoinPrivateMatch_Params.InSettings, 0x90, &InSettings, 0x90);

	this->ProcessEvent(uFnStartJoinPrivateMatch, &StartJoinPrivateMatch_Params, nullptr);

	memcpy_s(&InSettings, 0x90, &StartJoinPrivateMatch_Params.InSettings, 0x90);

	return StartJoinPrivateMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameJoinGame_X.StartJoin
// [0x00824002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)
// struct FJoinMatchSettings      JoinSettings                   (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameJoinGame_X::StartJoin(struct FServerReservationData Reservation, struct FJoinMatchSettings JoinSettings)
{
	static UFunction* uFnStartJoin = nullptr;

	if (!uFnStartJoin)
	{
		uFnStartJoin = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.StartJoin");
	}

	UOnlineGameJoinGame_X_execStartJoin_Params StartJoin_Params;
	memcpy_s(&StartJoin_Params.Reservation, 0x70, &Reservation, 0x70);
	memcpy_s(&StartJoin_Params.JoinSettings, 0x20, &JoinSettings, 0x20);

	this->ProcessEvent(uFnStartJoin, &StartJoin_Params, nullptr);

	return StartJoin_Params.ReturnValue;
};

// Function ProjectX.OnlineGameJoinGame_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.OnInit");
	}

	UOnlineGameJoinGame_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventMaxPlayersChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameJoinGame_X*   OnlineGameJoinGame             (CPF_Parm)
// int32_t                        MaxPlayers                     (CPF_Parm)

void UOnlineGameJoinGame_X::EventMaxPlayersChanged(class UOnlineGameJoinGame_X* OnlineGameJoinGame, int32_t MaxPlayers)
{
	static UFunction* uFnEventMaxPlayersChanged = nullptr;

	if (!uFnEventMaxPlayersChanged)
	{
		uFnEventMaxPlayersChanged = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventMaxPlayersChanged");
	}

	UOnlineGameJoinGame_X_execEventMaxPlayersChanged_Params EventMaxPlayersChanged_Params;
	memcpy_s(&EventMaxPlayersChanged_Params.OnlineGameJoinGame, 0x8, &OnlineGameJoinGame, 0x8);
	memcpy_s(&EventMaxPlayersChanged_Params.MaxPlayers, 0x4, &MaxPlayers, 0x4);

	this->ProcessEvent(uFnEventMaxPlayersChanged, &EventMaxPlayersChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventJoiningGame
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameJoinGame_X*   OnlineGameJoinGame             (CPF_Parm)

void UOnlineGameJoinGame_X::EventJoiningGame(class UOnlineGameJoinGame_X* OnlineGameJoinGame)
{
	static UFunction* uFnEventJoiningGame = nullptr;

	if (!uFnEventJoiningGame)
	{
		uFnEventJoiningGame = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventJoiningGame");
	}

	UOnlineGameJoinGame_X_execEventJoiningGame_Params EventJoiningGame_Params;
	memcpy_s(&EventJoiningGame_Params.OnlineGameJoinGame, 0x8, &OnlineGameJoinGame, 0x8);

	this->ProcessEvent(uFnEventJoiningGame, &EventJoiningGame_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventPasswordRequired
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::EventPasswordRequired()
{
	static UFunction* uFnEventPasswordRequired = nullptr;

	if (!uFnEventPasswordRequired)
	{
		uFnEventPasswordRequired = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventPasswordRequired");
	}

	UOnlineGameJoinGame_X_execEventPasswordRequired_Params EventPasswordRequired_Params;

	this->ProcessEvent(uFnEventPasswordRequired, &EventPasswordRequired_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventServerReserved
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::EventServerReserved()
{
	static UFunction* uFnEventServerReserved = nullptr;

	if (!uFnEventServerReserved)
	{
		uFnEventServerReserved = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventServerReserved");
	}

	UOnlineGameJoinGame_X_execEventServerReserved_Params EventServerReserved_Params;

	this->ProcessEvent(uFnEventServerReserved, &EventServerReserved_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventActiveServerChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::EventActiveServerChanged()
{
	static UFunction* uFnEventActiveServerChanged = nullptr;

	if (!uFnEventActiveServerChanged)
	{
		uFnEventActiveServerChanged = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventActiveServerChanged");
	}

	UOnlineGameJoinGame_X_execEventActiveServerChanged_Params EventActiveServerChanged_Params;

	this->ProcessEvent(uFnEventActiveServerChanged, &EventActiveServerChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventCountdownEnded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::EventCountdownEnded()
{
	static UFunction* uFnEventCountdownEnded = nullptr;

	if (!uFnEventCountdownEnded)
	{
		uFnEventCountdownEnded = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventCountdownEnded");
	}

	UOnlineGameJoinGame_X_execEventCountdownEnded_Params EventCountdownEnded_Params;

	this->ProcessEvent(uFnEventCountdownEnded, &EventCountdownEnded_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventCountdownStarted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameJoinGame_X::EventCountdownStarted()
{
	static UFunction* uFnEventCountdownStarted = nullptr;

	if (!uFnEventCountdownStarted)
	{
		uFnEventCountdownStarted = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventCountdownStarted");
	}

	UOnlineGameJoinGame_X_execEventCountdownStarted_Params EventCountdownStarted_Params;

	this->ProcessEvent(uFnEventCountdownStarted, &EventCountdownStarted_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventStatusUpdate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  NewStatus                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameJoinGame_X::EventStatusUpdate(class FString NewStatus)
{
	static UFunction* uFnEventStatusUpdate = nullptr;

	if (!uFnEventStatusUpdate)
	{
		uFnEventStatusUpdate = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventStatusUpdate");
	}

	UOnlineGameJoinGame_X_execEventStatusUpdate_Params EventStatusUpdate_Params;
	memcpy_s(&EventStatusUpdate_Params.NewStatus, 0x10, &NewStatus, 0x10);

	this->ProcessEvent(uFnEventStatusUpdate, &EventStatusUpdate_Params, nullptr);
};

// Function ProjectX.OnlineGameJoinGame_X.EventJoinGameComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  FailReason                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameJoinGame_X::EventJoinGameComplete(unsigned long bSuccess, class FString FailReason)
{
	static UFunction* uFnEventJoinGameComplete = nullptr;

	if (!uFnEventJoinGameComplete)
	{
		uFnEventJoinGameComplete = UFunction::FindFunction("Function ProjectX.OnlineGameJoinGame_X.EventJoinGameComplete");
	}

	UOnlineGameJoinGame_X_execEventJoinGameComplete_Params EventJoinGameComplete_Params;
	EventJoinGameComplete_Params.bSuccess = bSuccess;
	memcpy_s(&EventJoinGameComplete_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnEventJoinGameComplete, &EventJoinGameComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGameAccount_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.PrintDebugInfo");
	}

	UOnlineGameAccount_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.OnMainMenuOpened
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameAccount_X::OnMainMenuOpened()
{
	static UFunction* uFnOnMainMenuOpened = nullptr;

	if (!uFnOnMainMenuOpened)
	{
		uFnOnMainMenuOpened = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.OnMainMenuOpened");
	}

	UOnlineGameAccount_X_execOnMainMenuOpened_Params OnMainMenuOpened_Params;

	this->ProcessEvent(uFnOnMainMenuOpened, &OnMainMenuOpened_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.GetNumLocalPlayers
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGameAccount_X::GetNumLocalPlayers()
{
	static UFunction* uFnGetNumLocalPlayers = nullptr;

	if (!uFnGetNumLocalPlayers)
	{
		uFnGetNumLocalPlayers = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.GetNumLocalPlayers");
	}

	UOnlineGameAccount_X_execGetNumLocalPlayers_Params GetNumLocalPlayers_Params;

	this->ProcessEvent(uFnGetNumLocalPlayers, &GetNumLocalPlayers_Params, nullptr);

	return GetNumLocalPlayers_Params.ReturnValue;
};

// Function ProjectX.OnlineGameAccount_X.SendUpdatePlayerCurrentGameRPC
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameAccount_X::SendUpdatePlayerCurrentGameRPC()
{
	static UFunction* uFnSendUpdatePlayerCurrentGameRPC = nullptr;

	if (!uFnSendUpdatePlayerCurrentGameRPC)
	{
		uFnSendUpdatePlayerCurrentGameRPC = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.SendUpdatePlayerCurrentGameRPC");
	}

	UOnlineGameAccount_X_execSendUpdatePlayerCurrentGameRPC_Params SendUpdatePlayerCurrentGameRPC_Params;

	this->ProcessEvent(uFnSendUpdatePlayerCurrentGameRPC, &SendUpdatePlayerCurrentGameRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.SendUpdatePlayerCurrentGameRequest
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameAccount_X::SendUpdatePlayerCurrentGameRequest()
{
	static UFunction* uFnSendUpdatePlayerCurrentGameRequest = nullptr;

	if (!uFnSendUpdatePlayerCurrentGameRequest)
	{
		uFnSendUpdatePlayerCurrentGameRequest = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.SendUpdatePlayerCurrentGameRequest");
	}

	UOnlineGameAccount_X_execSendUpdatePlayerCurrentGameRequest_Params SendUpdatePlayerCurrentGameRequest_Params;

	this->ProcessEvent(uFnSendUpdatePlayerCurrentGameRequest, &SendUpdatePlayerCurrentGameRequest_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.UpdateCurrentGame
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameAccount_X::UpdateCurrentGame()
{
	static UFunction* uFnUpdateCurrentGame = nullptr;

	if (!uFnUpdateCurrentGame)
	{
		uFnUpdateCurrentGame = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.UpdateCurrentGame");
	}

	UOnlineGameAccount_X_execUpdateCurrentGame_Params UpdateCurrentGame_Params;

	this->ProcessEvent(uFnUpdateCurrentGame, &UpdateCurrentGame_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.ClearCurrentPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameAccount_X::ClearCurrentPlaylist()
{
	static UFunction* uFnClearCurrentPlaylist = nullptr;

	if (!uFnClearCurrentPlaylist)
	{
		uFnClearCurrentPlaylist = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.ClearCurrentPlaylist");
	}

	UOnlineGameAccount_X_execClearCurrentPlaylist_Params ClearCurrentPlaylist_Params;

	this->ProcessEvent(uFnClearCurrentPlaylist, &ClearCurrentPlaylist_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.SetCurrentPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        PlaylistId                     (CPF_Parm)

void UOnlineGameAccount_X::SetCurrentPlaylist(int32_t PlaylistId)
{
	static UFunction* uFnSetCurrentPlaylist = nullptr;

	if (!uFnSetCurrentPlaylist)
	{
		uFnSetCurrentPlaylist = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.SetCurrentPlaylist");
	}

	UOnlineGameAccount_X_execSetCurrentPlaylist_Params SetCurrentPlaylist_Params;
	memcpy_s(&SetCurrentPlaylist_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnSetCurrentPlaylist, &SetCurrentPlaylist_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.HandleActiveServerChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameAccount_X::HandleActiveServerChanged()
{
	static UFunction* uFnHandleActiveServerChanged = nullptr;

	if (!uFnHandleActiveServerChanged)
	{
		uFnHandleActiveServerChanged = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.HandleActiveServerChanged");
	}

	UOnlineGameAccount_X_execHandleActiveServerChanged_Params HandleActiveServerChanged_Params;

	this->ProcessEvent(uFnHandleActiveServerChanged, &HandleActiveServerChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.HandlePsyNetConnectionChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     C                              (CPF_Parm)

void UOnlineGameAccount_X::HandlePsyNetConnectionChanged(class UPsyNetConnection_X* C)
{
	static UFunction* uFnHandlePsyNetConnectionChanged = nullptr;

	if (!uFnHandlePsyNetConnectionChanged)
	{
		uFnHandlePsyNetConnectionChanged = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.HandlePsyNetConnectionChanged");
	}

	UOnlineGameAccount_X_execHandlePsyNetConnectionChanged_Params HandlePsyNetConnectionChanged_Params;
	memcpy_s(&HandlePsyNetConnectionChanged_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnHandlePsyNetConnectionChanged, &HandlePsyNetConnectionChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.HandlePlayerLoginStatusChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlineGameAccount_X::HandlePlayerLoginStatusChanged(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnHandlePlayerLoginStatusChanged = nullptr;

	if (!uFnHandlePlayerLoginStatusChanged)
	{
		uFnHandlePlayerLoginStatusChanged = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.HandlePlayerLoginStatusChanged");
	}

	UOnlineGameAccount_X_execHandlePlayerLoginStatusChanged_Params HandlePlayerLoginStatusChanged_Params;
	memcpy_s(&HandlePlayerLoginStatusChanged_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnHandlePlayerLoginStatusChanged, &HandlePlayerLoginStatusChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.OnPrimaryPlayerIdChanged
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlineGameAccount_X::OnPrimaryPlayerIdChanged()
{
	static UFunction* uFnOnPrimaryPlayerIdChanged = nullptr;

	if (!uFnOnPrimaryPlayerIdChanged)
	{
		uFnOnPrimaryPlayerIdChanged = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.OnPrimaryPlayerIdChanged");
	}

	UOnlineGameAccount_X_execOnPrimaryPlayerIdChanged_Params OnPrimaryPlayerIdChanged_Params;

	this->ProcessEvent(uFnOnPrimaryPlayerIdChanged, &OnPrimaryPlayerIdChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.SetPrimaryPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlineGameAccount_X::SetPrimaryPlayer(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnSetPrimaryPlayer = nullptr;

	if (!uFnSetPrimaryPlayer)
	{
		uFnSetPrimaryPlayer = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.SetPrimaryPlayer");
	}

	UOnlineGameAccount_X_execSetPrimaryPlayer_Params SetPrimaryPlayer_Params;
	memcpy_s(&SetPrimaryPlayer_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnSetPrimaryPlayer, &SetPrimaryPlayer_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameAccount_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.OnInit");
	}

	UOnlineGameAccount_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.EventCurrentPlaylistSet
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameAccount_X*    InAccount                      (CPF_Parm)
// class UGameSettingPlaylist_X*  NewPlaylist                    (CPF_Parm)

void UOnlineGameAccount_X::EventCurrentPlaylistSet(class UOnlineGameAccount_X* InAccount, class UGameSettingPlaylist_X* NewPlaylist)
{
	static UFunction* uFnEventCurrentPlaylistSet = nullptr;

	if (!uFnEventCurrentPlaylistSet)
	{
		uFnEventCurrentPlaylistSet = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.EventCurrentPlaylistSet");
	}

	UOnlineGameAccount_X_execEventCurrentPlaylistSet_Params EventCurrentPlaylistSet_Params;
	memcpy_s(&EventCurrentPlaylistSet_Params.InAccount, 0x8, &InAccount, 0x8);
	memcpy_s(&EventCurrentPlaylistSet_Params.NewPlaylist, 0x8, &NewPlaylist, 0x8);

	this->ProcessEvent(uFnEventCurrentPlaylistSet, &EventCurrentPlaylistSet_Params, nullptr);
};

// Function ProjectX.OnlineGameAccount_X.EventPrimaryPlayerIdChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameAccount_X*    InAccount                      (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameAccount_X::EventPrimaryPlayerIdChanged(class UOnlineGameAccount_X* InAccount, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnEventPrimaryPlayerIdChanged = nullptr;

	if (!uFnEventPrimaryPlayerIdChanged)
	{
		uFnEventPrimaryPlayerIdChanged = UFunction::FindFunction("Function ProjectX.OnlineGameAccount_X.EventPrimaryPlayerIdChanged");
	}

	UOnlineGameAccount_X_execEventPrimaryPlayerIdChanged_Params EventPrimaryPlayerIdChanged_Params;
	memcpy_s(&EventPrimaryPlayerIdChanged_Params.InAccount, 0x8, &InAccount, 0x8);
	memcpy_s(&EventPrimaryPlayerIdChanged_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnEventPrimaryPlayerIdChanged, &EventPrimaryPlayerIdChanged_Params, nullptr);
};

// Function ProjectX.PartySequence_InvitedToPlatformParty_X.HandleJoinPlatformLobby
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyUID                       (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_InvitedToPlatformParty_X::HandleJoinPlatformLobby(unsigned long bWasSuccessful, class FString Error, struct FActiveLobbyInfo& LobbyInfo, struct FUniqueLobbyId& LobbyUID)
{
	static UFunction* uFnHandleJoinPlatformLobby = nullptr;

	if (!uFnHandleJoinPlatformLobby)
	{
		uFnHandleJoinPlatformLobby = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPlatformParty_X.HandleJoinPlatformLobby");
	}

	UPartySequence_InvitedToPlatformParty_X_execHandleJoinPlatformLobby_Params HandleJoinPlatformLobby_Params;
	HandleJoinPlatformLobby_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&HandleJoinPlatformLobby_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&HandleJoinPlatformLobby_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&HandleJoinPlatformLobby_Params.LobbyUID, 0x10, &LobbyUID, 0x10);

	this->ProcessEvent(uFnHandleJoinPlatformLobby, &HandleJoinPlatformLobby_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &HandleJoinPlatformLobby_Params.LobbyInfo, 0x30);
	memcpy_s(&LobbyUID, 0x10, &HandleJoinPlatformLobby_Params.LobbyUID, 0x10);
};

// Function ProjectX.PartySequence_InvitedToPlatformParty_X.JoinPlatformPartyCallback
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FUniqueLobbyId          InLobbyId                      (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_InvitedToPlatformParty_X::JoinPlatformPartyCallback(int32_t LocalPlayerNum, struct FUniqueLobbyId& InLobbyId)
{
	static UFunction* uFnJoinPlatformPartyCallback = nullptr;

	if (!uFnJoinPlatformPartyCallback)
	{
		uFnJoinPlatformPartyCallback = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPlatformParty_X.JoinPlatformPartyCallback");
	}

	UPartySequence_InvitedToPlatformParty_X_execJoinPlatformPartyCallback_Params JoinPlatformPartyCallback_Params;
	memcpy_s(&JoinPlatformPartyCallback_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&JoinPlatformPartyCallback_Params.InLobbyId, 0x10, &InLobbyId, 0x10);

	this->ProcessEvent(uFnJoinPlatformPartyCallback, &JoinPlatformPartyCallback_Params, nullptr);

	memcpy_s(&InLobbyId, 0x10, &JoinPlatformPartyCallback_Params.InLobbyId, 0x10);
};

// Function ProjectX.PartySequence_InvitedToPlatformParty_X.HandlePlayerInvited
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bAccepted                      (CPF_Parm)
// struct FUniqueLobbyId          InLobbyId                      (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            FriendId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPartySequence_InvitedToPlatformParty_X::HandlePlayerInvited(unsigned long bAccepted, struct FUniqueLobbyId& InLobbyId, struct FUniqueNetId& FriendId)
{
	static UFunction* uFnHandlePlayerInvited = nullptr;

	if (!uFnHandlePlayerInvited)
	{
		uFnHandlePlayerInvited = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPlatformParty_X.HandlePlayerInvited");
	}

	UPartySequence_InvitedToPlatformParty_X_execHandlePlayerInvited_Params HandlePlayerInvited_Params;
	HandlePlayerInvited_Params.bAccepted = bAccepted;
	memcpy_s(&HandlePlayerInvited_Params.InLobbyId, 0x10, &InLobbyId, 0x10);
	memcpy_s(&HandlePlayerInvited_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnHandlePlayerInvited, &HandlePlayerInvited_Params, nullptr);

	memcpy_s(&InLobbyId, 0x10, &HandlePlayerInvited_Params.InLobbyId, 0x10);
	memcpy_s(&FriendId, 0x48, &HandlePlayerInvited_Params.FriendId, 0x48);
};

// Function ProjectX.PartySequence_InvitedToPlatformParty_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPartySequence_InvitedToPlatformParty_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPlatformParty_X.Init");
	}

	UPartySequence_InvitedToPlatformParty_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.Parties_X.__Parties_X__CreateLobby_0x1
// [0x40840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UParties_X::__Parties_X__CreateLobby_0x1(class UError* Error)
{
	static UFunction* uFn__Parties_X__CreateLobby_0x1 = nullptr;

	if (!uFn__Parties_X__CreateLobby_0x1)
	{
		uFn__Parties_X__CreateLobby_0x1 = UFunction::FindFunction("Function ProjectX.Parties_X.__Parties_X__CreateLobby_0x1");
	}

	UParties_X_exec__Parties_X__CreateLobby_0x1_Params __Parties_X__CreateLobby_0x1_Params;
	memcpy_s(&__Parties_X__CreateLobby_0x1_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__Parties_X__CreateLobby_0x1, &__Parties_X__CreateLobby_0x1_Params, nullptr);
};

// Function ProjectX.Parties_X.__Parties_X__HandlePsyNetPartyJoined_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FPsyNetPartyMember      Member                         (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::__Parties_X__HandlePsyNetPartyJoined_0x1(struct FPsyNetPartyMember Member)
{
	static UFunction* uFn__Parties_X__HandlePsyNetPartyJoined_0x1 = nullptr;

	if (!uFn__Parties_X__HandlePsyNetPartyJoined_0x1)
	{
		uFn__Parties_X__HandlePsyNetPartyJoined_0x1 = UFunction::FindFunction("Function ProjectX.Parties_X.__Parties_X__HandlePsyNetPartyJoined_0x1");
	}

	UParties_X_exec__Parties_X__HandlePsyNetPartyJoined_0x1_Params __Parties_X__HandlePsyNetPartyJoined_0x1_Params;
	memcpy_s(&__Parties_X__HandlePsyNetPartyJoined_0x1_Params.Member, 0x80, &Member, 0x80);

	this->ProcessEvent(uFn__Parties_X__HandlePsyNetPartyJoined_0x1, &__Parties_X__HandlePsyNetPartyJoined_0x1_Params, nullptr);
};

// Function ProjectX.Parties_X.__Parties_X__SetLobbyOwner_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyChangeOwner_X* RPC                            (CPF_Parm)

void UParties_X::__Parties_X__SetLobbyOwner_0x1(class URPC_PartyChangeOwner_X* RPC)
{
	static UFunction* uFn__Parties_X__SetLobbyOwner_0x1 = nullptr;

	if (!uFn__Parties_X__SetLobbyOwner_0x1)
	{
		uFn__Parties_X__SetLobbyOwner_0x1 = UFunction::FindFunction("Function ProjectX.Parties_X.__Parties_X__SetLobbyOwner_0x1");
	}

	UParties_X_exec__Parties_X__SetLobbyOwner_0x1_Params __Parties_X__SetLobbyOwner_0x1_Params;
	memcpy_s(&__Parties_X__SetLobbyOwner_0x1_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__Parties_X__SetLobbyOwner_0x1, &__Parties_X__SetLobbyOwner_0x1_Params, nullptr);
};

// Function ProjectX.Parties_X.HandlePsyNetPartyInviteAccepted
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  PartyID                        (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::HandlePsyNetPartyInviteAccepted(class FString PartyID)
{
	static UFunction* uFnHandlePsyNetPartyInviteAccepted = nullptr;

	if (!uFnHandlePsyNetPartyInviteAccepted)
	{
		uFnHandlePsyNetPartyInviteAccepted = UFunction::FindFunction("Function ProjectX.Parties_X.HandlePsyNetPartyInviteAccepted");
	}

	UParties_X_execHandlePsyNetPartyInviteAccepted_Params HandlePsyNetPartyInviteAccepted_Params;
	memcpy_s(&HandlePsyNetPartyInviteAccepted_Params.PartyID, 0x10, &PartyID, 0x10);

	this->ProcessEvent(uFnHandlePsyNetPartyInviteAccepted, &HandlePsyNetPartyInviteAccepted_Params, nullptr);
};

// Function ProjectX.Parties_X.GetPsyNetPartyID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UParties_X::GetPsyNetPartyID()
{
	static UFunction* uFnGetPsyNetPartyID = nullptr;

	if (!uFnGetPsyNetPartyID)
	{
		uFnGetPsyNetPartyID = UFunction::FindFunction("Function ProjectX.Parties_X.GetPsyNetPartyID");
	}

	UParties_X_execGetPsyNetPartyID_Params GetPsyNetPartyID_Params;

	this->ProcessEvent(uFnGetPsyNetPartyID, &GetPsyNetPartyID_Params, nullptr);

	return GetPsyNetPartyID_Params.ReturnValue;
};

// Function ProjectX.Parties_X.FindPartyLeaderID
// [0x00C80003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// TArray<struct FPsyNetPartyMember> Members                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FUniqueNetId UParties_X::FindPartyLeaderID(TArray<struct FPsyNetPartyMember>& Members)
{
	static UFunction* uFnFindPartyLeaderID = nullptr;

	if (!uFnFindPartyLeaderID)
	{
		uFnFindPartyLeaderID = UFunction::FindFunction("Function ProjectX.Parties_X.FindPartyLeaderID");
	}

	UParties_X_execFindPartyLeaderID_Params FindPartyLeaderID_Params;
	memcpy_s(&FindPartyLeaderID_Params.Members, 0x10, &Members, 0x10);

	this->ProcessEvent(uFnFindPartyLeaderID, &FindPartyLeaderID_Params, nullptr);

	memcpy_s(&Members, 0x10, &FindPartyLeaderID_Params.Members, 0x10);

	return FindPartyLeaderID_Params.ReturnValue;
};

// Function ProjectX.Parties_X.HandleOwnerChanged
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_PartyOwnerChanged_X* Notification                   (CPF_Parm)

void UParties_X::HandleOwnerChanged(class UPsyNetService_PartyOwnerChanged_X* Notification)
{
	static UFunction* uFnHandleOwnerChanged = nullptr;

	if (!uFnHandleOwnerChanged)
	{
		uFnHandleOwnerChanged = UFunction::FindFunction("Function ProjectX.Parties_X.HandleOwnerChanged");
	}

	UParties_X_execHandleOwnerChanged_Params HandleOwnerChanged_Params;
	memcpy_s(&HandleOwnerChanged_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleOwnerChanged, &HandleOwnerChanged_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleChatNotification
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_PartyChat_X* Notifications                  (CPF_Parm)

void UParties_X::HandleChatNotification(class UPsyNetService_PartyChat_X* Notifications)
{
	static UFunction* uFnHandleChatNotification = nullptr;

	if (!uFnHandleChatNotification)
	{
		uFnHandleChatNotification = UFunction::FindFunction("Function ProjectX.Parties_X.HandleChatNotification");
	}

	UParties_X_execHandleChatNotification_Params HandleChatNotification_Params;
	memcpy_s(&HandleChatNotification_Params.Notifications, 0x8, &Notifications, 0x8);

	this->ProcessEvent(uFnHandleChatNotification, &HandleChatNotification_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleSystemNotification
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_PartySystem_X* Notifications                  (CPF_Parm)

void UParties_X::HandleSystemNotification(class UPsyNetService_PartySystem_X* Notifications)
{
	static UFunction* uFnHandleSystemNotification = nullptr;

	if (!uFnHandleSystemNotification)
	{
		uFnHandleSystemNotification = UFunction::FindFunction("Function ProjectX.Parties_X.HandleSystemNotification");
	}

	UParties_X_execHandleSystemNotification_Params HandleSystemNotification_Params;
	memcpy_s(&HandleSystemNotification_Params.Notifications, 0x8, &Notifications, 0x8);

	this->ProcessEvent(uFnHandleSystemNotification, &HandleSystemNotification_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleUserKicked
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_PartyUserKicked_X* Notification                   (CPF_Parm)

void UParties_X::HandleUserKicked(class UPsyNetService_PartyUserKicked_X* Notification)
{
	static UFunction* uFnHandleUserKicked = nullptr;

	if (!uFnHandleUserKicked)
	{
		uFnHandleUserKicked = UFunction::FindFunction("Function ProjectX.Parties_X.HandleUserKicked");
	}

	UParties_X_execHandleUserKicked_Params HandleUserKicked_Params;
	memcpy_s(&HandleUserKicked_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleUserKicked, &HandleUserKicked_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleUserDisconnected
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_PartyUserDisconnected_X* Notification                   (CPF_Parm)

void UParties_X::HandleUserDisconnected(class UPsyNetService_PartyUserDisconnected_X* Notification)
{
	static UFunction* uFnHandleUserDisconnected = nullptr;

	if (!uFnHandleUserDisconnected)
	{
		uFnHandleUserDisconnected = UFunction::FindFunction("Function ProjectX.Parties_X.HandleUserDisconnected");
	}

	UParties_X_execHandleUserDisconnected_Params HandleUserDisconnected_Params;
	memcpy_s(&HandleUserDisconnected_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleUserDisconnected, &HandleUserDisconnected_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleUserLeft
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_PartyUserLeft_X* Notification                   (CPF_Parm)

void UParties_X::HandleUserLeft(class UPsyNetService_PartyUserLeft_X* Notification)
{
	static UFunction* uFnHandleUserLeft = nullptr;

	if (!uFnHandleUserLeft)
	{
		uFnHandleUserLeft = UFunction::FindFunction("Function ProjectX.Parties_X.HandleUserLeft");
	}

	UParties_X_execHandleUserLeft_Params HandleUserLeft_Params;
	memcpy_s(&HandleUserLeft_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleUserLeft, &HandleUserLeft_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleUserJoined
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_PartyUserJoined_X* Notification                   (CPF_Parm)

void UParties_X::HandleUserJoined(class UPsyNetService_PartyUserJoined_X* Notification)
{
	static UFunction* uFnHandleUserJoined = nullptr;

	if (!uFnHandleUserJoined)
	{
		uFnHandleUserJoined = UFunction::FindFunction("Function ProjectX.Parties_X.HandleUserJoined");
	}

	UParties_X_execHandleUserJoined_Params HandleUserJoined_Params;
	memcpy_s(&HandleUserJoined_Params.Notification, 0x8, &Notification, 0x8);

	this->ProcessEvent(uFnHandleUserJoined, &HandleUserJoined_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleMemberStatusUpdate
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            MemberUID                      (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Status                         (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::HandleMemberStatusUpdate(struct FUniqueNetId MemberUID, class FString Status)
{
	static UFunction* uFnHandleMemberStatusUpdate = nullptr;

	if (!uFnHandleMemberStatusUpdate)
	{
		uFnHandleMemberStatusUpdate = UFunction::FindFunction("Function ProjectX.Parties_X.HandleMemberStatusUpdate");
	}

	UParties_X_execHandleMemberStatusUpdate_Params HandleMemberStatusUpdate_Params;
	memcpy_s(&HandleMemberStatusUpdate_Params.MemberUID, 0x48, &MemberUID, 0x48);
	memcpy_s(&HandleMemberStatusUpdate_Params.Status, 0x10, &Status, 0x10);

	this->ProcessEvent(uFnHandleMemberStatusUpdate, &HandleMemberStatusUpdate_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleUserInvitedResponse
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          LobbyId                        (CPF_Parm)
// struct FUniqueNetId            ForUserId                      (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bAccepted                      (CPF_Parm)

void UParties_X::HandleUserInvitedResponse(struct FUniqueLobbyId LobbyId, struct FUniqueNetId ForUserId, unsigned long bAccepted)
{
	static UFunction* uFnHandleUserInvitedResponse = nullptr;

	if (!uFnHandleUserInvitedResponse)
	{
		uFnHandleUserInvitedResponse = UFunction::FindFunction("Function ProjectX.Parties_X.HandleUserInvitedResponse");
	}

	UParties_X_execHandleUserInvitedResponse_Params HandleUserInvitedResponse_Params;
	memcpy_s(&HandleUserInvitedResponse_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&HandleUserInvitedResponse_Params.ForUserId, 0x48, &ForUserId, 0x48);
	HandleUserInvitedResponse_Params.bAccepted = bAccepted;

	this->ProcessEvent(uFnHandleUserInvitedResponse, &HandleUserInvitedResponse_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleUserInvited
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UPsyNetService_PartyUserInvited_X* Notifications                  (CPF_Parm)

void UParties_X::HandleUserInvited(class UPsyNetService_PartyUserInvited_X* Notifications)
{
	static UFunction* uFnHandleUserInvited = nullptr;

	if (!uFnHandleUserInvited)
	{
		uFnHandleUserInvited = UFunction::FindFunction("Function ProjectX.Parties_X.HandleUserInvited");
	}

	UParties_X_execHandleUserInvited_Params HandleUserInvited_Params;
	memcpy_s(&HandleUserInvited_Params.Notifications, 0x8, &Notifications, 0x8);

	this->ProcessEvent(uFnHandleUserInvited, &HandleUserInvited_Params, nullptr);
};

// Function ProjectX.Parties_X.SetRejoiningParty
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bRejoining                     (CPF_Parm)

void UParties_X::SetRejoiningParty(unsigned long bRejoining)
{
	static UFunction* uFnSetRejoiningParty = nullptr;

	if (!uFnSetRejoiningParty)
	{
		uFnSetRejoiningParty = UFunction::FindFunction("Function ProjectX.Parties_X.SetRejoiningParty");
	}

	UParties_X_execSetRejoiningParty_Params SetRejoiningParty_Params;
	SetRejoiningParty_Params.bRejoining = bRejoining;

	this->ProcessEvent(uFnSetRejoiningParty, &SetRejoiningParty_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleChannelClosed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetChannel_X*        InChannel                      (CPF_Parm)

void UParties_X::HandleChannelClosed(class UPsyNetChannel_X* InChannel)
{
	static UFunction* uFnHandleChannelClosed = nullptr;

	if (!uFnHandleChannelClosed)
	{
		uFnHandleChannelClosed = UFunction::FindFunction("Function ProjectX.Parties_X.HandleChannelClosed");
	}

	UParties_X_execHandleChannelClosed_Params HandleChannelClosed_Params;
	memcpy_s(&HandleChannelClosed_Params.InChannel, 0x8, &InChannel, 0x8);

	this->ProcessEvent(uFnHandleChannelClosed, &HandleChannelClosed_Params, nullptr);
};

// Function ProjectX.Parties_X.CreatePsyNetChannel
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetChannel_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          PsyNetPartyId                  (CPF_Parm)

class UPsyNetChannel_X* UParties_X::CreatePsyNetChannel(struct FUniqueLobbyId PsyNetPartyId)
{
	static UFunction* uFnCreatePsyNetChannel = nullptr;

	if (!uFnCreatePsyNetChannel)
	{
		uFnCreatePsyNetChannel = UFunction::FindFunction("Function ProjectX.Parties_X.CreatePsyNetChannel");
	}

	UParties_X_execCreatePsyNetChannel_Params CreatePsyNetChannel_Params;
	memcpy_s(&CreatePsyNetChannel_Params.PsyNetPartyId, 0x10, &PsyNetPartyId, 0x10);

	this->ProcessEvent(uFnCreatePsyNetChannel, &CreatePsyNetChannel_Params, nullptr);

	return CreatePsyNetChannel_Params.ReturnValue;
};

// Function ProjectX.Parties_X.SetPsyNetSubscriptions
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetServiceSubscriptions_X* InSubscriptions                (CPF_Parm | CPF_EditInline)

void UParties_X::SetPsyNetSubscriptions(class UPsyNetServiceSubscriptions_X* InSubscriptions)
{
	static UFunction* uFnSetPsyNetSubscriptions = nullptr;

	if (!uFnSetPsyNetSubscriptions)
	{
		uFnSetPsyNetSubscriptions = UFunction::FindFunction("Function ProjectX.Parties_X.SetPsyNetSubscriptions");
	}

	UParties_X_execSetPsyNetSubscriptions_Params SetPsyNetSubscriptions_Params;
	memcpy_s(&SetPsyNetSubscriptions_Params.InSubscriptions, 0x8, &InSubscriptions, 0x8);

	this->ProcessEvent(uFnSetPsyNetSubscriptions, &SetPsyNetSubscriptions_Params, nullptr);
};

// Function ProjectX.Parties_X.SetPsyNetChannel
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetChannel_X*        InChannel                      (CPF_Parm)

void UParties_X::SetPsyNetChannel(class UPsyNetChannel_X* InChannel)
{
	static UFunction* uFnSetPsyNetChannel = nullptr;

	if (!uFnSetPsyNetChannel)
	{
		uFnSetPsyNetChannel = UFunction::FindFunction("Function ProjectX.Parties_X.SetPsyNetChannel");
	}

	UParties_X_execSetPsyNetChannel_Params SetPsyNetChannel_Params;
	memcpy_s(&SetPsyNetChannel_Params.InChannel, 0x8, &InChannel, 0x8);

	this->ProcessEvent(uFnSetPsyNetChannel, &SetPsyNetChannel_Params, nullptr);
};

// Function ProjectX.Parties_X.TimeoutPerconReconnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UParties_X::TimeoutPerconReconnect()
{
	static UFunction* uFnTimeoutPerconReconnect = nullptr;

	if (!uFnTimeoutPerconReconnect)
	{
		uFnTimeoutPerconReconnect = UFunction::FindFunction("Function ProjectX.Parties_X.TimeoutPerconReconnect");
	}

	UParties_X_execTimeoutPerconReconnect_Params TimeoutPerconReconnect_Params;

	this->ProcessEvent(uFnTimeoutPerconReconnect, &TimeoutPerconReconnect_Params, nullptr);
};

// Function ProjectX.Parties_X.SetPsyNetConnection
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     InConnection                   (CPF_Parm)

void UParties_X::SetPsyNetConnection(class UPsyNetConnection_X* InConnection)
{
	static UFunction* uFnSetPsyNetConnection = nullptr;

	if (!uFnSetPsyNetConnection)
	{
		uFnSetPsyNetConnection = UFunction::FindFunction("Function ProjectX.Parties_X.SetPsyNetConnection");
	}

	UParties_X_execSetPsyNetConnection_Params SetPsyNetConnection_Params;
	memcpy_s(&SetPsyNetConnection_Params.InConnection, 0x8, &InConnection, 0x8);

	this->ProcessEvent(uFnSetPsyNetConnection, &SetPsyNetConnection_Params, nullptr);
};

// Function ProjectX.Parties_X.ClearLobbyData
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UParties_X::ClearLobbyData()
{
	static UFunction* uFnClearLobbyData = nullptr;

	if (!uFnClearLobbyData)
	{
		uFnClearLobbyData = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyData");
	}

	UParties_X_execClearLobbyData_Params ClearLobbyData_Params;

	this->ProcessEvent(uFnClearLobbyData, &ClearLobbyData_Params, nullptr);
};

// Function ProjectX.Parties_X.DestroyLobby
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        Reason                         (CPF_Parm)

void UParties_X::DestroyLobby(uint8_t Reason)
{
	static UFunction* uFnDestroyLobby = nullptr;

	if (!uFnDestroyLobby)
	{
		uFnDestroyLobby = UFunction::FindFunction("Function ProjectX.Parties_X.DestroyLobby");
	}

	UParties_X_execDestroyLobby_Params DestroyLobby_Params;
	memcpy_s(&DestroyLobby_Params.Reason, 0x1, &Reason, 0x1);

	this->ProcessEvent(uFnDestroyLobby, &DestroyLobby_Params, nullptr);
};

// Function ProjectX.Parties_X.HandlePerConDisconnected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UParties_X::HandlePerConDisconnected(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnHandlePerConDisconnected = nullptr;

	if (!uFnHandlePerConDisconnected)
	{
		uFnHandlePerConDisconnected = UFunction::FindFunction("Function ProjectX.Parties_X.HandlePerConDisconnected");
	}

	UParties_X_execHandlePerConDisconnected_Params HandlePerConDisconnected_Params;
	memcpy_s(&HandlePerConDisconnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnHandlePerConDisconnected, &HandlePerConDisconnected_Params, nullptr);
};

// Function ProjectX.Parties_X.HandlePerConConnected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UParties_X::HandlePerConConnected(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnHandlePerConConnected = nullptr;

	if (!uFnHandlePerConConnected)
	{
		uFnHandlePerConConnected = UFunction::FindFunction("Function ProjectX.Parties_X.HandlePerConConnected");
	}

	UParties_X_execHandlePerConConnected_Params HandlePerConConnected_Params;
	memcpy_s(&HandlePerConConnected_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnHandlePerConConnected, &HandlePerConConnected_Params, nullptr);
};

// Function ProjectX.Parties_X.HandlePartyInfoFail
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void UParties_X::HandlePartyInfoFail(class URPC_X* RPC)
{
	static UFunction* uFnHandlePartyInfoFail = nullptr;

	if (!uFnHandlePartyInfoFail)
	{
		uFnHandlePartyInfoFail = UFunction::FindFunction("Function ProjectX.Parties_X.HandlePartyInfoFail");
	}

	UParties_X_execHandlePartyInfoFail_Params HandlePartyInfoFail_Params;
	memcpy_s(&HandlePartyInfoFail_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandlePartyInfoFail, &HandlePartyInfoFail_Params, nullptr);
};

// Function ProjectX.Parties_X.HandlePartyInfoSuccess
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyInfo_X*        RPC_PartyInfo                  (CPF_Parm)

void UParties_X::HandlePartyInfoSuccess(class URPC_PartyInfo_X* RPC_PartyInfo)
{
	static UFunction* uFnHandlePartyInfoSuccess = nullptr;

	if (!uFnHandlePartyInfoSuccess)
	{
		uFnHandlePartyInfoSuccess = UFunction::FindFunction("Function ProjectX.Parties_X.HandlePartyInfoSuccess");
	}

	UParties_X_execHandlePartyInfoSuccess_Params HandlePartyInfoSuccess_Params;
	memcpy_s(&HandlePartyInfoSuccess_Params.RPC_PartyInfo, 0x8, &RPC_PartyInfo, 0x8);

	this->ProcessEvent(uFnHandlePartyInfoSuccess, &HandlePartyInfoSuccess_Params, nullptr);
};

// Function ProjectX.Parties_X.GetPartyInfo
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UParties_X::GetPartyInfo()
{
	static UFunction* uFnGetPartyInfo = nullptr;

	if (!uFnGetPartyInfo)
	{
		uFnGetPartyInfo = UFunction::FindFunction("Function ProjectX.Parties_X.GetPartyInfo");
	}

	UParties_X_execGetPartyInfo_Params GetPartyInfo_Params;

	this->ProcessEvent(uFnGetPartyInfo, &GetPartyInfo_Params, nullptr);
};

// Function ProjectX.Parties_X.GetPrimaryPlayer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UOnlinePlayer_X* UParties_X::GetPrimaryPlayer()
{
	static UFunction* uFnGetPrimaryPlayer = nullptr;

	if (!uFnGetPrimaryPlayer)
	{
		uFnGetPrimaryPlayer = UFunction::FindFunction("Function ProjectX.Parties_X.GetPrimaryPlayer");
	}

	UParties_X_execGetPrimaryPlayer_Params GetPrimaryPlayer_Params;

	this->ProcessEvent(uFnGetPrimaryPlayer, &GetPrimaryPlayer_Params, nullptr);

	return GetPrimaryPlayer_Params.ReturnValue;
};

// Function ProjectX.Parties_X.IsInLobby
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UParties_X::IsInLobby()
{
	static UFunction* uFnIsInLobby = nullptr;

	if (!uFnIsInLobby)
	{
		uFnIsInLobby = UFunction::FindFunction("Function ProjectX.Parties_X.IsInLobby");
	}

	UParties_X_execIsInLobby_Params IsInLobby_Params;

	this->ProcessEvent(uFnIsInLobby, &IsInLobby_Params, nullptr);

	return IsInLobby_Params.ReturnValue;
};

// Function ProjectX.Parties_X.CreatePsyNetPartyID
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  S                              (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueLobbyId UParties_X::CreatePsyNetPartyID(class FString S)
{
	static UFunction* uFnCreatePsyNetPartyID = nullptr;

	if (!uFnCreatePsyNetPartyID)
	{
		uFnCreatePsyNetPartyID = UFunction::FindFunction("Function ProjectX.Parties_X.CreatePsyNetPartyID");
	}

	UParties_X_execCreatePsyNetPartyID_Params CreatePsyNetPartyID_Params;
	memcpy_s(&CreatePsyNetPartyID_Params.S, 0x10, &S, 0x10);

	UParties_X::StaticClass()->ProcessEvent(uFnCreatePsyNetPartyID, &CreatePsyNetPartyID_Params, nullptr);

	return CreatePsyNetPartyID_Params.ReturnValue;
};

// Function ProjectX.Parties_X.ClearHostStartPlayTogetherDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         InDelegate                     (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearHostStartPlayTogetherDelegate(struct FScriptDelegate InDelegate)
{
	static UFunction* uFnClearHostStartPlayTogetherDelegate = nullptr;

	if (!uFnClearHostStartPlayTogetherDelegate)
	{
		uFnClearHostStartPlayTogetherDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearHostStartPlayTogetherDelegate");
	}

	UParties_X_execClearHostStartPlayTogetherDelegate_Params ClearHostStartPlayTogetherDelegate_Params;
	memcpy_s(&ClearHostStartPlayTogetherDelegate_Params.InDelegate, 0x18, &InDelegate, 0x18);

	this->ProcessEvent(uFnClearHostStartPlayTogetherDelegate, &ClearHostStartPlayTogetherDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddHostStartPlayTogetherDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         InDelegate                     (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddHostStartPlayTogetherDelegate(struct FScriptDelegate InDelegate)
{
	static UFunction* uFnAddHostStartPlayTogetherDelegate = nullptr;

	if (!uFnAddHostStartPlayTogetherDelegate)
	{
		uFnAddHostStartPlayTogetherDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddHostStartPlayTogetherDelegate");
	}

	UParties_X_execAddHostStartPlayTogetherDelegate_Params AddHostStartPlayTogetherDelegate_Params;
	memcpy_s(&AddHostStartPlayTogetherDelegate_Params.InDelegate, 0x18, &InDelegate, 0x18);

	this->ProcessEvent(uFnAddHostStartPlayTogetherDelegate, &AddHostStartPlayTogetherDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnHostStartPlayTogether
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)

void UParties_X::OnHostStartPlayTogether(uint8_t LocalUserNum)
{
	static UFunction* uFnOnHostStartPlayTogether = nullptr;

	if (!uFnOnHostStartPlayTogether)
	{
		uFnOnHostStartPlayTogether = UFunction::FindFunction("Function ProjectX.Parties_X.OnHostStartPlayTogether");
	}

	UParties_X_execOnHostStartPlayTogether_Params OnHostStartPlayTogether_Params;
	memcpy_s(&OnHostStartPlayTogether_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);

	this->ProcessEvent(uFnOnHostStartPlayTogether, &OnHostStartPlayTogether_Params, nullptr);
};

// Function ProjectX.Parties_X.FindMemberId
// [0x00420001] (FUNC_Final | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FLobbyMember            MemberData                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t UParties_X::FindMemberId(struct FLobbyMember& MemberData)
{
	static UFunction* uFnFindMemberId = nullptr;

	if (!uFnFindMemberId)
	{
		uFnFindMemberId = UFunction::FindFunction("Function ProjectX.Parties_X.FindMemberId");
	}

	UParties_X_execFindMemberId_Params FindMemberId_Params;
	memcpy_s(&FindMemberId_Params.MemberData, 0x68, &MemberData, 0x68);

	this->ProcessEvent(uFnFindMemberId, &FindMemberId_Params, nullptr);

	memcpy_s(&MemberData, 0x68, &FindMemberId_Params.MemberData, 0x68);

	return FindMemberId_Params.ReturnValue;
};

// Function ProjectX.Parties_X.PlayerIdToMemberId
// [0x00424001] (FUNC_Final | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// int32_t                        MemberIndex                    (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

int32_t UParties_X::PlayerIdToMemberId(struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& PlayerID, int32_t& MemberIndex)
{
	static UFunction* uFnPlayerIdToMemberId = nullptr;

	if (!uFnPlayerIdToMemberId)
	{
		uFnPlayerIdToMemberId = UFunction::FindFunction("Function ProjectX.Parties_X.PlayerIdToMemberId");
	}

	UParties_X_execPlayerIdToMemberId_Params PlayerIdToMemberId_Params;
	memcpy_s(&PlayerIdToMemberId_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&PlayerIdToMemberId_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&PlayerIdToMemberId_Params.MemberIndex, 0x4, &MemberIndex, 0x4);

	this->ProcessEvent(uFnPlayerIdToMemberId, &PlayerIdToMemberId_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &PlayerIdToMemberId_Params.LobbyId, 0x10);
	memcpy_s(&PlayerID, 0x48, &PlayerIdToMemberId_Params.PlayerID, 0x48);
	memcpy_s(&MemberIndex, 0x4, &PlayerIdToMemberId_Params.MemberIndex, 0x4);

	return PlayerIdToMemberId_Params.ReturnValue;
};

// Function ProjectX.Parties_X.MemberIdToPlayerId
// [0x00424001] (FUNC_Final | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// int32_t                        MemberId                       (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// int32_t                        MemberIndex                    (CPF_OptionalParm | CPF_Parm | CPF_OutParm)

struct FUniqueNetId UParties_X::MemberIdToPlayerId(int32_t MemberId, struct FUniqueLobbyId& LobbyId, int32_t& MemberIndex)
{
	static UFunction* uFnMemberIdToPlayerId = nullptr;

	if (!uFnMemberIdToPlayerId)
	{
		uFnMemberIdToPlayerId = UFunction::FindFunction("Function ProjectX.Parties_X.MemberIdToPlayerId");
	}

	UParties_X_execMemberIdToPlayerId_Params MemberIdToPlayerId_Params;
	memcpy_s(&MemberIdToPlayerId_Params.MemberId, 0x4, &MemberId, 0x4);
	memcpy_s(&MemberIdToPlayerId_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&MemberIdToPlayerId_Params.MemberIndex, 0x4, &MemberIndex, 0x4);

	this->ProcessEvent(uFnMemberIdToPlayerId, &MemberIdToPlayerId_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &MemberIdToPlayerId_Params.LobbyId, 0x10);
	memcpy_s(&MemberIndex, 0x4, &MemberIdToPlayerId_Params.MemberIndex, 0x4);

	return MemberIdToPlayerId_Params.ReturnValue;
};

// Function ProjectX.Parties_X.KickPlayer
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Reason                         (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::KickPlayer(uint8_t Reason, struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnKickPlayer = nullptr;

	if (!uFnKickPlayer)
	{
		uFnKickPlayer = UFunction::FindFunction("Function ProjectX.Parties_X.KickPlayer");
	}

	UParties_X_execKickPlayer_Params KickPlayer_Params;
	memcpy_s(&KickPlayer_Params.Reason, 0x1, &Reason, 0x1);
	memcpy_s(&KickPlayer_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&KickPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnKickPlayer, &KickPlayer_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &KickPlayer_Params.LobbyId, 0x10);
	memcpy_s(&PlayerID, 0x48, &KickPlayer_Params.PlayerID, 0x48);

	return KickPlayer_Params.ReturnValue;
};

// Function ProjectX.Parties_X.ShowInviteUI
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        LocalUserNum                   (CPF_Const | CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::ShowInviteUI(uint8_t LocalUserNum, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnShowInviteUI = nullptr;

	if (!uFnShowInviteUI)
	{
		uFnShowInviteUI = UFunction::FindFunction("Function ProjectX.Parties_X.ShowInviteUI");
	}

	UParties_X_execShowInviteUI_Params ShowInviteUI_Params;
	memcpy_s(&ShowInviteUI_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&ShowInviteUI_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnShowInviteUI, &ShowInviteUI_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &ShowInviteUI_Params.LobbyId, 0x10);

	return ShowInviteUI_Params.ReturnValue;
};

// Function ProjectX.Parties_X.InviteToPsyNetLobbyExclusively
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::InviteToPsyNetLobbyExclusively(struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnInviteToPsyNetLobbyExclusively = nullptr;

	if (!uFnInviteToPsyNetLobbyExclusively)
	{
		uFnInviteToPsyNetLobbyExclusively = UFunction::FindFunction("Function ProjectX.Parties_X.InviteToPsyNetLobbyExclusively");
	}

	UParties_X_execInviteToPsyNetLobbyExclusively_Params InviteToPsyNetLobbyExclusively_Params;
	memcpy_s(&InviteToPsyNetLobbyExclusively_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&InviteToPsyNetLobbyExclusively_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnInviteToPsyNetLobbyExclusively, &InviteToPsyNetLobbyExclusively_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &InviteToPsyNetLobbyExclusively_Params.LobbyId, 0x10);
	memcpy_s(&PlayerID, 0x48, &InviteToPsyNetLobbyExclusively_Params.PlayerID, 0x48);

	return InviteToPsyNetLobbyExclusively_Params.ReturnValue;
};

// Function ProjectX.Parties_X.InviteToLobby
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::InviteToLobby(struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnInviteToLobby = nullptr;

	if (!uFnInviteToLobby)
	{
		uFnInviteToLobby = UFunction::FindFunction("Function ProjectX.Parties_X.InviteToLobby");
	}

	UParties_X_execInviteToLobby_Params InviteToLobby_Params;
	memcpy_s(&InviteToLobby_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&InviteToLobby_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnInviteToLobby, &InviteToLobby_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &InviteToLobby_Params.LobbyId, 0x10);
	memcpy_s(&PlayerID, 0x48, &InviteToLobby_Params.PlayerID, 0x48);

	return InviteToLobby_Params.ReturnValue;
};

// Function ProjectX.Parties_X.CanInviteToLobby
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::CanInviteToLobby(struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnCanInviteToLobby = nullptr;

	if (!uFnCanInviteToLobby)
	{
		uFnCanInviteToLobby = UFunction::FindFunction("Function ProjectX.Parties_X.CanInviteToLobby");
	}

	UParties_X_execCanInviteToLobby_Params CanInviteToLobby_Params;
	memcpy_s(&CanInviteToLobby_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&CanInviteToLobby_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnCanInviteToLobby, &CanInviteToLobby_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &CanInviteToLobby_Params.LobbyId, 0x10);
	memcpy_s(&PlayerID, 0x48, &CanInviteToLobby_Params.PlayerID, 0x48);

	return CanInviteToLobby_Params.ReturnValue;
};

// Function ProjectX.Parties_X.InviteToActiveLobby
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::InviteToActiveLobby(struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnInviteToActiveLobby = nullptr;

	if (!uFnInviteToActiveLobby)
	{
		uFnInviteToActiveLobby = UFunction::FindFunction("Function ProjectX.Parties_X.InviteToActiveLobby");
	}

	UParties_X_execInviteToActiveLobby_Params InviteToActiveLobby_Params;
	memcpy_s(&InviteToActiveLobby_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnInviteToActiveLobby, &InviteToActiveLobby_Params, nullptr);

	memcpy_s(&PlayerID, 0x48, &InviteToActiveLobby_Params.PlayerID, 0x48);

	return InviteToActiveLobby_Params.ReturnValue;
};

// Function ProjectX.Parties_X.SetLobbyOwner
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            NewOwnerId                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::SetLobbyOwner(struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& NewOwnerId)
{
	static UFunction* uFnSetLobbyOwner = nullptr;

	if (!uFnSetLobbyOwner)
	{
		uFnSetLobbyOwner = UFunction::FindFunction("Function ProjectX.Parties_X.SetLobbyOwner");
	}

	UParties_X_execSetLobbyOwner_Params SetLobbyOwner_Params;
	memcpy_s(&SetLobbyOwner_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&SetLobbyOwner_Params.NewOwnerId, 0x48, &NewOwnerId, 0x48);

	this->ProcessEvent(uFnSetLobbyOwner, &SetLobbyOwner_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &SetLobbyOwner_Params.LobbyId, 0x10);
	memcpy_s(&NewOwnerId, 0x48, &SetLobbyOwner_Params.NewOwnerId, 0x48);

	return SetLobbyOwner_Params.ReturnValue;
};

// Function ProjectX.Parties_X.SetLobbyLock
// [0x00420001] (FUNC_Final | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bLocked                        (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::SetLobbyLock(unsigned long bLocked, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnSetLobbyLock = nullptr;

	if (!uFnSetLobbyLock)
	{
		uFnSetLobbyLock = UFunction::FindFunction("Function ProjectX.Parties_X.SetLobbyLock");
	}

	UParties_X_execSetLobbyLock_Params SetLobbyLock_Params;
	SetLobbyLock_Params.bLocked = bLocked;
	memcpy_s(&SetLobbyLock_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnSetLobbyLock, &SetLobbyLock_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &SetLobbyLock_Params.LobbyId, 0x10);

	return SetLobbyLock_Params.ReturnValue;
};

// Function ProjectX.Parties_X.SetLobbyType
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Type                           (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::SetLobbyType(uint8_t Type, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnSetLobbyType = nullptr;

	if (!uFnSetLobbyType)
	{
		uFnSetLobbyType = UFunction::FindFunction("Function ProjectX.Parties_X.SetLobbyType");
	}

	UParties_X_execSetLobbyType_Params SetLobbyType_Params;
	memcpy_s(&SetLobbyType_Params.Type, 0x1, &Type, 0x1);
	memcpy_s(&SetLobbyType_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnSetLobbyType, &SetLobbyType_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &SetLobbyType_Params.LobbyId, 0x10);

	return SetLobbyType_Params.ReturnValue;
};

// Function ProjectX.Parties_X.SetLobbyServer
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ServerIP                       (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            ServerUID                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::SetLobbyServer(class FString ServerIP, struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& ServerUID)
{
	static UFunction* uFnSetLobbyServer = nullptr;

	if (!uFnSetLobbyServer)
	{
		uFnSetLobbyServer = UFunction::FindFunction("Function ProjectX.Parties_X.SetLobbyServer");
	}

	UParties_X_execSetLobbyServer_Params SetLobbyServer_Params;
	memcpy_s(&SetLobbyServer_Params.ServerIP, 0x10, &ServerIP, 0x10);
	memcpy_s(&SetLobbyServer_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&SetLobbyServer_Params.ServerUID, 0x48, &ServerUID, 0x48);

	this->ProcessEvent(uFnSetLobbyServer, &SetLobbyServer_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &SetLobbyServer_Params.LobbyId, 0x10);
	memcpy_s(&ServerUID, 0x48, &SetLobbyServer_Params.ServerUID, 0x48);

	return SetLobbyServer_Params.ReturnValue;
};

// Function ProjectX.Parties_X.RemoveLobbySetting
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::RemoveLobbySetting(class FString Key, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnRemoveLobbySetting = nullptr;

	if (!uFnRemoveLobbySetting)
	{
		uFnRemoveLobbySetting = UFunction::FindFunction("Function ProjectX.Parties_X.RemoveLobbySetting");
	}

	UParties_X_execRemoveLobbySetting_Params RemoveLobbySetting_Params;
	memcpy_s(&RemoveLobbySetting_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&RemoveLobbySetting_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnRemoveLobbySetting, &RemoveLobbySetting_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &RemoveLobbySetting_Params.LobbyId, 0x10);

	return RemoveLobbySetting_Params.ReturnValue;
};

// Function ProjectX.Parties_X.SetLobbySetting
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::SetLobbySetting(class FString Key, class FString Value, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnSetLobbySetting = nullptr;

	if (!uFnSetLobbySetting)
	{
		uFnSetLobbySetting = UFunction::FindFunction("Function ProjectX.Parties_X.SetLobbySetting");
	}

	UParties_X_execSetLobbySetting_Params SetLobbySetting_Params;
	memcpy_s(&SetLobbySetting_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&SetLobbySetting_Params.Value, 0x10, &Value, 0x10);
	memcpy_s(&SetLobbySetting_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnSetLobbySetting, &SetLobbySetting_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &SetLobbySetting_Params.LobbyId, 0x10);

	return SetLobbySetting_Params.ReturnValue;
};

// Function ProjectX.Parties_X.GetLobbyAdmin
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            AdminId                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::GetLobbyAdmin(struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& AdminId)
{
	static UFunction* uFnGetLobbyAdmin = nullptr;

	if (!uFnGetLobbyAdmin)
	{
		uFnGetLobbyAdmin = UFunction::FindFunction("Function ProjectX.Parties_X.GetLobbyAdmin");
	}

	UParties_X_execGetLobbyAdmin_Params GetLobbyAdmin_Params;
	memcpy_s(&GetLobbyAdmin_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&GetLobbyAdmin_Params.AdminId, 0x48, &AdminId, 0x48);

	this->ProcessEvent(uFnGetLobbyAdmin, &GetLobbyAdmin_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &GetLobbyAdmin_Params.LobbyId, 0x10);
	memcpy_s(&AdminId, 0x48, &GetLobbyAdmin_Params.AdminId, 0x48);

	return GetLobbyAdmin_Params.ReturnValue;
};

// Function ProjectX.Parties_X.SendLobbyBinaryData
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// TArray<uint8_t>                Data                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::SendLobbyBinaryData(struct FUniqueLobbyId& LobbyId, TArray<uint8_t>& Data)
{
	static UFunction* uFnSendLobbyBinaryData = nullptr;

	if (!uFnSendLobbyBinaryData)
	{
		uFnSendLobbyBinaryData = UFunction::FindFunction("Function ProjectX.Parties_X.SendLobbyBinaryData");
	}

	UParties_X_execSendLobbyBinaryData_Params SendLobbyBinaryData_Params;
	memcpy_s(&SendLobbyBinaryData_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&SendLobbyBinaryData_Params.Data, 0x10, &Data, 0x10);

	this->ProcessEvent(uFnSendLobbyBinaryData, &SendLobbyBinaryData_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &SendLobbyBinaryData_Params.LobbyId, 0x10);
	memcpy_s(&Data, 0x10, &SendLobbyBinaryData_Params.Data, 0x10);

	return SendLobbyBinaryData_Params.ReturnValue;
};

// Function ProjectX.Parties_X.HandleLobbyMessageFailed
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyChat_X*        RPC                            (CPF_Parm)

void UParties_X::HandleLobbyMessageFailed(class URPC_PartyChat_X* RPC)
{
	static UFunction* uFnHandleLobbyMessageFailed = nullptr;

	if (!uFnHandleLobbyMessageFailed)
	{
		uFnHandleLobbyMessageFailed = UFunction::FindFunction("Function ProjectX.Parties_X.HandleLobbyMessageFailed");
	}

	UParties_X_execHandleLobbyMessageFailed_Params HandleLobbyMessageFailed_Params;
	memcpy_s(&HandleLobbyMessageFailed_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleLobbyMessageFailed, &HandleLobbyMessageFailed_Params, nullptr);
};

// Function ProjectX.Parties_X.SendLobbyMessage
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::SendLobbyMessage(class FString Message, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnSendLobbyMessage = nullptr;

	if (!uFnSendLobbyMessage)
	{
		uFnSendLobbyMessage = UFunction::FindFunction("Function ProjectX.Parties_X.SendLobbyMessage");
	}

	UParties_X_execSendLobbyMessage_Params SendLobbyMessage_Params;
	memcpy_s(&SendLobbyMessage_Params.Message, 0x10, &Message, 0x10);
	memcpy_s(&SendLobbyMessage_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnSendLobbyMessage, &SendLobbyMessage_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &SendLobbyMessage_Params.LobbyId, 0x10);

	return SendLobbyMessage_Params.ReturnValue;
};

// Function ProjectX.Parties_X.SetLobbyUserSetting
// [0x00420001] (FUNC_Final | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::SetLobbyUserSetting(class FString Key, class FString Value, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnSetLobbyUserSetting = nullptr;

	if (!uFnSetLobbyUserSetting)
	{
		uFnSetLobbyUserSetting = UFunction::FindFunction("Function ProjectX.Parties_X.SetLobbyUserSetting");
	}

	UParties_X_execSetLobbyUserSetting_Params SetLobbyUserSetting_Params;
	memcpy_s(&SetLobbyUserSetting_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&SetLobbyUserSetting_Params.Value, 0x10, &Value, 0x10);
	memcpy_s(&SetLobbyUserSetting_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnSetLobbyUserSetting, &SetLobbyUserSetting_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &SetLobbyUserSetting_Params.LobbyId, 0x10);

	return SetLobbyUserSetting_Params.ReturnValue;
};

// Function ProjectX.Parties_X.LeaveLobby
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::LeaveLobby(struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnLeaveLobby = nullptr;

	if (!uFnLeaveLobby)
	{
		uFnLeaveLobby = UFunction::FindFunction("Function ProjectX.Parties_X.LeaveLobby");
	}

	UParties_X_execLeaveLobby_Params LeaveLobby_Params;
	memcpy_s(&LeaveLobby_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnLeaveLobby, &LeaveLobby_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &LeaveLobby_Params.LobbyId, 0x10);

	return LeaveLobby_Params.ReturnValue;
};

// Function ProjectX.Parties_X.RemoveLobbyMember
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerUID                      (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::RemoveLobbyMember(struct FUniqueNetId PlayerUID)
{
	static UFunction* uFnRemoveLobbyMember = nullptr;

	if (!uFnRemoveLobbyMember)
	{
		uFnRemoveLobbyMember = UFunction::FindFunction("Function ProjectX.Parties_X.RemoveLobbyMember");
	}

	UParties_X_execRemoveLobbyMember_Params RemoveLobbyMember_Params;
	memcpy_s(&RemoveLobbyMember_Params.PlayerUID, 0x48, &PlayerUID, 0x48);

	this->ProcessEvent(uFnRemoveLobbyMember, &RemoveLobbyMember_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyMember
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerUID                      (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Username                       (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyMember(struct FUniqueNetId PlayerUID, class FString Username)
{
	static UFunction* uFnAddLobbyMember = nullptr;

	if (!uFnAddLobbyMember)
	{
		uFnAddLobbyMember = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyMember");
	}

	UParties_X_execAddLobbyMember_Params AddLobbyMember_Params;
	memcpy_s(&AddLobbyMember_Params.PlayerUID, 0x48, &PlayerUID, 0x48);
	memcpy_s(&AddLobbyMember_Params.Username, 0x10, &Username, 0x10);

	this->ProcessEvent(uFnAddLobbyMember, &AddLobbyMember_Params, nullptr);
};

// Function ProjectX.Parties_X.HandleLobbyJoinFailed
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UError*                  InError                        (CPF_Parm)

void UParties_X::HandleLobbyJoinFailed(class UError* InError)
{
	static UFunction* uFnHandleLobbyJoinFailed = nullptr;

	if (!uFnHandleLobbyJoinFailed)
	{
		uFnHandleLobbyJoinFailed = UFunction::FindFunction("Function ProjectX.Parties_X.HandleLobbyJoinFailed");
	}

	UParties_X_execHandleLobbyJoinFailed_Params HandleLobbyJoinFailed_Params;
	memcpy_s(&HandleLobbyJoinFailed_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnHandleLobbyJoinFailed, &HandleLobbyJoinFailed_Params, nullptr);
};

// Function ProjectX.Parties_X.HandlePsyNetPartyJoined
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PsyNetPartyId                  (CPF_Parm)
// TArray<struct FPsyNetPartyMember> Members                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::HandlePsyNetPartyJoined(struct FUniqueLobbyId PsyNetPartyId, TArray<struct FPsyNetPartyMember>& Members)
{
	static UFunction* uFnHandlePsyNetPartyJoined = nullptr;

	if (!uFnHandlePsyNetPartyJoined)
	{
		uFnHandlePsyNetPartyJoined = UFunction::FindFunction("Function ProjectX.Parties_X.HandlePsyNetPartyJoined");
	}

	UParties_X_execHandlePsyNetPartyJoined_Params HandlePsyNetPartyJoined_Params;
	memcpy_s(&HandlePsyNetPartyJoined_Params.PsyNetPartyId, 0x10, &PsyNetPartyId, 0x10);
	memcpy_s(&HandlePsyNetPartyJoined_Params.Members, 0x10, &Members, 0x10);

	this->ProcessEvent(uFnHandlePsyNetPartyJoined, &HandlePsyNetPartyJoined_Params, nullptr);

	memcpy_s(&Members, 0x10, &HandlePsyNetPartyJoined_Params.Members, 0x10);
};

// Function ProjectX.Parties_X.HandlePsyNetPartyCreated
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PsyNetPartyId                  (CPF_Parm)
// TArray<struct FPsyNetPartyMember> Members                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::HandlePsyNetPartyCreated(struct FUniqueLobbyId PsyNetPartyId, TArray<struct FPsyNetPartyMember>& Members)
{
	static UFunction* uFnHandlePsyNetPartyCreated = nullptr;

	if (!uFnHandlePsyNetPartyCreated)
	{
		uFnHandlePsyNetPartyCreated = UFunction::FindFunction("Function ProjectX.Parties_X.HandlePsyNetPartyCreated");
	}

	UParties_X_execHandlePsyNetPartyCreated_Params HandlePsyNetPartyCreated_Params;
	memcpy_s(&HandlePsyNetPartyCreated_Params.PsyNetPartyId, 0x10, &PsyNetPartyId, 0x10);
	memcpy_s(&HandlePsyNetPartyCreated_Params.Members, 0x10, &Members, 0x10);

	this->ProcessEvent(uFnHandlePsyNetPartyCreated, &HandlePsyNetPartyCreated_Params, nullptr);

	memcpy_s(&Members, 0x10, &HandlePsyNetPartyCreated_Params.Members, 0x10);
};

// Function ProjectX.Parties_X.JoinLobbyWithKey
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  PsyNetPartyId                  (CPF_Parm | CPF_NeedCtorLink)
// class FString                  JoinKey                        (CPF_Parm | CPF_NeedCtorLink)

bool UParties_X::JoinLobbyWithKey(class FString PsyNetPartyId, class FString JoinKey)
{
	static UFunction* uFnJoinLobbyWithKey = nullptr;

	if (!uFnJoinLobbyWithKey)
	{
		uFnJoinLobbyWithKey = UFunction::FindFunction("Function ProjectX.Parties_X.JoinLobbyWithKey");
	}

	UParties_X_execJoinLobbyWithKey_Params JoinLobbyWithKey_Params;
	memcpy_s(&JoinLobbyWithKey_Params.PsyNetPartyId, 0x10, &PsyNetPartyId, 0x10);
	memcpy_s(&JoinLobbyWithKey_Params.JoinKey, 0x10, &JoinKey, 0x10);

	this->ProcessEvent(uFnJoinLobbyWithKey, &JoinLobbyWithKey_Params, nullptr);

	return JoinLobbyWithKey_Params.ReturnValue;
};

// Function ProjectX.Parties_X.JoinLobby
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

bool UParties_X::JoinLobby(int32_t LocalPlayerNum, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnJoinLobby = nullptr;

	if (!uFnJoinLobby)
	{
		uFnJoinLobby = UFunction::FindFunction("Function ProjectX.Parties_X.JoinLobby");
	}

	UParties_X_execJoinLobby_Params JoinLobby_Params;
	memcpy_s(&JoinLobby_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&JoinLobby_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnJoinLobby, &JoinLobby_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &JoinLobby_Params.LobbyId, 0x10);

	return JoinLobby_Params.ReturnValue;
};

// Function ProjectX.Parties_X.UpdateFoundLobbies
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_OptionalParm | CPF_Parm)

bool UParties_X::UpdateFoundLobbies(struct FUniqueLobbyId LobbyId)
{
	static UFunction* uFnUpdateFoundLobbies = nullptr;

	if (!uFnUpdateFoundLobbies)
	{
		uFnUpdateFoundLobbies = UFunction::FindFunction("Function ProjectX.Parties_X.UpdateFoundLobbies");
	}

	UParties_X_execUpdateFoundLobbies_Params UpdateFoundLobbies_Params;
	memcpy_s(&UpdateFoundLobbies_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnUpdateFoundLobbies, &UpdateFoundLobbies_Params, nullptr);

	return UpdateFoundLobbies_Params.ReturnValue;
};

// Function ProjectX.Parties_X.FindMemberIndex
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            MemberId                       (CPF_Parm | CPF_NeedCtorLink)

int32_t UParties_X::FindMemberIndex(struct FUniqueNetId MemberId)
{
	static UFunction* uFnFindMemberIndex = nullptr;

	if (!uFnFindMemberIndex)
	{
		uFnFindMemberIndex = UFunction::FindFunction("Function ProjectX.Parties_X.FindMemberIndex");
	}

	UParties_X_execFindMemberIndex_Params FindMemberIndex_Params;
	memcpy_s(&FindMemberIndex_Params.MemberId, 0x48, &MemberId, 0x48);

	this->ProcessEvent(uFnFindMemberIndex, &FindMemberIndex_Params, nullptr);

	return FindMemberIndex_Params.ReturnValue;
};

// Function ProjectX.Parties_X.FindLobbies
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        MaxResults                     (CPF_OptionalParm | CPF_Parm)
// TArray<struct FLobbyFilter>    Filters                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FLobbySortFilter> SortFilters                    (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// int32_t                        MinSlots                       (CPF_OptionalParm | CPF_Parm)
// uint8_t                        Distance                       (CPF_OptionalParm | CPF_Parm)

bool UParties_X::FindLobbies(int32_t MaxResults, TArray<struct FLobbyFilter> Filters, TArray<struct FLobbySortFilter> SortFilters, int32_t MinSlots, uint8_t Distance)
{
	static UFunction* uFnFindLobbies = nullptr;

	if (!uFnFindLobbies)
	{
		uFnFindLobbies = UFunction::FindFunction("Function ProjectX.Parties_X.FindLobbies");
	}

	UParties_X_execFindLobbies_Params FindLobbies_Params;
	memcpy_s(&FindLobbies_Params.MaxResults, 0x4, &MaxResults, 0x4);
	memcpy_s(&FindLobbies_Params.Filters, 0x10, &Filters, 0x10);
	memcpy_s(&FindLobbies_Params.SortFilters, 0x10, &SortFilters, 0x10);
	memcpy_s(&FindLobbies_Params.MinSlots, 0x4, &MinSlots, 0x4);
	memcpy_s(&FindLobbies_Params.Distance, 0x1, &Distance, 0x1);

	this->ProcessEvent(uFnFindLobbies, &FindLobbies_Params, nullptr);

	return FindLobbies_Params.ReturnValue;
};

// Function ProjectX.Parties_X.CreateLobby
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// int32_t                        MaxPlayers                     (CPF_Parm)
// uint8_t                        Type                           (CPF_OptionalParm | CPF_Parm)
// TArray<struct FLobbyMetaData>  InitialSettings                (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

bool UParties_X::CreateLobby(int32_t LocalPlayerNum, int32_t MaxPlayers, uint8_t Type, TArray<struct FLobbyMetaData> InitialSettings)
{
	static UFunction* uFnCreateLobby = nullptr;

	if (!uFnCreateLobby)
	{
		uFnCreateLobby = UFunction::FindFunction("Function ProjectX.Parties_X.CreateLobby");
	}

	UParties_X_execCreateLobby_Params CreateLobby_Params;
	memcpy_s(&CreateLobby_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&CreateLobby_Params.MaxPlayers, 0x4, &MaxPlayers, 0x4);
	memcpy_s(&CreateLobby_Params.Type, 0x1, &Type, 0x1);
	memcpy_s(&CreateLobby_Params.InitialSettings, 0x10, &InitialSettings, 0x10);

	this->ProcessEvent(uFnCreateLobby, &CreateLobby_Params, nullptr);

	return CreateLobby_Params.ReturnValue;
};

// Function ProjectX.Parties_X.EventLobbyMessageFailed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UParties_X::EventLobbyMessageFailed(class UError* Error)
{
	static UFunction* uFnEventLobbyMessageFailed = nullptr;

	if (!uFnEventLobbyMessageFailed)
	{
		uFnEventLobbyMessageFailed = UFunction::FindFunction("Function ProjectX.Parties_X.EventLobbyMessageFailed");
	}

	UParties_X_execEventLobbyMessageFailed_Params EventLobbyMessageFailed_Params;
	memcpy_s(&EventLobbyMessageFailed_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventLobbyMessageFailed, &EventLobbyMessageFailed_Params, nullptr);
};

// Function ProjectX.Parties_X.EventPartyChatRecieved
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Text                           (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::EventPartyChatRecieved(struct FUniqueNetId PlayerID, class FString Text)
{
	static UFunction* uFnEventPartyChatRecieved = nullptr;

	if (!uFnEventPartyChatRecieved)
	{
		uFnEventPartyChatRecieved = UFunction::FindFunction("Function ProjectX.Parties_X.EventPartyChatRecieved");
	}

	UParties_X_execEventPartyChatRecieved_Params EventPartyChatRecieved_Params;
	memcpy_s(&EventPartyChatRecieved_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&EventPartyChatRecieved_Params.Text, 0x10, &Text, 0x10);

	this->ProcessEvent(uFnEventPartyChatRecieved, &EventPartyChatRecieved_Params, nullptr);
};

// Function ProjectX.Parties_X.ClearLobbyDestroyedDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyDestroyedDelegate         (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbyDestroyedDelegate(struct FScriptDelegate LobbyDestroyedDelegate)
{
	static UFunction* uFnClearLobbyDestroyedDelegate = nullptr;

	if (!uFnClearLobbyDestroyedDelegate)
	{
		uFnClearLobbyDestroyedDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyDestroyedDelegate");
	}

	UParties_X_execClearLobbyDestroyedDelegate_Params ClearLobbyDestroyedDelegate_Params;
	memcpy_s(&ClearLobbyDestroyedDelegate_Params.LobbyDestroyedDelegate, 0x18, &LobbyDestroyedDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbyDestroyedDelegate, &ClearLobbyDestroyedDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyDestroyedDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyDestroyedDelegate         (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyDestroyedDelegate(struct FScriptDelegate LobbyDestroyedDelegate)
{
	static UFunction* uFnAddLobbyDestroyedDelegate = nullptr;

	if (!uFnAddLobbyDestroyedDelegate)
	{
		uFnAddLobbyDestroyedDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyDestroyedDelegate");
	}

	UParties_X_execAddLobbyDestroyedDelegate_Params AddLobbyDestroyedDelegate_Params;
	memcpy_s(&AddLobbyDestroyedDelegate_Params.LobbyDestroyedDelegate, 0x18, &LobbyDestroyedDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbyDestroyedDelegate, &AddLobbyDestroyedDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbyDestroyed
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// uint8_t                        Reason                         (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

void UParties_X::OnLobbyDestroyed(uint8_t Reason, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnOnLobbyDestroyed = nullptr;

	if (!uFnOnLobbyDestroyed)
	{
		uFnOnLobbyDestroyed = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbyDestroyed");
	}

	UParties_X_execOnLobbyDestroyed_Params OnLobbyDestroyed_Params;
	memcpy_s(&OnLobbyDestroyed_Params.Reason, 0x1, &Reason, 0x1);
	memcpy_s(&OnLobbyDestroyed_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnOnLobbyDestroyed, &OnLobbyDestroyed_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &OnLobbyDestroyed_Params.LobbyId, 0x10);
};

// Function ProjectX.Parties_X.RemoveLocalPlayerFromSession
// [0x00420001] (FUNC_Final | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PartyMember                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::RemoveLocalPlayerFromSession(struct FUniqueNetId& PartyMember)
{
	static UFunction* uFnRemoveLocalPlayerFromSession = nullptr;

	if (!uFnRemoveLocalPlayerFromSession)
	{
		uFnRemoveLocalPlayerFromSession = UFunction::FindFunction("Function ProjectX.Parties_X.RemoveLocalPlayerFromSession");
	}

	UParties_X_execRemoveLocalPlayerFromSession_Params RemoveLocalPlayerFromSession_Params;
	memcpy_s(&RemoveLocalPlayerFromSession_Params.PartyMember, 0x48, &PartyMember, 0x48);

	this->ProcessEvent(uFnRemoveLocalPlayerFromSession, &RemoveLocalPlayerFromSession_Params, nullptr);

	memcpy_s(&PartyMember, 0x48, &RemoveLocalPlayerFromSession_Params.PartyMember, 0x48);
};

// Function ProjectX.Parties_X.AddLocalPartyMemberToSession
// [0x00420001] (FUNC_Final | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            NewPartyMember                 (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::AddLocalPartyMemberToSession(struct FUniqueNetId& NewPartyMember)
{
	static UFunction* uFnAddLocalPartyMemberToSession = nullptr;

	if (!uFnAddLocalPartyMemberToSession)
	{
		uFnAddLocalPartyMemberToSession = UFunction::FindFunction("Function ProjectX.Parties_X.AddLocalPartyMemberToSession");
	}

	UParties_X_execAddLocalPartyMemberToSession_Params AddLocalPartyMemberToSession_Params;
	memcpy_s(&AddLocalPartyMemberToSession_Params.NewPartyMember, 0x48, &NewPartyMember, 0x48);

	this->ProcessEvent(uFnAddLocalPartyMemberToSession, &AddLocalPartyMemberToSession_Params, nullptr);

	memcpy_s(&NewPartyMember, 0x48, &AddLocalPartyMemberToSession_Params.NewPartyMember, 0x48);
};

// Function ProjectX.Parties_X.GetLobbyMembers
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// TArray<struct FLobbyMember>    Members                        (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UParties_X::GetLobbyMembers(struct FUniqueLobbyId& LobbyId, TArray<struct FLobbyMember>& Members)
{
	static UFunction* uFnGetLobbyMembers = nullptr;

	if (!uFnGetLobbyMembers)
	{
		uFnGetLobbyMembers = UFunction::FindFunction("Function ProjectX.Parties_X.GetLobbyMembers");
	}

	UParties_X_execGetLobbyMembers_Params GetLobbyMembers_Params;
	memcpy_s(&GetLobbyMembers_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&GetLobbyMembers_Params.Members, 0x10, &Members, 0x10);

	this->ProcessEvent(uFnGetLobbyMembers, &GetLobbyMembers_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &GetLobbyMembers_Params.LobbyId, 0x10);
	memcpy_s(&Members, 0x10, &GetLobbyMembers_Params.Members, 0x10);

	return GetLobbyMembers_Params.ReturnValue;
};

// Function ProjectX.Parties_X.EventLobbyInvitePending
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm)
// struct FUniqueNetId            FromUserId                     (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// class FString                  FromUserName                   (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::EventLobbyInvitePending(struct FUniqueLobbyId LobbyId, struct FUniqueNetId FromUserId, class FString FromUserName)
{
	static UFunction* uFnEventLobbyInvitePending = nullptr;

	if (!uFnEventLobbyInvitePending)
	{
		uFnEventLobbyInvitePending = UFunction::FindFunction("Function ProjectX.Parties_X.EventLobbyInvitePending");
	}

	UParties_X_execEventLobbyInvitePending_Params EventLobbyInvitePending_Params;
	memcpy_s(&EventLobbyInvitePending_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&EventLobbyInvitePending_Params.FromUserId, 0x48, &FromUserId, 0x48);
	memcpy_s(&EventLobbyInvitePending_Params.FromUserName, 0x10, &FromUserName, 0x10);

	this->ProcessEvent(uFnEventLobbyInvitePending, &EventLobbyInvitePending_Params, nullptr);
};

// Function ProjectX.Parties_X.ClearLobbyInviteDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyInviteDelegate            (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbyInviteDelegate(struct FScriptDelegate LobbyInviteDelegate)
{
	static UFunction* uFnClearLobbyInviteDelegate = nullptr;

	if (!uFnClearLobbyInviteDelegate)
	{
		uFnClearLobbyInviteDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyInviteDelegate");
	}

	UParties_X_execClearLobbyInviteDelegate_Params ClearLobbyInviteDelegate_Params;
	memcpy_s(&ClearLobbyInviteDelegate_Params.LobbyInviteDelegate, 0x18, &LobbyInviteDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbyInviteDelegate, &ClearLobbyInviteDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyInviteDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyInviteDelegate            (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyInviteDelegate(struct FScriptDelegate LobbyInviteDelegate)
{
	static UFunction* uFnAddLobbyInviteDelegate = nullptr;

	if (!uFnAddLobbyInviteDelegate)
	{
		uFnAddLobbyInviteDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyInviteDelegate");
	}

	UParties_X_execAddLobbyInviteDelegate_Params AddLobbyInviteDelegate_Params;
	memcpy_s(&AddLobbyInviteDelegate_Params.LobbyInviteDelegate, 0x18, &LobbyInviteDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbyInviteDelegate, &AddLobbyInviteDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbyInvite
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bAccepted                      (CPF_Parm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            FriendId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::OnLobbyInvite(unsigned long bAccepted, struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& FriendId)
{
	static UFunction* uFnOnLobbyInvite = nullptr;

	if (!uFnOnLobbyInvite)
	{
		uFnOnLobbyInvite = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbyInvite");
	}

	UParties_X_execOnLobbyInvite_Params OnLobbyInvite_Params;
	OnLobbyInvite_Params.bAccepted = bAccepted;
	memcpy_s(&OnLobbyInvite_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&OnLobbyInvite_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnOnLobbyInvite, &OnLobbyInvite_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &OnLobbyInvite_Params.LobbyId, 0x10);
	memcpy_s(&FriendId, 0x48, &OnLobbyInvite_Params.FriendId, 0x48);
};

// Function ProjectX.Parties_X.ClearLobbyJoinGameDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyJoinGameDelegate          (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbyJoinGameDelegate(struct FScriptDelegate LobbyJoinGameDelegate)
{
	static UFunction* uFnClearLobbyJoinGameDelegate = nullptr;

	if (!uFnClearLobbyJoinGameDelegate)
	{
		uFnClearLobbyJoinGameDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyJoinGameDelegate");
	}

	UParties_X_execClearLobbyJoinGameDelegate_Params ClearLobbyJoinGameDelegate_Params;
	memcpy_s(&ClearLobbyJoinGameDelegate_Params.LobbyJoinGameDelegate, 0x18, &LobbyJoinGameDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbyJoinGameDelegate, &ClearLobbyJoinGameDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyJoinGameDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyJoinGameDelegate          (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyJoinGameDelegate(struct FScriptDelegate LobbyJoinGameDelegate)
{
	static UFunction* uFnAddLobbyJoinGameDelegate = nullptr;

	if (!uFnAddLobbyJoinGameDelegate)
	{
		uFnAddLobbyJoinGameDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyJoinGameDelegate");
	}

	UParties_X_execAddLobbyJoinGameDelegate_Params AddLobbyJoinGameDelegate_Params;
	memcpy_s(&AddLobbyJoinGameDelegate_Params.LobbyJoinGameDelegate, 0x18, &LobbyJoinGameDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbyJoinGameDelegate, &AddLobbyJoinGameDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbyJoinGame
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerIP                       (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueNetId            ServerId                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::OnLobbyJoinGame(class FString ServerIP, struct FActiveLobbyInfo& LobbyInfo, struct FUniqueNetId& ServerId)
{
	static UFunction* uFnOnLobbyJoinGame = nullptr;

	if (!uFnOnLobbyJoinGame)
	{
		uFnOnLobbyJoinGame = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbyJoinGame");
	}

	UParties_X_execOnLobbyJoinGame_Params OnLobbyJoinGame_Params;
	memcpy_s(&OnLobbyJoinGame_Params.ServerIP, 0x10, &ServerIP, 0x10);
	memcpy_s(&OnLobbyJoinGame_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&OnLobbyJoinGame_Params.ServerId, 0x48, &ServerId, 0x48);

	this->ProcessEvent(uFnOnLobbyJoinGame, &OnLobbyJoinGame_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &OnLobbyJoinGame_Params.LobbyInfo, 0x30);
	memcpy_s(&ServerId, 0x48, &OnLobbyJoinGame_Params.ServerId, 0x48);
};

// Function ProjectX.Parties_X.TriggerLobbyReceiveBinaryDataDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        MemberIndex                    (CPF_Parm)
// TArray<uint8_t>                Data                           (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::TriggerLobbyReceiveBinaryDataDelegate(int32_t MemberIndex, TArray<uint8_t> Data)
{
	static UFunction* uFnTriggerLobbyReceiveBinaryDataDelegate = nullptr;

	if (!uFnTriggerLobbyReceiveBinaryDataDelegate)
	{
		uFnTriggerLobbyReceiveBinaryDataDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.TriggerLobbyReceiveBinaryDataDelegate");
	}

	UParties_X_execTriggerLobbyReceiveBinaryDataDelegate_Params TriggerLobbyReceiveBinaryDataDelegate_Params;
	memcpy_s(&TriggerLobbyReceiveBinaryDataDelegate_Params.MemberIndex, 0x4, &MemberIndex, 0x4);
	memcpy_s(&TriggerLobbyReceiveBinaryDataDelegate_Params.Data, 0x10, &Data, 0x10);

	this->ProcessEvent(uFnTriggerLobbyReceiveBinaryDataDelegate, &TriggerLobbyReceiveBinaryDataDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.ClearLobbyReceiveBinaryDataDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyReceiveBinaryDataDelegate (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbyReceiveBinaryDataDelegate(struct FScriptDelegate LobbyReceiveBinaryDataDelegate)
{
	static UFunction* uFnClearLobbyReceiveBinaryDataDelegate = nullptr;

	if (!uFnClearLobbyReceiveBinaryDataDelegate)
	{
		uFnClearLobbyReceiveBinaryDataDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyReceiveBinaryDataDelegate");
	}

	UParties_X_execClearLobbyReceiveBinaryDataDelegate_Params ClearLobbyReceiveBinaryDataDelegate_Params;
	memcpy_s(&ClearLobbyReceiveBinaryDataDelegate_Params.LobbyReceiveBinaryDataDelegate, 0x18, &LobbyReceiveBinaryDataDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbyReceiveBinaryDataDelegate, &ClearLobbyReceiveBinaryDataDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyReceiveBinaryDataDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyReceiveBinaryDataDelegate (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyReceiveBinaryDataDelegate(struct FScriptDelegate LobbyReceiveBinaryDataDelegate)
{
	static UFunction* uFnAddLobbyReceiveBinaryDataDelegate = nullptr;

	if (!uFnAddLobbyReceiveBinaryDataDelegate)
	{
		uFnAddLobbyReceiveBinaryDataDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyReceiveBinaryDataDelegate");
	}

	UParties_X_execAddLobbyReceiveBinaryDataDelegate_Params AddLobbyReceiveBinaryDataDelegate_Params;
	memcpy_s(&AddLobbyReceiveBinaryDataDelegate_Params.LobbyReceiveBinaryDataDelegate, 0x18, &LobbyReceiveBinaryDataDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbyReceiveBinaryDataDelegate, &AddLobbyReceiveBinaryDataDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbyReceiveBinaryData
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        MemberIndex                    (CPF_Parm)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<uint8_t>                Data                           (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::OnLobbyReceiveBinaryData(int32_t MemberIndex, struct FActiveLobbyInfo& LobbyInfo, TArray<uint8_t>& Data)
{
	static UFunction* uFnOnLobbyReceiveBinaryData = nullptr;

	if (!uFnOnLobbyReceiveBinaryData)
	{
		uFnOnLobbyReceiveBinaryData = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbyReceiveBinaryData");
	}

	UParties_X_execOnLobbyReceiveBinaryData_Params OnLobbyReceiveBinaryData_Params;
	memcpy_s(&OnLobbyReceiveBinaryData_Params.MemberIndex, 0x4, &MemberIndex, 0x4);
	memcpy_s(&OnLobbyReceiveBinaryData_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&OnLobbyReceiveBinaryData_Params.Data, 0x10, &Data, 0x10);

	this->ProcessEvent(uFnOnLobbyReceiveBinaryData, &OnLobbyReceiveBinaryData_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &OnLobbyReceiveBinaryData_Params.LobbyInfo, 0x30);
	memcpy_s(&Data, 0x10, &OnLobbyReceiveBinaryData_Params.Data, 0x10);
};

// Function ProjectX.Parties_X.ClearLobbyReceiveMessageDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyReceiveMessageDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbyReceiveMessageDelegate(struct FScriptDelegate LobbyReceiveMessageDelegate)
{
	static UFunction* uFnClearLobbyReceiveMessageDelegate = nullptr;

	if (!uFnClearLobbyReceiveMessageDelegate)
	{
		uFnClearLobbyReceiveMessageDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyReceiveMessageDelegate");
	}

	UParties_X_execClearLobbyReceiveMessageDelegate_Params ClearLobbyReceiveMessageDelegate_Params;
	memcpy_s(&ClearLobbyReceiveMessageDelegate_Params.LobbyReceiveMessageDelegate, 0x18, &LobbyReceiveMessageDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbyReceiveMessageDelegate, &ClearLobbyReceiveMessageDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyReceiveMessageDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyReceiveMessageDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyReceiveMessageDelegate(struct FScriptDelegate LobbyReceiveMessageDelegate)
{
	static UFunction* uFnAddLobbyReceiveMessageDelegate = nullptr;

	if (!uFnAddLobbyReceiveMessageDelegate)
	{
		uFnAddLobbyReceiveMessageDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyReceiveMessageDelegate");
	}

	UParties_X_execAddLobbyReceiveMessageDelegate_Params AddLobbyReceiveMessageDelegate_Params;
	memcpy_s(&AddLobbyReceiveMessageDelegate_Params.LobbyReceiveMessageDelegate, 0x18, &LobbyReceiveMessageDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbyReceiveMessageDelegate, &AddLobbyReceiveMessageDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbyReceiveMessage
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        MemberIndex                    (CPF_Parm)
// class FString                  Type                           (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::OnLobbyReceiveMessage(int32_t MemberIndex, class FString Type, class FString Message, struct FActiveLobbyInfo& LobbyInfo)
{
	static UFunction* uFnOnLobbyReceiveMessage = nullptr;

	if (!uFnOnLobbyReceiveMessage)
	{
		uFnOnLobbyReceiveMessage = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbyReceiveMessage");
	}

	UParties_X_execOnLobbyReceiveMessage_Params OnLobbyReceiveMessage_Params;
	memcpy_s(&OnLobbyReceiveMessage_Params.MemberIndex, 0x4, &MemberIndex, 0x4);
	memcpy_s(&OnLobbyReceiveMessage_Params.Type, 0x10, &Type, 0x10);
	memcpy_s(&OnLobbyReceiveMessage_Params.Message, 0x10, &Message, 0x10);
	memcpy_s(&OnLobbyReceiveMessage_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);

	this->ProcessEvent(uFnOnLobbyReceiveMessage, &OnLobbyReceiveMessage_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &OnLobbyReceiveMessage_Params.LobbyInfo, 0x30);
};

// Function ProjectX.Parties_X.ClearLobbyMemberStatusUpdateDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyMemberStatusUpdateDelegate (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbyMemberStatusUpdateDelegate(struct FScriptDelegate LobbyMemberStatusUpdateDelegate)
{
	static UFunction* uFnClearLobbyMemberStatusUpdateDelegate = nullptr;

	if (!uFnClearLobbyMemberStatusUpdateDelegate)
	{
		uFnClearLobbyMemberStatusUpdateDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyMemberStatusUpdateDelegate");
	}

	UParties_X_execClearLobbyMemberStatusUpdateDelegate_Params ClearLobbyMemberStatusUpdateDelegate_Params;
	memcpy_s(&ClearLobbyMemberStatusUpdateDelegate_Params.LobbyMemberStatusUpdateDelegate, 0x18, &LobbyMemberStatusUpdateDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbyMemberStatusUpdateDelegate, &ClearLobbyMemberStatusUpdateDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyMemberStatusUpdateDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyMemberStatusUpdateDelegate (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyMemberStatusUpdateDelegate(struct FScriptDelegate LobbyMemberStatusUpdateDelegate)
{
	static UFunction* uFnAddLobbyMemberStatusUpdateDelegate = nullptr;

	if (!uFnAddLobbyMemberStatusUpdateDelegate)
	{
		uFnAddLobbyMemberStatusUpdateDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyMemberStatusUpdateDelegate");
	}

	UParties_X_execAddLobbyMemberStatusUpdateDelegate_Params AddLobbyMemberStatusUpdateDelegate_Params;
	memcpy_s(&AddLobbyMemberStatusUpdateDelegate_Params.LobbyMemberStatusUpdateDelegate, 0x18, &LobbyMemberStatusUpdateDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbyMemberStatusUpdateDelegate, &AddLobbyMemberStatusUpdateDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.TriggerLobbyMemberStatusUpdateDelegates
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        MemberIndex                    (CPF_Parm)
// int32_t                        InstigatorIndex                (CPF_Parm)
// class FString                  Status                         (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::eventTriggerLobbyMemberStatusUpdateDelegates(int32_t MemberIndex, int32_t InstigatorIndex, class FString Status)
{
	static UFunction* uFnTriggerLobbyMemberStatusUpdateDelegates = nullptr;

	if (!uFnTriggerLobbyMemberStatusUpdateDelegates)
	{
		uFnTriggerLobbyMemberStatusUpdateDelegates = UFunction::FindFunction("Function ProjectX.Parties_X.TriggerLobbyMemberStatusUpdateDelegates");
	}

	UParties_X_eventTriggerLobbyMemberStatusUpdateDelegates_Params TriggerLobbyMemberStatusUpdateDelegates_Params;
	memcpy_s(&TriggerLobbyMemberStatusUpdateDelegates_Params.MemberIndex, 0x4, &MemberIndex, 0x4);
	memcpy_s(&TriggerLobbyMemberStatusUpdateDelegates_Params.InstigatorIndex, 0x4, &InstigatorIndex, 0x4);
	memcpy_s(&TriggerLobbyMemberStatusUpdateDelegates_Params.Status, 0x10, &Status, 0x10);

	this->ProcessEvent(uFnTriggerLobbyMemberStatusUpdateDelegates, &TriggerLobbyMemberStatusUpdateDelegates_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbyMemberStatusUpdate
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        MemberIndex                    (CPF_Parm)
// int32_t                        InstigatorIndex                (CPF_Parm)
// class FString                  Status                         (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::OnLobbyMemberStatusUpdate(int32_t MemberIndex, int32_t InstigatorIndex, class FString Status, struct FActiveLobbyInfo& LobbyInfo)
{
	static UFunction* uFnOnLobbyMemberStatusUpdate = nullptr;

	if (!uFnOnLobbyMemberStatusUpdate)
	{
		uFnOnLobbyMemberStatusUpdate = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbyMemberStatusUpdate");
	}

	UParties_X_execOnLobbyMemberStatusUpdate_Params OnLobbyMemberStatusUpdate_Params;
	memcpy_s(&OnLobbyMemberStatusUpdate_Params.MemberIndex, 0x4, &MemberIndex, 0x4);
	memcpy_s(&OnLobbyMemberStatusUpdate_Params.InstigatorIndex, 0x4, &InstigatorIndex, 0x4);
	memcpy_s(&OnLobbyMemberStatusUpdate_Params.Status, 0x10, &Status, 0x10);
	memcpy_s(&OnLobbyMemberStatusUpdate_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);

	this->ProcessEvent(uFnOnLobbyMemberStatusUpdate, &OnLobbyMemberStatusUpdate_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &OnLobbyMemberStatusUpdate_Params.LobbyInfo, 0x30);
};

// Function ProjectX.Parties_X.ClearLobbyMemberSettingsUpdateDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyMemberSettingsUpdateDelegate (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbyMemberSettingsUpdateDelegate(struct FScriptDelegate LobbyMemberSettingsUpdateDelegate)
{
	static UFunction* uFnClearLobbyMemberSettingsUpdateDelegate = nullptr;

	if (!uFnClearLobbyMemberSettingsUpdateDelegate)
	{
		uFnClearLobbyMemberSettingsUpdateDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyMemberSettingsUpdateDelegate");
	}

	UParties_X_execClearLobbyMemberSettingsUpdateDelegate_Params ClearLobbyMemberSettingsUpdateDelegate_Params;
	memcpy_s(&ClearLobbyMemberSettingsUpdateDelegate_Params.LobbyMemberSettingsUpdateDelegate, 0x18, &LobbyMemberSettingsUpdateDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbyMemberSettingsUpdateDelegate, &ClearLobbyMemberSettingsUpdateDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyMemberSettingsUpdateDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyMemberSettingsUpdateDelegate (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyMemberSettingsUpdateDelegate(struct FScriptDelegate LobbyMemberSettingsUpdateDelegate)
{
	static UFunction* uFnAddLobbyMemberSettingsUpdateDelegate = nullptr;

	if (!uFnAddLobbyMemberSettingsUpdateDelegate)
	{
		uFnAddLobbyMemberSettingsUpdateDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyMemberSettingsUpdateDelegate");
	}

	UParties_X_execAddLobbyMemberSettingsUpdateDelegate_Params AddLobbyMemberSettingsUpdateDelegate_Params;
	memcpy_s(&AddLobbyMemberSettingsUpdateDelegate_Params.LobbyMemberSettingsUpdateDelegate, 0x18, &LobbyMemberSettingsUpdateDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbyMemberSettingsUpdateDelegate, &AddLobbyMemberSettingsUpdateDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbyMemberSettingsUpdate
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        MemberIndex                    (CPF_Parm)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::OnLobbyMemberSettingsUpdate(int32_t MemberIndex, struct FActiveLobbyInfo& LobbyInfo)
{
	static UFunction* uFnOnLobbyMemberSettingsUpdate = nullptr;

	if (!uFnOnLobbyMemberSettingsUpdate)
	{
		uFnOnLobbyMemberSettingsUpdate = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbyMemberSettingsUpdate");
	}

	UParties_X_execOnLobbyMemberSettingsUpdate_Params OnLobbyMemberSettingsUpdate_Params;
	memcpy_s(&OnLobbyMemberSettingsUpdate_Params.MemberIndex, 0x4, &MemberIndex, 0x4);
	memcpy_s(&OnLobbyMemberSettingsUpdate_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);

	this->ProcessEvent(uFnOnLobbyMemberSettingsUpdate, &OnLobbyMemberSettingsUpdate_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &OnLobbyMemberSettingsUpdate_Params.LobbyInfo, 0x30);
};

// Function ProjectX.Parties_X.ClearLobbySettingsUpdateDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbySettingsUpdateDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbySettingsUpdateDelegate(struct FScriptDelegate LobbySettingsUpdateDelegate)
{
	static UFunction* uFnClearLobbySettingsUpdateDelegate = nullptr;

	if (!uFnClearLobbySettingsUpdateDelegate)
	{
		uFnClearLobbySettingsUpdateDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbySettingsUpdateDelegate");
	}

	UParties_X_execClearLobbySettingsUpdateDelegate_Params ClearLobbySettingsUpdateDelegate_Params;
	memcpy_s(&ClearLobbySettingsUpdateDelegate_Params.LobbySettingsUpdateDelegate, 0x18, &LobbySettingsUpdateDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbySettingsUpdateDelegate, &ClearLobbySettingsUpdateDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbySettingsUpdateDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbySettingsUpdateDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbySettingsUpdateDelegate(struct FScriptDelegate LobbySettingsUpdateDelegate)
{
	static UFunction* uFnAddLobbySettingsUpdateDelegate = nullptr;

	if (!uFnAddLobbySettingsUpdateDelegate)
	{
		uFnAddLobbySettingsUpdateDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbySettingsUpdateDelegate");
	}

	UParties_X_execAddLobbySettingsUpdateDelegate_Params AddLobbySettingsUpdateDelegate_Params;
	memcpy_s(&AddLobbySettingsUpdateDelegate_Params.LobbySettingsUpdateDelegate, 0x18, &LobbySettingsUpdateDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbySettingsUpdateDelegate, &AddLobbySettingsUpdateDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbySettingsUpdate
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::OnLobbySettingsUpdate(struct FActiveLobbyInfo& LobbyInfo)
{
	static UFunction* uFnOnLobbySettingsUpdate = nullptr;

	if (!uFnOnLobbySettingsUpdate)
	{
		uFnOnLobbySettingsUpdate = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbySettingsUpdate");
	}

	UParties_X_execOnLobbySettingsUpdate_Params OnLobbySettingsUpdate_Params;
	memcpy_s(&OnLobbySettingsUpdate_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);

	this->ProcessEvent(uFnOnLobbySettingsUpdate, &OnLobbySettingsUpdate_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &OnLobbySettingsUpdate_Params.LobbyInfo, 0x30);
};

// Function ProjectX.Parties_X.ClearJoinLobbyCompleteDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         JoinLobbyCompleteDelegate      (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearJoinLobbyCompleteDelegate(struct FScriptDelegate JoinLobbyCompleteDelegate)
{
	static UFunction* uFnClearJoinLobbyCompleteDelegate = nullptr;

	if (!uFnClearJoinLobbyCompleteDelegate)
	{
		uFnClearJoinLobbyCompleteDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearJoinLobbyCompleteDelegate");
	}

	UParties_X_execClearJoinLobbyCompleteDelegate_Params ClearJoinLobbyCompleteDelegate_Params;
	memcpy_s(&ClearJoinLobbyCompleteDelegate_Params.JoinLobbyCompleteDelegate, 0x18, &JoinLobbyCompleteDelegate, 0x18);

	this->ProcessEvent(uFnClearJoinLobbyCompleteDelegate, &ClearJoinLobbyCompleteDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddJoinLobbyCompleteDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         JoinLobbyCompleteDelegate      (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddJoinLobbyCompleteDelegate(struct FScriptDelegate JoinLobbyCompleteDelegate)
{
	static UFunction* uFnAddJoinLobbyCompleteDelegate = nullptr;

	if (!uFnAddJoinLobbyCompleteDelegate)
	{
		uFnAddJoinLobbyCompleteDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddJoinLobbyCompleteDelegate");
	}

	UParties_X_execAddJoinLobbyCompleteDelegate_Params AddJoinLobbyCompleteDelegate_Params;
	memcpy_s(&AddJoinLobbyCompleteDelegate_Params.JoinLobbyCompleteDelegate, 0x18, &JoinLobbyCompleteDelegate, 0x18);

	this->ProcessEvent(uFnAddJoinLobbyCompleteDelegate, &AddJoinLobbyCompleteDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnJoinLobbyComplete
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

void UParties_X::OnJoinLobbyComplete(unsigned long bWasSuccessful, class FString Error, struct FActiveLobbyInfo& LobbyInfo, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnOnJoinLobbyComplete = nullptr;

	if (!uFnOnJoinLobbyComplete)
	{
		uFnOnJoinLobbyComplete = UFunction::FindFunction("Function ProjectX.Parties_X.OnJoinLobbyComplete");
	}

	UParties_X_execOnJoinLobbyComplete_Params OnJoinLobbyComplete_Params;
	OnJoinLobbyComplete_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&OnJoinLobbyComplete_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&OnJoinLobbyComplete_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&OnJoinLobbyComplete_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnOnJoinLobbyComplete, &OnJoinLobbyComplete_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &OnJoinLobbyComplete_Params.LobbyInfo, 0x30);
	memcpy_s(&LobbyId, 0x10, &OnJoinLobbyComplete_Params.LobbyId, 0x10);
};

// Function ProjectX.Parties_X.ClearFindLobbiesCompleteDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         FindLobbiesCompleteDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearFindLobbiesCompleteDelegate(struct FScriptDelegate FindLobbiesCompleteDelegate)
{
	static UFunction* uFnClearFindLobbiesCompleteDelegate = nullptr;

	if (!uFnClearFindLobbiesCompleteDelegate)
	{
		uFnClearFindLobbiesCompleteDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearFindLobbiesCompleteDelegate");
	}

	UParties_X_execClearFindLobbiesCompleteDelegate_Params ClearFindLobbiesCompleteDelegate_Params;
	memcpy_s(&ClearFindLobbiesCompleteDelegate_Params.FindLobbiesCompleteDelegate, 0x18, &FindLobbiesCompleteDelegate, 0x18);

	this->ProcessEvent(uFnClearFindLobbiesCompleteDelegate, &ClearFindLobbiesCompleteDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddFindLobbiesCompleteDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         FindLobbiesCompleteDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddFindLobbiesCompleteDelegate(struct FScriptDelegate FindLobbiesCompleteDelegate)
{
	static UFunction* uFnAddFindLobbiesCompleteDelegate = nullptr;

	if (!uFnAddFindLobbiesCompleteDelegate)
	{
		uFnAddFindLobbiesCompleteDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddFindLobbiesCompleteDelegate");
	}

	UParties_X_execAddFindLobbiesCompleteDelegate_Params AddFindLobbiesCompleteDelegate_Params;
	memcpy_s(&AddFindLobbiesCompleteDelegate_Params.FindLobbiesCompleteDelegate, 0x18, &FindLobbiesCompleteDelegate, 0x18);

	this->ProcessEvent(uFnAddFindLobbiesCompleteDelegate, &AddFindLobbiesCompleteDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnFindLobbiesComplete
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// TArray<struct FBasicLobbyInfo> LobbyList                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UParties_X::OnFindLobbiesComplete(unsigned long bWasSuccessful, TArray<struct FBasicLobbyInfo>& LobbyList)
{
	static UFunction* uFnOnFindLobbiesComplete = nullptr;

	if (!uFnOnFindLobbiesComplete)
	{
		uFnOnFindLobbiesComplete = UFunction::FindFunction("Function ProjectX.Parties_X.OnFindLobbiesComplete");
	}

	UParties_X_execOnFindLobbiesComplete_Params OnFindLobbiesComplete_Params;
	OnFindLobbiesComplete_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&OnFindLobbiesComplete_Params.LobbyList, 0x10, &LobbyList, 0x10);

	this->ProcessEvent(uFnOnFindLobbiesComplete, &OnFindLobbiesComplete_Params, nullptr);

	memcpy_s(&LobbyList, 0x10, &OnFindLobbiesComplete_Params.LobbyList, 0x10);
};

// Function ProjectX.Parties_X.ClearLobbySessionCreatedDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbySessionCreatedDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbySessionCreatedDelegate(struct FScriptDelegate LobbySessionCreatedDelegate)
{
	static UFunction* uFnClearLobbySessionCreatedDelegate = nullptr;

	if (!uFnClearLobbySessionCreatedDelegate)
	{
		uFnClearLobbySessionCreatedDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbySessionCreatedDelegate");
	}

	UParties_X_execClearLobbySessionCreatedDelegate_Params ClearLobbySessionCreatedDelegate_Params;
	memcpy_s(&ClearLobbySessionCreatedDelegate_Params.LobbySessionCreatedDelegate, 0x18, &LobbySessionCreatedDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbySessionCreatedDelegate, &ClearLobbySessionCreatedDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbySessionCreatedDelegate
// [0x00020001] (FUNC_Final | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbySessionCreatedDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbySessionCreatedDelegate(struct FScriptDelegate LobbySessionCreatedDelegate)
{
	static UFunction* uFnAddLobbySessionCreatedDelegate = nullptr;

	if (!uFnAddLobbySessionCreatedDelegate)
	{
		uFnAddLobbySessionCreatedDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbySessionCreatedDelegate");
	}

	UParties_X_execAddLobbySessionCreatedDelegate_Params AddLobbySessionCreatedDelegate_Params;
	memcpy_s(&AddLobbySessionCreatedDelegate_Params.LobbySessionCreatedDelegate, 0x18, &LobbySessionCreatedDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbySessionCreatedDelegate, &AddLobbySessionCreatedDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbySessionCreated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UParties_X::OnLobbySessionCreated()
{
	static UFunction* uFnOnLobbySessionCreated = nullptr;

	if (!uFnOnLobbySessionCreated)
	{
		uFnOnLobbySessionCreated = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbySessionCreated");
	}

	UParties_X_execOnLobbySessionCreated_Params OnLobbySessionCreated_Params;

	this->ProcessEvent(uFnOnLobbySessionCreated, &OnLobbySessionCreated_Params, nullptr);
};

// Function ProjectX.Parties_X.ClearLobbyErrorDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyErrorDelegate             (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearLobbyErrorDelegate(struct FScriptDelegate LobbyErrorDelegate)
{
	static UFunction* uFnClearLobbyErrorDelegate = nullptr;

	if (!uFnClearLobbyErrorDelegate)
	{
		uFnClearLobbyErrorDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearLobbyErrorDelegate");
	}

	UParties_X_execClearLobbyErrorDelegate_Params ClearLobbyErrorDelegate_Params;
	memcpy_s(&ClearLobbyErrorDelegate_Params.LobbyErrorDelegate, 0x18, &LobbyErrorDelegate, 0x18);

	this->ProcessEvent(uFnClearLobbyErrorDelegate, &ClearLobbyErrorDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddLobbyErrorDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         LobbyErrorDelegate             (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddLobbyErrorDelegate(struct FScriptDelegate LobbyErrorDelegate)
{
	static UFunction* uFnAddLobbyErrorDelegate = nullptr;

	if (!uFnAddLobbyErrorDelegate)
	{
		uFnAddLobbyErrorDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddLobbyErrorDelegate");
	}

	UParties_X_execAddLobbyErrorDelegate_Params AddLobbyErrorDelegate_Params;
	memcpy_s(&AddLobbyErrorDelegate_Params.LobbyErrorDelegate, 0x18, &LobbyErrorDelegate, 0x18);

	this->ProcessEvent(uFnAddLobbyErrorDelegate, &AddLobbyErrorDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnLobbyError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::OnLobbyError(class FString Error)
{
	static UFunction* uFnOnLobbyError = nullptr;

	if (!uFnOnLobbyError)
	{
		uFnOnLobbyError = UFunction::FindFunction("Function ProjectX.Parties_X.OnLobbyError");
	}

	UParties_X_execOnLobbyError_Params OnLobbyError_Params;
	memcpy_s(&OnLobbyError_Params.Error, 0x10, &Error, 0x10);

	this->ProcessEvent(uFnOnLobbyError, &OnLobbyError_Params, nullptr);
};

// Function ProjectX.Parties_X.ClearCreateLobbyCompleteDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         CreateLobbyCompleteDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::ClearCreateLobbyCompleteDelegate(struct FScriptDelegate CreateLobbyCompleteDelegate)
{
	static UFunction* uFnClearCreateLobbyCompleteDelegate = nullptr;

	if (!uFnClearCreateLobbyCompleteDelegate)
	{
		uFnClearCreateLobbyCompleteDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.ClearCreateLobbyCompleteDelegate");
	}

	UParties_X_execClearCreateLobbyCompleteDelegate_Params ClearCreateLobbyCompleteDelegate_Params;
	memcpy_s(&ClearCreateLobbyCompleteDelegate_Params.CreateLobbyCompleteDelegate, 0x18, &CreateLobbyCompleteDelegate, 0x18);

	this->ProcessEvent(uFnClearCreateLobbyCompleteDelegate, &ClearCreateLobbyCompleteDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.AddCreateLobbyCompleteDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         CreateLobbyCompleteDelegate    (CPF_Parm | CPF_NeedCtorLink)

void UParties_X::AddCreateLobbyCompleteDelegate(struct FScriptDelegate CreateLobbyCompleteDelegate)
{
	static UFunction* uFnAddCreateLobbyCompleteDelegate = nullptr;

	if (!uFnAddCreateLobbyCompleteDelegate)
	{
		uFnAddCreateLobbyCompleteDelegate = UFunction::FindFunction("Function ProjectX.Parties_X.AddCreateLobbyCompleteDelegate");
	}

	UParties_X_execAddCreateLobbyCompleteDelegate_Params AddCreateLobbyCompleteDelegate_Params;
	memcpy_s(&AddCreateLobbyCompleteDelegate_Params.CreateLobbyCompleteDelegate, 0x18, &CreateLobbyCompleteDelegate, 0x18);

	this->ProcessEvent(uFnAddCreateLobbyCompleteDelegate, &AddCreateLobbyCompleteDelegate_Params, nullptr);
};

// Function ProjectX.Parties_X.OnCreateLobbyComplete
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

void UParties_X::OnCreateLobbyComplete(unsigned long bWasSuccessful, class FString Error, struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnOnCreateLobbyComplete = nullptr;

	if (!uFnOnCreateLobbyComplete)
	{
		uFnOnCreateLobbyComplete = UFunction::FindFunction("Function ProjectX.Parties_X.OnCreateLobbyComplete");
	}

	UParties_X_execOnCreateLobbyComplete_Params OnCreateLobbyComplete_Params;
	OnCreateLobbyComplete_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&OnCreateLobbyComplete_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&OnCreateLobbyComplete_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnOnCreateLobbyComplete, &OnCreateLobbyComplete_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &OnCreateLobbyComplete_Params.LobbyId, 0x10);
};

// Function ProjectX.Parties_X.OnExit
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UParties_X::OnExit()
{
	static UFunction* uFnOnExit = nullptr;

	if (!uFnOnExit)
	{
		uFnOnExit = UFunction::FindFunction("Function ProjectX.Parties_X.OnExit");
	}

	UParties_X_execOnExit_Params OnExit_Params;

	this->ProcessEvent(uFnOnExit, &OnExit_Params, nullptr);
};

// Function ProjectX.Parties_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UParties_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.Parties_X.Init");
	}

	UParties_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.Parties_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UParties_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.Parties_X.Construct");
	}

	UParties_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.Parties_X.EventLobbyInviteComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSucceeded                     (CPF_Parm)
// struct FUniqueNetId            InviteeID                      (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  InError                        (CPF_Parm)

void UParties_X::EventLobbyInviteComplete(unsigned long bSucceeded, struct FUniqueNetId InviteeID, class UError* InError)
{
	static UFunction* uFnEventLobbyInviteComplete = nullptr;

	if (!uFnEventLobbyInviteComplete)
	{
		uFnEventLobbyInviteComplete = UFunction::FindFunction("Function ProjectX.Parties_X.EventLobbyInviteComplete");
	}

	UParties_X_execEventLobbyInviteComplete_Params EventLobbyInviteComplete_Params;
	EventLobbyInviteComplete_Params.bSucceeded = bSucceeded;
	memcpy_s(&EventLobbyInviteComplete_Params.InviteeID, 0x48, &InviteeID, 0x48);
	memcpy_s(&EventLobbyInviteComplete_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnEventLobbyInviteComplete, &EventLobbyInviteComplete_Params, nullptr);
};

// Function ProjectX.Parties_X.EventShowInviteUI
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UParties_X::EventShowInviteUI()
{
	static UFunction* uFnEventShowInviteUI = nullptr;

	if (!uFnEventShowInviteUI)
	{
		uFnEventShowInviteUI = UFunction::FindFunction("Function ProjectX.Parties_X.EventShowInviteUI");
	}

	UParties_X_execEventShowInviteUI_Params EventShowInviteUI_Params;

	this->ProcessEvent(uFnEventShowInviteUI, &EventShowInviteUI_Params, nullptr);
};

// Function ProjectX.PartySequence_PsyNetPartyUpgrade_X.HandleJoinPsyNetLobby
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyUID                       (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_PsyNetPartyUpgrade_X::HandleJoinPsyNetLobby(unsigned long bWasSuccessful, class FString Error, struct FActiveLobbyInfo& LobbyInfo, struct FUniqueLobbyId& LobbyUID)
{
	static UFunction* uFnHandleJoinPsyNetLobby = nullptr;

	if (!uFnHandleJoinPsyNetLobby)
	{
		uFnHandleJoinPsyNetLobby = UFunction::FindFunction("Function ProjectX.PartySequence_PsyNetPartyUpgrade_X.HandleJoinPsyNetLobby");
	}

	UPartySequence_PsyNetPartyUpgrade_X_execHandleJoinPsyNetLobby_Params HandleJoinPsyNetLobby_Params;
	HandleJoinPsyNetLobby_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&HandleJoinPsyNetLobby_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&HandleJoinPsyNetLobby_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&HandleJoinPsyNetLobby_Params.LobbyUID, 0x10, &LobbyUID, 0x10);

	this->ProcessEvent(uFnHandleJoinPsyNetLobby, &HandleJoinPsyNetLobby_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &HandleJoinPsyNetLobby_Params.LobbyInfo, 0x30);
	memcpy_s(&LobbyUID, 0x10, &HandleJoinPsyNetLobby_Params.LobbyUID, 0x10);
};

// Function ProjectX.PartySequence_PsyNetPartyUpgrade_X.TryUpgrade
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          PlatformLobbyUID               (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_PsyNetPartyUpgrade_X::TryUpgrade(struct FActiveLobbyInfo& LobbyInfo, struct FUniqueLobbyId& PlatformLobbyUID)
{
	static UFunction* uFnTryUpgrade = nullptr;

	if (!uFnTryUpgrade)
	{
		uFnTryUpgrade = UFunction::FindFunction("Function ProjectX.PartySequence_PsyNetPartyUpgrade_X.TryUpgrade");
	}

	UPartySequence_PsyNetPartyUpgrade_X_execTryUpgrade_Params TryUpgrade_Params;
	memcpy_s(&TryUpgrade_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&TryUpgrade_Params.PlatformLobbyUID, 0x10, &PlatformLobbyUID, 0x10);

	this->ProcessEvent(uFnTryUpgrade, &TryUpgrade_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &TryUpgrade_Params.LobbyInfo, 0x30);
	memcpy_s(&PlatformLobbyUID, 0x10, &TryUpgrade_Params.PlatformLobbyUID, 0x10);
};

// Function ProjectX.PartySequence_InvitedToPsyNetParty_X.JoinPsyNetPartyCallback
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// struct FUniqueLobbyId          InLobbyId                      (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_InvitedToPsyNetParty_X::JoinPsyNetPartyCallback(int32_t LocalPlayerNum, struct FUniqueLobbyId& InLobbyId)
{
	static UFunction* uFnJoinPsyNetPartyCallback = nullptr;

	if (!uFnJoinPsyNetPartyCallback)
	{
		uFnJoinPsyNetPartyCallback = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPsyNetParty_X.JoinPsyNetPartyCallback");
	}

	UPartySequence_InvitedToPsyNetParty_X_execJoinPsyNetPartyCallback_Params JoinPsyNetPartyCallback_Params;
	memcpy_s(&JoinPsyNetPartyCallback_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&JoinPsyNetPartyCallback_Params.InLobbyId, 0x10, &InLobbyId, 0x10);

	this->ProcessEvent(uFnJoinPsyNetPartyCallback, &JoinPsyNetPartyCallback_Params, nullptr);

	memcpy_s(&InLobbyId, 0x10, &JoinPsyNetPartyCallback_Params.InLobbyId, 0x10);
};

// Function ProjectX.PartySequence_InvitedToPsyNetParty_X.HandlePlayerInvited
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bAccepted                      (CPF_Parm)
// struct FUniqueLobbyId          InLobbyId                      (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            InviterId                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UAsyncTask* UPartySequence_InvitedToPsyNetParty_X::HandlePlayerInvited(unsigned long bAccepted, struct FUniqueLobbyId& InLobbyId, struct FUniqueNetId& InviterId)
{
	static UFunction* uFnHandlePlayerInvited = nullptr;

	if (!uFnHandlePlayerInvited)
	{
		uFnHandlePlayerInvited = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPsyNetParty_X.HandlePlayerInvited");
	}

	UPartySequence_InvitedToPsyNetParty_X_execHandlePlayerInvited_Params HandlePlayerInvited_Params;
	HandlePlayerInvited_Params.bAccepted = bAccepted;
	memcpy_s(&HandlePlayerInvited_Params.InLobbyId, 0x10, &InLobbyId, 0x10);
	memcpy_s(&HandlePlayerInvited_Params.InviterId, 0x48, &InviterId, 0x48);

	this->ProcessEvent(uFnHandlePlayerInvited, &HandlePlayerInvited_Params, nullptr);

	memcpy_s(&InLobbyId, 0x10, &HandlePlayerInvited_Params.InLobbyId, 0x10);
	memcpy_s(&InviterId, 0x48, &HandlePlayerInvited_Params.InviterId, 0x48);

	return HandlePlayerInvited_Params.ReturnValue;
};

// Function ProjectX.PartySequence_InvitedToPsyNetParty_X.HandlePlayerInvitedPrompt
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bAccepted                      (CPF_Parm)
// struct FUniqueLobbyId          InLobbyId                      (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            InviterId                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPartySequence_InvitedToPsyNetParty_X::HandlePlayerInvitedPrompt(unsigned long bAccepted, struct FUniqueLobbyId& InLobbyId, struct FUniqueNetId& InviterId)
{
	static UFunction* uFnHandlePlayerInvitedPrompt = nullptr;

	if (!uFnHandlePlayerInvitedPrompt)
	{
		uFnHandlePlayerInvitedPrompt = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPsyNetParty_X.HandlePlayerInvitedPrompt");
	}

	UPartySequence_InvitedToPsyNetParty_X_execHandlePlayerInvitedPrompt_Params HandlePlayerInvitedPrompt_Params;
	HandlePlayerInvitedPrompt_Params.bAccepted = bAccepted;
	memcpy_s(&HandlePlayerInvitedPrompt_Params.InLobbyId, 0x10, &InLobbyId, 0x10);
	memcpy_s(&HandlePlayerInvitedPrompt_Params.InviterId, 0x48, &InviterId, 0x48);

	this->ProcessEvent(uFnHandlePlayerInvitedPrompt, &HandlePlayerInvitedPrompt_Params, nullptr);

	memcpy_s(&InLobbyId, 0x10, &HandlePlayerInvitedPrompt_Params.InLobbyId, 0x10);
	memcpy_s(&InviterId, 0x48, &HandlePlayerInvitedPrompt_Params.InviterId, 0x48);
};

// Function ProjectX.PartySequence_InvitedToPsyNetParty_X.HandlePlayerInvitedSilent
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          InLobbyId                      (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            InviterId                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPartySequence_InvitedToPsyNetParty_X::HandlePlayerInvitedSilent(struct FUniqueLobbyId& InLobbyId, struct FUniqueNetId& InviterId)
{
	static UFunction* uFnHandlePlayerInvitedSilent = nullptr;

	if (!uFnHandlePlayerInvitedSilent)
	{
		uFnHandlePlayerInvitedSilent = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPsyNetParty_X.HandlePlayerInvitedSilent");
	}

	UPartySequence_InvitedToPsyNetParty_X_execHandlePlayerInvitedSilent_Params HandlePlayerInvitedSilent_Params;
	memcpy_s(&HandlePlayerInvitedSilent_Params.InLobbyId, 0x10, &InLobbyId, 0x10);
	memcpy_s(&HandlePlayerInvitedSilent_Params.InviterId, 0x48, &InviterId, 0x48);

	this->ProcessEvent(uFnHandlePlayerInvitedSilent, &HandlePlayerInvitedSilent_Params, nullptr);

	memcpy_s(&InLobbyId, 0x10, &HandlePlayerInvitedSilent_Params.InLobbyId, 0x10);
	memcpy_s(&InviterId, 0x48, &HandlePlayerInvitedSilent_Params.InviterId, 0x48);
};

// Function ProjectX.PartySequence_InvitedToPsyNetParty_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPartySequence_InvitedToPsyNetParty_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PartySequence_InvitedToPsyNetParty_X.Init");
	}

	UPartySequence_InvitedToPsyNetParty_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.PartyPlatformSession_X.ClearPlatformParty
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UPartyPlatformSession_X::ClearPlatformParty()
{
	static UFunction* uFnClearPlatformParty = nullptr;

	if (!uFnClearPlatformParty)
	{
		uFnClearPlatformParty = UFunction::FindFunction("Function ProjectX.PartyPlatformSession_X.ClearPlatformParty");
	}

	UPartyPlatformSession_X_execClearPlatformParty_Params ClearPlatformParty_Params;

	this->ProcessEvent(uFnClearPlatformParty, &ClearPlatformParty_Params, nullptr);
};

// Function ProjectX.PartyPlatformSession_X.LeaveParty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPartyPlatformSession_X::LeaveParty()
{
	static UFunction* uFnLeaveParty = nullptr;

	if (!uFnLeaveParty)
	{
		uFnLeaveParty = UFunction::FindFunction("Function ProjectX.PartyPlatformSession_X.LeaveParty");
	}

	UPartyPlatformSession_X_execLeaveParty_Params LeaveParty_Params;

	this->ProcessEvent(uFnLeaveParty, &LeaveParty_Params, nullptr);
};

// Function ProjectX.PartyPlatformSession_X.BroadcastPlatformParty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPartyPlatformSession_X::BroadcastPlatformParty()
{
	static UFunction* uFnBroadcastPlatformParty = nullptr;

	if (!uFnBroadcastPlatformParty)
	{
		uFnBroadcastPlatformParty = UFunction::FindFunction("Function ProjectX.PartyPlatformSession_X.BroadcastPlatformParty");
	}

	UPartyPlatformSession_X_execBroadcastPlatformParty_Params BroadcastPlatformParty_Params;

	this->ProcessEvent(uFnBroadcastPlatformParty, &BroadcastPlatformParty_Params, nullptr);
};

// Function ProjectX.PartyPlatformSession_X.HandleJoinPlatformParty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          InPartyId                      (CPF_Parm)

void UPartyPlatformSession_X::HandleJoinPlatformParty(struct FUniqueLobbyId InPartyId)
{
	static UFunction* uFnHandleJoinPlatformParty = nullptr;

	if (!uFnHandleJoinPlatformParty)
	{
		uFnHandleJoinPlatformParty = UFunction::FindFunction("Function ProjectX.PartyPlatformSession_X.HandleJoinPlatformParty");
	}

	UPartyPlatformSession_X_execHandleJoinPlatformParty_Params HandleJoinPlatformParty_Params;
	memcpy_s(&HandleJoinPlatformParty_Params.InPartyId, 0x10, &InPartyId, 0x10);

	this->ProcessEvent(uFnHandleJoinPlatformParty, &HandleJoinPlatformParty_Params, nullptr);
};

// Function ProjectX.PartyPlatformSession_X.IsInParty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPartyPlatformSession_X::IsInParty()
{
	static UFunction* uFnIsInParty = nullptr;

	if (!uFnIsInParty)
	{
		uFnIsInParty = UFunction::FindFunction("Function ProjectX.PartyPlatformSession_X.IsInParty");
	}

	UPartyPlatformSession_X_execIsInParty_Params IsInParty_Params;

	this->ProcessEvent(uFnIsInParty, &IsInParty_Params, nullptr);

	return IsInParty_Params.ReturnValue;
};

// Function ProjectX.PartyPlatformSession_X.EventPartyIdChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPartyPlatformSession_X* Session                        (CPF_Parm)

void UPartyPlatformSession_X::EventPartyIdChanged(class UPartyPlatformSession_X* Session)
{
	static UFunction* uFnEventPartyIdChanged = nullptr;

	if (!uFnEventPartyIdChanged)
	{
		uFnEventPartyIdChanged = UFunction::FindFunction("Function ProjectX.PartyPlatformSession_X.EventPartyIdChanged");
	}

	UPartyPlatformSession_X_execEventPartyIdChanged_Params EventPartyIdChanged_Params;
	memcpy_s(&EventPartyIdChanged_Params.Session, 0x8, &Session, 0x8);

	this->ProcessEvent(uFnEventPartyIdChanged, &EventPartyIdChanged_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyChannelError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        MissingMessageID               (CPF_Parm)

void UPartyMetrics_X::PartyChannelError(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, int32_t MissingMessageID)
{
	static UFunction* uFnPartyChannelError = nullptr;

	if (!uFnPartyChannelError)
	{
		uFnPartyChannelError = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyChannelError");
	}

	UPartyMetrics_X_execPartyChannelError_Params PartyChannelError_Params;
	memcpy_s(&PartyChannelError_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyChannelError_Params.LeaderID, 0x48, &LeaderID, 0x48);
	memcpy_s(&PartyChannelError_Params.MissingMessageID, 0x4, &MissingMessageID, 0x4);

	this->ProcessEvent(uFnPartyChannelError, &PartyChannelError_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   MessageType                    (CPF_Parm)

void UPartyMetrics_X::PartyMessage(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, struct FName MessageType)
{
	static UFunction* uFnPartyMessage = nullptr;

	if (!uFnPartyMessage)
	{
		uFnPartyMessage = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyMessage");
	}

	UPartyMetrics_X_execPartyMessage_Params PartyMessage_Params;
	memcpy_s(&PartyMessage_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyMessage_Params.LeaderID, 0x48, &LeaderID, 0x48);
	memcpy_s(&PartyMessage_Params.MessageType, 0x8, &MessageType, 0x8);

	this->ProcessEvent(uFnPartyMessage, &PartyMessage_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bLeader                        (CPF_Parm)
// int32_t                        PartySize                      (CPF_Parm)
// int32_t                        LocalPlayers                   (CPF_Parm)
// int32_t                        RemotePlayers                  (CPF_Parm)

void UPartyMetrics_X::PartyChanged(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, unsigned long bLeader, int32_t PartySize, int32_t LocalPlayers, int32_t RemotePlayers)
{
	static UFunction* uFnPartyChanged = nullptr;

	if (!uFnPartyChanged)
	{
		uFnPartyChanged = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyChanged");
	}

	UPartyMetrics_X_execPartyChanged_Params PartyChanged_Params;
	memcpy_s(&PartyChanged_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyChanged_Params.LeaderID, 0x48, &LeaderID, 0x48);
	PartyChanged_Params.bLeader = bLeader;
	memcpy_s(&PartyChanged_Params.PartySize, 0x4, &PartySize, 0x4);
	memcpy_s(&PartyChanged_Params.LocalPlayers, 0x4, &LocalPlayers, 0x4);
	memcpy_s(&PartyChanged_Params.RemotePlayers, 0x4, &RemotePlayers, 0x4);

	this->ProcessEvent(uFnPartyChanged, &PartyChanged_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.CreatePartyMetricsData
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPartyMetricsData       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UOnlineGameParty_X*      Party                          (CPF_Parm)

struct FPartyMetricsData UPartyMetrics_X::CreatePartyMetricsData(class UOnlineGameParty_X* Party)
{
	static UFunction* uFnCreatePartyMetricsData = nullptr;

	if (!uFnCreatePartyMetricsData)
	{
		uFnCreatePartyMetricsData = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.CreatePartyMetricsData");
	}

	UPartyMetrics_X_execCreatePartyMetricsData_Params CreatePartyMetricsData_Params;
	memcpy_s(&CreatePartyMetricsData_Params.Party, 0x8, &Party, 0x8);

	this->ProcessEvent(uFnCreatePartyMetricsData, &CreatePartyMetricsData_Params, nullptr);

	return CreatePartyMetricsData_Params.ReturnValue;
};

// Function ProjectX.PartyMetrics_X.RecordPartyChanged
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      Party                          (CPF_Parm)

void UPartyMetrics_X::RecordPartyChanged(class UOnlineGameParty_X* Party)
{
	static UFunction* uFnRecordPartyChanged = nullptr;

	if (!uFnRecordPartyChanged)
	{
		uFnRecordPartyChanged = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.RecordPartyChanged");
	}

	UPartyMetrics_X_execRecordPartyChanged_Params RecordPartyChanged_Params;
	memcpy_s(&RecordPartyChanged_Params.Party, 0x8, &Party, 0x8);

	this->ProcessEvent(uFnRecordPartyChanged, &RecordPartyChanged_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)

void UPartyMetrics_X::PartyError(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, class FString Error)
{
	static UFunction* uFnPartyError = nullptr;

	if (!uFnPartyError)
	{
		uFnPartyError = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyError");
	}

	UPartyMetrics_X_execPartyError_Params PartyError_Params;
	memcpy_s(&PartyError_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyError_Params.LeaderID, 0x48, &LeaderID, 0x48);
	memcpy_s(&PartyError_Params.Error, 0x10, &Error, 0x10);

	this->ProcessEvent(uFnPartyError, &PartyError_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyKickRemotePlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Reason                         (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

void UPartyMetrics_X::PartyKickRemotePlayer(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, class FString Reason)
{
	static UFunction* uFnPartyKickRemotePlayer = nullptr;

	if (!uFnPartyKickRemotePlayer)
	{
		uFnPartyKickRemotePlayer = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyKickRemotePlayer");
	}

	UPartyMetrics_X_execPartyKickRemotePlayer_Params PartyKickRemotePlayer_Params;
	memcpy_s(&PartyKickRemotePlayer_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyKickRemotePlayer_Params.LeaderID, 0x48, &LeaderID, 0x48);
	memcpy_s(&PartyKickRemotePlayer_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnPartyKickRemotePlayer, &PartyKickRemotePlayer_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyKickLocalPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Reason                         (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

void UPartyMetrics_X::PartyKickLocalPlayer(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, class FString Reason)
{
	static UFunction* uFnPartyKickLocalPlayer = nullptr;

	if (!uFnPartyKickLocalPlayer)
	{
		uFnPartyKickLocalPlayer = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyKickLocalPlayer");
	}

	UPartyMetrics_X_execPartyKickLocalPlayer_Params PartyKickLocalPlayer_Params;
	memcpy_s(&PartyKickLocalPlayer_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyKickLocalPlayer_Params.LeaderID, 0x48, &LeaderID, 0x48);
	memcpy_s(&PartyKickLocalPlayer_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnPartyKickLocalPlayer, &PartyKickLocalPlayer_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyLeave
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UPartyMetrics_X::PartyLeave(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, class FString Reason)
{
	static UFunction* uFnPartyLeave = nullptr;

	if (!uFnPartyLeave)
	{
		uFnPartyLeave = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyLeave");
	}

	UPartyMetrics_X_execPartyLeave_Params PartyLeave_Params;
	memcpy_s(&PartyLeave_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyLeave_Params.LeaderID, 0x48, &LeaderID, 0x48);
	memcpy_s(&PartyLeave_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnPartyLeave, &PartyLeave_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyCreationError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)

void UPartyMetrics_X::PartyCreationError(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID, class FString Error)
{
	static UFunction* uFnPartyCreationError = nullptr;

	if (!uFnPartyCreationError)
	{
		uFnPartyCreationError = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyCreationError");
	}

	UPartyMetrics_X_execPartyCreationError_Params PartyCreationError_Params;
	memcpy_s(&PartyCreationError_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyCreationError_Params.LeaderID, 0x48, &LeaderID, 0x48);
	memcpy_s(&PartyCreationError_Params.Error, 0x10, &Error, 0x10);

	this->ProcessEvent(uFnPartyCreationError, &PartyCreationError_Params, nullptr);
};

// Function ProjectX.PartyMetrics_X.PartyCreated
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PartyID                        (CPF_Parm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)

void UPartyMetrics_X::PartyCreated(struct FUniqueLobbyId PartyID, struct FUniqueNetId LeaderID)
{
	static UFunction* uFnPartyCreated = nullptr;

	if (!uFnPartyCreated)
	{
		uFnPartyCreated = UFunction::FindFunction("Function ProjectX.PartyMetrics_X.PartyCreated");
	}

	UPartyMetrics_X_execPartyCreated_Params PartyCreated_Params;
	memcpy_s(&PartyCreated_Params.PartyID, 0x10, &PartyID, 0x10);
	memcpy_s(&PartyCreated_Params.LeaderID, 0x48, &LeaderID, 0x48);

	this->ProcessEvent(uFnPartyCreated, &PartyCreated_Params, nullptr);
};

// Function ProjectX.__OnlineGameParty_X__CreatePartyInternal_0x1.__OnlineGameParty_X__CreatePartyInternal_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  ConnectionError                (CPF_Parm)

void U__OnlineGameParty_X__CreatePartyInternal_0x1::__OnlineGameParty_X__CreatePartyInternal_0x1(class UError* ConnectionError)
{
	static UFunction* uFn__OnlineGameParty_X__CreatePartyInternal_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__CreatePartyInternal_0x1)
	{
		uFn__OnlineGameParty_X__CreatePartyInternal_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__CreatePartyInternal_0x1.__OnlineGameParty_X__CreatePartyInternal_0x1");
	}

	U__OnlineGameParty_X__CreatePartyInternal_0x1_exec__OnlineGameParty_X__CreatePartyInternal_0x1_Params __OnlineGameParty_X__CreatePartyInternal_0x1_Params;
	memcpy_s(&__OnlineGameParty_X__CreatePartyInternal_0x1_Params.ConnectionError, 0x8, &ConnectionError, 0x8);

	this->ProcessEvent(uFn__OnlineGameParty_X__CreatePartyInternal_0x1, &__OnlineGameParty_X__CreatePartyInternal_0x1_Params, nullptr);
};

// Function ProjectX.__OnlineGameParty_X__JoinParty_0x1.__OnlineGameParty_X__JoinParty_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       PrivilegeCheck                 (CPF_Parm)

void U__OnlineGameParty_X__JoinParty_0x1::__OnlineGameParty_X__JoinParty_0x1(class UPrivilegeCheck_X* PrivilegeCheck)
{
	static UFunction* uFn__OnlineGameParty_X__JoinParty_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__JoinParty_0x1)
	{
		uFn__OnlineGameParty_X__JoinParty_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__JoinParty_0x1.__OnlineGameParty_X__JoinParty_0x1");
	}

	U__OnlineGameParty_X__JoinParty_0x1_exec__OnlineGameParty_X__JoinParty_0x1_Params __OnlineGameParty_X__JoinParty_0x1_Params;
	memcpy_s(&__OnlineGameParty_X__JoinParty_0x1_Params.PrivilegeCheck, 0x8, &PrivilegeCheck, 0x8);

	this->ProcessEvent(uFn__OnlineGameParty_X__JoinParty_0x1, &__OnlineGameParty_X__JoinParty_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.IsCheckingPrivileges
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGamePrivileges_X::IsCheckingPrivileges()
{
	static UFunction* uFnIsCheckingPrivileges = nullptr;

	if (!uFnIsCheckingPrivileges)
	{
		uFnIsCheckingPrivileges = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.IsCheckingPrivileges");
	}

	UOnlineGamePrivileges_X_execIsCheckingPrivileges_Params IsCheckingPrivileges_Params;

	this->ProcessEvent(uFnIsCheckingPrivileges, &IsCheckingPrivileges_Params, nullptr);

	return IsCheckingPrivileges_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePrivileges_X.RemoveCallback
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivileges_X::RemoveCallback(struct FScriptDelegate Callback)
{
	static UFunction* uFnRemoveCallback = nullptr;

	if (!uFnRemoveCallback)
	{
		uFnRemoveCallback = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.RemoveCallback");
	}

	UOnlineGamePrivileges_X_execRemoveCallback_Params RemoveCallback_Params;
	memcpy_s(&RemoveCallback_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnRemoveCallback, &RemoveCallback_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.HandlePrivilegeCheckFinished
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       PrivilegeCheck                 (CPF_Parm)

void UOnlineGamePrivileges_X::HandlePrivilegeCheckFinished(class UPrivilegeCheck_X* PrivilegeCheck)
{
	static UFunction* uFnHandlePrivilegeCheckFinished = nullptr;

	if (!uFnHandlePrivilegeCheckFinished)
	{
		uFnHandlePrivilegeCheckFinished = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.HandlePrivilegeCheckFinished");
	}

	UOnlineGamePrivileges_X_execHandlePrivilegeCheckFinished_Params HandlePrivilegeCheckFinished_Params;
	memcpy_s(&HandlePrivilegeCheckFinished_Params.PrivilegeCheck, 0x8, &PrivilegeCheck, 0x8);

	this->ProcessEvent(uFnHandlePrivilegeCheckFinished, &HandlePrivilegeCheckFinished_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.CreatePrivilegeCheck
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        ControllerId                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UPrivilegeCheck_X* UOnlineGamePrivileges_X::CreatePrivilegeCheck(int32_t ControllerId, struct FScriptDelegate Callback)
{
	static UFunction* uFnCreatePrivilegeCheck = nullptr;

	if (!uFnCreatePrivilegeCheck)
	{
		uFnCreatePrivilegeCheck = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.CreatePrivilegeCheck");
	}

	UOnlineGamePrivileges_X_execCreatePrivilegeCheck_Params CreatePrivilegeCheck_Params;
	memcpy_s(&CreatePrivilegeCheck_Params.ControllerId, 0x4, &ControllerId, 0x4);
	memcpy_s(&CreatePrivilegeCheck_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnCreatePrivilegeCheck, &CreatePrivilegeCheck_Params, nullptr);

	return CreatePrivilegeCheck_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePrivileges_X.TryToPlayOnlineAndUseUGC
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ControllerId                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivileges_X::TryToPlayOnlineAndUseUGC(int32_t ControllerId, struct FScriptDelegate Callback)
{
	static UFunction* uFnTryToPlayOnlineAndUseUGC = nullptr;

	if (!uFnTryToPlayOnlineAndUseUGC)
	{
		uFnTryToPlayOnlineAndUseUGC = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.TryToPlayOnlineAndUseUGC");
	}

	UOnlineGamePrivileges_X_execTryToPlayOnlineAndUseUGC_Params TryToPlayOnlineAndUseUGC_Params;
	memcpy_s(&TryToPlayOnlineAndUseUGC_Params.ControllerId, 0x4, &ControllerId, 0x4);
	memcpy_s(&TryToPlayOnlineAndUseUGC_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnTryToPlayOnlineAndUseUGC, &TryToPlayOnlineAndUseUGC_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.AddUGCChecks
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPrivilegeCheck_X*       Check                          (CPF_Parm)

class UPrivilegeCheck_X* UOnlineGamePrivileges_X::AddUGCChecks(class UPrivilegeCheck_X* Check)
{
	static UFunction* uFnAddUGCChecks = nullptr;

	if (!uFnAddUGCChecks)
	{
		uFnAddUGCChecks = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.AddUGCChecks");
	}

	UOnlineGamePrivileges_X_execAddUGCChecks_Params AddUGCChecks_Params;
	memcpy_s(&AddUGCChecks_Params.Check, 0x8, &Check, 0x8);

	this->ProcessEvent(uFnAddUGCChecks, &AddUGCChecks_Params, nullptr);

	return AddUGCChecks_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePrivileges_X.TryToUseUGC
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ControllerId                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivileges_X::TryToUseUGC(int32_t ControllerId, struct FScriptDelegate Callback)
{
	static UFunction* uFnTryToUseUGC = nullptr;

	if (!uFnTryToUseUGC)
	{
		uFnTryToUseUGC = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.TryToUseUGC");
	}

	UOnlineGamePrivileges_X_execTryToUseUGC_Params TryToUseUGC_Params;
	memcpy_s(&TryToUseUGC_Params.ControllerId, 0x4, &ControllerId, 0x4);
	memcpy_s(&TryToUseUGC_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnTryToUseUGC, &TryToUseUGC_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.AddPlayOnlineChecks
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPrivilegeCheck_X*       Check                          (CPF_Parm)

class UPrivilegeCheck_X* UOnlineGamePrivileges_X::AddPlayOnlineChecks(class UPrivilegeCheck_X* Check)
{
	static UFunction* uFnAddPlayOnlineChecks = nullptr;

	if (!uFnAddPlayOnlineChecks)
	{
		uFnAddPlayOnlineChecks = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.AddPlayOnlineChecks");
	}

	UOnlineGamePrivileges_X_execAddPlayOnlineChecks_Params AddPlayOnlineChecks_Params;
	memcpy_s(&AddPlayOnlineChecks_Params.Check, 0x8, &Check, 0x8);

	this->ProcessEvent(uFnAddPlayOnlineChecks, &AddPlayOnlineChecks_Params, nullptr);

	return AddPlayOnlineChecks_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePrivileges_X.TryToPlayOnline
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ControllerId                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivileges_X::TryToPlayOnline(int32_t ControllerId, struct FScriptDelegate Callback)
{
	static UFunction* uFnTryToPlayOnline = nullptr;

	if (!uFnTryToPlayOnline)
	{
		uFnTryToPlayOnline = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.TryToPlayOnline");
	}

	UOnlineGamePrivileges_X_execTryToPlayOnline_Params TryToPlayOnline_Params;
	memcpy_s(&TryToPlayOnline_Params.ControllerId, 0x4, &ControllerId, 0x4);
	memcpy_s(&TryToPlayOnline_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnTryToPlayOnline, &TryToPlayOnline_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.TryToUsePsyNet
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ControllerId                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivileges_X::TryToUsePsyNet(int32_t ControllerId, struct FScriptDelegate Callback)
{
	static UFunction* uFnTryToUsePsyNet = nullptr;

	if (!uFnTryToUsePsyNet)
	{
		uFnTryToUsePsyNet = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.TryToUsePsyNet");
	}

	UOnlineGamePrivileges_X_execTryToUsePsyNet_Params TryToUsePsyNet_Params;
	memcpy_s(&TryToUsePsyNet_Params.ControllerId, 0x4, &ControllerId, 0x4);
	memcpy_s(&TryToUsePsyNet_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnTryToUsePsyNet, &TryToUsePsyNet_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.TryToViewLeaderboards
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ControllerId                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivileges_X::TryToViewLeaderboards(int32_t ControllerId, struct FScriptDelegate Callback)
{
	static UFunction* uFnTryToViewLeaderboards = nullptr;

	if (!uFnTryToViewLeaderboards)
	{
		uFnTryToViewLeaderboards = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.TryToViewLeaderboards");
	}

	UOnlineGamePrivileges_X_execTryToViewLeaderboards_Params TryToViewLeaderboards_Params;
	memcpy_s(&TryToViewLeaderboards_Params.ControllerId, 0x4, &ControllerId, 0x4);
	memcpy_s(&TryToViewLeaderboards_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnTryToViewLeaderboards, &TryToViewLeaderboards_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.TryToBrowseInternet
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ControllerId                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivileges_X::TryToBrowseInternet(int32_t ControllerId, struct FScriptDelegate Callback)
{
	static UFunction* uFnTryToBrowseInternet = nullptr;

	if (!uFnTryToBrowseInternet)
	{
		uFnTryToBrowseInternet = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.TryToBrowseInternet");
	}

	UOnlineGamePrivileges_X_execTryToBrowseInternet_Params TryToBrowseInternet_Params;
	memcpy_s(&TryToBrowseInternet_Params.ControllerId, 0x4, &ControllerId, 0x4);
	memcpy_s(&TryToBrowseInternet_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnTryToBrowseInternet, &TryToBrowseInternet_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.EventPrivilegeCheckRestriction
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPrivilegeCheck_X*       Check                          (CPF_Parm)

void UOnlineGamePrivileges_X::EventPrivilegeCheckRestriction(class UPrivilegeCheck_X* Check)
{
	static UFunction* uFnEventPrivilegeCheckRestriction = nullptr;

	if (!uFnEventPrivilegeCheckRestriction)
	{
		uFnEventPrivilegeCheckRestriction = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.EventPrivilegeCheckRestriction");
	}

	UOnlineGamePrivileges_X_execEventPrivilegeCheckRestriction_Params EventPrivilegeCheckRestriction_Params;
	memcpy_s(&EventPrivilegeCheckRestriction_Params.Check, 0x8, &Check, 0x8);

	this->ProcessEvent(uFnEventPrivilegeCheckRestriction, &EventPrivilegeCheckRestriction_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivileges_X.EventCheckingPrivilegesChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGamePrivileges_X* PrivilegesObject               (CPF_Parm)

void UOnlineGamePrivileges_X::EventCheckingPrivilegesChanged(class UOnlineGamePrivileges_X* PrivilegesObject)
{
	static UFunction* uFnEventCheckingPrivilegesChanged = nullptr;

	if (!uFnEventCheckingPrivilegesChanged)
	{
		uFnEventCheckingPrivilegesChanged = UFunction::FindFunction("Function ProjectX.OnlineGamePrivileges_X.EventCheckingPrivilegesChanged");
	}

	UOnlineGamePrivileges_X_execEventCheckingPrivilegesChanged_Params EventCheckingPrivilegesChanged_Params;
	memcpy_s(&EventCheckingPrivilegesChanged_Params.PrivilegesObject, 0x8, &PrivilegesObject, 0x8);

	this->ProcessEvent(uFnEventCheckingPrivilegesChanged, &EventCheckingPrivilegesChanged_Params, nullptr);
};

// Function ProjectX.OnlineGamePlaylists_X.__OnlineGamePlaylists_X__GetPrivateMatch_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGameSettingPlaylist_X*  P                              (CPF_Parm)

bool UOnlineGamePlaylists_X::__OnlineGamePlaylists_X__GetPrivateMatch_0x1(class UGameSettingPlaylist_X* P)
{
	static UFunction* uFn__OnlineGamePlaylists_X__GetPrivateMatch_0x1 = nullptr;

	if (!uFn__OnlineGamePlaylists_X__GetPrivateMatch_0x1)
	{
		uFn__OnlineGamePlaylists_X__GetPrivateMatch_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.__OnlineGamePlaylists_X__GetPrivateMatch_0x1");
	}

	UOnlineGamePlaylists_X_exec__OnlineGamePlaylists_X__GetPrivateMatch_0x1_Params __OnlineGamePlaylists_X__GetPrivateMatch_0x1_Params;
	memcpy_s(&__OnlineGamePlaylists_X__GetPrivateMatch_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__OnlineGamePlaylists_X__GetPrivateMatch_0x1, &__OnlineGamePlaylists_X__GetPrivateMatch_0x1_Params, nullptr);

	return __OnlineGamePlaylists_X__GetPrivateMatch_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.__OnlineGamePlaylists_X__GetLanMatch_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGameSettingPlaylist_X*  P                              (CPF_Parm)

bool UOnlineGamePlaylists_X::__OnlineGamePlaylists_X__GetLanMatch_0x1(class UGameSettingPlaylist_X* P)
{
	static UFunction* uFn__OnlineGamePlaylists_X__GetLanMatch_0x1 = nullptr;

	if (!uFn__OnlineGamePlaylists_X__GetLanMatch_0x1)
	{
		uFn__OnlineGamePlaylists_X__GetLanMatch_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.__OnlineGamePlaylists_X__GetLanMatch_0x1");
	}

	UOnlineGamePlaylists_X_exec__OnlineGamePlaylists_X__GetLanMatch_0x1_Params __OnlineGamePlaylists_X__GetLanMatch_0x1_Params;
	memcpy_s(&__OnlineGamePlaylists_X__GetLanMatch_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__OnlineGamePlaylists_X__GetLanMatch_0x1, &__OnlineGamePlaylists_X__GetLanMatch_0x1_Params, nullptr);

	return __OnlineGamePlaylists_X__GetLanMatch_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGameSettingPlaylist_X*  Playlist                       (CPF_Parm)

int32_t UOnlineGamePlaylists_X::__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2(class UGameSettingPlaylist_X* Playlist)
{
	static UFunction* uFn__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2 = nullptr;

	if (!uFn__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2)
	{
		uFn__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2");
	}

	UOnlineGamePlaylists_X_exec__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2_Params __OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2_Params;
	memcpy_s(&__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2_Params.Playlist, 0x8, &Playlist, 0x8);

	this->ProcessEvent(uFn__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2, &__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2_Params, nullptr);

	return __OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGameSettingPlaylist_X*  Playlist                       (CPF_Parm)

bool UOnlineGamePlaylists_X::__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1(class UGameSettingPlaylist_X* Playlist)
{
	static UFunction* uFn__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1 = nullptr;

	if (!uFn__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1)
	{
		uFn__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1");
	}

	UOnlineGamePlaylists_X_exec__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1_Params __OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1_Params;
	memcpy_s(&__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1_Params.Playlist, 0x8, &Playlist, 0x8);

	this->ProcessEvent(uFn__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1, &__OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1_Params, nullptr);

	return __OnlineGamePlaylists_X__GetRankedPlaylistIDs_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.GetRankedPlaylistIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<int32_t>                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<int32_t> UOnlineGamePlaylists_X::GetRankedPlaylistIDs()
{
	static UFunction* uFnGetRankedPlaylistIDs = nullptr;

	if (!uFnGetRankedPlaylistIDs)
	{
		uFnGetRankedPlaylistIDs = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetRankedPlaylistIDs");
	}

	UOnlineGamePlaylists_X_execGetRankedPlaylistIDs_Params GetRankedPlaylistIDs_Params;

	this->ProcessEvent(uFnGetRankedPlaylistIDs, &GetRankedPlaylistIDs_Params, nullptr);

	return GetRankedPlaylistIDs_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.GetLocalizedPlaylistIDCategory
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// int32_t                        PlaylistId                     (CPF_Parm)

class FString UOnlineGamePlaylists_X::GetLocalizedPlaylistIDCategory(int32_t PlaylistId)
{
	static UFunction* uFnGetLocalizedPlaylistIDCategory = nullptr;

	if (!uFnGetLocalizedPlaylistIDCategory)
	{
		uFnGetLocalizedPlaylistIDCategory = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetLocalizedPlaylistIDCategory");
	}

	UOnlineGamePlaylists_X_execGetLocalizedPlaylistIDCategory_Params GetLocalizedPlaylistIDCategory_Params;
	memcpy_s(&GetLocalizedPlaylistIDCategory_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnGetLocalizedPlaylistIDCategory, &GetLocalizedPlaylistIDCategory_Params, nullptr);

	return GetLocalizedPlaylistIDCategory_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.GetLanMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGameSettingPlaylist_X* UOnlineGamePlaylists_X::GetLanMatch()
{
	static UFunction* uFnGetLanMatch = nullptr;

	if (!uFnGetLanMatch)
	{
		uFnGetLanMatch = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetLanMatch");
	}

	UOnlineGamePlaylists_X_execGetLanMatch_Params GetLanMatch_Params;

	this->ProcessEvent(uFnGetLanMatch, &GetLanMatch_Params, nullptr);

	return GetLanMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.GetPrivateMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UGameSettingPlaylist_X* UOnlineGamePlaylists_X::GetPrivateMatch()
{
	static UFunction* uFnGetPrivateMatch = nullptr;

	if (!uFnGetPrivateMatch)
	{
		uFnGetPrivateMatch = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetPrivateMatch");
	}

	UOnlineGamePlaylists_X_execGetPrivateMatch_Params GetPrivateMatch_Params;

	this->ProcessEvent(uFnGetPrivateMatch, &GetPrivateMatch_Params, nullptr);

	return GetPrivateMatch_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.GetAccessiblePlaylists
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FName>           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// TArray<struct FName>           SelectedPlaylists              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

TArray<struct FName> UOnlineGamePlaylists_X::GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists)
{
	static UFunction* uFnGetAccessiblePlaylists = nullptr;

	if (!uFnGetAccessiblePlaylists)
	{
		uFnGetAccessiblePlaylists = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetAccessiblePlaylists");
	}

	UOnlineGamePlaylists_X_execGetAccessiblePlaylists_Params GetAccessiblePlaylists_Params;
	memcpy_s(&GetAccessiblePlaylists_Params.SelectedPlaylists, 0x10, &SelectedPlaylists, 0x10);

	this->ProcessEvent(uFnGetAccessiblePlaylists, &GetAccessiblePlaylists_Params, nullptr);

	memcpy_s(&SelectedPlaylists, 0x10, &GetAccessiblePlaylists_Params.SelectedPlaylists, 0x10);

	return GetAccessiblePlaylists_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsRankedEnabled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGamePlaylists_X::IsRankedEnabled()
{
	static UFunction* uFnIsRankedEnabled = nullptr;

	if (!uFnIsRankedEnabled)
	{
		uFnIsRankedEnabled = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsRankedEnabled");
	}

	UOnlineGamePlaylists_X_execIsRankedEnabled_Params IsRankedEnabled_Params;

	this->ProcessEvent(uFnIsRankedEnabled, &IsRankedEnabled_Params, nullptr);

	return IsRankedEnabled_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsRankedPlaylistID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

bool UOnlineGamePlaylists_X::IsRankedPlaylistID(int32_t PlaylistId)
{
	static UFunction* uFnIsRankedPlaylistID = nullptr;

	if (!uFnIsRankedPlaylistID)
	{
		uFnIsRankedPlaylistID = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsRankedPlaylistID");
	}

	UOnlineGamePlaylists_X_execIsRankedPlaylistID_Params IsRankedPlaylistID_Params;
	memcpy_s(&IsRankedPlaylistID_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnIsRankedPlaylistID, &IsRankedPlaylistID_Params, nullptr);

	return IsRankedPlaylistID_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsRankedPlaylistName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

bool UOnlineGamePlaylists_X::IsRankedPlaylistName(struct FName PlaylistName)
{
	static UFunction* uFnIsRankedPlaylistName = nullptr;

	if (!uFnIsRankedPlaylistName)
	{
		uFnIsRankedPlaylistName = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsRankedPlaylistName");
	}

	UOnlineGamePlaylists_X_execIsRankedPlaylistName_Params IsRankedPlaylistName_Params;
	memcpy_s(&IsRankedPlaylistName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnIsRankedPlaylistName, &IsRankedPlaylistName_Params, nullptr);

	return IsRankedPlaylistName_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsUnrankedPlaylistName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

bool UOnlineGamePlaylists_X::IsUnrankedPlaylistName(struct FName PlaylistName)
{
	static UFunction* uFnIsUnrankedPlaylistName = nullptr;

	if (!uFnIsUnrankedPlaylistName)
	{
		uFnIsUnrankedPlaylistName = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsUnrankedPlaylistName");
	}

	UOnlineGamePlaylists_X_execIsUnrankedPlaylistName_Params IsUnrankedPlaylistName_Params;
	memcpy_s(&IsUnrankedPlaylistName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnIsUnrankedPlaylistName, &IsUnrankedPlaylistName_Params, nullptr);

	return IsUnrankedPlaylistName_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsStandardPlaylistID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

bool UOnlineGamePlaylists_X::IsStandardPlaylistID(int32_t PlaylistId)
{
	static UFunction* uFnIsStandardPlaylistID = nullptr;

	if (!uFnIsStandardPlaylistID)
	{
		uFnIsStandardPlaylistID = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsStandardPlaylistID");
	}

	UOnlineGamePlaylists_X_execIsStandardPlaylistID_Params IsStandardPlaylistID_Params;
	memcpy_s(&IsStandardPlaylistID_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnIsStandardPlaylistID, &IsStandardPlaylistID_Params, nullptr);

	return IsStandardPlaylistID_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsStandardPlaylistName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

bool UOnlineGamePlaylists_X::IsStandardPlaylistName(struct FName PlaylistName)
{
	static UFunction* uFnIsStandardPlaylistName = nullptr;

	if (!uFnIsStandardPlaylistName)
	{
		uFnIsStandardPlaylistName = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsStandardPlaylistName");
	}

	UOnlineGamePlaylists_X_execIsStandardPlaylistName_Params IsStandardPlaylistName_Params;
	memcpy_s(&IsStandardPlaylistName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnIsStandardPlaylistName, &IsStandardPlaylistName_Params, nullptr);

	return IsStandardPlaylistName_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsNonStandardPlaylistName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

bool UOnlineGamePlaylists_X::IsNonStandardPlaylistName(struct FName PlaylistName)
{
	static UFunction* uFnIsNonStandardPlaylistName = nullptr;

	if (!uFnIsNonStandardPlaylistName)
	{
		uFnIsNonStandardPlaylistName = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsNonStandardPlaylistName");
	}

	UOnlineGamePlaylists_X_execIsNonStandardPlaylistName_Params IsNonStandardPlaylistName_Params;
	memcpy_s(&IsNonStandardPlaylistName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnIsNonStandardPlaylistName, &IsNonStandardPlaylistName_Params, nullptr);

	return IsNonStandardPlaylistName_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.NamesToIDs
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FName>           Names                          (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<int32_t>                Ids                            (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGamePlaylists_X::NamesToIDs(TArray<struct FName>& Names, TArray<int32_t>& Ids)
{
	static UFunction* uFnNamesToIDs = nullptr;

	if (!uFnNamesToIDs)
	{
		uFnNamesToIDs = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.NamesToIDs");
	}

	UOnlineGamePlaylists_X_execNamesToIDs_Params NamesToIDs_Params;
	memcpy_s(&NamesToIDs_Params.Names, 0x10, &Names, 0x10);
	memcpy_s(&NamesToIDs_Params.Ids, 0x10, &Ids, 0x10);

	this->ProcessEvent(uFnNamesToIDs, &NamesToIDs_Params, nullptr);

	memcpy_s(&Names, 0x10, &NamesToIDs_Params.Names, 0x10);
	memcpy_s(&Ids, 0x10, &NamesToIDs_Params.Ids, 0x10);
};

// Function ProjectX.OnlineGamePlaylists_X.GetPlaylistFriendlyName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// int32_t                        PlaylistId                     (CPF_Parm)

class FString UOnlineGamePlaylists_X::GetPlaylistFriendlyName(int32_t PlaylistId)
{
	static UFunction* uFnGetPlaylistFriendlyName = nullptr;

	if (!uFnGetPlaylistFriendlyName)
	{
		uFnGetPlaylistFriendlyName = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetPlaylistFriendlyName");
	}

	UOnlineGamePlaylists_X_execGetPlaylistFriendlyName_Params GetPlaylistFriendlyName_Params;
	memcpy_s(&GetPlaylistFriendlyName_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnGetPlaylistFriendlyName, &GetPlaylistFriendlyName_Params, nullptr);

	return GetPlaylistFriendlyName_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.CopyPlaylistGameTags
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGamePlaylists_X::CopyPlaylistGameTags()
{
	static UFunction* uFnCopyPlaylistGameTags = nullptr;

	if (!uFnCopyPlaylistGameTags)
	{
		uFnCopyPlaylistGameTags = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.CopyPlaylistGameTags");
	}

	UOnlineGamePlaylists_X_execCopyPlaylistGameTags_Params CopyPlaylistGameTags_Params;

	this->ProcessEvent(uFnCopyPlaylistGameTags, &CopyPlaylistGameTags_Params, nullptr);
};

// Function ProjectX.OnlineGamePlaylists_X.HandlePlaylistsChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UObjectProvider*         Provider                       (CPF_Parm | CPF_EditInline)

void UOnlineGamePlaylists_X::HandlePlaylistsChanged(class UObjectProvider* Provider)
{
	static UFunction* uFnHandlePlaylistsChanged = nullptr;

	if (!uFnHandlePlaylistsChanged)
	{
		uFnHandlePlaylistsChanged = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.HandlePlaylistsChanged");
	}

	UOnlineGamePlaylists_X_execHandlePlaylistsChanged_Params HandlePlaylistsChanged_Params;
	memcpy_s(&HandlePlaylistsChanged_Params.Provider, 0x8, &Provider, 0x8);

	this->ProcessEvent(uFnHandlePlaylistsChanged, &HandlePlaylistsChanged_Params, nullptr);
};

// Function ProjectX.OnlineGamePlaylists_X.IdToName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

struct FName UOnlineGamePlaylists_X::IdToName(int32_t PlaylistId)
{
	static UFunction* uFnIdToName = nullptr;

	if (!uFnIdToName)
	{
		uFnIdToName = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IdToName");
	}

	UOnlineGamePlaylists_X_execIdToName_Params IdToName_Params;
	memcpy_s(&IdToName_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnIdToName, &IdToName_Params, nullptr);

	return IdToName_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.NameToId
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

int32_t UOnlineGamePlaylists_X::NameToId(struct FName PlaylistName)
{
	static UFunction* uFnNameToId = nullptr;

	if (!uFnNameToId)
	{
		uFnNameToId = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.NameToId");
	}

	UOnlineGamePlaylists_X_execNameToId_Params NameToId_Params;
	memcpy_s(&NameToId_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnNameToId, &NameToId_Params, nullptr);

	return NameToId_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.GetTimeRemaining
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

int32_t UOnlineGamePlaylists_X::GetTimeRemaining(int32_t PlaylistId)
{
	static UFunction* uFnGetTimeRemaining = nullptr;

	if (!uFnGetTimeRemaining)
	{
		uFnGetTimeRemaining = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetTimeRemaining");
	}

	UOnlineGamePlaylists_X_execGetTimeRemaining_Params GetTimeRemaining_Params;
	memcpy_s(&GetTimeRemaining_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnGetTimeRemaining, &GetTimeRemaining_Params, nullptr);

	return GetTimeRemaining_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsTimeConstrained
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

bool UOnlineGamePlaylists_X::IsTimeConstrained(int32_t PlaylistId)
{
	static UFunction* uFnIsTimeConstrained = nullptr;

	if (!uFnIsTimeConstrained)
	{
		uFnIsTimeConstrained = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsTimeConstrained");
	}

	UOnlineGamePlaylists_X_execIsTimeConstrained_Params IsTimeConstrained_Params;
	memcpy_s(&IsTimeConstrained_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnIsTimeConstrained, &IsTimeConstrained_Params, nullptr);

	return IsTimeConstrained_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.GetPlaylistByID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

class UGameSettingPlaylist_X* UOnlineGamePlaylists_X::GetPlaylistByID(int32_t PlaylistId)
{
	static UFunction* uFnGetPlaylistByID = nullptr;

	if (!uFnGetPlaylistByID)
	{
		uFnGetPlaylistByID = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetPlaylistByID");
	}

	UOnlineGamePlaylists_X_execGetPlaylistByID_Params GetPlaylistByID_Params;
	memcpy_s(&GetPlaylistByID_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnGetPlaylistByID, &GetPlaylistByID_Params, nullptr);

	return GetPlaylistByID_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.GetPlaylistByName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

class UGameSettingPlaylist_X* UOnlineGamePlaylists_X::GetPlaylistByName(struct FName PlaylistName)
{
	static UFunction* uFnGetPlaylistByName = nullptr;

	if (!uFnGetPlaylistByName)
	{
		uFnGetPlaylistByName = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.GetPlaylistByName");
	}

	UOnlineGamePlaylists_X_execGetPlaylistByName_Params GetPlaylistByName_Params;
	memcpy_s(&GetPlaylistByName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnGetPlaylistByName, &GetPlaylistByName_Params, nullptr);

	return GetPlaylistByName_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.IsPlaylistEnabled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGameSettingPlaylist_X*  Playlist                       (CPF_Parm)

bool UOnlineGamePlaylists_X::IsPlaylistEnabled(class UGameSettingPlaylist_X* Playlist)
{
	static UFunction* uFnIsPlaylistEnabled = nullptr;

	if (!uFnIsPlaylistEnabled)
	{
		uFnIsPlaylistEnabled = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.IsPlaylistEnabled");
	}

	UOnlineGamePlaylists_X_execIsPlaylistEnabled_Params IsPlaylistEnabled_Params;
	memcpy_s(&IsPlaylistEnabled_Params.Playlist, 0x8, &Playlist, 0x8);

	this->ProcessEvent(uFnIsPlaylistEnabled, &IsPlaylistEnabled_Params, nullptr);

	return IsPlaylistEnabled_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePlaylists_X.NotifyWhenChanged
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePlaylists_X::NotifyWhenChanged(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyWhenChanged = nullptr;

	if (!uFnNotifyWhenChanged)
	{
		uFnNotifyWhenChanged = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.NotifyWhenChanged");
	}

	UOnlineGamePlaylists_X_execNotifyWhenChanged_Params NotifyWhenChanged_Params;
	memcpy_s(&NotifyWhenChanged_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyWhenChanged, &NotifyWhenChanged_Params, nullptr);
};

// Function ProjectX.OnlineGamePlaylists_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGamePlaylists_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.OnInit");
	}

	UOnlineGamePlaylists_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGamePlaylists_X.EventPlaylistsChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGamePlaylists_X*  PlaylistsObj                   (CPF_Parm)

void UOnlineGamePlaylists_X::EventPlaylistsChanged(class UOnlineGamePlaylists_X* PlaylistsObj)
{
	static UFunction* uFnEventPlaylistsChanged = nullptr;

	if (!uFnEventPlaylistsChanged)
	{
		uFnEventPlaylistsChanged = UFunction::FindFunction("Function ProjectX.OnlineGamePlaylists_X.EventPlaylistsChanged");
	}

	UOnlineGamePlaylists_X_execEventPlaylistsChanged_Params EventPlaylistsChanged_Params;
	memcpy_s(&EventPlaylistsChanged_Params.PlaylistsObj, 0x8, &PlaylistsObj, 0x8);

	this->ProcessEvent(uFnEventPlaylistsChanged, &EventPlaylistsChanged_Params, nullptr);
};

// Function ProjectX.GameSettingPlaylist_X.UseRandomizedNameAndPassword
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::UseRandomizedNameAndPassword()
{
	static UFunction* uFnUseRandomizedNameAndPassword = nullptr;

	if (!uFnUseRandomizedNameAndPassword)
	{
		uFnUseRandomizedNameAndPassword = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.UseRandomizedNameAndPassword");
	}

	UGameSettingPlaylist_X_execUseRandomizedNameAndPassword_Params UseRandomizedNameAndPassword_Params;

	this->ProcessEvent(uFnUseRandomizedNameAndPassword, &UseRandomizedNameAndPassword_Params, nullptr);

	return UseRandomizedNameAndPassword_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.ShouldAllowRankedReconnect
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::ShouldAllowRankedReconnect()
{
	static UFunction* uFnShouldAllowRankedReconnect = nullptr;

	if (!uFnShouldAllowRankedReconnect)
	{
		uFnShouldAllowRankedReconnect = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.ShouldAllowRankedReconnect");
	}

	UGameSettingPlaylist_X_execShouldAllowRankedReconnect_Params ShouldAllowRankedReconnect_Params;

	this->ProcessEvent(uFnShouldAllowRankedReconnect, &ShouldAllowRankedReconnect_Params, nullptr);

	return ShouldAllowRankedReconnect_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.HasBackfillPolicy
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::HasBackfillPolicy()
{
	static UFunction* uFnHasBackfillPolicy = nullptr;

	if (!uFnHasBackfillPolicy)
	{
		uFnHasBackfillPolicy = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.HasBackfillPolicy");
	}

	UGameSettingPlaylist_X_execHasBackfillPolicy_Params HasBackfillPolicy_Params;

	this->ProcessEvent(uFnHasBackfillPolicy, &HasBackfillPolicy_Params, nullptr);

	return HasBackfillPolicy_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.GetBackfillAmount
// [0x00420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServerRegistration_X* DS                             (CPF_Const | CPF_Parm)
// int32_t                        BackfillTeam1                  (CPF_Parm | CPF_OutParm)
// int32_t                        BackfillTeam2                  (CPF_Parm | CPF_OutParm)

void UGameSettingPlaylist_X::GetBackfillAmount(class UOnlineGameDedicatedServerRegistration_X* DS, int32_t& BackfillTeam1, int32_t& BackfillTeam2)
{
	static UFunction* uFnGetBackfillAmount = nullptr;

	if (!uFnGetBackfillAmount)
	{
		uFnGetBackfillAmount = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.GetBackfillAmount");
	}

	UGameSettingPlaylist_X_execGetBackfillAmount_Params GetBackfillAmount_Params;
	memcpy_s(&GetBackfillAmount_Params.DS, 0x8, &DS, 0x8);
	memcpy_s(&GetBackfillAmount_Params.BackfillTeam1, 0x4, &BackfillTeam1, 0x4);
	memcpy_s(&GetBackfillAmount_Params.BackfillTeam2, 0x4, &BackfillTeam2, 0x4);

	this->ProcessEvent(uFnGetBackfillAmount, &GetBackfillAmount_Params, nullptr);

	memcpy_s(&BackfillTeam1, 0x4, &GetBackfillAmount_Params.BackfillTeam1, 0x4);
	memcpy_s(&BackfillTeam2, 0x4, &GetBackfillAmount_Params.BackfillTeam2, 0x4);
};

// Function ProjectX.GameSettingPlaylist_X.IsLanMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::IsLanMatch()
{
	static UFunction* uFnIsLanMatch = nullptr;

	if (!uFnIsLanMatch)
	{
		uFnIsLanMatch = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.IsLanMatch");
	}

	UGameSettingPlaylist_X_execIsLanMatch_Params IsLanMatch_Params;

	this->ProcessEvent(uFnIsLanMatch, &IsLanMatch_Params, nullptr);

	return IsLanMatch_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.IsTournamentMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::IsTournamentMatch()
{
	static UFunction* uFnIsTournamentMatch = nullptr;

	if (!uFnIsTournamentMatch)
	{
		uFnIsTournamentMatch = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.IsTournamentMatch");
	}

	UGameSettingPlaylist_X_execIsTournamentMatch_Params IsTournamentMatch_Params;

	this->ProcessEvent(uFnIsTournamentMatch, &IsTournamentMatch_Params, nullptr);

	return IsTournamentMatch_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.IsPrivateMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::IsPrivateMatch()
{
	static UFunction* uFnIsPrivateMatch = nullptr;

	if (!uFnIsPrivateMatch)
	{
		uFnIsPrivateMatch = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.IsPrivateMatch");
	}

	UGameSettingPlaylist_X_execIsPrivateMatch_Params IsPrivateMatch_Params;

	this->ProcessEvent(uFnIsPrivateMatch, &IsPrivateMatch_Params, nullptr);

	return IsPrivateMatch_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.IsRankedMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::IsRankedMatch()
{
	static UFunction* uFnIsRankedMatch = nullptr;

	if (!uFnIsRankedMatch)
	{
		uFnIsRankedMatch = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.IsRankedMatch");
	}

	UGameSettingPlaylist_X_execIsRankedMatch_Params IsRankedMatch_Params;

	this->ProcessEvent(uFnIsRankedMatch, &IsRankedMatch_Params, nullptr);

	return IsRankedMatch_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.ShouldUpdateSkills
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::ShouldUpdateSkills()
{
	static UFunction* uFnShouldUpdateSkills = nullptr;

	if (!uFnShouldUpdateSkills)
	{
		uFnShouldUpdateSkills = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.ShouldUpdateSkills");
	}

	UGameSettingPlaylist_X_execShouldUpdateSkills_Params ShouldUpdateSkills_Params;

	this->ProcessEvent(uFnShouldUpdateSkills, &ShouldUpdateSkills_Params, nullptr);

	return ShouldUpdateSkills_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.IsValidID
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylistID                   (CPF_Parm)

bool UGameSettingPlaylist_X::IsValidID(int32_t InPlaylistID)
{
	static UFunction* uFnIsValidID = nullptr;

	if (!uFnIsValidID)
	{
		uFnIsValidID = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.IsValidID");
	}

	UGameSettingPlaylist_X_execIsValidID_Params IsValidID_Params;
	memcpy_s(&IsValidID_Params.InPlaylistID, 0x4, &InPlaylistID, 0x4);

	UGameSettingPlaylist_X::StaticClass()->ProcessEvent(uFnIsValidID, &IsValidID_Params, nullptr);

	return IsValidID_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.IsValid
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UGameSettingPlaylist_X::IsValid()
{
	static UFunction* uFnIsValid = nullptr;

	if (!uFnIsValid)
	{
		uFnIsValid = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.IsValid");
	}

	UGameSettingPlaylist_X_execIsValid_Params IsValid_Params;

	this->ProcessEvent(uFnIsValid, &IsValid_Params, nullptr);

	return IsValid_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.GetLocalizedBadgeTitle
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGameSettingPlaylist_X::GetLocalizedBadgeTitle()
{
	static UFunction* uFnGetLocalizedBadgeTitle = nullptr;

	if (!uFnGetLocalizedBadgeTitle)
	{
		uFnGetLocalizedBadgeTitle = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.GetLocalizedBadgeTitle");
	}

	UGameSettingPlaylist_X_execGetLocalizedBadgeTitle_Params GetLocalizedBadgeTitle_Params;

	this->ProcessEvent(uFnGetLocalizedBadgeTitle, &GetLocalizedBadgeTitle_Params, nullptr);

	return GetLocalizedBadgeTitle_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.GetLocalizedDescription
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGameSettingPlaylist_X::GetLocalizedDescription()
{
	static UFunction* uFnGetLocalizedDescription = nullptr;

	if (!uFnGetLocalizedDescription)
	{
		uFnGetLocalizedDescription = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.GetLocalizedDescription");
	}

	UGameSettingPlaylist_X_execGetLocalizedDescription_Params GetLocalizedDescription_Params;

	this->ProcessEvent(uFnGetLocalizedDescription, &GetLocalizedDescription_Params, nullptr);

	return GetLocalizedDescription_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.GetLocalizedName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UGameSettingPlaylist_X::GetLocalizedName()
{
	static UFunction* uFnGetLocalizedName = nullptr;

	if (!uFnGetLocalizedName)
	{
		uFnGetLocalizedName = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.GetLocalizedName");
	}

	UGameSettingPlaylist_X_execGetLocalizedName_Params GetLocalizedName_Params;

	this->ProcessEvent(uFnGetLocalizedName, &GetLocalizedName_Params, nullptr);

	return GetLocalizedName_Params.ReturnValue;
};

// Function ProjectX.GameSettingPlaylist_X.Setup
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPlaylistSettings_X*     Settings                       (CPF_Parm)

void UGameSettingPlaylist_X::Setup(class UPlaylistSettings_X* Settings)
{
	static UFunction* uFnSetup = nullptr;

	if (!uFnSetup)
	{
		uFnSetup = UFunction::FindFunction("Function ProjectX.GameSettingPlaylist_X.Setup");
	}

	UGameSettingPlaylist_X_execSetup_Params Setup_Params;
	memcpy_s(&Setup_Params.Settings, 0x8, &Settings, 0x8);

	this->ProcessEvent(uFnSetup, &Setup_Params, nullptr);
};

// Function ProjectX.__OnlineGameParty_X__HandleConfirmJoinGame_0x1.__OnlineGameParty_X__HandleConfirmJoinGame_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__OnlineGameParty_X__HandleConfirmJoinGame_0x1::__OnlineGameParty_X__HandleConfirmJoinGame_0x1()
{
	static UFunction* uFn__OnlineGameParty_X__HandleConfirmJoinGame_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__HandleConfirmJoinGame_0x1)
	{
		uFn__OnlineGameParty_X__HandleConfirmJoinGame_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__HandleConfirmJoinGame_0x1.__OnlineGameParty_X__HandleConfirmJoinGame_0x1");
	}

	U__OnlineGameParty_X__HandleConfirmJoinGame_0x1_exec__OnlineGameParty_X__HandleConfirmJoinGame_0x1_Params __OnlineGameParty_X__HandleConfirmJoinGame_0x1_Params;

	this->ProcessEvent(uFn__OnlineGameParty_X__HandleConfirmJoinGame_0x1, &__OnlineGameParty_X__HandleConfirmJoinGame_0x1_Params, nullptr);
};

// Function ProjectX.__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1.__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)

void U__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1::__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1(struct FServerReservationData Reservation)
{
	static UFunction* uFn__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1)
	{
		uFn__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1.__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1");
	}

	U__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1_exec__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1_Params __OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1_Params;
	memcpy_s(&__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFn__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1, &__OnlineGameParty_X__HandleConfirmJoinGame_ConnectionValid_0x1_Params, nullptr);
};

// Function ProjectX.FindServerTask_X.HandleClientReservationMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UClientReservationMessage_X* Message                        (CPF_Parm)

void UFindServerTask_X::HandleClientReservationMessage(class UIReservationConnection_X* Connection, class UClientReservationMessage_X* Message)
{
	static UFunction* uFnHandleClientReservationMessage = nullptr;

	if (!uFnHandleClientReservationMessage)
	{
		uFnHandleClientReservationMessage = UFunction::FindFunction("Function ProjectX.FindServerTask_X.HandleClientReservationMessage");
	}

	UFindServerTask_X_execHandleClientReservationMessage_Params HandleClientReservationMessage_Params;
	memcpy_s(&HandleClientReservationMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandleClientReservationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleClientReservationMessage, &HandleClientReservationMessage_Params, nullptr);
};

// Function ProjectX.FindServerTask_X.HandleSearchTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UFindServerTask_X::HandleSearchTimeout()
{
	static UFunction* uFnHandleSearchTimeout = nullptr;

	if (!uFnHandleSearchTimeout)
	{
		uFnHandleSearchTimeout = UFunction::FindFunction("Function ProjectX.FindServerTask_X.HandleSearchTimeout");
	}

	UFindServerTask_X_execHandleSearchTimeout_Params HandleSearchTimeout_Params;

	this->ProcessEvent(uFnHandleSearchTimeout, &HandleSearchTimeout_Params, nullptr);
};

// Function ProjectX.FindServerTask_X.HandleJoinMatchError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  InRPC                          (CPF_Parm)

void UFindServerTask_X::HandleJoinMatchError(class URPC_X* InRPC)
{
	static UFunction* uFnHandleJoinMatchError = nullptr;

	if (!uFnHandleJoinMatchError)
	{
		uFnHandleJoinMatchError = UFunction::FindFunction("Function ProjectX.FindServerTask_X.HandleJoinMatchError");
	}

	UFindServerTask_X_execHandleJoinMatchError_Params HandleJoinMatchError_Params;
	memcpy_s(&HandleJoinMatchError_Params.InRPC, 0x8, &InRPC, 0x8);

	this->ProcessEvent(uFnHandleJoinMatchError, &HandleJoinMatchError_Params, nullptr);
};

// Function ProjectX.FindServerTask_X.Cleanup
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UFindServerTask_X::Cleanup()
{
	static UFunction* uFnCleanup = nullptr;

	if (!uFnCleanup)
	{
		uFnCleanup = UFunction::FindFunction("Function ProjectX.FindServerTask_X.Cleanup");
	}

	UFindServerTask_X_execCleanup_Params Cleanup_Params;

	this->ProcessEvent(uFnCleanup, &Cleanup_Params, nullptr);
};

// Function ProjectX.FindServerTask_X.Init
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  InRPC                          (CPF_Parm)

void UFindServerTask_X::Init(class URPC_X* InRPC)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.FindServerTask_X.Init");
	}

	UFindServerTask_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.InRPC, 0x8, &InRPC, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.FindServerTask_X.NotifyOnResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFindServerTask_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UFindServerTask_X* UFindServerTask_X::NotifyOnResult(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResult = nullptr;

	if (!uFnNotifyOnResult)
	{
		uFnNotifyOnResult = UFunction::FindFunction("Function ProjectX.FindServerTask_X.NotifyOnResult");
	}

	UFindServerTask_X_execNotifyOnResult_Params NotifyOnResult_Params;
	memcpy_s(&NotifyOnResult_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResult, &NotifyOnResult_Params, nullptr);

	return NotifyOnResult_Params.ReturnValue;
};

// Function ProjectX.FindServerTask_X.FindUsingRPC
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFindServerTask_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URPC_X*                  InRPC                          (CPF_Parm)

class UFindServerTask_X* UFindServerTask_X::FindUsingRPC(class URPC_X* InRPC)
{
	static UFunction* uFnFindUsingRPC = nullptr;

	if (!uFnFindUsingRPC)
	{
		uFnFindUsingRPC = UFunction::FindFunction("Function ProjectX.FindServerTask_X.FindUsingRPC");
	}

	UFindServerTask_X_execFindUsingRPC_Params FindUsingRPC_Params;
	memcpy_s(&FindUsingRPC_Params.InRPC, 0x8, &InRPC, 0x8);

	UFindServerTask_X::StaticClass()->ProcessEvent(uFnFindUsingRPC, &FindUsingRPC_Params, nullptr);

	return FindUsingRPC_Params.ReturnValue;
};

// Function ProjectX.FindServerTask_X.FindUsingNamePassword
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UFindServerTask_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  JoinName                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  JoinPassword                   (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   ReservationType                (CPF_Parm)

class UFindServerTask_X* UFindServerTask_X::FindUsingNamePassword(class FString JoinName, class FString JoinPassword, struct FName ReservationType)
{
	static UFunction* uFnFindUsingNamePassword = nullptr;

	if (!uFnFindUsingNamePassword)
	{
		uFnFindUsingNamePassword = UFunction::FindFunction("Function ProjectX.FindServerTask_X.FindUsingNamePassword");
	}

	UFindServerTask_X_execFindUsingNamePassword_Params FindUsingNamePassword_Params;
	memcpy_s(&FindUsingNamePassword_Params.JoinName, 0x10, &JoinName, 0x10);
	memcpy_s(&FindUsingNamePassword_Params.JoinPassword, 0x10, &JoinPassword, 0x10);
	memcpy_s(&FindUsingNamePassword_Params.ReservationType, 0x8, &ReservationType, 0x8);

	UFindServerTask_X::StaticClass()->ProcessEvent(uFnFindUsingNamePassword, &FindUsingNamePassword_Params, nullptr);

	return FindUsingNamePassword_Params.ReturnValue;
};

// Function ProjectX.FindServerTask_X.EventResult
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  OutResult                      (CPF_Parm | CPF_NeedCtorLink)

void UFindServerTask_X::EventResult(struct FServerReservationData OutResult)
{
	static UFunction* uFnEventResult = nullptr;

	if (!uFnEventResult)
	{
		uFnEventResult = UFunction::FindFunction("Function ProjectX.FindServerTask_X.EventResult");
	}

	UFindServerTask_X_execEventResult_Params EventResult_Params;
	memcpy_s(&EventResult_Params.OutResult, 0x70, &OutResult, 0x70);

	this->ProcessEvent(uFnEventResult, &EventResult_Params, nullptr);
};

// Function ProjectX.ClientReservationMessage_X.GetDSRToken
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UClientReservationMessage_X::GetDSRToken()
{
	static UFunction* uFnGetDSRToken = nullptr;

	if (!uFnGetDSRToken)
	{
		uFnGetDSRToken = UFunction::FindFunction("Function ProjectX.ClientReservationMessage_X.GetDSRToken");
	}

	UClientReservationMessage_X_execGetDSRToken_Params GetDSRToken_Params;

	this->ProcessEvent(uFnGetDSRToken, &GetDSRToken_Params, nullptr);

	return GetDSRToken_Params.ReturnValue;
};

// Function ProjectX.ClientReservationMessage_X.GetReservationID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UClientReservationMessage_X::GetReservationID()
{
	static UFunction* uFnGetReservationID = nullptr;

	if (!uFnGetReservationID)
	{
		uFnGetReservationID = UFunction::FindFunction("Function ProjectX.ClientReservationMessage_X.GetReservationID");
	}

	UClientReservationMessage_X_execGetReservationID_Params GetReservationID_Params;

	this->ProcessEvent(uFnGetReservationID, &GetReservationID_Params, nullptr);

	return GetReservationID_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameParty_X__HandleClientReservationMessage_0x1.__OnlineGameParty_X__HandleClientReservationMessage_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__OnlineGameParty_X__HandleClientReservationMessage_0x1::__OnlineGameParty_X__HandleClientReservationMessage_0x1()
{
	static UFunction* uFn__OnlineGameParty_X__HandleClientReservationMessage_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__HandleClientReservationMessage_0x1)
	{
		uFn__OnlineGameParty_X__HandleClientReservationMessage_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__HandleClientReservationMessage_0x1.__OnlineGameParty_X__HandleClientReservationMessage_0x1");
	}

	U__OnlineGameParty_X__HandleClientReservationMessage_0x1_exec__OnlineGameParty_X__HandleClientReservationMessage_0x1_Params __OnlineGameParty_X__HandleClientReservationMessage_0x1_Params;

	this->ProcessEvent(uFn__OnlineGameParty_X__HandleClientReservationMessage_0x1, &__OnlineGameParty_X__HandleClientReservationMessage_0x1_Params, nullptr);
};

// Function ProjectX.__OnlineGameParty_X__HasMultiplePlatforms_0x1.__OnlineGameParty_X__HasMultiplePlatforms_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMember            P                              (CPF_Parm | CPF_NeedCtorLink)

bool U__OnlineGameParty_X__HasMultiplePlatforms_0x1::__OnlineGameParty_X__HasMultiplePlatforms_0x1(struct FPartyMember P)
{
	static UFunction* uFn__OnlineGameParty_X__HasMultiplePlatforms_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__HasMultiplePlatforms_0x1)
	{
		uFn__OnlineGameParty_X__HasMultiplePlatforms_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__HasMultiplePlatforms_0x1.__OnlineGameParty_X__HasMultiplePlatforms_0x1");
	}

	U__OnlineGameParty_X__HasMultiplePlatforms_0x1_exec__OnlineGameParty_X__HasMultiplePlatforms_0x1_Params __OnlineGameParty_X__HasMultiplePlatforms_0x1_Params;
	memcpy_s(&__OnlineGameParty_X__HasMultiplePlatforms_0x1_Params.P, 0x170, &P, 0x170);

	this->ProcessEvent(uFn__OnlineGameParty_X__HasMultiplePlatforms_0x1, &__OnlineGameParty_X__HasMultiplePlatforms_0x1_Params, nullptr);

	return __OnlineGameParty_X__HasMultiplePlatforms_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__Construct_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameSkill_X::__OnlineGameSkill_X__Construct_0x1(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFn__OnlineGameSkill_X__Construct_0x1 = nullptr;

	if (!uFn__OnlineGameSkill_X__Construct_0x1)
	{
		uFn__OnlineGameSkill_X__Construct_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__Construct_0x1");
	}

	UOnlineGameSkill_X_exec__OnlineGameSkill_X__Construct_0x1_Params __OnlineGameSkill_X__Construct_0x1_Params;
	memcpy_s(&__OnlineGameSkill_X__Construct_0x1_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFn__OnlineGameSkill_X__Construct_0x1, &__OnlineGameSkill_X__Construct_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2
// [0x40840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPartyMemberSkill_X* RPC                            (CPF_Parm)

void UOnlineGameSkill_X::__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2(class URPC_GetPartyMemberSkill_X* RPC)
{
	static UFunction* uFn__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2 = nullptr;

	if (!uFn__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2)
	{
		uFn__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2");
	}

	UOnlineGameSkill_X_exec__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2_Params __OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2_Params;
	memcpy_s(&__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2, &__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x2_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPlayerSkill_X*   RPC                            (CPF_Parm)

void UOnlineGameSkill_X::__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1(class URPC_GetPlayerSkill_X* RPC)
{
	static UFunction* uFn__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1 = nullptr;

	if (!uFn__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1)
	{
		uFn__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1");
	}

	UOnlineGameSkill_X_exec__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1_Params __OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1_Params;
	memcpy_s(&__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1, &__OnlineGameSkill_X__CreateSyncPlayerSkillRPC_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__ClearPartyMembersSkill_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FPartyMember            Member                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::__OnlineGameSkill_X__ClearPartyMembersSkill_0x2(struct FPartyMember Member)
{
	static UFunction* uFn__OnlineGameSkill_X__ClearPartyMembersSkill_0x2 = nullptr;

	if (!uFn__OnlineGameSkill_X__ClearPartyMembersSkill_0x2)
	{
		uFn__OnlineGameSkill_X__ClearPartyMembersSkill_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__ClearPartyMembersSkill_0x2");
	}

	UOnlineGameSkill_X_exec__OnlineGameSkill_X__ClearPartyMembersSkill_0x2_Params __OnlineGameSkill_X__ClearPartyMembersSkill_0x2_Params;
	memcpy_s(&__OnlineGameSkill_X__ClearPartyMembersSkill_0x2_Params.Member, 0x170, &Member, 0x170);

	this->ProcessEvent(uFn__OnlineGameSkill_X__ClearPartyMembersSkill_0x2, &__OnlineGameSkill_X__ClearPartyMembersSkill_0x2_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__CacheSkills_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSkillRating      Rating                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::__OnlineGameSkill_X__CacheSkills_0x1(struct FPlayerSkillRating Rating)
{
	static UFunction* uFn__OnlineGameSkill_X__CacheSkills_0x1 = nullptr;

	if (!uFn__OnlineGameSkill_X__CacheSkills_0x1)
	{
		uFn__OnlineGameSkill_X__CacheSkills_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__CacheSkills_0x1");
	}

	UOnlineGameSkill_X_exec__OnlineGameSkill_X__CacheSkills_0x1_Params __OnlineGameSkill_X__CacheSkills_0x1_Params;
	memcpy_s(&__OnlineGameSkill_X__CacheSkills_0x1_Params.Rating, 0x70, &Rating, 0x70);

	this->ProcessEvent(uFn__OnlineGameSkill_X__CacheSkills_0x1, &__OnlineGameSkill_X__CacheSkills_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__SyncPartyMembersSkills_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FPartyMember            Member                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::__OnlineGameSkill_X__SyncPartyMembersSkills_0x2(struct FPartyMember Member)
{
	static UFunction* uFn__OnlineGameSkill_X__SyncPartyMembersSkills_0x2 = nullptr;

	if (!uFn__OnlineGameSkill_X__SyncPartyMembersSkills_0x2)
	{
		uFn__OnlineGameSkill_X__SyncPartyMembersSkills_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__SyncPartyMembersSkills_0x2");
	}

	UOnlineGameSkill_X_exec__OnlineGameSkill_X__SyncPartyMembersSkills_0x2_Params __OnlineGameSkill_X__SyncPartyMembersSkills_0x2_Params;
	memcpy_s(&__OnlineGameSkill_X__SyncPartyMembersSkills_0x2_Params.Member, 0x170, &Member, 0x170);

	this->ProcessEvent(uFn__OnlineGameSkill_X__SyncPartyMembersSkills_0x2, &__OnlineGameSkill_X__SyncPartyMembersSkills_0x2_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__SyncPartyMembersSkills_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMember            Member                         (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameSkill_X::__OnlineGameSkill_X__SyncPartyMembersSkills_0x1(struct FPartyMember Member)
{
	static UFunction* uFn__OnlineGameSkill_X__SyncPartyMembersSkills_0x1 = nullptr;

	if (!uFn__OnlineGameSkill_X__SyncPartyMembersSkills_0x1)
	{
		uFn__OnlineGameSkill_X__SyncPartyMembersSkills_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.__OnlineGameSkill_X__SyncPartyMembersSkills_0x1");
	}

	UOnlineGameSkill_X_exec__OnlineGameSkill_X__SyncPartyMembersSkills_0x1_Params __OnlineGameSkill_X__SyncPartyMembersSkills_0x1_Params;
	memcpy_s(&__OnlineGameSkill_X__SyncPartyMembersSkills_0x1_Params.Member, 0x170, &Member, 0x170);

	this->ProcessEvent(uFn__OnlineGameSkill_X__SyncPartyMembersSkills_0x1, &__OnlineGameSkill_X__SyncPartyMembersSkills_0x1_Params, nullptr);

	return __OnlineGameSkill_X__SyncPartyMembersSkills_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.SkillsSynced
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameSkill_X::SkillsSynced(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSkillsSynced = nullptr;

	if (!uFnSkillsSynced)
	{
		uFnSkillsSynced = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.SkillsSynced");
	}

	UOnlineGameSkill_X_execSkillsSynced_Params SkillsSynced_Params;
	memcpy_s(&SkillsSynced_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSkillsSynced, &SkillsSynced_Params, nullptr);

	return SkillsSynced_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.GetHighestSkillTier
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

int32_t UOnlineGameSkill_X::GetHighestSkillTier(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetHighestSkillTier = nullptr;

	if (!uFnGetHighestSkillTier)
	{
		uFnGetHighestSkillTier = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetHighestSkillTier");
	}

	UOnlineGameSkill_X_execGetHighestSkillTier_Params GetHighestSkillTier_Params;
	memcpy_s(&GetHighestSkillTier_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetHighestSkillTier, &GetHighestSkillTier_Params, nullptr);

	return GetHighestSkillTier_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.GetPlayerSeasonRewardProgress
// [0x00828003] (FUNC_Final | FUNC_RequiredAPI | FUNC_UbergraphFunction | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSeasonRewardProgress ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

struct FPlayerSeasonRewardProgress UOnlineGameSkill_X::GetPlayerSeasonRewardProgress(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerSeasonRewardProgress = nullptr;

	if (!uFnGetPlayerSeasonRewardProgress)
	{
		uFnGetPlayerSeasonRewardProgress = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetPlayerSeasonRewardProgress");
	}

	UOnlineGameSkill_X_execGetPlayerSeasonRewardProgress_Params GetPlayerSeasonRewardProgress_Params;
	memcpy_s(&GetPlayerSeasonRewardProgress_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerSeasonRewardProgress, &GetPlayerSeasonRewardProgress_Params, nullptr);

	return GetPlayerSeasonRewardProgress_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.GetPlaylistSkillCache
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPlaylistSkillCache_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Playlist                       (CPF_Parm)

class UPlaylistSkillCache_X* UOnlineGameSkill_X::GetPlaylistSkillCache(int32_t Playlist)
{
	static UFunction* uFnGetPlaylistSkillCache = nullptr;

	if (!uFnGetPlaylistSkillCache)
	{
		uFnGetPlaylistSkillCache = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetPlaylistSkillCache");
	}

	UOnlineGameSkill_X_execGetPlaylistSkillCache_Params GetPlaylistSkillCache_Params;
	memcpy_s(&GetPlaylistSkillCache_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnGetPlaylistSkillCache, &GetPlaylistSkillCache_Params, nullptr);

	return GetPlaylistSkillCache_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.HandleSkillsUpdateFailed
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void UOnlineGameSkill_X::HandleSkillsUpdateFailed(class URPC_X* RPC)
{
	static UFunction* uFnHandleSkillsUpdateFailed = nullptr;

	if (!uFnHandleSkillsUpdateFailed)
	{
		uFnHandleSkillsUpdateFailed = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.HandleSkillsUpdateFailed");
	}

	UOnlineGameSkill_X_execHandleSkillsUpdateFailed_Params HandleSkillsUpdateFailed_Params;
	memcpy_s(&HandleSkillsUpdateFailed_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleSkillsUpdateFailed, &HandleSkillsUpdateFailed_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.SetPlayerSeasonReward
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSeasonRewardProgress Reward                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::SetPlayerSeasonReward(struct FPlayerSeasonRewardProgress Reward)
{
	static UFunction* uFnSetPlayerSeasonReward = nullptr;

	if (!uFnSetPlayerSeasonReward)
	{
		uFnSetPlayerSeasonReward = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.SetPlayerSeasonReward");
	}

	UOnlineGameSkill_X_execSetPlayerSeasonReward_Params SetPlayerSeasonReward_Params;
	memcpy_s(&SetPlayerSeasonReward_Params.Reward, 0x50, &Reward, 0x50);

	this->ProcessEvent(uFnSetPlayerSeasonReward, &SetPlayerSeasonReward_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.ReplicateSeasonReward
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSeasonRewardProgress Reward                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::ReplicateSeasonReward(struct FPlayerSeasonRewardProgress Reward)
{
	static UFunction* uFnReplicateSeasonReward = nullptr;

	if (!uFnReplicateSeasonReward)
	{
		uFnReplicateSeasonReward = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.ReplicateSeasonReward");
	}

	UOnlineGameSkill_X_execReplicateSeasonReward_Params ReplicateSeasonReward_Params;
	memcpy_s(&ReplicateSeasonReward_Params.Reward, 0x50, &Reward, 0x50);

	this->ProcessEvent(uFnReplicateSeasonReward, &ReplicateSeasonReward_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.HandleSkillsUpdated
// [0x00880002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateSkills_X*     RPC                            (CPF_Parm)

void UOnlineGameSkill_X::HandleSkillsUpdated(class URPC_UpdateSkills_X* RPC)
{
	static UFunction* uFnHandleSkillsUpdated = nullptr;

	if (!uFnHandleSkillsUpdated)
	{
		uFnHandleSkillsUpdated = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.HandleSkillsUpdated");
	}

	UOnlineGameSkill_X_execHandleSkillsUpdated_Params HandleSkillsUpdated_Params;
	memcpy_s(&HandleSkillsUpdated_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleSkillsUpdated, &HandleSkillsUpdated_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.SubmitMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UMatchData_X*            Match                          (CPF_Parm)
// class FString                  MatchGuid                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::SubmitMatch(class UMatchData_X* Match, class FString MatchGuid)
{
	static UFunction* uFnSubmitMatch = nullptr;

	if (!uFnSubmitMatch)
	{
		uFnSubmitMatch = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.SubmitMatch");
	}

	UOnlineGameSkill_X_execSubmitMatch_Params SubmitMatch_Params;
	memcpy_s(&SubmitMatch_Params.Match, 0x8, &Match, 0x8);
	memcpy_s(&SubmitMatch_Params.MatchGuid, 0x10, &MatchGuid, 0x10);

	this->ProcessEvent(uFnSubmitMatch, &SubmitMatch_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.Clear
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameSkill_X::Clear()
{
	static UFunction* uFnClear = nullptr;

	if (!uFnClear)
	{
		uFnClear = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.Clear");
	}

	UOnlineGameSkill_X_execClear_Params Clear_Params;

	this->ProcessEvent(uFnClear, &Clear_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.GetConservativeMMR
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Mu                             (CPF_Parm)
// float                          Sigma                          (CPF_Parm)

float UOnlineGameSkill_X::GetConservativeMMR(float Mu, float Sigma)
{
	static UFunction* uFnGetConservativeMMR = nullptr;

	if (!uFnGetConservativeMMR)
	{
		uFnGetConservativeMMR = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetConservativeMMR");
	}

	UOnlineGameSkill_X_execGetConservativeMMR_Params GetConservativeMMR_Params;
	memcpy_s(&GetConservativeMMR_Params.Mu, 0x4, &Mu, 0x4);
	memcpy_s(&GetConservativeMMR_Params.Sigma, 0x4, &Sigma, 0x4);

	UOnlineGameSkill_X::StaticClass()->ProcessEvent(uFnGetConservativeMMR, &GetConservativeMMR_Params, nullptr);

	return GetConservativeMMR_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.GetPlayerConservativeMMR
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)

float UOnlineGameSkill_X::GetPlayerConservativeMMR(struct FUniqueNetId PlayerID, int32_t Playlist)
{
	static UFunction* uFnGetPlayerConservativeMMR = nullptr;

	if (!uFnGetPlayerConservativeMMR)
	{
		uFnGetPlayerConservativeMMR = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetPlayerConservativeMMR");
	}

	UOnlineGameSkill_X_execGetPlayerConservativeMMR_Params GetPlayerConservativeMMR_Params;
	memcpy_s(&GetPlayerConservativeMMR_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPlayerConservativeMMR_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnGetPlayerConservativeMMR, &GetPlayerConservativeMMR_Params, nullptr);

	return GetPlayerConservativeMMR_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.GetMMR
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          Mu                             (CPF_Parm)
// float                          Sigma                          (CPF_Parm)

float UOnlineGameSkill_X::GetMMR(float Mu, float Sigma)
{
	static UFunction* uFnGetMMR = nullptr;

	if (!uFnGetMMR)
	{
		uFnGetMMR = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetMMR");
	}

	UOnlineGameSkill_X_execGetMMR_Params GetMMR_Params;
	memcpy_s(&GetMMR_Params.Mu, 0x4, &Mu, 0x4);
	memcpy_s(&GetMMR_Params.Sigma, 0x4, &Sigma, 0x4);

	UOnlineGameSkill_X::StaticClass()->ProcessEvent(uFnGetMMR, &GetMMR_Params, nullptr);

	return GetMMR_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.GetPlayerMMR
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)

float UOnlineGameSkill_X::GetPlayerMMR(struct FUniqueNetId PlayerID, int32_t Playlist)
{
	static UFunction* uFnGetPlayerMMR = nullptr;

	if (!uFnGetPlayerMMR)
	{
		uFnGetPlayerMMR = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetPlayerMMR");
	}

	UOnlineGameSkill_X_execGetPlayerMMR_Params GetPlayerMMR_Params;
	memcpy_s(&GetPlayerMMR_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPlayerMMR_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnGetPlayerMMR, &GetPlayerMMR_Params, nullptr);

	return GetPlayerMMR_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.GetUpdatedPlayerRating
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUpdatedPlayerSkillRating ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)

struct FUpdatedPlayerSkillRating UOnlineGameSkill_X::GetUpdatedPlayerRating(struct FUniqueNetId PlayerID, int32_t Playlist)
{
	static UFunction* uFnGetUpdatedPlayerRating = nullptr;

	if (!uFnGetUpdatedPlayerRating)
	{
		uFnGetUpdatedPlayerRating = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetUpdatedPlayerRating");
	}

	UOnlineGameSkill_X_execGetUpdatedPlayerRating_Params GetUpdatedPlayerRating_Params;
	memcpy_s(&GetUpdatedPlayerRating_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetUpdatedPlayerRating_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnGetUpdatedPlayerRating, &GetUpdatedPlayerRating_Params, nullptr);

	return GetUpdatedPlayerRating_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.GetPlayerRating
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSkillRating      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)

struct FPlayerSkillRating UOnlineGameSkill_X::GetPlayerRating(struct FUniqueNetId PlayerID, int32_t Playlist)
{
	static UFunction* uFnGetPlayerRating = nullptr;

	if (!uFnGetPlayerRating)
	{
		uFnGetPlayerRating = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetPlayerRating");
	}

	UOnlineGameSkill_X_execGetPlayerRating_Params GetPlayerRating_Params;
	memcpy_s(&GetPlayerRating_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPlayerRating_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnGetPlayerRating, &GetPlayerRating_Params, nullptr);

	return GetPlayerRating_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.OnSkillSynced
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameSkill_X::OnSkillSynced(struct FUniqueNetId PlayerID, class UError* Error)
{
	static UFunction* uFnOnSkillSynced = nullptr;

	if (!uFnOnSkillSynced)
	{
		uFnOnSkillSynced = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.OnSkillSynced");
	}

	UOnlineGameSkill_X_execOnSkillSynced_Params OnSkillSynced_Params;
	memcpy_s(&OnSkillSynced_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&OnSkillSynced_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnOnSkillSynced, &OnSkillSynced_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.CacheSeasonReward
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSeasonRewardProgress Reward                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::CacheSeasonReward(struct FPlayerSeasonRewardProgress Reward)
{
	static UFunction* uFnCacheSeasonReward = nullptr;

	if (!uFnCacheSeasonReward)
	{
		uFnCacheSeasonReward = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.CacheSeasonReward");
	}

	UOnlineGameSkill_X_execCacheSeasonReward_Params CacheSeasonReward_Params;
	memcpy_s(&CacheSeasonReward_Params.Reward, 0x50, &Reward, 0x50);

	this->ProcessEvent(uFnCacheSeasonReward, &CacheSeasonReward_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.HandleSyncedPlayerSkill
// [0x00048003] (FUNC_Final | FUNC_RequiredAPI | FUNC_UbergraphFunction | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FPlayerSkillRating> PlayerSkillRatings             (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameSkill_X::HandleSyncedPlayerSkill(class URPC_X* RPC, struct FUniqueNetId PlayerID, TArray<struct FPlayerSkillRating> PlayerSkillRatings, class UError* Error)
{
	static UFunction* uFnHandleSyncedPlayerSkill = nullptr;

	if (!uFnHandleSyncedPlayerSkill)
	{
		uFnHandleSyncedPlayerSkill = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.HandleSyncedPlayerSkill");
	}

	UOnlineGameSkill_X_execHandleSyncedPlayerSkill_Params HandleSyncedPlayerSkill_Params;
	memcpy_s(&HandleSyncedPlayerSkill_Params.RPC, 0x8, &RPC, 0x8);
	memcpy_s(&HandleSyncedPlayerSkill_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&HandleSyncedPlayerSkill_Params.PlayerSkillRatings, 0x10, &PlayerSkillRatings, 0x10);
	memcpy_s(&HandleSyncedPlayerSkill_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleSyncedPlayerSkill, &HandleSyncedPlayerSkill_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.SyncPlayerSkill
// [0x00824003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::SyncPlayerSkill(struct FUniqueNetId PlayerID, struct FScriptDelegate Callback)
{
	static UFunction* uFnSyncPlayerSkill = nullptr;

	if (!uFnSyncPlayerSkill)
	{
		uFnSyncPlayerSkill = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.SyncPlayerSkill");
	}

	UOnlineGameSkill_X_execSyncPlayerSkill_Params SyncPlayerSkill_Params;
	memcpy_s(&SyncPlayerSkill_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&SyncPlayerSkill_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSyncPlayerSkill, &SyncPlayerSkill_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.SyncPartyMembersSkills
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameSkill_X::SyncPartyMembersSkills()
{
	static UFunction* uFnSyncPartyMembersSkills = nullptr;

	if (!uFnSyncPartyMembersSkills)
	{
		uFnSyncPartyMembersSkills = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.SyncPartyMembersSkills");
	}

	UOnlineGameSkill_X_execSyncPartyMembersSkills_Params SyncPartyMembersSkills_Params;

	this->ProcessEvent(uFnSyncPartyMembersSkills, &SyncPartyMembersSkills_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.CacheSkill
// [0x00028003] (FUNC_Final | FUNC_RequiredAPI | FUNC_UbergraphFunction | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUpdatedPlayerSkillRating Rating                         (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)

void UOnlineGameSkill_X::CacheSkill(struct FUpdatedPlayerSkillRating Rating, int32_t Playlist)
{
	static UFunction* uFnCacheSkill = nullptr;

	if (!uFnCacheSkill)
	{
		uFnCacheSkill = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.CacheSkill");
	}

	UOnlineGameSkill_X_execCacheSkill_Params CacheSkill_Params;
	memcpy_s(&CacheSkill_Params.Rating, 0x80, &Rating, 0x80);
	memcpy_s(&CacheSkill_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnCacheSkill, &CacheSkill_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.CacheSkills
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FPlayerSkillRating> Ratings                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::CacheSkills(TArray<struct FPlayerSkillRating> Ratings)
{
	static UFunction* uFnCacheSkills = nullptr;

	if (!uFnCacheSkills)
	{
		uFnCacheSkills = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.CacheSkills");
	}

	UOnlineGameSkill_X_execCacheSkills_Params CacheSkills_Params;
	memcpy_s(&CacheSkills_Params.Ratings, 0x10, &Ratings, 0x10);

	this->ProcessEvent(uFnCacheSkills, &CacheSkills_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.PreCacheSkill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSkillRating      Rating                         (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)

void UOnlineGameSkill_X::PreCacheSkill(struct FPlayerSkillRating Rating, int32_t Playlist)
{
	static UFunction* uFnPreCacheSkill = nullptr;

	if (!uFnPreCacheSkill)
	{
		uFnPreCacheSkill = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.PreCacheSkill");
	}

	UOnlineGameSkill_X_execPreCacheSkill_Params PreCacheSkill_Params;
	memcpy_s(&PreCacheSkill_Params.Rating, 0x70, &Rating, 0x70);
	memcpy_s(&PreCacheSkill_Params.Playlist, 0x4, &Playlist, 0x4);

	this->ProcessEvent(uFnPreCacheSkill, &PreCacheSkill_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.HandlePartyDestroyed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)

void UOnlineGameSkill_X::HandlePartyDestroyed(class UOnlineGameParty_X* PartyObject)
{
	static UFunction* uFnHandlePartyDestroyed = nullptr;

	if (!uFnHandlePartyDestroyed)
	{
		uFnHandlePartyDestroyed = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.HandlePartyDestroyed");
	}

	UOnlineGameSkill_X_execHandlePartyDestroyed_Params HandlePartyDestroyed_Params;
	memcpy_s(&HandlePartyDestroyed_Params.PartyObject, 0x8, &PartyObject, 0x8);

	this->ProcessEvent(uFnHandlePartyDestroyed, &HandlePartyDestroyed_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.HandlePartyLeaderChanged
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FUniqueNetId            NewLeader                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::HandlePartyLeaderChanged(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId NewLeader)
{
	static UFunction* uFnHandlePartyLeaderChanged = nullptr;

	if (!uFnHandlePartyLeaderChanged)
	{
		uFnHandlePartyLeaderChanged = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.HandlePartyLeaderChanged");
	}

	UOnlineGameSkill_X_execHandlePartyLeaderChanged_Params HandlePartyLeaderChanged_Params;
	memcpy_s(&HandlePartyLeaderChanged_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&HandlePartyLeaderChanged_Params.NewLeader, 0x48, &NewLeader, 0x48);

	this->ProcessEvent(uFnHandlePartyLeaderChanged, &HandlePartyLeaderChanged_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.HandlePartyMemberRemoved
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FUniqueNetId            InMemberId                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::HandlePartyMemberRemoved(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId)
{
	static UFunction* uFnHandlePartyMemberRemoved = nullptr;

	if (!uFnHandlePartyMemberRemoved)
	{
		uFnHandlePartyMemberRemoved = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.HandlePartyMemberRemoved");
	}

	UOnlineGameSkill_X_execHandlePartyMemberRemoved_Params HandlePartyMemberRemoved_Params;
	memcpy_s(&HandlePartyMemberRemoved_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&HandlePartyMemberRemoved_Params.InMemberId, 0x48, &InMemberId, 0x48);

	this->ProcessEvent(uFnHandlePartyMemberRemoved, &HandlePartyMemberRemoved_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.HandlePartyMemberAdded
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameParty_X*      PartyObject                    (CPF_Parm)
// struct FUniqueNetId            InMemberId                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::HandlePartyMemberAdded(class UOnlineGameParty_X* PartyObject, struct FUniqueNetId InMemberId)
{
	static UFunction* uFnHandlePartyMemberAdded = nullptr;

	if (!uFnHandlePartyMemberAdded)
	{
		uFnHandlePartyMemberAdded = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.HandlePartyMemberAdded");
	}

	UOnlineGameSkill_X_execHandlePartyMemberAdded_Params HandlePartyMemberAdded_Params;
	memcpy_s(&HandlePartyMemberAdded_Params.PartyObject, 0x8, &PartyObject, 0x8);
	memcpy_s(&HandlePartyMemberAdded_Params.InMemberId, 0x48, &InMemberId, 0x48);

	this->ProcessEvent(uFnHandlePartyMemberAdded, &HandlePartyMemberAdded_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.GetSkillPlaylistID
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

int32_t UOnlineGameSkill_X::GetSkillPlaylistID(int32_t PlaylistId)
{
	static UFunction* uFnGetSkillPlaylistID = nullptr;

	if (!uFnGetSkillPlaylistID)
	{
		uFnGetSkillPlaylistID = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.GetSkillPlaylistID");
	}

	UOnlineGameSkill_X_execGetSkillPlaylistID_Params GetSkillPlaylistID_Params;
	memcpy_s(&GetSkillPlaylistID_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	UOnlineGameSkill_X::StaticClass()->ProcessEvent(uFnGetSkillPlaylistID, &GetSkillPlaylistID_Params, nullptr);

	return GetSkillPlaylistID_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.ClearSkill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameSkill_X::ClearSkill(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnClearSkill = nullptr;

	if (!uFnClearSkill)
	{
		uFnClearSkill = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.ClearSkill");
	}

	UOnlineGameSkill_X_execClearSkill_Params ClearSkill_Params;
	memcpy_s(&ClearSkill_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnClearSkill, &ClearSkill_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.ClearPartyMembersSkill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameSkill_X::ClearPartyMembersSkill()
{
	static UFunction* uFnClearPartyMembersSkill = nullptr;

	if (!uFnClearPartyMembersSkill)
	{
		uFnClearPartyMembersSkill = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.ClearPartyMembersSkill");
	}

	UOnlineGameSkill_X_execClearPartyMembersSkill_Params ClearPartyMembersSkill_Params;

	this->ProcessEvent(uFnClearPartyMembersSkill, &ClearPartyMembersSkill_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.AllPlayersAreAroundTheSameRank
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

bool UOnlineGameSkill_X::AllPlayersAreAroundTheSameRank(int32_t PlaylistId)
{
	static UFunction* uFnAllPlayersAreAroundTheSameRank = nullptr;

	if (!uFnAllPlayersAreAroundTheSameRank)
	{
		uFnAllPlayersAreAroundTheSameRank = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.AllPlayersAreAroundTheSameRank");
	}

	UOnlineGameSkill_X_execAllPlayersAreAroundTheSameRank_Params AllPlayersAreAroundTheSameRank_Params;
	memcpy_s(&AllPlayersAreAroundTheSameRank_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnAllPlayersAreAroundTheSameRank, &AllPlayersAreAroundTheSameRank_Params, nullptr);

	return AllPlayersAreAroundTheSameRank_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.CreateSyncPlayerSkillRPC
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class URPC_X* UOnlineGameSkill_X::CreateSyncPlayerSkillRPC(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnCreateSyncPlayerSkillRPC = nullptr;

	if (!uFnCreateSyncPlayerSkillRPC)
	{
		uFnCreateSyncPlayerSkillRPC = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.CreateSyncPlayerSkillRPC");
	}

	UOnlineGameSkill_X_execCreateSyncPlayerSkillRPC_Params CreateSyncPlayerSkillRPC_Params;
	memcpy_s(&CreateSyncPlayerSkillRPC_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnCreateSyncPlayerSkillRPC, &CreateSyncPlayerSkillRPC_Params, nullptr);

	return CreateSyncPlayerSkillRPC_Params.ReturnValue;
};

// Function ProjectX.OnlineGameSkill_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameSkill_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.Construct");
	}

	UOnlineGameSkill_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.OnlineGameSkill_X.EventSkillSynced
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameSkill_X*      Skill                          (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameSkill_X::EventSkillSynced(class UOnlineGameSkill_X* Skill, struct FUniqueNetId PlayerID, class UError* Error)
{
	static UFunction* uFnEventSkillSynced = nullptr;

	if (!uFnEventSkillSynced)
	{
		uFnEventSkillSynced = UFunction::FindFunction("Function ProjectX.OnlineGameSkill_X.EventSkillSynced");
	}

	UOnlineGameSkill_X_execEventSkillSynced_Params EventSkillSynced_Params;
	memcpy_s(&EventSkillSynced_Params.Skill, 0x8, &Skill, 0x8);
	memcpy_s(&EventSkillSynced_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&EventSkillSynced_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventSkillSynced, &EventSkillSynced_Params, nullptr);
};

// Function ProjectX.__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1.__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMember            Member                         (CPF_Parm | CPF_NeedCtorLink)

bool U__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1::__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1(struct FPartyMember Member)
{
	static UFunction* uFn__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1 = nullptr;

	if (!uFn__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1)
	{
		uFn__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1.__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1");
	}

	U__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1_exec__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1_Params __OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1_Params;
	memcpy_s(&__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1_Params.Member, 0x170, &Member, 0x170);

	this->ProcessEvent(uFn__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1, &__OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1_Params, nullptr);

	return __OnlineGameParty_X__GetPlayersWithPrimaryMemberID_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameReservations_X__GetMigrationReservationData_0x1.__OnlineGameReservations_X__GetMigrationReservationData_0x1
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

void U__OnlineGameReservations_X__GetMigrationReservationData_0x1::__OnlineGameReservations_X__GetMigrationReservationData_0x1(struct FReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__GetMigrationReservationData_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__GetMigrationReservationData_0x1)
	{
		uFn__OnlineGameReservations_X__GetMigrationReservationData_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameReservations_X__GetMigrationReservationData_0x1.__OnlineGameReservations_X__GetMigrationReservationData_0x1");
	}

	U__OnlineGameReservations_X__GetMigrationReservationData_0x1_exec__OnlineGameReservations_X__GetMigrationReservationData_0x1_Params __OnlineGameReservations_X__GetMigrationReservationData_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__GetMigrationReservationData_0x1_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__OnlineGameReservations_X__GetMigrationReservationData_0x1, &__OnlineGameReservations_X__GetMigrationReservationData_0x1_Params, nullptr);
};

// Function ProjectX.__OnlineGameReservations_X__RecordReservation_0x1.__OnlineGameReservations_X__RecordReservation_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FReservationPlayerData  P                              (CPF_Parm | CPF_NeedCtorLink)

void U__OnlineGameReservations_X__RecordReservation_0x1::__OnlineGameReservations_X__RecordReservation_0x1(struct FReservationPlayerData P)
{
	static UFunction* uFn__OnlineGameReservations_X__RecordReservation_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__RecordReservation_0x1)
	{
		uFn__OnlineGameReservations_X__RecordReservation_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameReservations_X__RecordReservation_0x1.__OnlineGameReservations_X__RecordReservation_0x1");
	}

	U__OnlineGameReservations_X__RecordReservation_0x1_exec__OnlineGameReservations_X__RecordReservation_0x1_Params __OnlineGameReservations_X__RecordReservation_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__RecordReservation_0x1_Params.P, 0xA0, &P, 0xA0);

	this->ProcessEvent(uFn__OnlineGameReservations_X__RecordReservation_0x1, &__OnlineGameReservations_X__RecordReservation_0x1_Params, nullptr);
};

// Function ProjectX.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FMigrationReservationData P                              (CPF_Parm | CPF_NeedCtorLink)

void U__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1::__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3(struct FMigrationReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3 = nullptr;

	if (!uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3)
	{
		uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3 = UFunction::FindFunction("Function ProjectX.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3");
	}

	U__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1_exec__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3_Params __OnlineGameReservations_X__SetPlayersWithMigrationData_0x3_Params;
	memcpy_s(&__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3_Params.P, 0xE0, &P, 0xE0);

	this->ProcessEvent(uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3, &__OnlineGameReservations_X__SetPlayersWithMigrationData_0x3_Params, nullptr);
};

// Function ProjectX.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FMigrationReservationData P                              (CPF_Parm | CPF_NeedCtorLink)

void U__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1::__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1(struct FMigrationReservationData P)
{
	static UFunction* uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1 = nullptr;

	if (!uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1)
	{
		uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1.__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1");
	}

	U__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1_exec__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1_Params __OnlineGameReservations_X__SetPlayersWithMigrationData_0x1_Params;
	memcpy_s(&__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1_Params.P, 0xE0, &P, 0xE0);

	this->ProcessEvent(uFn__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1, &__OnlineGameReservations_X__SetPlayersWithMigrationData_0x1_Params, nullptr);
};

// Function ProjectX.__OnlineGameSkill_X__ClearPartyMembersSkill_0x1.__OnlineGameSkill_X__ClearPartyMembersSkill_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMember            Member                         (CPF_Parm | CPF_NeedCtorLink)

bool U__OnlineGameSkill_X__ClearPartyMembersSkill_0x1::__OnlineGameSkill_X__ClearPartyMembersSkill_0x1(struct FPartyMember Member)
{
	static UFunction* uFn__OnlineGameSkill_X__ClearPartyMembersSkill_0x1 = nullptr;

	if (!uFn__OnlineGameSkill_X__ClearPartyMembersSkill_0x1)
	{
		uFn__OnlineGameSkill_X__ClearPartyMembersSkill_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameSkill_X__ClearPartyMembersSkill_0x1.__OnlineGameSkill_X__ClearPartyMembersSkill_0x1");
	}

	U__OnlineGameSkill_X__ClearPartyMembersSkill_0x1_exec__OnlineGameSkill_X__ClearPartyMembersSkill_0x1_Params __OnlineGameSkill_X__ClearPartyMembersSkill_0x1_Params;
	memcpy_s(&__OnlineGameSkill_X__ClearPartyMembersSkill_0x1_Params.Member, 0x170, &Member, 0x170);

	this->ProcessEvent(uFn__OnlineGameSkill_X__ClearPartyMembersSkill_0x1, &__OnlineGameSkill_X__ClearPartyMembersSkill_0x1_Params, nullptr);

	return __OnlineGameSkill_X__ClearPartyMembersSkill_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameSkill_X__ClearSkill_0x1.__OnlineGameSkill_X__ClearSkill_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPlaylistSkillCache_X*   P                              (CPF_Parm)

void U__OnlineGameSkill_X__ClearSkill_0x1::__OnlineGameSkill_X__ClearSkill_0x1(class UPlaylistSkillCache_X* P)
{
	static UFunction* uFn__OnlineGameSkill_X__ClearSkill_0x1 = nullptr;

	if (!uFn__OnlineGameSkill_X__ClearSkill_0x1)
	{
		uFn__OnlineGameSkill_X__ClearSkill_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameSkill_X__ClearSkill_0x1.__OnlineGameSkill_X__ClearSkill_0x1");
	}

	U__OnlineGameSkill_X__ClearSkill_0x1_exec__OnlineGameSkill_X__ClearSkill_0x1_Params __OnlineGameSkill_X__ClearSkill_0x1_Params;
	memcpy_s(&__OnlineGameSkill_X__ClearSkill_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__OnlineGameSkill_X__ClearSkill_0x1, &__OnlineGameSkill_X__ClearSkill_0x1_Params, nullptr);
};

// Function ProjectX.PlaylistSkillCache_X.ConvertUpdatedSkillRating
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSkillRating      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUpdatedPlayerSkillRating InUpdatedRating                (CPF_Parm | CPF_NeedCtorLink)

struct FPlayerSkillRating UPlaylistSkillCache_X::ConvertUpdatedSkillRating(struct FUpdatedPlayerSkillRating InUpdatedRating)
{
	static UFunction* uFnConvertUpdatedSkillRating = nullptr;

	if (!uFnConvertUpdatedSkillRating)
	{
		uFnConvertUpdatedSkillRating = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.ConvertUpdatedSkillRating");
	}

	UPlaylistSkillCache_X_execConvertUpdatedSkillRating_Params ConvertUpdatedSkillRating_Params;
	memcpy_s(&ConvertUpdatedSkillRating_Params.InUpdatedRating, 0x80, &InUpdatedRating, 0x80);

	this->ProcessEvent(uFnConvertUpdatedSkillRating, &ConvertUpdatedSkillRating_Params, nullptr);

	return ConvertUpdatedSkillRating_Params.ReturnValue;
};

// Function ProjectX.PlaylistSkillCache_X.GetPlayerIndex
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

int32_t UPlaylistSkillCache_X::GetPlayerIndex(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerIndex = nullptr;

	if (!uFnGetPlayerIndex)
	{
		uFnGetPlayerIndex = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.GetPlayerIndex");
	}

	UPlaylistSkillCache_X_execGetPlayerIndex_Params GetPlayerIndex_Params;
	memcpy_s(&GetPlayerIndex_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerIndex, &GetPlayerIndex_Params, nullptr);

	return GetPlayerIndex_Params.ReturnValue;
};

// Function ProjectX.PlaylistSkillCache_X.GetPlayerRating
// [0x00028003] (FUNC_Final | FUNC_RequiredAPI | FUNC_UbergraphFunction | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSkillRating      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

struct FPlayerSkillRating UPlaylistSkillCache_X::GetPlayerRating(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerRating = nullptr;

	if (!uFnGetPlayerRating)
	{
		uFnGetPlayerRating = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.GetPlayerRating");
	}

	UPlaylistSkillCache_X_execGetPlayerRating_Params GetPlayerRating_Params;
	memcpy_s(&GetPlayerRating_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerRating, &GetPlayerRating_Params, nullptr);

	return GetPlayerRating_Params.ReturnValue;
};

// Function ProjectX.PlaylistSkillCache_X.GetUpdatedPlayerRating
// [0x00828003] (FUNC_Final | FUNC_RequiredAPI | FUNC_UbergraphFunction | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUpdatedPlayerSkillRating ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

struct FUpdatedPlayerSkillRating UPlaylistSkillCache_X::GetUpdatedPlayerRating(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetUpdatedPlayerRating = nullptr;

	if (!uFnGetUpdatedPlayerRating)
	{
		uFnGetUpdatedPlayerRating = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.GetUpdatedPlayerRating");
	}

	UPlaylistSkillCache_X_execGetUpdatedPlayerRating_Params GetUpdatedPlayerRating_Params;
	memcpy_s(&GetUpdatedPlayerRating_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetUpdatedPlayerRating, &GetUpdatedPlayerRating_Params, nullptr);

	return GetUpdatedPlayerRating_Params.ReturnValue;
};

// Function ProjectX.PlaylistSkillCache_X.ClearSkill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UPlaylistSkillCache_X::ClearSkill(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnClearSkill = nullptr;

	if (!uFnClearSkill)
	{
		uFnClearSkill = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.ClearSkill");
	}

	UPlaylistSkillCache_X_execClearSkill_Params ClearSkill_Params;
	memcpy_s(&ClearSkill_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnClearSkill, &ClearSkill_Params, nullptr);
};

// Function ProjectX.PlaylistSkillCache_X.CacheSkill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUpdatedPlayerSkillRating Rating                         (CPF_Parm | CPF_NeedCtorLink)

void UPlaylistSkillCache_X::CacheSkill(struct FUpdatedPlayerSkillRating Rating)
{
	static UFunction* uFnCacheSkill = nullptr;

	if (!uFnCacheSkill)
	{
		uFnCacheSkill = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.CacheSkill");
	}

	UPlaylistSkillCache_X_execCacheSkill_Params CacheSkill_Params;
	memcpy_s(&CacheSkill_Params.Rating, 0x80, &Rating, 0x80);

	this->ProcessEvent(uFnCacheSkill, &CacheSkill_Params, nullptr);
};

// Function ProjectX.PlaylistSkillCache_X.PreCacheSkill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FPlayerSkillRating      Rating                         (CPF_Parm | CPF_NeedCtorLink)

void UPlaylistSkillCache_X::PreCacheSkill(struct FPlayerSkillRating Rating)
{
	static UFunction* uFnPreCacheSkill = nullptr;

	if (!uFnPreCacheSkill)
	{
		uFnPreCacheSkill = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.PreCacheSkill");
	}

	UPlaylistSkillCache_X_execPreCacheSkill_Params PreCacheSkill_Params;
	memcpy_s(&PreCacheSkill_Params.Rating, 0x70, &Rating, 0x70);

	this->ProcessEvent(uFnPreCacheSkill, &PreCacheSkill_Params, nullptr);
};

// Function ProjectX.PlaylistSkillCache_X.AllPlayersAreAroundTheSameRank
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UPlaylistSkillCache_X::AllPlayersAreAroundTheSameRank()
{
	static UFunction* uFnAllPlayersAreAroundTheSameRank = nullptr;

	if (!uFnAllPlayersAreAroundTheSameRank)
	{
		uFnAllPlayersAreAroundTheSameRank = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.AllPlayersAreAroundTheSameRank");
	}

	UPlaylistSkillCache_X_execAllPlayersAreAroundTheSameRank_Params AllPlayersAreAroundTheSameRank_Params;

	this->ProcessEvent(uFnAllPlayersAreAroundTheSameRank, &AllPlayersAreAroundTheSameRank_Params, nullptr);

	return AllPlayersAreAroundTheSameRank_Params.ReturnValue;
};

// Function ProjectX.PlaylistSkillCache_X.EventPlaylistSkillChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UPlaylistSkillCache_X::EventPlaylistSkillChanged()
{
	static UFunction* uFnEventPlaylistSkillChanged = nullptr;

	if (!uFnEventPlaylistSkillChanged)
	{
		uFnEventPlaylistSkillChanged = UFunction::FindFunction("Function ProjectX.PlaylistSkillCache_X.EventPlaylistSkillChanged");
	}

	UPlaylistSkillCache_X_execEventPlaylistSkillChanged_Params EventPlaylistSkillChanged_Params;

	this->ProcessEvent(uFnEventPlaylistSkillChanged, &EventPlaylistSkillChanged_Params, nullptr);
};

// Function ProjectX.__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1.__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// int32_t                        RankedPlaylistID               (CPF_Parm)

void U__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1::__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1(int32_t RankedPlaylistID)
{
	static UFunction* uFn__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1 = nullptr;

	if (!uFn__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1)
	{
		uFn__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1.__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1");
	}

	U__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1_exec__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1_Params __OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1_Params;
	memcpy_s(&__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1_Params.RankedPlaylistID, 0x4, &RankedPlaylistID, 0x4);

	this->ProcessEvent(uFn__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1, &__OnlineGameSkill_X__HandleSyncedPlayerSkill_0x1_Params, nullptr);
};

// Function ProjectX.__OnlineGameSkill_X__OnSkillSynced_0x1.__OnlineGameSkill_X__OnSkillSynced_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class ULocalPlayer*            P                              (CPF_Parm)

bool U__OnlineGameSkill_X__OnSkillSynced_0x1::__OnlineGameSkill_X__OnSkillSynced_0x1(class ULocalPlayer* P)
{
	static UFunction* uFn__OnlineGameSkill_X__OnSkillSynced_0x1 = nullptr;

	if (!uFn__OnlineGameSkill_X__OnSkillSynced_0x1)
	{
		uFn__OnlineGameSkill_X__OnSkillSynced_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameSkill_X__OnSkillSynced_0x1.__OnlineGameSkill_X__OnSkillSynced_0x1");
	}

	U__OnlineGameSkill_X__OnSkillSynced_0x1_exec__OnlineGameSkill_X__OnSkillSynced_0x1_Params __OnlineGameSkill_X__OnSkillSynced_0x1_Params;
	memcpy_s(&__OnlineGameSkill_X__OnSkillSynced_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__OnlineGameSkill_X__OnSkillSynced_0x1, &__OnlineGameSkill_X__OnSkillSynced_0x1_Params, nullptr);

	return __OnlineGameSkill_X__OnSkillSynced_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlineGameWordFilter_X__InternalSanitize_0x1.__OnlineGameWordFilter_X__InternalSanitize_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FWordFilterResult       Result                         (CPF_Parm | CPF_NeedCtorLink)

void U__OnlineGameWordFilter_X__InternalSanitize_0x1::__OnlineGameWordFilter_X__InternalSanitize_0x1(struct FWordFilterResult Result)
{
	static UFunction* uFn__OnlineGameWordFilter_X__InternalSanitize_0x1 = nullptr;

	if (!uFn__OnlineGameWordFilter_X__InternalSanitize_0x1)
	{
		uFn__OnlineGameWordFilter_X__InternalSanitize_0x1 = UFunction::FindFunction("Function ProjectX.__OnlineGameWordFilter_X__InternalSanitize_0x1.__OnlineGameWordFilter_X__InternalSanitize_0x1");
	}

	U__OnlineGameWordFilter_X__InternalSanitize_0x1_exec__OnlineGameWordFilter_X__InternalSanitize_0x1_Params __OnlineGameWordFilter_X__InternalSanitize_0x1_Params;
	memcpy_s(&__OnlineGameWordFilter_X__InternalSanitize_0x1_Params.Result, 0x38, &Result, 0x38);

	this->ProcessEvent(uFn__OnlineGameWordFilter_X__InternalSanitize_0x1, &__OnlineGameWordFilter_X__InternalSanitize_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameWordFilter_X.SanitizePhraseAndNotify
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  Comment                        (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameWordFilter_X::SanitizePhraseAndNotify(class FString Comment, struct FScriptDelegate Callback)
{
	static UFunction* uFnSanitizePhraseAndNotify = nullptr;

	if (!uFnSanitizePhraseAndNotify)
	{
		uFnSanitizePhraseAndNotify = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.SanitizePhraseAndNotify");
	}

	UOnlineGameWordFilter_X_execSanitizePhraseAndNotify_Params SanitizePhraseAndNotify_Params;
	memcpy_s(&SanitizePhraseAndNotify_Params.Comment, 0x10, &Comment, 0x10);
	memcpy_s(&SanitizePhraseAndNotify_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSanitizePhraseAndNotify, &SanitizePhraseAndNotify_Params, nullptr);

	return SanitizePhraseAndNotify_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.SanitizePhrase
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  Comment                        (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameWordFilter_X::SanitizePhrase(class FString Comment)
{
	static UFunction* uFnSanitizePhrase = nullptr;

	if (!uFnSanitizePhrase)
	{
		uFnSanitizePhrase = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.SanitizePhrase");
	}

	UOnlineGameWordFilter_X_execSanitizePhrase_Params SanitizePhrase_Params;
	memcpy_s(&SanitizePhrase_Params.Comment, 0x10, &Comment, 0x10);

	UOnlineGameWordFilter_X::StaticClass()->ProcessEvent(uFnSanitizePhrase, &SanitizePhrase_Params, nullptr);

	return SanitizePhrase_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.CreateError
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UError*                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Usage                          (CPF_Parm)
// struct FWordFilterResult       Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UError* UOnlineGameWordFilter_X::CreateError(uint8_t Usage, struct FWordFilterResult& Result)
{
	static UFunction* uFnCreateError = nullptr;

	if (!uFnCreateError)
	{
		uFnCreateError = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.CreateError");
	}

	UOnlineGameWordFilter_X_execCreateError_Params CreateError_Params;
	memcpy_s(&CreateError_Params.Usage, 0x1, &Usage, 0x1);
	memcpy_s(&CreateError_Params.Result, 0x38, &Result, 0x38);

	this->ProcessEvent(uFnCreateError, &CreateError_Params, nullptr);

	memcpy_s(&Result, 0x38, &CreateError_Params.Result, 0x38);

	return CreateError_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.IsChat
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Usage                          (CPF_Parm)

bool UOnlineGameWordFilter_X::IsChat(uint8_t Usage)
{
	static UFunction* uFnIsChat = nullptr;

	if (!uFnIsChat)
	{
		uFnIsChat = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.IsChat");
	}

	UOnlineGameWordFilter_X_execIsChat_Params IsChat_Params;
	memcpy_s(&IsChat_Params.Usage, 0x1, &Usage, 0x1);

	UOnlineGameWordFilter_X::StaticClass()->ProcessEvent(uFnIsChat, &IsChat_Params, nullptr);

	return IsChat_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.HandleCommentSanitized
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Id                             (CPF_Parm | CPF_NeedCtorLink)
// struct FWordFilterResult       Result                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameWordFilter_X::HandleCommentSanitized(class FString Id, struct FWordFilterResult& Result)
{
	static UFunction* uFnHandleCommentSanitized = nullptr;

	if (!uFnHandleCommentSanitized)
	{
		uFnHandleCommentSanitized = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.HandleCommentSanitized");
	}

	UOnlineGameWordFilter_X_execHandleCommentSanitized_Params HandleCommentSanitized_Params;
	memcpy_s(&HandleCommentSanitized_Params.Id, 0x10, &Id, 0x10);
	memcpy_s(&HandleCommentSanitized_Params.Result, 0x38, &Result, 0x38);

	this->ProcessEvent(uFnHandleCommentSanitized, &HandleCommentSanitized_Params, nullptr);

	memcpy_s(&Result, 0x38, &HandleCommentSanitized_Params.Result, 0x38);
};

// Function ProjectX.OnlineGameWordFilter_X.StartWordFilterTask
// [0x00044003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Usage                          (CPF_Parm)
// class FString                  Comment                        (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         SanitizeDelegate               (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameWordFilter_X::StartWordFilterTask(uint8_t Usage, class FString Comment, struct FScriptDelegate SanitizeDelegate, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnStartWordFilterTask = nullptr;

	if (!uFnStartWordFilterTask)
	{
		uFnStartWordFilterTask = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.StartWordFilterTask");
	}

	UOnlineGameWordFilter_X_execStartWordFilterTask_Params StartWordFilterTask_Params;
	memcpy_s(&StartWordFilterTask_Params.Usage, 0x1, &Usage, 0x1);
	memcpy_s(&StartWordFilterTask_Params.Comment, 0x10, &Comment, 0x10);
	memcpy_s(&StartWordFilterTask_Params.SanitizeDelegate, 0x18, &SanitizeDelegate, 0x18);
	memcpy_s(&StartWordFilterTask_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnStartWordFilterTask, &StartWordFilterTask_Params, nullptr);

	return StartWordFilterTask_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.InternalSanitize
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  Comment                        (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ErrorCallback                  (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Usage                          (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameWordFilter_X::InternalSanitize(class FString Comment, struct FScriptDelegate Callback, struct FScriptDelegate ErrorCallback, uint8_t Usage, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnInternalSanitize = nullptr;

	if (!uFnInternalSanitize)
	{
		uFnInternalSanitize = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.InternalSanitize");
	}

	UOnlineGameWordFilter_X_execInternalSanitize_Params InternalSanitize_Params;
	memcpy_s(&InternalSanitize_Params.Comment, 0x10, &Comment, 0x10);
	memcpy_s(&InternalSanitize_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&InternalSanitize_Params.ErrorCallback, 0x18, &ErrorCallback, 0x18);
	memcpy_s(&InternalSanitize_Params.Usage, 0x1, &Usage, 0x1);
	memcpy_s(&InternalSanitize_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnInternalSanitize, &InternalSanitize_Params, nullptr);

	return InternalSanitize_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.IsPending
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Comment                        (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameWordFilter_X::IsPending(class FString Comment)
{
	static UFunction* uFnIsPending = nullptr;

	if (!uFnIsPending)
	{
		uFnIsPending = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.IsPending");
	}

	UOnlineGameWordFilter_X_execIsPending_Params IsPending_Params;
	memcpy_s(&IsPending_Params.Comment, 0x10, &Comment, 0x10);

	this->ProcessEvent(uFnIsPending, &IsPending_Params, nullptr);

	return IsPending_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.Sanitize
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint8_t                        Usage                          (CPF_Parm)
// class FString                  Comment                        (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ErrorCallback                  (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameWordFilter_X::Sanitize(uint8_t Usage, class FString Comment, struct FScriptDelegate Callback, struct FScriptDelegate ErrorCallback, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSanitize = nullptr;

	if (!uFnSanitize)
	{
		uFnSanitize = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.Sanitize");
	}

	UOnlineGameWordFilter_X_execSanitize_Params Sanitize_Params;
	memcpy_s(&Sanitize_Params.Usage, 0x1, &Usage, 0x1);
	memcpy_s(&Sanitize_Params.Comment, 0x10, &Comment, 0x10);
	memcpy_s(&Sanitize_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&Sanitize_Params.ErrorCallback, 0x18, &ErrorCallback, 0x18);
	memcpy_s(&Sanitize_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSanitize, &Sanitize_Params, nullptr);

	return Sanitize_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.SanitizePlayerName
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint8_t                        PlayerPlatform                 (CPF_Parm)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         ErrorCallback                  (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameWordFilter_X::SanitizePlayerName(uint8_t PlayerPlatform, class FString PlayerName, struct FScriptDelegate Callback, struct FScriptDelegate ErrorCallback, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSanitizePlayerName = nullptr;

	if (!uFnSanitizePlayerName)
	{
		uFnSanitizePlayerName = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.SanitizePlayerName");
	}

	UOnlineGameWordFilter_X_execSanitizePlayerName_Params SanitizePlayerName_Params;
	memcpy_s(&SanitizePlayerName_Params.PlayerPlatform, 0x1, &PlayerPlatform, 0x1);
	memcpy_s(&SanitizePlayerName_Params.PlayerName, 0x10, &PlayerName, 0x10);
	memcpy_s(&SanitizePlayerName_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&SanitizePlayerName_Params.ErrorCallback, 0x18, &ErrorCallback, 0x18);
	memcpy_s(&SanitizePlayerName_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSanitizePlayerName, &SanitizePlayerName_Params, nullptr);

	return SanitizePlayerName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilter_X.OnMainMenuOpened
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameWordFilter_X::OnMainMenuOpened()
{
	static UFunction* uFnOnMainMenuOpened = nullptr;

	if (!uFnOnMainMenuOpened)
	{
		uFnOnMainMenuOpened = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilter_X.OnMainMenuOpened");
	}

	UOnlineGameWordFilter_X_execOnMainMenuOpened_Params OnMainMenuOpened_Params;

	this->ProcessEvent(uFnOnMainMenuOpened, &OnMainMenuOpened_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1.__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    Plugin                         (CPF_Parm)

void U__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1::__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1(class UEpicFriendsPlugin_X* Plugin)
{
	static UFunction* uFn__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1)
	{
		uFn__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1.__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1");
	}

	U__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1_exec__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1_Params __OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1_Params.Plugin, 0x8, &Plugin, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1, &__OnlinePlayerFriends_X__AcceptEpicFriendInvite_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    InPlugin                       (CPF_Parm)

void UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__OnInit_0x2(class UEpicFriendsPlugin_X* InPlugin)
{
	static UFunction* uFn__OnlinePlayerFriends_X__OnInit_0x2 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__OnInit_0x2)
	{
		uFn__OnlinePlayerFriends_X__OnInit_0x2 = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit_0x2");
	}

	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__OnInit_0x2_Params __OnlinePlayerFriends_X__OnInit_0x2_Params;
	memcpy_s(&__OnlinePlayerFriends_X__OnInit_0x2_Params.InPlugin, 0x8, &InPlugin, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__OnInit_0x2, &__OnlinePlayerFriends_X__OnInit_0x2_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__OnInit_0x1()
{
	static UFunction* uFn__OnlinePlayerFriends_X__OnInit_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__OnInit_0x1)
	{
		uFn__OnlinePlayerFriends_X__OnInit_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__OnInit_0x1");
	}

	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__OnInit_0x1_Params __OnlinePlayerFriends_X__OnInit_0x1_Params;

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__OnInit_0x1, &__OnlinePlayerFriends_X__OnInit_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__DownloadBlockedList_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    Plugin                         (CPF_Parm)

void UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__DownloadBlockedList_0x1(class UEpicFriendsPlugin_X* Plugin)
{
	static UFunction* uFn__OnlinePlayerFriends_X__DownloadBlockedList_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__DownloadBlockedList_0x1)
	{
		uFn__OnlinePlayerFriends_X__DownloadBlockedList_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__DownloadBlockedList_0x1");
	}

	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__DownloadBlockedList_0x1_Params __OnlinePlayerFriends_X__DownloadBlockedList_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__DownloadBlockedList_0x1_Params.Plugin, 0x8, &Plugin, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__DownloadBlockedList_0x1, &__OnlinePlayerFriends_X__DownloadBlockedList_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FOnlineFriend           Friend                         (CPF_Parm | CPF_NeedCtorLink)

bool UOnlinePlayerFriends_X::__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1(struct FOnlineFriend Friend)
{
	static UFunction* uFn__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1)
	{
		uFn__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1");
	}

	UOnlinePlayerFriends_X_exec__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1_Params __OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1_Params.Friend, 0x118, &Friend, 0x118);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1, &__OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1_Params, nullptr);

	return __OnlinePlayerFriends_X__UpdateFriendsFromEpicSub_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.__EpicFriendsPlugin__ChangeNotifyFunc
// [0x00000000] 
// Parameter info:

void UOnlinePlayerFriends_X::__EpicFriendsPlugin__ChangeNotifyFunc()
{
	static UFunction* uFn__EpicFriendsPlugin__ChangeNotifyFunc = nullptr;

	if (!uFn__EpicFriendsPlugin__ChangeNotifyFunc)
	{
		uFn__EpicFriendsPlugin__ChangeNotifyFunc = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.__EpicFriendsPlugin__ChangeNotifyFunc");
	}

	UOnlinePlayerFriends_X_exec__EpicFriendsPlugin__ChangeNotifyFunc_Params __EpicFriendsPlugin__ChangeNotifyFunc_Params;

	this->ProcessEvent(uFn__EpicFriendsPlugin__ChangeNotifyFunc, &__EpicFriendsPlugin__ChangeNotifyFunc_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.RebuildFriendsCache
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::RebuildFriendsCache()
{
	static UFunction* uFnRebuildFriendsCache = nullptr;

	if (!uFnRebuildFriendsCache)
	{
		uFnRebuildFriendsCache = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.RebuildFriendsCache");
	}

	UOnlinePlayerFriends_X_execRebuildFriendsCache_Params RebuildFriendsCache_Params;

	this->ProcessEvent(uFnRebuildFriendsCache, &RebuildFriendsCache_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.RemoveEpicFriendLocally
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            RemovedID                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::RemoveEpicFriendLocally(struct FUniqueNetId RemovedID)
{
	static UFunction* uFnRemoveEpicFriendLocally = nullptr;

	if (!uFnRemoveEpicFriendLocally)
	{
		uFnRemoveEpicFriendLocally = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.RemoveEpicFriendLocally");
	}

	UOnlinePlayerFriends_X_execRemoveEpicFriendLocally_Params RemoveEpicFriendLocally_Params;
	memcpy_s(&RemoveEpicFriendLocally_Params.RemovedID, 0x48, &RemovedID, 0x48);

	this->ProcessEvent(uFnRemoveEpicFriendLocally, &RemoveEpicFriendLocally_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.SendChatMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InMessage                      (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            Recipient                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::SendChatMessage(class FString InMessage, struct FUniqueNetId Recipient)
{
	static UFunction* uFnSendChatMessage = nullptr;

	if (!uFnSendChatMessage)
	{
		uFnSendChatMessage = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.SendChatMessage");
	}

	UOnlinePlayerFriends_X_execSendChatMessage_Params SendChatMessage_Params;
	memcpy_s(&SendChatMessage_Params.InMessage, 0x10, &InMessage, 0x10);
	memcpy_s(&SendChatMessage_Params.Recipient, 0x48, &Recipient, 0x48);

	this->ProcessEvent(uFnSendChatMessage, &SendChatMessage_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.ShowPlayerCard
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  FriendName                     (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::ShowPlayerCard(struct FUniqueNetId FriendId, class FString FriendName)
{
	static UFunction* uFnShowPlayerCard = nullptr;

	if (!uFnShowPlayerCard)
	{
		uFnShowPlayerCard = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.ShowPlayerCard");
	}

	UOnlinePlayerFriends_X_execShowPlayerCard_Params ShowPlayerCard_Params;
	memcpy_s(&ShowPlayerCard_Params.FriendId, 0x48, &FriendId, 0x48);
	memcpy_s(&ShowPlayerCard_Params.FriendName, 0x10, &FriendName, 0x10);

	this->ProcessEvent(uFnShowPlayerCard, &ShowPlayerCard_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.SetEpicRichPresence
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)
// class FString                  PresenceString                 (CPF_Parm | CPF_NeedCtorLink)
// class FString                  GameDataString                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::SetEpicRichPresence(uint8_t LocalUserNum, class FString PresenceString, class FString GameDataString)
{
	static UFunction* uFnSetEpicRichPresence = nullptr;

	if (!uFnSetEpicRichPresence)
	{
		uFnSetEpicRichPresence = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.SetEpicRichPresence");
	}

	UOnlinePlayerFriends_X_execSetEpicRichPresence_Params SetEpicRichPresence_Params;
	memcpy_s(&SetEpicRichPresence_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&SetEpicRichPresence_Params.PresenceString, 0x10, &PresenceString, 0x10);
	memcpy_s(&SetEpicRichPresence_Params.GameDataString, 0x10, &GameDataString, 0x10);

	this->ProcessEvent(uFnSetEpicRichPresence, &SetEpicRichPresence_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.SetPlatformRichPresence
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)
// class FString                  PresenceString                 (CPF_Parm | CPF_NeedCtorLink)
// class FString                  GameDataString                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::SetPlatformRichPresence(uint8_t LocalUserNum, class FString PresenceString, class FString GameDataString)
{
	static UFunction* uFnSetPlatformRichPresence = nullptr;

	if (!uFnSetPlatformRichPresence)
	{
		uFnSetPlatformRichPresence = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.SetPlatformRichPresence");
	}

	UOnlinePlayerFriends_X_execSetPlatformRichPresence_Params SetPlatformRichPresence_Params;
	memcpy_s(&SetPlatformRichPresence_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&SetPlatformRichPresence_Params.PresenceString, 0x10, &PresenceString, 0x10);
	memcpy_s(&SetPlatformRichPresence_Params.GameDataString, 0x10, &GameDataString, 0x10);

	this->ProcessEvent(uFnSetPlatformRichPresence, &SetPlatformRichPresence_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleEpicFriendRemoved
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// struct FUniqueNetId            RemovedID                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::HandleEpicFriendRemoved(unsigned long bWasSuccessful, struct FUniqueNetId RemovedID)
{
	static UFunction* uFnHandleEpicFriendRemoved = nullptr;

	if (!uFnHandleEpicFriendRemoved)
	{
		uFnHandleEpicFriendRemoved = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleEpicFriendRemoved");
	}

	UOnlinePlayerFriends_X_execHandleEpicFriendRemoved_Params HandleEpicFriendRemoved_Params;
	HandleEpicFriendRemoved_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&HandleEpicFriendRemoved_Params.RemovedID, 0x48, &RemovedID, 0x48);

	this->ProcessEvent(uFnHandleEpicFriendRemoved, &HandleEpicFriendRemoved_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.RemoveEpicFriend
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::RemoveEpicFriend(struct FUniqueNetId FriendId)
{
	static UFunction* uFnRemoveEpicFriend = nullptr;

	if (!uFnRemoveEpicFriend)
	{
		uFnRemoveEpicFriend = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.RemoveEpicFriend");
	}

	UOnlinePlayerFriends_X_execRemoveEpicFriend_Params RemoveEpicFriend_Params;
	memcpy_s(&RemoveEpicFriend_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnRemoveEpicFriend, &RemoveEpicFriend_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.IsFriend
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlinePlayerFriends_X::IsFriend(struct FUniqueNetId FriendId)
{
	static UFunction* uFnIsFriend = nullptr;

	if (!uFnIsFriend)
	{
		uFnIsFriend = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.IsFriend");
	}

	UOnlinePlayerFriends_X_execIsFriend_Params IsFriend_Params;
	memcpy_s(&IsFriend_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnIsFriend, &IsFriend_Params, nullptr);

	return IsFriend_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.IsPlatformFriend
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlinePlayerFriends_X::IsPlatformFriend(struct FUniqueNetId FriendId)
{
	static UFunction* uFnIsPlatformFriend = nullptr;

	if (!uFnIsPlatformFriend)
	{
		uFnIsPlatformFriend = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.IsPlatformFriend");
	}

	UOnlinePlayerFriends_X_execIsPlatformFriend_Params IsPlatformFriend_Params;
	memcpy_s(&IsPlatformFriend_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnIsPlatformFriend, &IsPlatformFriend_Params, nullptr);

	return IsPlatformFriend_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.IsEpicFriend
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlinePlayerFriends_X::IsEpicFriend(struct FUniqueNetId FriendId)
{
	static UFunction* uFnIsEpicFriend = nullptr;

	if (!uFnIsEpicFriend)
	{
		uFnIsEpicFriend = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.IsEpicFriend");
	}

	UOnlinePlayerFriends_X_execIsEpicFriend_Params IsEpicFriend_Params;
	memcpy_s(&IsEpicFriend_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnIsEpicFriend, &IsEpicFriend_Params, nullptr);

	return IsEpicFriend_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.ConditionalUpdateFriendInMap
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineFriendMap_X*      FriendMap                      (CPF_Parm | CPF_EditInline)
// struct FOnlineFriend           NewFriendData                  (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::ConditionalUpdateFriendInMap(class UOnlineFriendMap_X* FriendMap, struct FOnlineFriend NewFriendData)
{
	static UFunction* uFnConditionalUpdateFriendInMap = nullptr;

	if (!uFnConditionalUpdateFriendInMap)
	{
		uFnConditionalUpdateFriendInMap = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.ConditionalUpdateFriendInMap");
	}

	UOnlinePlayerFriends_X_execConditionalUpdateFriendInMap_Params ConditionalUpdateFriendInMap_Params;
	memcpy_s(&ConditionalUpdateFriendInMap_Params.FriendMap, 0x8, &FriendMap, 0x8);
	memcpy_s(&ConditionalUpdateFriendInMap_Params.NewFriendData, 0x118, &NewFriendData, 0x118);

	this->ProcessEvent(uFnConditionalUpdateFriendInMap, &ConditionalUpdateFriendInMap_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleEpicPresenceChanged
// [0x00880002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::HandleEpicPresenceChanged(struct FUniqueNetId FriendId)
{
	static UFunction* uFnHandleEpicPresenceChanged = nullptr;

	if (!uFnHandleEpicPresenceChanged)
	{
		uFnHandleEpicPresenceChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleEpicPresenceChanged");
	}

	UOnlinePlayerFriends_X_execHandleEpicPresenceChanged_Params HandleEpicPresenceChanged_Params;
	memcpy_s(&HandleEpicPresenceChanged_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnHandleEpicPresenceChanged, &HandleEpicPresenceChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandlePlatformPresenceChange
// [0x00880002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::HandlePlatformPresenceChange(struct FUniqueNetId FriendId)
{
	static UFunction* uFnHandlePlatformPresenceChange = nullptr;

	if (!uFnHandlePlatformPresenceChange)
	{
		uFnHandlePlatformPresenceChange = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandlePlatformPresenceChange");
	}

	UOnlinePlayerFriends_X_execHandlePlatformPresenceChange_Params HandlePlatformPresenceChange_Params;
	memcpy_s(&HandlePlatformPresenceChange_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnHandlePlatformPresenceChange, &HandlePlatformPresenceChange_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.ExtractStatusData
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FOnlineStatus           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FOnlineFriend           InFriend                       (CPF_Parm | CPF_NeedCtorLink)

struct FOnlineStatus UOnlinePlayerFriends_X::ExtractStatusData(struct FOnlineFriend InFriend)
{
	static UFunction* uFnExtractStatusData = nullptr;

	if (!uFnExtractStatusData)
	{
		uFnExtractStatusData = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.ExtractStatusData");
	}

	UOnlinePlayerFriends_X_execExtractStatusData_Params ExtractStatusData_Params;
	memcpy_s(&ExtractStatusData_Params.InFriend, 0x118, &InFriend, 0x118);

	this->ProcessEvent(uFnExtractStatusData, &ExtractStatusData_Params, nullptr);

	return ExtractStatusData_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.HandleReadEpicFriendsAbandoned
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::HandleReadEpicFriendsAbandoned()
{
	static UFunction* uFnHandleReadEpicFriendsAbandoned = nullptr;

	if (!uFnHandleReadEpicFriendsAbandoned)
	{
		uFnHandleReadEpicFriendsAbandoned = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleReadEpicFriendsAbandoned");
	}

	UOnlinePlayerFriends_X_execHandleReadEpicFriendsAbandoned_Params HandleReadEpicFriendsAbandoned_Params;

	this->ProcessEvent(uFnHandleReadEpicFriendsAbandoned, &HandleReadEpicFriendsAbandoned_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleDownloadEpicFriendsTryComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)

void UOnlinePlayerFriends_X::HandleDownloadEpicFriendsTryComplete(unsigned long bSuccess)
{
	static UFunction* uFnHandleDownloadEpicFriendsTryComplete = nullptr;

	if (!uFnHandleDownloadEpicFriendsTryComplete)
	{
		uFnHandleDownloadEpicFriendsTryComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleDownloadEpicFriendsTryComplete");
	}

	UOnlinePlayerFriends_X_execHandleDownloadEpicFriendsTryComplete_Params HandleDownloadEpicFriendsTryComplete_Params;
	HandleDownloadEpicFriendsTryComplete_Params.bSuccess = bSuccess;

	this->ProcessEvent(uFnHandleDownloadEpicFriendsTryComplete, &HandleDownloadEpicFriendsTryComplete_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleLinkedAccountsToBlockReceived
// [0x00080000] (FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// TArray<struct FLinkedAccountData> RequestedAccounts              (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::HandleLinkedAccountsToBlockReceived(unsigned long bSuccess, TArray<struct FLinkedAccountData> RequestedAccounts)
{
	static UFunction* uFnHandleLinkedAccountsToBlockReceived = nullptr;

	if (!uFnHandleLinkedAccountsToBlockReceived)
	{
		uFnHandleLinkedAccountsToBlockReceived = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleLinkedAccountsToBlockReceived");
	}

	UOnlinePlayerFriends_X_execHandleLinkedAccountsToBlockReceived_Params HandleLinkedAccountsToBlockReceived_Params;
	HandleLinkedAccountsToBlockReceived_Params.bSuccess = bSuccess;
	memcpy_s(&HandleLinkedAccountsToBlockReceived_Params.RequestedAccounts, 0x10, &RequestedAccounts, 0x10);

	this->ProcessEvent(uFnHandleLinkedAccountsToBlockReceived, &HandleLinkedAccountsToBlockReceived_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.OnPlayerUnblocked
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)
// struct FUniqueNetId            UnblockedPlayerId              (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerFriends_X::OnPlayerUnblocked(uint8_t LocalUserNum, struct FUniqueNetId UnblockedPlayerId, class UError* Error)
{
	static UFunction* uFnOnPlayerUnblocked = nullptr;

	if (!uFnOnPlayerUnblocked)
	{
		uFnOnPlayerUnblocked = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.OnPlayerUnblocked");
	}

	UOnlinePlayerFriends_X_execOnPlayerUnblocked_Params OnPlayerUnblocked_Params;
	memcpy_s(&OnPlayerUnblocked_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&OnPlayerUnblocked_Params.UnblockedPlayerId, 0x48, &UnblockedPlayerId, 0x48);
	memcpy_s(&OnPlayerUnblocked_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnOnPlayerUnblocked, &OnPlayerUnblocked_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.OnPlayerBlocked
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)
// struct FUniqueNetId            BlockedPlayerId                (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerFriends_X::OnPlayerBlocked(uint8_t LocalUserNum, struct FUniqueNetId BlockedPlayerId, class UError* Error)
{
	static UFunction* uFnOnPlayerBlocked = nullptr;

	if (!uFnOnPlayerBlocked)
	{
		uFnOnPlayerBlocked = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.OnPlayerBlocked");
	}

	UOnlinePlayerFriends_X_execOnPlayerBlocked_Params OnPlayerBlocked_Params;
	memcpy_s(&OnPlayerBlocked_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&OnPlayerBlocked_Params.BlockedPlayerId, 0x48, &BlockedPlayerId, 0x48);
	memcpy_s(&OnPlayerBlocked_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnOnPlayerBlocked, &OnPlayerBlocked_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.TriggerSocialCallback
// [0x00C40003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)
// TArray<struct FEpicSocialTaskData> TaskList                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::TriggerSocialCallback(struct FUniqueNetId InPlayerId, class UError* Error, TArray<struct FEpicSocialTaskData>& TaskList)
{
	static UFunction* uFnTriggerSocialCallback = nullptr;

	if (!uFnTriggerSocialCallback)
	{
		uFnTriggerSocialCallback = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.TriggerSocialCallback");
	}

	UOnlinePlayerFriends_X_execTriggerSocialCallback_Params TriggerSocialCallback_Params;
	memcpy_s(&TriggerSocialCallback_Params.InPlayerId, 0x48, &InPlayerId, 0x48);
	memcpy_s(&TriggerSocialCallback_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&TriggerSocialCallback_Params.TaskList, 0x10, &TaskList, 0x10);

	this->ProcessEvent(uFnTriggerSocialCallback, &TriggerSocialCallback_Params, nullptr);

	memcpy_s(&TaskList, 0x10, &TriggerSocialCallback_Params.TaskList, 0x10);
};

// Function ProjectX.OnlinePlayerFriends_X.OnBlockListUpdated
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)

void UOnlinePlayerFriends_X::OnBlockListUpdated(uint8_t LocalUserNum)
{
	static UFunction* uFnOnBlockListUpdated = nullptr;

	if (!uFnOnBlockListUpdated)
	{
		uFnOnBlockListUpdated = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.OnBlockListUpdated");
	}

	UOnlinePlayerFriends_X_execOnBlockListUpdated_Params OnBlockListUpdated_Params;
	memcpy_s(&OnBlockListUpdated_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);

	this->ProcessEvent(uFnOnBlockListUpdated, &OnBlockListUpdated_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.DownloadEpicFriendsList
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::DownloadEpicFriendsList()
{
	static UFunction* uFnDownloadEpicFriendsList = nullptr;

	if (!uFnDownloadEpicFriendsList)
	{
		uFnDownloadEpicFriendsList = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.DownloadEpicFriendsList");
	}

	UOnlinePlayerFriends_X_execDownloadEpicFriendsList_Params DownloadEpicFriendsList_Params;

	this->ProcessEvent(uFnDownloadEpicFriendsList, &DownloadEpicFriendsList_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.BeginEpicFriendsDownloadAttempts
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::BeginEpicFriendsDownloadAttempts()
{
	static UFunction* uFnBeginEpicFriendsDownloadAttempts = nullptr;

	if (!uFnBeginEpicFriendsDownloadAttempts)
	{
		uFnBeginEpicFriendsDownloadAttempts = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.BeginEpicFriendsDownloadAttempts");
	}

	UOnlinePlayerFriends_X_execBeginEpicFriendsDownloadAttempts_Params BeginEpicFriendsDownloadAttempts_Params;

	this->ProcessEvent(uFnBeginEpicFriendsDownloadAttempts, &BeginEpicFriendsDownloadAttempts_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleOnReceivedLinkedAccounts
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// TArray<struct FLinkedAccountData> LinkedAccountData              (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::HandleOnReceivedLinkedAccounts(unsigned long bSuccess, TArray<struct FLinkedAccountData> LinkedAccountData)
{
	static UFunction* uFnHandleOnReceivedLinkedAccounts = nullptr;

	if (!uFnHandleOnReceivedLinkedAccounts)
	{
		uFnHandleOnReceivedLinkedAccounts = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleOnReceivedLinkedAccounts");
	}

	UOnlinePlayerFriends_X_execHandleOnReceivedLinkedAccounts_Params HandleOnReceivedLinkedAccounts_Params;
	HandleOnReceivedLinkedAccounts_Params.bSuccess = bSuccess;
	memcpy_s(&HandleOnReceivedLinkedAccounts_Params.LinkedAccountData, 0x10, &LinkedAccountData, 0x10);

	this->ProcessEvent(uFnHandleOnReceivedLinkedAccounts, &HandleOnReceivedLinkedAccounts_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.GetLinkedFriendData
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::GetLinkedFriendData()
{
	static UFunction* uFnGetLinkedFriendData = nullptr;

	if (!uFnGetLinkedFriendData)
	{
		uFnGetLinkedFriendData = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.GetLinkedFriendData");
	}

	UOnlinePlayerFriends_X_execGetLinkedFriendData_Params GetLinkedFriendData_Params;

	this->ProcessEvent(uFnGetLinkedFriendData, &GetLinkedFriendData_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.UpdateFriendsFromOnlineSub
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::UpdateFriendsFromOnlineSub()
{
	static UFunction* uFnUpdateFriendsFromOnlineSub = nullptr;

	if (!uFnUpdateFriendsFromOnlineSub)
	{
		uFnUpdateFriendsFromOnlineSub = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.UpdateFriendsFromOnlineSub");
	}

	UOnlinePlayerFriends_X_execUpdateFriendsFromOnlineSub_Params UpdateFriendsFromOnlineSub_Params;

	this->ProcessEvent(uFnUpdateFriendsFromOnlineSub, &UpdateFriendsFromOnlineSub_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.DelayedUpdateFriendsFromOnlineSub
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::DelayedUpdateFriendsFromOnlineSub()
{
	static UFunction* uFnDelayedUpdateFriendsFromOnlineSub = nullptr;

	if (!uFnDelayedUpdateFriendsFromOnlineSub)
	{
		uFnDelayedUpdateFriendsFromOnlineSub = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.DelayedUpdateFriendsFromOnlineSub");
	}

	UOnlinePlayerFriends_X_execDelayedUpdateFriendsFromOnlineSub_Params DelayedUpdateFriendsFromOnlineSub_Params;

	this->ProcessEvent(uFnDelayedUpdateFriendsFromOnlineSub, &DelayedUpdateFriendsFromOnlineSub_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.UpdateFriendsFromEpicSub
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::UpdateFriendsFromEpicSub()
{
	static UFunction* uFnUpdateFriendsFromEpicSub = nullptr;

	if (!uFnUpdateFriendsFromEpicSub)
	{
		uFnUpdateFriendsFromEpicSub = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.UpdateFriendsFromEpicSub");
	}

	UOnlinePlayerFriends_X_execUpdateFriendsFromEpicSub_Params UpdateFriendsFromEpicSub_Params;

	this->ProcessEvent(uFnUpdateFriendsFromEpicSub, &UpdateFriendsFromEpicSub_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.DelayedUpdateFriendsFromEpicSub
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::DelayedUpdateFriendsFromEpicSub()
{
	static UFunction* uFnDelayedUpdateFriendsFromEpicSub = nullptr;

	if (!uFnDelayedUpdateFriendsFromEpicSub)
	{
		uFnDelayedUpdateFriendsFromEpicSub = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.DelayedUpdateFriendsFromEpicSub");
	}

	UOnlinePlayerFriends_X_execDelayedUpdateFriendsFromEpicSub_Params DelayedUpdateFriendsFromEpicSub_Params;

	this->ProcessEvent(uFnDelayedUpdateFriendsFromEpicSub, &DelayedUpdateFriendsFromEpicSub_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleDeclineEpicFriendInviteComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            DeclinedId                     (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerFriends_X::HandleDeclineEpicFriendInviteComplete(struct FUniqueNetId DeclinedId, class UError* Error)
{
	static UFunction* uFnHandleDeclineEpicFriendInviteComplete = nullptr;

	if (!uFnHandleDeclineEpicFriendInviteComplete)
	{
		uFnHandleDeclineEpicFriendInviteComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleDeclineEpicFriendInviteComplete");
	}

	UOnlinePlayerFriends_X_execHandleDeclineEpicFriendInviteComplete_Params HandleDeclineEpicFriendInviteComplete_Params;
	memcpy_s(&HandleDeclineEpicFriendInviteComplete_Params.DeclinedId, 0x48, &DeclinedId, 0x48);
	memcpy_s(&HandleDeclineEpicFriendInviteComplete_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleDeclineEpicFriendInviteComplete, &HandleDeclineEpicFriendInviteComplete_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.DeclineEpicFriendInvite
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::DeclineEpicFriendInvite(struct FUniqueNetId FriendId)
{
	static UFunction* uFnDeclineEpicFriendInvite = nullptr;

	if (!uFnDeclineEpicFriendInvite)
	{
		uFnDeclineEpicFriendInvite = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.DeclineEpicFriendInvite");
	}

	UOnlinePlayerFriends_X_execDeclineEpicFriendInvite_Params DeclineEpicFriendInvite_Params;
	memcpy_s(&DeclineEpicFriendInvite_Params.FriendId, 0x48, &FriendId, 0x48);

	this->ProcessEvent(uFnDeclineEpicFriendInvite, &DeclineEpicFriendInvite_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleAcceptEpicFriendInviteComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            AcceptedId                     (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerFriends_X::HandleAcceptEpicFriendInviteComplete(struct FUniqueNetId AcceptedId, class UError* Error)
{
	static UFunction* uFnHandleAcceptEpicFriendInviteComplete = nullptr;

	if (!uFnHandleAcceptEpicFriendInviteComplete)
	{
		uFnHandleAcceptEpicFriendInviteComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleAcceptEpicFriendInviteComplete");
	}

	UOnlinePlayerFriends_X_execHandleAcceptEpicFriendInviteComplete_Params HandleAcceptEpicFriendInviteComplete_Params;
	memcpy_s(&HandleAcceptEpicFriendInviteComplete_Params.AcceptedId, 0x48, &AcceptedId, 0x48);
	memcpy_s(&HandleAcceptEpicFriendInviteComplete_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleAcceptEpicFriendInviteComplete, &HandleAcceptEpicFriendInviteComplete_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.AcceptEpicFriendInvite
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            FriendId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  InPin                          (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::AcceptEpicFriendInvite(struct FUniqueNetId FriendId, class FString InPin)
{
	static UFunction* uFnAcceptEpicFriendInvite = nullptr;

	if (!uFnAcceptEpicFriendInvite)
	{
		uFnAcceptEpicFriendInvite = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.AcceptEpicFriendInvite");
	}

	UOnlinePlayerFriends_X_execAcceptEpicFriendInvite_Params AcceptEpicFriendInvite_Params;
	memcpy_s(&AcceptEpicFriendInvite_Params.FriendId, 0x48, &FriendId, 0x48);
	memcpy_s(&AcceptEpicFriendInvite_Params.InPin, 0x10, &InPin, 0x10);

	this->ProcessEvent(uFnAcceptEpicFriendInvite, &AcceptEpicFriendInvite_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleEpicFriendInviteCompleted
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            InvitedPlayerId                (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerFriends_X::HandleEpicFriendInviteCompleted(struct FUniqueNetId InvitedPlayerId, class UError* Error)
{
	static UFunction* uFnHandleEpicFriendInviteCompleted = nullptr;

	if (!uFnHandleEpicFriendInviteCompleted)
	{
		uFnHandleEpicFriendInviteCompleted = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleEpicFriendInviteCompleted");
	}

	UOnlinePlayerFriends_X_execHandleEpicFriendInviteCompleted_Params HandleEpicFriendInviteCompleted_Params;
	memcpy_s(&HandleEpicFriendInviteCompleted_Params.InvitedPlayerId, 0x48, &InvitedPlayerId, 0x48);
	memcpy_s(&HandleEpicFriendInviteCompleted_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleEpicFriendInviteCompleted, &HandleEpicFriendInviteCompleted_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.FilterIncomingFriendInvite
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FOnlineFriend           Friend                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UOnlinePlayerFriends_X::FilterIncomingFriendInvite(struct FOnlineFriend& Friend)
{
	static UFunction* uFnFilterIncomingFriendInvite = nullptr;

	if (!uFnFilterIncomingFriendInvite)
	{
		uFnFilterIncomingFriendInvite = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.FilterIncomingFriendInvite");
	}

	UOnlinePlayerFriends_X_execFilterIncomingFriendInvite_Params FilterIncomingFriendInvite_Params;
	memcpy_s(&FilterIncomingFriendInvite_Params.Friend, 0x118, &Friend, 0x118);

	this->ProcessEvent(uFnFilterIncomingFriendInvite, &FilterIncomingFriendInvite_Params, nullptr);

	memcpy_s(&Friend, 0x118, &FilterIncomingFriendInvite_Params.Friend, 0x118);

	return FilterIncomingFriendInvite_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.UpdateEpicInvites
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::UpdateEpicInvites()
{
	static UFunction* uFnUpdateEpicInvites = nullptr;

	if (!uFnUpdateEpicInvites)
	{
		uFnUpdateEpicInvites = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.UpdateEpicInvites");
	}

	UOnlinePlayerFriends_X_execUpdateEpicInvites_Params UpdateEpicInvites_Params;

	this->ProcessEvent(uFnUpdateEpicInvites, &UpdateEpicInvites_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleEpicFriendInviteRemoved
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)
// struct FUniqueNetId            PlayerToRemove                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::HandleEpicFriendInviteRemoved(uint8_t LocalUserNum, struct FUniqueNetId PlayerToRemove)
{
	static UFunction* uFnHandleEpicFriendInviteRemoved = nullptr;

	if (!uFnHandleEpicFriendInviteRemoved)
	{
		uFnHandleEpicFriendInviteRemoved = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleEpicFriendInviteRemoved");
	}

	UOnlinePlayerFriends_X_execHandleEpicFriendInviteRemoved_Params HandleEpicFriendInviteRemoved_Params;
	memcpy_s(&HandleEpicFriendInviteRemoved_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&HandleEpicFriendInviteRemoved_Params.PlayerToRemove, 0x48, &PlayerToRemove, 0x48);

	this->ProcessEvent(uFnHandleEpicFriendInviteRemoved, &HandleEpicFriendInviteRemoved_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleEpicFriendInviteReceived
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        LocalUserNum                   (CPF_Parm)
// struct FUniqueNetId            RequestingPlayer               (CPF_Parm | CPF_NeedCtorLink)
// class FString                  RequestingNick                 (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::HandleEpicFriendInviteReceived(uint8_t LocalUserNum, struct FUniqueNetId RequestingPlayer, class FString RequestingNick, class FString Message)
{
	static UFunction* uFnHandleEpicFriendInviteReceived = nullptr;

	if (!uFnHandleEpicFriendInviteReceived)
	{
		uFnHandleEpicFriendInviteReceived = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleEpicFriendInviteReceived");
	}

	UOnlinePlayerFriends_X_execHandleEpicFriendInviteReceived_Params HandleEpicFriendInviteReceived_Params;
	memcpy_s(&HandleEpicFriendInviteReceived_Params.LocalUserNum, 0x1, &LocalUserNum, 0x1);
	memcpy_s(&HandleEpicFriendInviteReceived_Params.RequestingPlayer, 0x48, &RequestingPlayer, 0x48);
	memcpy_s(&HandleEpicFriendInviteReceived_Params.RequestingNick, 0x10, &RequestingNick, 0x10);
	memcpy_s(&HandleEpicFriendInviteReceived_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnHandleEpicFriendInviteReceived, &HandleEpicFriendInviteReceived_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.InviteEpicFriend
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            FriendPlayerId                 (CPF_Parm | CPF_NeedCtorLink)
// class FString                  InPin                          (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::InviteEpicFriend(struct FUniqueNetId FriendPlayerId, class FString InPin)
{
	static UFunction* uFnInviteEpicFriend = nullptr;

	if (!uFnInviteEpicFriend)
	{
		uFnInviteEpicFriend = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.InviteEpicFriend");
	}

	UOnlinePlayerFriends_X_execInviteEpicFriend_Params InviteEpicFriend_Params;
	memcpy_s(&InviteEpicFriend_Params.FriendPlayerId, 0x48, &FriendPlayerId, 0x48);
	memcpy_s(&InviteEpicFriend_Params.InPin, 0x10, &InPin, 0x10);

	this->ProcessEvent(uFnInviteEpicFriend, &InviteEpicFriend_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.RequestLinkedAccounts
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    AccountIds                     (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlinePlayerFriends_X::RequestLinkedAccounts(TArray<struct FUniqueNetId> AccountIds, struct FScriptDelegate Callback)
{
	static UFunction* uFnRequestLinkedAccounts = nullptr;

	if (!uFnRequestLinkedAccounts)
	{
		uFnRequestLinkedAccounts = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.RequestLinkedAccounts");
	}

	UOnlinePlayerFriends_X_execRequestLinkedAccounts_Params RequestLinkedAccounts_Params;
	memcpy_s(&RequestLinkedAccounts_Params.AccountIds, 0x10, &AccountIds, 0x10);
	memcpy_s(&RequestLinkedAccounts_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnRequestLinkedAccounts, &RequestLinkedAccounts_Params, nullptr);

	return RequestLinkedAccounts_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.HandleQueriedUserByEpicDisplayName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  QueriedDisplayName             (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            QueriedPlayerId                (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::HandleQueriedUserByEpicDisplayName(unsigned long bWasSuccessful, class FString QueriedDisplayName, struct FUniqueNetId QueriedPlayerId)
{
	static UFunction* uFnHandleQueriedUserByEpicDisplayName = nullptr;

	if (!uFnHandleQueriedUserByEpicDisplayName)
	{
		uFnHandleQueriedUserByEpicDisplayName = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleQueriedUserByEpicDisplayName");
	}

	UOnlinePlayerFriends_X_execHandleQueriedUserByEpicDisplayName_Params HandleQueriedUserByEpicDisplayName_Params;
	HandleQueriedUserByEpicDisplayName_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&HandleQueriedUserByEpicDisplayName_Params.QueriedDisplayName, 0x10, &QueriedDisplayName, 0x10);
	memcpy_s(&HandleQueriedUserByEpicDisplayName_Params.QueriedPlayerId, 0x48, &QueriedPlayerId, 0x48);

	this->ProcessEvent(uFnHandleQueriedUserByEpicDisplayName, &HandleQueriedUserByEpicDisplayName_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.QueryUserByEpicDisplayName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  DisplayName                    (CPF_Parm | CPF_NeedCtorLink)

bool UOnlinePlayerFriends_X::QueryUserByEpicDisplayName(class FString DisplayName)
{
	static UFunction* uFnQueryUserByEpicDisplayName = nullptr;

	if (!uFnQueryUserByEpicDisplayName)
	{
		uFnQueryUserByEpicDisplayName = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.QueryUserByEpicDisplayName");
	}

	UOnlinePlayerFriends_X_execQueryUserByEpicDisplayName_Params QueryUserByEpicDisplayName_Params;
	memcpy_s(&QueryUserByEpicDisplayName_Params.DisplayName, 0x10, &DisplayName, 0x10);

	this->ProcessEvent(uFnQueryUserByEpicDisplayName, &QueryUserByEpicDisplayName_Params, nullptr);

	return QueryUserByEpicDisplayName_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.OnPlatformFriendsDownloadAbandoned
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::OnPlatformFriendsDownloadAbandoned()
{
	static UFunction* uFnOnPlatformFriendsDownloadAbandoned = nullptr;

	if (!uFnOnPlatformFriendsDownloadAbandoned)
	{
		uFnOnPlatformFriendsDownloadAbandoned = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.OnPlatformFriendsDownloadAbandoned");
	}

	UOnlinePlayerFriends_X_execOnPlatformFriendsDownloadAbandoned_Params OnPlatformFriendsDownloadAbandoned_Params;

	this->ProcessEvent(uFnOnPlatformFriendsDownloadAbandoned, &OnPlatformFriendsDownloadAbandoned_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleDownloadPlatformFriendsTryComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)

void UOnlinePlayerFriends_X::HandleDownloadPlatformFriendsTryComplete(unsigned long bSuccess)
{
	static UFunction* uFnHandleDownloadPlatformFriendsTryComplete = nullptr;

	if (!uFnHandleDownloadPlatformFriendsTryComplete)
	{
		uFnHandleDownloadPlatformFriendsTryComplete = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleDownloadPlatformFriendsTryComplete");
	}

	UOnlinePlayerFriends_X_execHandleDownloadPlatformFriendsTryComplete_Params HandleDownloadPlatformFriendsTryComplete_Params;
	HandleDownloadPlatformFriendsTryComplete_Params.bSuccess = bSuccess;

	this->ProcessEvent(uFnHandleDownloadPlatformFriendsTryComplete, &HandleDownloadPlatformFriendsTryComplete_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.DownloadPlatformFriendsList
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::DownloadPlatformFriendsList()
{
	static UFunction* uFnDownloadPlatformFriendsList = nullptr;

	if (!uFnDownloadPlatformFriendsList)
	{
		uFnDownloadPlatformFriendsList = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.DownloadPlatformFriendsList");
	}

	UOnlinePlayerFriends_X_execDownloadPlatformFriendsList_Params DownloadPlatformFriendsList_Params;

	this->ProcessEvent(uFnDownloadPlatformFriendsList, &DownloadPlatformFriendsList_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.BeginDownloadPlatformFriendsListAttempts
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::BeginDownloadPlatformFriendsListAttempts()
{
	static UFunction* uFnBeginDownloadPlatformFriendsListAttempts = nullptr;

	if (!uFnBeginDownloadPlatformFriendsListAttempts)
	{
		uFnBeginDownloadPlatformFriendsListAttempts = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.BeginDownloadPlatformFriendsListAttempts");
	}

	UOnlinePlayerFriends_X_execBeginDownloadPlatformFriendsListAttempts_Params BeginDownloadPlatformFriendsListAttempts_Params;

	this->ProcessEvent(uFnBeginDownloadPlatformFriendsListAttempts, &BeginDownloadPlatformFriendsListAttempts_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.GetSocialMetrics
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class USocialMetrics_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class USocialMetrics_X* UOnlinePlayerFriends_X::GetSocialMetrics()
{
	static UFunction* uFnGetSocialMetrics = nullptr;

	if (!uFnGetSocialMetrics)
	{
		uFnGetSocialMetrics = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.GetSocialMetrics");
	}

	UOnlinePlayerFriends_X_execGetSocialMetrics_Params GetSocialMetrics_Params;

	this->ProcessEvent(uFnGetSocialMetrics, &GetSocialMetrics_Params, nullptr);

	return GetSocialMetrics_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.WaitForBlockListDownload
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::WaitForBlockListDownload(struct FScriptDelegate Callback)
{
	static UFunction* uFnWaitForBlockListDownload = nullptr;

	if (!uFnWaitForBlockListDownload)
	{
		uFnWaitForBlockListDownload = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.WaitForBlockListDownload");
	}

	UOnlinePlayerFriends_X_execWaitForBlockListDownload_Params WaitForBlockListDownload_Params;
	memcpy_s(&WaitForBlockListDownload_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnWaitForBlockListDownload, &WaitForBlockListDownload_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.WaitForPlayerBlockedStatus
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  EpicId                         (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::WaitForPlayerBlockedStatus(class FString EpicId, struct FScriptDelegate Callback)
{
	static UFunction* uFnWaitForPlayerBlockedStatus = nullptr;

	if (!uFnWaitForPlayerBlockedStatus)
	{
		uFnWaitForPlayerBlockedStatus = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.WaitForPlayerBlockedStatus");
	}

	UOnlinePlayerFriends_X_execWaitForPlayerBlockedStatus_Params WaitForPlayerBlockedStatus_Params;
	memcpy_s(&WaitForPlayerBlockedStatus_Params.EpicId, 0x10, &EpicId, 0x10);
	memcpy_s(&WaitForPlayerBlockedStatus_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnWaitForPlayerBlockedStatus, &WaitForPlayerBlockedStatus_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.UnblockPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            UnblockID                      (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::UnblockPlayer(struct FUniqueNetId UnblockID, struct FScriptDelegate Callback)
{
	static UFunction* uFnUnblockPlayer = nullptr;

	if (!uFnUnblockPlayer)
	{
		uFnUnblockPlayer = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.UnblockPlayer");
	}

	UOnlinePlayerFriends_X_execUnblockPlayer_Params UnblockPlayer_Params;
	memcpy_s(&UnblockPlayer_Params.UnblockID, 0x48, &UnblockID, 0x48);
	memcpy_s(&UnblockPlayer_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnUnblockPlayer, &UnblockPlayer_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.BlockPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            BlockedID                      (CPF_Parm | CPF_NeedCtorLink)
// class FString                  BlockedPlayerName              (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::BlockPlayer(struct FUniqueNetId BlockedID, class FString BlockedPlayerName, struct FScriptDelegate Callback)
{
	static UFunction* uFnBlockPlayer = nullptr;

	if (!uFnBlockPlayer)
	{
		uFnBlockPlayer = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.BlockPlayer");
	}

	UOnlinePlayerFriends_X_execBlockPlayer_Params BlockPlayer_Params;
	memcpy_s(&BlockPlayer_Params.BlockedID, 0x48, &BlockedID, 0x48);
	memcpy_s(&BlockPlayer_Params.BlockedPlayerName, 0x10, &BlockedPlayerName, 0x10);
	memcpy_s(&BlockPlayer_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnBlockPlayer, &BlockPlayer_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.DownloadBlockedList
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::DownloadBlockedList()
{
	static UFunction* uFnDownloadBlockedList = nullptr;

	if (!uFnDownloadBlockedList)
	{
		uFnDownloadBlockedList = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.DownloadBlockedList");
	}

	UOnlinePlayerFriends_X_execDownloadBlockedList_Params DownloadBlockedList_Params;

	this->ProcessEvent(uFnDownloadBlockedList, &DownloadBlockedList_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandlePsyNetConnected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     C                              (CPF_Parm)

void UOnlinePlayerFriends_X::HandlePsyNetConnected(class UPsyNetConnection_X* C)
{
	static UFunction* uFnHandlePsyNetConnected = nullptr;

	if (!uFnHandlePsyNetConnected)
	{
		uFnHandlePsyNetConnected = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandlePsyNetConnected");
	}

	UOnlinePlayerFriends_X_execHandlePsyNetConnected_Params HandlePsyNetConnected_Params;
	memcpy_s(&HandlePsyNetConnected_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnHandlePsyNetConnected, &HandlePsyNetConnected_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.ConvertPsyNetResponseToOnlineFriend
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FOnlineFriend           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FPsyNetPersonaData      InData                         (CPF_Parm | CPF_NeedCtorLink)

struct FOnlineFriend UOnlinePlayerFriends_X::ConvertPsyNetResponseToOnlineFriend(struct FPsyNetPersonaData InData)
{
	static UFunction* uFnConvertPsyNetResponseToOnlineFriend = nullptr;

	if (!uFnConvertPsyNetResponseToOnlineFriend)
	{
		uFnConvertPsyNetResponseToOnlineFriend = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.ConvertPsyNetResponseToOnlineFriend");
	}

	UOnlinePlayerFriends_X_execConvertPsyNetResponseToOnlineFriend_Params ConvertPsyNetResponseToOnlineFriend_Params;
	memcpy_s(&ConvertPsyNetResponseToOnlineFriend_Params.InData, 0x78, &InData, 0x78);

	UOnlinePlayerFriends_X::StaticClass()->ProcessEvent(uFnConvertPsyNetResponseToOnlineFriend, &ConvertPsyNetResponseToOnlineFriend_Params, nullptr);

	return ConvertPsyNetResponseToOnlineFriend_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerFriends_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.Construct");
	}

	UOnlinePlayerFriends_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.HandleOSSConfigChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOSSConfig_X*            InOSSConfig                    (CPF_Parm)

void UOnlinePlayerFriends_X::HandleOSSConfigChanged(class UOSSConfig_X* InOSSConfig)
{
	static UFunction* uFnHandleOSSConfigChanged = nullptr;

	if (!uFnHandleOSSConfigChanged)
	{
		uFnHandleOSSConfigChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.HandleOSSConfigChanged");
	}

	UOnlinePlayerFriends_X_execHandleOSSConfigChanged_Params HandleOSSConfigChanged_Params;
	memcpy_s(&HandleOSSConfigChanged_Params.InOSSConfig, 0x8, &InOSSConfig, 0x8);

	this->ProcessEvent(uFnHandleOSSConfigChanged, &HandleOSSConfigChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.SubscribeToEpicFriendsPlugin
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::SubscribeToEpicFriendsPlugin(struct FScriptDelegate Callback)
{
	static UFunction* uFnSubscribeToEpicFriendsPlugin = nullptr;

	if (!uFnSubscribeToEpicFriendsPlugin)
	{
		uFnSubscribeToEpicFriendsPlugin = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.SubscribeToEpicFriendsPlugin");
	}

	UOnlinePlayerFriends_X_execSubscribeToEpicFriendsPlugin_Params SubscribeToEpicFriendsPlugin_Params;
	memcpy_s(&SubscribeToEpicFriendsPlugin_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSubscribeToEpicFriendsPlugin, &SubscribeToEpicFriendsPlugin_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.OnInit");
	}

	UOnlinePlayerFriends_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendsPluginAdded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    Plugin                         (CPF_Parm)

void UOnlinePlayerFriends_X::EventEpicFriendsPluginAdded(class UEpicFriendsPlugin_X* Plugin)
{
	static UFunction* uFnEventEpicFriendsPluginAdded = nullptr;

	if (!uFnEventEpicFriendsPluginAdded)
	{
		uFnEventEpicFriendsPluginAdded = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendsPluginAdded");
	}

	UOnlinePlayerFriends_X_execEventEpicFriendsPluginAdded_Params EventEpicFriendsPluginAdded_Params;
	memcpy_s(&EventEpicFriendsPluginAdded_Params.Plugin, 0x8, &Plugin, 0x8);

	this->ProcessEvent(uFnEventEpicFriendsPluginAdded, &EventEpicFriendsPluginAdded_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventBlockStatusReceived
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  EpicId                         (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bBlocked                       (CPF_Parm)

void UOnlinePlayerFriends_X::EventBlockStatusReceived(class FString EpicId, unsigned long bBlocked)
{
	static UFunction* uFnEventBlockStatusReceived = nullptr;

	if (!uFnEventBlockStatusReceived)
	{
		uFnEventBlockStatusReceived = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventBlockStatusReceived");
	}

	UOnlinePlayerFriends_X_execEventBlockStatusReceived_Params EventBlockStatusReceived_Params;
	memcpy_s(&EventBlockStatusReceived_Params.EpicId, 0x10, &EpicId, 0x10);
	EventBlockStatusReceived_Params.bBlocked = bBlocked;

	this->ProcessEvent(uFnEventBlockStatusReceived, &EventBlockStatusReceived_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventBlockListDownloaded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerFriends_X::EventBlockListDownloaded()
{
	static UFunction* uFnEventBlockListDownloaded = nullptr;

	if (!uFnEventBlockListDownloaded)
	{
		uFnEventBlockListDownloaded = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventBlockListDownloaded");
	}

	UOnlinePlayerFriends_X_execEventBlockListDownloaded_Params EventBlockListDownloaded_Params;

	this->ProcessEvent(uFnEventBlockListDownloaded, &EventBlockListDownloaded_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendsListDownloadCompleted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)

void UOnlinePlayerFriends_X::EventEpicFriendsListDownloadCompleted(unsigned long bSuccess)
{
	static UFunction* uFnEventEpicFriendsListDownloadCompleted = nullptr;

	if (!uFnEventEpicFriendsListDownloadCompleted)
	{
		uFnEventEpicFriendsListDownloadCompleted = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendsListDownloadCompleted");
	}

	UOnlinePlayerFriends_X_execEventEpicFriendsListDownloadCompleted_Params EventEpicFriendsListDownloadCompleted_Params;
	EventEpicFriendsListDownloadCompleted_Params.bSuccess = bSuccess;

	this->ProcessEvent(uFnEventEpicFriendsListDownloadCompleted, &EventEpicFriendsListDownloadCompleted_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventPsyNetFriendsListDownloadCompleted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)

void UOnlinePlayerFriends_X::EventPsyNetFriendsListDownloadCompleted(unsigned long bSuccess)
{
	static UFunction* uFnEventPsyNetFriendsListDownloadCompleted = nullptr;

	if (!uFnEventPsyNetFriendsListDownloadCompleted)
	{
		uFnEventPsyNetFriendsListDownloadCompleted = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventPsyNetFriendsListDownloadCompleted");
	}

	UOnlinePlayerFriends_X_execEventPsyNetFriendsListDownloadCompleted_Params EventPsyNetFriendsListDownloadCompleted_Params;
	EventPsyNetFriendsListDownloadCompleted_Params.bSuccess = bSuccess;

	this->ProcessEvent(uFnEventPsyNetFriendsListDownloadCompleted, &EventPsyNetFriendsListDownloadCompleted_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventPlatformFriendsListDownloadCompleted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)

void UOnlinePlayerFriends_X::EventPlatformFriendsListDownloadCompleted(unsigned long bSuccess)
{
	static UFunction* uFnEventPlatformFriendsListDownloadCompleted = nullptr;

	if (!uFnEventPlatformFriendsListDownloadCompleted)
	{
		uFnEventPlatformFriendsListDownloadCompleted = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventPlatformFriendsListDownloadCompleted");
	}

	UOnlinePlayerFriends_X_execEventPlatformFriendsListDownloadCompleted_Params EventPlatformFriendsListDownloadCompleted_Params;
	EventPlatformFriendsListDownloadCompleted_Params.bSuccess = bSuccess;

	this->ProcessEvent(uFnEventPlatformFriendsListDownloadCompleted, &EventPlatformFriendsListDownloadCompleted_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventQueriedUserByEpicDisplayName
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  QueriedDisplayName             (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            QueriedPlayerId                (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::EventQueriedUserByEpicDisplayName(unsigned long bWasSuccessful, class FString QueriedDisplayName, struct FUniqueNetId QueriedPlayerId)
{
	static UFunction* uFnEventQueriedUserByEpicDisplayName = nullptr;

	if (!uFnEventQueriedUserByEpicDisplayName)
	{
		uFnEventQueriedUserByEpicDisplayName = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventQueriedUserByEpicDisplayName");
	}

	UOnlinePlayerFriends_X_execEventQueriedUserByEpicDisplayName_Params EventQueriedUserByEpicDisplayName_Params;
	EventQueriedUserByEpicDisplayName_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&EventQueriedUserByEpicDisplayName_Params.QueriedDisplayName, 0x10, &QueriedDisplayName, 0x10);
	memcpy_s(&EventQueriedUserByEpicDisplayName_Params.QueriedPlayerId, 0x48, &QueriedPlayerId, 0x48);

	this->ProcessEvent(uFnEventQueriedUserByEpicDisplayName, &EventQueriedUserByEpicDisplayName_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventEpicPlayerUnfriended
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            RemovedID                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::EventEpicPlayerUnfriended(struct FUniqueNetId RemovedID)
{
	static UFunction* uFnEventEpicPlayerUnfriended = nullptr;

	if (!uFnEventEpicPlayerUnfriended)
	{
		uFnEventEpicPlayerUnfriended = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventEpicPlayerUnfriended");
	}

	UOnlinePlayerFriends_X_execEventEpicPlayerUnfriended_Params EventEpicPlayerUnfriended_Params;
	memcpy_s(&EventEpicPlayerUnfriended_Params.RemovedID, 0x48, &RemovedID, 0x48);

	this->ProcessEvent(uFnEventEpicPlayerUnfriended, &EventEpicPlayerUnfriended_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendInviteFailed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            InvitedPlayerId                (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  InviteFriendError              (CPF_Parm)

void UOnlinePlayerFriends_X::EventEpicFriendInviteFailed(struct FUniqueNetId InvitedPlayerId, class UError* InviteFriendError)
{
	static UFunction* uFnEventEpicFriendInviteFailed = nullptr;

	if (!uFnEventEpicFriendInviteFailed)
	{
		uFnEventEpicFriendInviteFailed = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendInviteFailed");
	}

	UOnlinePlayerFriends_X_execEventEpicFriendInviteFailed_Params EventEpicFriendInviteFailed_Params;
	memcpy_s(&EventEpicFriendInviteFailed_Params.InvitedPlayerId, 0x48, &InvitedPlayerId, 0x48);
	memcpy_s(&EventEpicFriendInviteFailed_Params.InviteFriendError, 0x8, &InviteFriendError, 0x8);

	this->ProcessEvent(uFnEventEpicFriendInviteFailed, &EventEpicFriendInviteFailed_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendInviteSucceeded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            InvitedPlayerId                (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::EventEpicFriendInviteSucceeded(struct FUniqueNetId InvitedPlayerId)
{
	static UFunction* uFnEventEpicFriendInviteSucceeded = nullptr;

	if (!uFnEventEpicFriendInviteSucceeded)
	{
		uFnEventEpicFriendInviteSucceeded = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendInviteSucceeded");
	}

	UOnlinePlayerFriends_X_execEventEpicFriendInviteSucceeded_Params EventEpicFriendInviteSucceeded_Params;
	memcpy_s(&EventEpicFriendInviteSucceeded_Params.InvitedPlayerId, 0x48, &InvitedPlayerId, 0x48);

	this->ProcessEvent(uFnEventEpicFriendInviteSucceeded, &EventEpicFriendInviteSucceeded_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendInviteRemoved
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerToRemove                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::EventEpicFriendInviteRemoved(struct FUniqueNetId PlayerToRemove)
{
	static UFunction* uFnEventEpicFriendInviteRemoved = nullptr;

	if (!uFnEventEpicFriendInviteRemoved)
	{
		uFnEventEpicFriendInviteRemoved = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendInviteRemoved");
	}

	UOnlinePlayerFriends_X_execEventEpicFriendInviteRemoved_Params EventEpicFriendInviteRemoved_Params;
	memcpy_s(&EventEpicFriendInviteRemoved_Params.PlayerToRemove, 0x48, &PlayerToRemove, 0x48);

	this->ProcessEvent(uFnEventEpicFriendInviteRemoved, &EventEpicFriendInviteRemoved_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendInviteReceived
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            RequestingPlayer               (CPF_Parm | CPF_NeedCtorLink)
// class FString                  RequestingNick                 (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::EventEpicFriendInviteReceived(struct FUniqueNetId RequestingPlayer, class FString RequestingNick)
{
	static UFunction* uFnEventEpicFriendInviteReceived = nullptr;

	if (!uFnEventEpicFriendInviteReceived)
	{
		uFnEventEpicFriendInviteReceived = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventEpicFriendInviteReceived");
	}

	UOnlinePlayerFriends_X_execEventEpicFriendInviteReceived_Params EventEpicFriendInviteReceived_Params;
	memcpy_s(&EventEpicFriendInviteReceived_Params.RequestingPlayer, 0x48, &RequestingPlayer, 0x48);
	memcpy_s(&EventEpicFriendInviteReceived_Params.RequestingNick, 0x10, &RequestingNick, 0x10);

	this->ProcessEvent(uFnEventEpicFriendInviteReceived, &EventEpicFriendInviteReceived_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventEpicStatusUpdate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FOnlineStatus           StatusData                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::EventEpicStatusUpdate(struct FOnlineStatus StatusData)
{
	static UFunction* uFnEventEpicStatusUpdate = nullptr;

	if (!uFnEventEpicStatusUpdate)
	{
		uFnEventEpicStatusUpdate = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventEpicStatusUpdate");
	}

	UOnlinePlayerFriends_X_execEventEpicStatusUpdate_Params EventEpicStatusUpdate_Params;
	memcpy_s(&EventEpicStatusUpdate_Params.StatusData, 0x60, &StatusData, 0x60);

	this->ProcessEvent(uFnEventEpicStatusUpdate, &EventEpicStatusUpdate_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventPlatformStatusUpdate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FOnlineStatus           StatusData                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::EventPlatformStatusUpdate(struct FOnlineStatus StatusData)
{
	static UFunction* uFnEventPlatformStatusUpdate = nullptr;

	if (!uFnEventPlatformStatusUpdate)
	{
		uFnEventPlatformStatusUpdate = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventPlatformStatusUpdate");
	}

	UOnlinePlayerFriends_X_execEventPlatformStatusUpdate_Params EventPlatformStatusUpdate_Params;
	memcpy_s(&EventPlatformStatusUpdate_Params.StatusData, 0x60, &StatusData, 0x60);

	this->ProcessEvent(uFnEventPlatformStatusUpdate, &EventPlatformStatusUpdate_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventPsyNetStatusUpdate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FOnlineStatus           StatusData                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerFriends_X::EventPsyNetStatusUpdate(struct FOnlineStatus StatusData)
{
	static UFunction* uFnEventPsyNetStatusUpdate = nullptr;

	if (!uFnEventPsyNetStatusUpdate)
	{
		uFnEventPsyNetStatusUpdate = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventPsyNetStatusUpdate");
	}

	UOnlinePlayerFriends_X_execEventPsyNetStatusUpdate_Params EventPsyNetStatusUpdate_Params;
	memcpy_s(&EventPsyNetStatusUpdate_Params.StatusData, 0x60, &StatusData, 0x60);

	this->ProcessEvent(uFnEventPsyNetStatusUpdate, &EventPsyNetStatusUpdate_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventChatMessage
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  InMessage                      (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            SenderId                       (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bIsLocal                       (CPF_Parm)

void UOnlinePlayerFriends_X::EventChatMessage(class FString InMessage, struct FUniqueNetId SenderId, unsigned long bIsLocal)
{
	static UFunction* uFnEventChatMessage = nullptr;

	if (!uFnEventChatMessage)
	{
		uFnEventChatMessage = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventChatMessage");
	}

	UOnlinePlayerFriends_X_execEventChatMessage_Params EventChatMessage_Params;
	memcpy_s(&EventChatMessage_Params.InMessage, 0x10, &InMessage, 0x10);
	memcpy_s(&EventChatMessage_Params.SenderId, 0x48, &SenderId, 0x48);
	EventChatMessage_Params.bIsLocal = bIsLocal;

	this->ProcessEvent(uFnEventChatMessage, &EventChatMessage_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventDeclineEpicFriendInvite
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            DeclinedId                     (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  RequestError                   (CPF_Parm)

void UOnlinePlayerFriends_X::EventDeclineEpicFriendInvite(struct FUniqueNetId DeclinedId, class UError* RequestError)
{
	static UFunction* uFnEventDeclineEpicFriendInvite = nullptr;

	if (!uFnEventDeclineEpicFriendInvite)
	{
		uFnEventDeclineEpicFriendInvite = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventDeclineEpicFriendInvite");
	}

	UOnlinePlayerFriends_X_execEventDeclineEpicFriendInvite_Params EventDeclineEpicFriendInvite_Params;
	memcpy_s(&EventDeclineEpicFriendInvite_Params.DeclinedId, 0x48, &DeclinedId, 0x48);
	memcpy_s(&EventDeclineEpicFriendInvite_Params.RequestError, 0x8, &RequestError, 0x8);

	this->ProcessEvent(uFnEventDeclineEpicFriendInvite, &EventDeclineEpicFriendInvite_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventAcceptEpicFriendInvite
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            AcceptedId                     (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  RequestError                   (CPF_Parm)

void UOnlinePlayerFriends_X::EventAcceptEpicFriendInvite(struct FUniqueNetId AcceptedId, class UError* RequestError)
{
	static UFunction* uFnEventAcceptEpicFriendInvite = nullptr;

	if (!uFnEventAcceptEpicFriendInvite)
	{
		uFnEventAcceptEpicFriendInvite = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventAcceptEpicFriendInvite");
	}

	UOnlinePlayerFriends_X_execEventAcceptEpicFriendInvite_Params EventAcceptEpicFriendInvite_Params;
	memcpy_s(&EventAcceptEpicFriendInvite_Params.AcceptedId, 0x48, &AcceptedId, 0x48);
	memcpy_s(&EventAcceptEpicFriendInvite_Params.RequestError, 0x8, &RequestError, 0x8);

	this->ProcessEvent(uFnEventAcceptEpicFriendInvite, &EventAcceptEpicFriendInvite_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventBlockedListChanged
// [0x00180001] (FUNC_Final | FUNC_Protected | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerFriends_X*  FriendsObject                  (CPF_Parm)

void UOnlinePlayerFriends_X::EventBlockedListChanged(class UOnlinePlayerFriends_X* FriendsObject)
{
	static UFunction* uFnEventBlockedListChanged = nullptr;

	if (!uFnEventBlockedListChanged)
	{
		uFnEventBlockedListChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventBlockedListChanged");
	}

	UOnlinePlayerFriends_X_execEventBlockedListChanged_Params EventBlockedListChanged_Params;
	memcpy_s(&EventBlockedListChanged_Params.FriendsObject, 0x8, &FriendsObject, 0x8);

	this->ProcessEvent(uFnEventBlockedListChanged, &EventBlockedListChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventFriendsListChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerFriends_X*  FriendsRef                     (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlinePlayerFriends_X::EventFriendsListChanged(class UOnlinePlayerFriends_X* FriendsRef, class UError* Error)
{
	static UFunction* uFnEventFriendsListChanged = nullptr;

	if (!uFnEventFriendsListChanged)
	{
		uFnEventFriendsListChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventFriendsListChanged");
	}

	UOnlinePlayerFriends_X_execEventFriendsListChanged_Params EventFriendsListChanged_Params;
	memcpy_s(&EventFriendsListChanged_Params.FriendsRef, 0x8, &FriendsRef, 0x8);
	memcpy_s(&EventFriendsListChanged_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventFriendsListChanged, &EventFriendsListChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerFriends_X.EventSocialCallback
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            TargetPlayerID                 (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  RequestError                   (CPF_Parm)

void UOnlinePlayerFriends_X::EventSocialCallback(struct FUniqueNetId TargetPlayerID, class UError* RequestError)
{
	static UFunction* uFnEventSocialCallback = nullptr;

	if (!uFnEventSocialCallback)
	{
		uFnEventSocialCallback = UFunction::FindFunction("Function ProjectX.OnlinePlayerFriends_X.EventSocialCallback");
	}

	UOnlinePlayerFriends_X_execEventSocialCallback_Params EventSocialCallback_Params;
	memcpy_s(&EventSocialCallback_Params.TargetPlayerID, 0x48, &TargetPlayerID, 0x48);
	memcpy_s(&EventSocialCallback_Params.RequestError, 0x8, &RequestError, 0x8);

	this->ProcessEvent(uFnEventSocialCallback, &EventSocialCallback_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerFriends_X__BlockPlayer_0x1.__OnlinePlayerFriends_X__BlockPlayer_0x1
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    Plugin                         (CPF_Parm)

void U__OnlinePlayerFriends_X__BlockPlayer_0x1::__OnlinePlayerFriends_X__BlockPlayer_0x1(class UEpicFriendsPlugin_X* Plugin)
{
	static UFunction* uFn__OnlinePlayerFriends_X__BlockPlayer_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__BlockPlayer_0x1)
	{
		uFn__OnlinePlayerFriends_X__BlockPlayer_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerFriends_X__BlockPlayer_0x1.__OnlinePlayerFriends_X__BlockPlayer_0x1");
	}

	U__OnlinePlayerFriends_X__BlockPlayer_0x1_exec__OnlinePlayerFriends_X__BlockPlayer_0x1_Params __OnlinePlayerFriends_X__BlockPlayer_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__BlockPlayer_0x1_Params.Plugin, 0x8, &Plugin, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__BlockPlayer_0x1, &__OnlinePlayerFriends_X__BlockPlayer_0x1_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1.__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1::__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1()
{
	static UFunction* uFn__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1)
	{
		uFn__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1.__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1");
	}

	U__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1_exec__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1_Params __OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1_Params;

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1, &__OnlinePlayerFriends_X__SubscribeToEpicFriendsPlugin_0x1_Params, nullptr);
};

// Function ProjectX.RetryDelayer_X.Abandon
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void URetryDelayer_X::Abandon()
{
	static UFunction* uFnAbandon = nullptr;

	if (!uFnAbandon)
	{
		uFnAbandon = UFunction::FindFunction("Function ProjectX.RetryDelayer_X.Abandon");
	}

	URetryDelayer_X_execAbandon_Params Abandon_Params;

	this->ProcessEvent(uFnAbandon, &Abandon_Params, nullptr);
};

// Function ProjectX.RetryDelayer_X.ExecuteNextStep
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void URetryDelayer_X::ExecuteNextStep()
{
	static UFunction* uFnExecuteNextStep = nullptr;

	if (!uFnExecuteNextStep)
	{
		uFnExecuteNextStep = UFunction::FindFunction("Function ProjectX.RetryDelayer_X.ExecuteNextStep");
	}

	URetryDelayer_X_execExecuteNextStep_Params ExecuteNextStep_Params;

	this->ProcessEvent(uFnExecuteNextStep, &ExecuteNextStep_Params, nullptr);
};

// Function ProjectX.RetryDelayer_X.Cancel
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URetryDelayer_X::Cancel()
{
	static UFunction* uFnCancel = nullptr;

	if (!uFnCancel)
	{
		uFnCancel = UFunction::FindFunction("Function ProjectX.RetryDelayer_X.Cancel");
	}

	URetryDelayer_X_execCancel_Params Cancel_Params;

	this->ProcessEvent(uFnCancel, &Cancel_Params, nullptr);
};

// Function ProjectX.RetryDelayer_X.RetryOrAbandon
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URetryDelayer_X::RetryOrAbandon()
{
	static UFunction* uFnRetryOrAbandon = nullptr;

	if (!uFnRetryOrAbandon)
	{
		uFnRetryOrAbandon = UFunction::FindFunction("Function ProjectX.RetryDelayer_X.RetryOrAbandon");
	}

	URetryDelayer_X_execRetryOrAbandon_Params RetryOrAbandon_Params;

	this->ProcessEvent(uFnRetryOrAbandon, &RetryOrAbandon_Params, nullptr);
};

// Function ProjectX.RetryDelayer_X.Start
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         ToRepeat                       (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Abandoned                      (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void URetryDelayer_X::Start(struct FScriptDelegate ToRepeat, struct FScriptDelegate Abandoned)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.RetryDelayer_X.Start");
	}

	URetryDelayer_X_execStart_Params Start_Params;
	memcpy_s(&Start_Params.ToRepeat, 0x18, &ToRepeat, 0x18);
	memcpy_s(&Start_Params.Abandoned, 0x18, &Abandoned, 0x18);

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function ProjectX.RetryDelayer_X.NotifyAbandondedDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void URetryDelayer_X::NotifyAbandondedDelegate()
{
	static UFunction* uFnNotifyAbandondedDelegate = nullptr;

	if (!uFnNotifyAbandondedDelegate)
	{
		uFnNotifyAbandondedDelegate = UFunction::FindFunction("Function ProjectX.RetryDelayer_X.NotifyAbandondedDelegate");
	}

	URetryDelayer_X_execNotifyAbandondedDelegate_Params NotifyAbandondedDelegate_Params;

	this->ProcessEvent(uFnNotifyAbandondedDelegate, &NotifyAbandondedDelegate_Params, nullptr);
};

// Function ProjectX.RetryDelayer_X.RepeatedDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void URetryDelayer_X::RepeatedDelegate()
{
	static UFunction* uFnRepeatedDelegate = nullptr;

	if (!uFnRepeatedDelegate)
	{
		uFnRepeatedDelegate = UFunction::FindFunction("Function ProjectX.RetryDelayer_X.RepeatedDelegate");
	}

	URetryDelayer_X_execRepeatedDelegate_Params RepeatedDelegate_Params;

	this->ProcessEvent(uFnRepeatedDelegate, &RepeatedDelegate_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerFriends_X__UnblockPlayer_0x1.__OnlinePlayerFriends_X__UnblockPlayer_0x1
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    Plugin                         (CPF_Parm)

void U__OnlinePlayerFriends_X__UnblockPlayer_0x1::__OnlinePlayerFriends_X__UnblockPlayer_0x1(class UEpicFriendsPlugin_X* Plugin)
{
	static UFunction* uFn__OnlinePlayerFriends_X__UnblockPlayer_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__UnblockPlayer_0x1)
	{
		uFn__OnlinePlayerFriends_X__UnblockPlayer_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerFriends_X__UnblockPlayer_0x1.__OnlinePlayerFriends_X__UnblockPlayer_0x1");
	}

	U__OnlinePlayerFriends_X__UnblockPlayer_0x1_exec__OnlinePlayerFriends_X__UnblockPlayer_0x1_Params __OnlinePlayerFriends_X__UnblockPlayer_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__UnblockPlayer_0x1_Params.Plugin, 0x8, &Plugin, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__UnblockPlayer_0x1, &__OnlinePlayerFriends_X__UnblockPlayer_0x1_Params, nullptr);
};

// Function ProjectX.SocialMetrics_X.UnblockedPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlatformId                     (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            EpicAccountId                  (CPF_Parm | CPF_NeedCtorLink)

void USocialMetrics_X::UnblockedPlayer(struct FUniqueNetId PlatformId, struct FUniqueNetId EpicAccountId)
{
	static UFunction* uFnUnblockedPlayer = nullptr;

	if (!uFnUnblockedPlayer)
	{
		uFnUnblockedPlayer = UFunction::FindFunction("Function ProjectX.SocialMetrics_X.UnblockedPlayer");
	}

	USocialMetrics_X_execUnblockedPlayer_Params UnblockedPlayer_Params;
	memcpy_s(&UnblockedPlayer_Params.PlatformId, 0x48, &PlatformId, 0x48);
	memcpy_s(&UnblockedPlayer_Params.EpicAccountId, 0x48, &EpicAccountId, 0x48);

	this->ProcessEvent(uFnUnblockedPlayer, &UnblockedPlayer_Params, nullptr);
};

// Function ProjectX.SocialMetrics_X.BlockedPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlatformId                     (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            EpicAccountId                  (CPF_Parm | CPF_NeedCtorLink)

void USocialMetrics_X::BlockedPlayer(struct FUniqueNetId PlatformId, struct FUniqueNetId EpicAccountId)
{
	static UFunction* uFnBlockedPlayer = nullptr;

	if (!uFnBlockedPlayer)
	{
		uFnBlockedPlayer = UFunction::FindFunction("Function ProjectX.SocialMetrics_X.BlockedPlayer");
	}

	USocialMetrics_X_execBlockedPlayer_Params BlockedPlayer_Params;
	memcpy_s(&BlockedPlayer_Params.PlatformId, 0x48, &PlatformId, 0x48);
	memcpy_s(&BlockedPlayer_Params.EpicAccountId, 0x48, &EpicAccountId, 0x48);

	this->ProcessEvent(uFnBlockedPlayer, &BlockedPlayer_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerFriends_X__InviteEpicFriend_0x1.__OnlinePlayerFriends_X__InviteEpicFriend_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    Plugin                         (CPF_Parm)

void U__OnlinePlayerFriends_X__InviteEpicFriend_0x1::__OnlinePlayerFriends_X__InviteEpicFriend_0x1(class UEpicFriendsPlugin_X* Plugin)
{
	static UFunction* uFn__OnlinePlayerFriends_X__InviteEpicFriend_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__InviteEpicFriend_0x1)
	{
		uFn__OnlinePlayerFriends_X__InviteEpicFriend_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerFriends_X__InviteEpicFriend_0x1.__OnlinePlayerFriends_X__InviteEpicFriend_0x1");
	}

	U__OnlinePlayerFriends_X__InviteEpicFriend_0x1_exec__OnlinePlayerFriends_X__InviteEpicFriend_0x1_Params __OnlinePlayerFriends_X__InviteEpicFriend_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__InviteEpicFriend_0x1_Params.Plugin, 0x8, &Plugin, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__InviteEpicFriend_0x1, &__OnlinePlayerFriends_X__InviteEpicFriend_0x1_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1.__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    Plugin                         (CPF_Parm)

void U__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1::__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1(class UEpicFriendsPlugin_X* Plugin)
{
	static UFunction* uFn__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1)
	{
		uFn__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1.__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1");
	}

	U__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1_exec__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1_Params __OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1_Params.Plugin, 0x8, &Plugin, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1, &__OnlinePlayerFriends_X__DeclineEpicFriendInvite_0x1_Params, nullptr);
};

// Function ProjectX.__OnlinePlayerFriends_X__TriggerSocialCallback_0x1.__OnlinePlayerFriends_X__TriggerSocialCallback_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FEpicSocialTaskData     Element                        (CPF_Parm | CPF_NeedCtorLink)

bool U__OnlinePlayerFriends_X__TriggerSocialCallback_0x1::__OnlinePlayerFriends_X__TriggerSocialCallback_0x1(struct FEpicSocialTaskData Element)
{
	static UFunction* uFn__OnlinePlayerFriends_X__TriggerSocialCallback_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__TriggerSocialCallback_0x1)
	{
		uFn__OnlinePlayerFriends_X__TriggerSocialCallback_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerFriends_X__TriggerSocialCallback_0x1.__OnlinePlayerFriends_X__TriggerSocialCallback_0x1");
	}

	U__OnlinePlayerFriends_X__TriggerSocialCallback_0x1_exec__OnlinePlayerFriends_X__TriggerSocialCallback_0x1_Params __OnlinePlayerFriends_X__TriggerSocialCallback_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__TriggerSocialCallback_0x1_Params.Element, 0x60, &Element, 0x60);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__TriggerSocialCallback_0x1, &__OnlinePlayerFriends_X__TriggerSocialCallback_0x1_Params, nullptr);

	return __OnlinePlayerFriends_X__TriggerSocialCallback_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlinePlayerFriends_X__RemoveEpicFriend_0x1.__OnlinePlayerFriends_X__RemoveEpicFriend_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEpicFriendsPlugin_X*    Plugin                         (CPF_Parm)

void U__OnlinePlayerFriends_X__RemoveEpicFriend_0x1::__OnlinePlayerFriends_X__RemoveEpicFriend_0x1(class UEpicFriendsPlugin_X* Plugin)
{
	static UFunction* uFn__OnlinePlayerFriends_X__RemoveEpicFriend_0x1 = nullptr;

	if (!uFn__OnlinePlayerFriends_X__RemoveEpicFriend_0x1)
	{
		uFn__OnlinePlayerFriends_X__RemoveEpicFriend_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerFriends_X__RemoveEpicFriend_0x1.__OnlinePlayerFriends_X__RemoveEpicFriend_0x1");
	}

	U__OnlinePlayerFriends_X__RemoveEpicFriend_0x1_exec__OnlinePlayerFriends_X__RemoveEpicFriend_0x1_Params __OnlinePlayerFriends_X__RemoveEpicFriend_0x1_Params;
	memcpy_s(&__OnlinePlayerFriends_X__RemoveEpicFriend_0x1_Params.Plugin, 0x8, &Plugin, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerFriends_X__RemoveEpicFriend_0x1, &__OnlinePlayerFriends_X__RemoveEpicFriend_0x1_Params, nullptr);
};

// Function ProjectX.RPC_PsyNetSendIndividualChat_X.SetMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PsyNetSendIndividualChat_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMessage                      (CPF_Parm | CPF_NeedCtorLink)

class URPC_PsyNetSendIndividualChat_X* URPC_PsyNetSendIndividualChat_X::SetMessage(class FString InMessage)
{
	static UFunction* uFnSetMessage = nullptr;

	if (!uFnSetMessage)
	{
		uFnSetMessage = UFunction::FindFunction("Function ProjectX.RPC_PsyNetSendIndividualChat_X.SetMessage");
	}

	URPC_PsyNetSendIndividualChat_X_execSetMessage_Params SetMessage_Params;
	memcpy_s(&SetMessage_Params.InMessage, 0x10, &InMessage, 0x10);

	this->ProcessEvent(uFnSetMessage, &SetMessage_Params, nullptr);

	return SetMessage_Params.ReturnValue;
};

// Function ProjectX.RPC_PsyNetSendIndividualChat_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PsyNetSendIndividualChat_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_PsyNetSendIndividualChat_X* URPC_PsyNetSendIndividualChat_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_PsyNetSendIndividualChat_X.SetPlayerID");
	}

	URPC_PsyNetSendIndividualChat_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1.__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FStorageMaxSize         C                              (CPF_Parm)

bool U__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1::__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1(struct FStorageMaxSize C)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1)
	{
		uFn__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1.__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1");
	}

	U__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1_exec__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1_Params __OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1_Params.C, 0xC, &C, 0xC);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1, &__OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1_Params, nullptr);

	return __OnlinePlayerStorageQueue_X__GetStorageMaxSizeBytes_0x1_Params.ReturnValue;
};

// Function ProjectX.RPC_PlayerStorageSet_X.GetResponseObject
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UObject* URPC_PlayerStorageSet_X::eventGetResponseObject()
{
	static UFunction* uFnGetResponseObject = nullptr;

	if (!uFnGetResponseObject)
	{
		uFnGetResponseObject = UFunction::FindFunction("Function ProjectX.RPC_PlayerStorageSet_X.GetResponseObject");
	}

	URPC_PlayerStorageSet_X_eventGetResponseObject_Params GetResponseObject_Params;

	this->ProcessEvent(uFnGetResponseObject, &GetResponseObject_Params, nullptr);

	return GetResponseObject_Params.ReturnValue;
};

// Function ProjectX.__OnlinePlayerStorageQueue_X__MapResultItem_0x1.__OnlinePlayerStorageQueue_X__MapResultItem_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPendingStorage         P                              (CPF_Parm)

bool U__OnlinePlayerStorageQueue_X__MapResultItem_0x1::__OnlinePlayerStorageQueue_X__MapResultItem_0x1(struct FPendingStorage P)
{
	static UFunction* uFn__OnlinePlayerStorageQueue_X__MapResultItem_0x1 = nullptr;

	if (!uFn__OnlinePlayerStorageQueue_X__MapResultItem_0x1)
	{
		uFn__OnlinePlayerStorageQueue_X__MapResultItem_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerStorageQueue_X__MapResultItem_0x1.__OnlinePlayerStorageQueue_X__MapResultItem_0x1");
	}

	U__OnlinePlayerStorageQueue_X__MapResultItem_0x1_exec__OnlinePlayerStorageQueue_X__MapResultItem_0x1_Params __OnlinePlayerStorageQueue_X__MapResultItem_0x1_Params;
	memcpy_s(&__OnlinePlayerStorageQueue_X__MapResultItem_0x1_Params.P, 0x18, &P, 0x18);

	this->ProcessEvent(uFn__OnlinePlayerStorageQueue_X__MapResultItem_0x1, &__OnlinePlayerStorageQueue_X__MapResultItem_0x1_Params, nullptr);

	return __OnlinePlayerStorageQueue_X__MapResultItem_0x1_Params.ReturnValue;
};

// Function ProjectX.__OnlinePlayerStorageSync_X__SyncObjects_0x1.__OnlinePlayerStorageSync_X__SyncObjects_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  RPC                            (CPF_Parm)

void U__OnlinePlayerStorageSync_X__SyncObjects_0x1::__OnlinePlayerStorageSync_X__SyncObjects_0x1(class URPC_X* RPC)
{
	static UFunction* uFn__OnlinePlayerStorageSync_X__SyncObjects_0x1 = nullptr;

	if (!uFn__OnlinePlayerStorageSync_X__SyncObjects_0x1)
	{
		uFn__OnlinePlayerStorageSync_X__SyncObjects_0x1 = UFunction::FindFunction("Function ProjectX.__OnlinePlayerStorageSync_X__SyncObjects_0x1.__OnlinePlayerStorageSync_X__SyncObjects_0x1");
	}

	U__OnlinePlayerStorageSync_X__SyncObjects_0x1_exec__OnlinePlayerStorageSync_X__SyncObjects_0x1_Params __OnlinePlayerStorageSync_X__SyncObjects_0x1_Params;
	memcpy_s(&__OnlinePlayerStorageSync_X__SyncObjects_0x1_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerStorageSync_X__SyncObjects_0x1, &__OnlinePlayerStorageSync_X__SyncObjects_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageSync_X.__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FOnlinePlayerStorageSyncResult Result                         (CPF_Parm)

void UOnlinePlayerStorageSync_X::__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1(struct FOnlinePlayerStorageSyncResult Result)
{
	static UFunction* uFn__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1 = nullptr;

	if (!uFn__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1)
	{
		uFn__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageSync_X.__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1");
	}

	UOnlinePlayerStorageSync_X_exec__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1_Params __OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1_Params;
	memcpy_s(&__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1_Params.Result, 0x20, &Result, 0x20);

	this->ProcessEvent(uFn__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1, &__OnlinePlayerStorageSync_X__HandleSyncSuccess_0x1_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageSync_X.InstanceSyncData
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 LocalObject                    (CPF_Parm)
// class UDecodeObject_X*         DecodeObj                      (CPF_Parm)

class UObject* UOnlinePlayerStorageSync_X::InstanceSyncData(class UObject* LocalObject, class UDecodeObject_X* DecodeObj)
{
	static UFunction* uFnInstanceSyncData = nullptr;

	if (!uFnInstanceSyncData)
	{
		uFnInstanceSyncData = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageSync_X.InstanceSyncData");
	}

	UOnlinePlayerStorageSync_X_execInstanceSyncData_Params InstanceSyncData_Params;
	memcpy_s(&InstanceSyncData_Params.LocalObject, 0x8, &LocalObject, 0x8);
	memcpy_s(&InstanceSyncData_Params.DecodeObj, 0x8, &DecodeObj, 0x8);

	this->ProcessEvent(uFnInstanceSyncData, &InstanceSyncData_Params, nullptr);

	return InstanceSyncData_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageSync_X.HandleSyncSuccess
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_PlayerStorageGet_X* RPC                            (CPF_Parm)
// class UAsyncTask*              ResponseTask                   (CPF_Parm)

void UOnlinePlayerStorageSync_X::HandleSyncSuccess(class URPC_PlayerStorageGet_X* RPC, class UAsyncTask* ResponseTask)
{
	static UFunction* uFnHandleSyncSuccess = nullptr;

	if (!uFnHandleSyncSuccess)
	{
		uFnHandleSyncSuccess = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageSync_X.HandleSyncSuccess");
	}

	UOnlinePlayerStorageSync_X_execHandleSyncSuccess_Params HandleSyncSuccess_Params;
	memcpy_s(&HandleSyncSuccess_Params.RPC, 0x8, &RPC, 0x8);
	memcpy_s(&HandleSyncSuccess_Params.ResponseTask, 0x8, &ResponseTask, 0x8);

	this->ProcessEvent(uFnHandleSyncSuccess, &HandleSyncSuccess_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageSync_X.CrcObject
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Encoding                       (CPF_Parm)
// class UObject*                 Data                           (CPF_Parm)

int32_t UOnlinePlayerStorageSync_X::CrcObject(uint8_t Encoding, class UObject* Data)
{
	static UFunction* uFnCrcObject = nullptr;

	if (!uFnCrcObject)
	{
		uFnCrcObject = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageSync_X.CrcObject");
	}

	UOnlinePlayerStorageSync_X_execCrcObject_Params CrcObject_Params;
	memcpy_s(&CrcObject_Params.Encoding, 0x1, &Encoding, 0x1);
	memcpy_s(&CrcObject_Params.Data, 0x8, &Data, 0x8);

	this->ProcessEvent(uFnCrcObject, &CrcObject_Params, nullptr);

	return CrcObject_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageSync_X.MapRequestItem
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FGetPlayerStorageRequestItem ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FOnlinePlayerStorageSyncRequest Request                        (CPF_Parm)

struct FGetPlayerStorageRequestItem UOnlinePlayerStorageSync_X::MapRequestItem(struct FOnlinePlayerStorageSyncRequest Request)
{
	static UFunction* uFnMapRequestItem = nullptr;

	if (!uFnMapRequestItem)
	{
		uFnMapRequestItem = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageSync_X.MapRequestItem");
	}

	UOnlinePlayerStorageSync_X_execMapRequestItem_Params MapRequestItem_Params;
	memcpy_s(&MapRequestItem_Params.Request, 0x10, &Request, 0x10);

	this->ProcessEvent(uFnMapRequestItem, &MapRequestItem_Params, nullptr);

	return MapRequestItem_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageSync_X.SyncObjects
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FOnlinePlayerStorageSyncRequest> Requests                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UAsyncTask* UOnlinePlayerStorageSync_X::SyncObjects(TArray<struct FOnlinePlayerStorageSyncRequest>& Requests)
{
	static UFunction* uFnSyncObjects = nullptr;

	if (!uFnSyncObjects)
	{
		uFnSyncObjects = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageSync_X.SyncObjects");
	}

	UOnlinePlayerStorageSync_X_execSyncObjects_Params SyncObjects_Params;
	memcpy_s(&SyncObjects_Params.Requests, 0x10, &Requests, 0x10);

	this->ProcessEvent(uFnSyncObjects, &SyncObjects_Params, nullptr);

	memcpy_s(&Requests, 0x10, &SyncObjects_Params.Requests, 0x10);

	return SyncObjects_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageSync_X.EventSyncSuccess
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FOnlinePlayerStorageSyncResult Result                         (CPF_Const | CPF_Parm | CPF_OutParm)

void UOnlinePlayerStorageSync_X::EventSyncSuccess(struct FOnlinePlayerStorageSyncResult& Result)
{
	static UFunction* uFnEventSyncSuccess = nullptr;

	if (!uFnEventSyncSuccess)
	{
		uFnEventSyncSuccess = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageSync_X.EventSyncSuccess");
	}

	UOnlinePlayerStorageSync_X_execEventSyncSuccess_Params EventSyncSuccess_Params;
	memcpy_s(&EventSyncSuccess_Params.Result, 0x20, &Result, 0x20);

	this->ProcessEvent(uFnEventSyncSuccess, &EventSyncSuccess_Params, nullptr);

	memcpy_s(&Result, 0x20, &EventSyncSuccess_Params.Result, 0x20);
};

// Function ProjectX.__Parties_X__HandleUserInvited_0x1.__Parties_X__HandleUserInvited_0x1
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  EpicId                         (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bBlocked                       (CPF_Parm)

void U__Parties_X__HandleUserInvited_0x1::__Parties_X__HandleUserInvited_0x1(class FString EpicId, unsigned long bBlocked)
{
	static UFunction* uFn__Parties_X__HandleUserInvited_0x1 = nullptr;

	if (!uFn__Parties_X__HandleUserInvited_0x1)
	{
		uFn__Parties_X__HandleUserInvited_0x1 = UFunction::FindFunction("Function ProjectX.__Parties_X__HandleUserInvited_0x1.__Parties_X__HandleUserInvited_0x1");
	}

	U__Parties_X__HandleUserInvited_0x1_exec__Parties_X__HandleUserInvited_0x1_Params __Parties_X__HandleUserInvited_0x1_Params;
	memcpy_s(&__Parties_X__HandleUserInvited_0x1_Params.EpicId, 0x10, &EpicId, 0x10);
	__Parties_X__HandleUserInvited_0x1_Params.bBlocked = bBlocked;

	this->ProcessEvent(uFn__Parties_X__HandleUserInvited_0x1, &__Parties_X__HandleUserInvited_0x1_Params, nullptr);
};

// Function ProjectX.__PartyMessageQueue_X__SendMessage_0x1.__PartyMessageQueue_X__SendMessage_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  _                              (CPF_Parm)

void U__PartyMessageQueue_X__SendMessage_0x1::__PartyMessageQueue_X__SendMessage_0x1W(class UError* _)
{
	static UFunction* uFn__PartyMessageQueue_X__SendMessage_0x1W = nullptr;

	if (!uFn__PartyMessageQueue_X__SendMessage_0x1W)
	{
		uFn__PartyMessageQueue_X__SendMessage_0x1W = UFunction::FindFunction("Function ProjectX.__PartyMessageQueue_X__SendMessage_0x1.__PartyMessageQueue_X__SendMessage_0x1");
	}

	U__PartyMessageQueue_X__SendMessage_0x1_exec__PartyMessageQueue_X__SendMessage_0x1W_Params __PartyMessageQueue_X__SendMessage_0x1W_Params;
	memcpy_s(&__PartyMessageQueue_X__SendMessage_0x1W_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__PartyMessageQueue_X__SendMessage_0x1W, &__PartyMessageQueue_X__SendMessage_0x1W_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.__PartyMessageQueue_X__CancelAll_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              Task                           (CPF_Parm)

void UPartyMessageQueue_X::__PartyMessageQueue_X__CancelAll_0x1(class UAsyncTask* Task)
{
	static UFunction* uFn__PartyMessageQueue_X__CancelAll_0x1 = nullptr;

	if (!uFn__PartyMessageQueue_X__CancelAll_0x1)
	{
		uFn__PartyMessageQueue_X__CancelAll_0x1 = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.__PartyMessageQueue_X__CancelAll_0x1");
	}

	UPartyMessageQueue_X_exec__PartyMessageQueue_X__CancelAll_0x1_Params __PartyMessageQueue_X__CancelAll_0x1_Params;
	memcpy_s(&__PartyMessageQueue_X__CancelAll_0x1_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFn__PartyMessageQueue_X__CancelAll_0x1, &__PartyMessageQueue_X__CancelAll_0x1_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.HandleTaskComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              Task                           (CPF_Parm)

void UPartyMessageQueue_X::HandleTaskComplete(class UAsyncTask* Task)
{
	static UFunction* uFnHandleTaskComplete = nullptr;

	if (!uFnHandleTaskComplete)
	{
		uFnHandleTaskComplete = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.HandleTaskComplete");
	}

	UPartyMessageQueue_X_execHandleTaskComplete_Params HandleTaskComplete_Params;
	memcpy_s(&HandleTaskComplete_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnHandleTaskComplete, &HandleTaskComplete_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.SendMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Parm)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UPartyMessageQueue_X::SendMessageW(struct FUniqueLobbyId LobbyId, class FString Message)
{
	static UFunction* uFnSendMessageW = nullptr;

	if (!uFnSendMessageW)
	{
		uFnSendMessageW = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.SendMessage");
	}

	UPartyMessageQueue_X_execSendMessageW_Params SendMessageW_Params;
	memcpy_s(&SendMessageW_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&SendMessageW_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnSendMessageW, &SendMessageW_Params, nullptr);

	return SendMessageW_Params.ReturnValue;
};

// Function ProjectX.PartyMessageQueue_X.SendBatch
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPartyMessageQueue_X::SendBatch()
{
	static UFunction* uFnSendBatch = nullptr;

	if (!uFnSendBatch)
	{
		uFnSendBatch = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.SendBatch");
	}

	UPartyMessageQueue_X_execSendBatch_Params SendBatch_Params;

	this->ProcessEvent(uFnSendBatch, &SendBatch_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.SendBatchTimer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPartyMessageQueue_X::SendBatchTimer()
{
	static UFunction* uFnSendBatchTimer = nullptr;

	if (!uFnSendBatchTimer)
	{
		uFnSendBatchTimer = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.SendBatchTimer");
	}

	UPartyMessageQueue_X_execSendBatchTimer_Params SendBatchTimer_Params;

	this->ProcessEvent(uFnSendBatchTimer, &SendBatchTimer_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.QueueBatch
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPartyMessageQueue_X::QueueBatch()
{
	static UFunction* uFnQueueBatch = nullptr;

	if (!uFnQueueBatch)
	{
		uFnQueueBatch = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.QueueBatch");
	}

	UPartyMessageQueue_X_execQueueBatch_Params QueueBatch_Params;

	this->ProcessEvent(uFnQueueBatch, &QueueBatch_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.CancelAll
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPartyMessageQueue_X::CancelAll()
{
	static UFunction* uFnCancelAll = nullptr;

	if (!uFnCancelAll)
	{
		uFnCancelAll = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.CancelAll");
	}

	UPartyMessageQueue_X_execCancelAll_Params CancelAll_Params;

	this->ProcessEvent(uFnCancelAll, &CancelAll_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.QueueMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          LobbyId                        (CPF_Parm)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

void UPartyMessageQueue_X::QueueMessage(struct FUniqueLobbyId LobbyId, class FString Message)
{
	static UFunction* uFnQueueMessage = nullptr;

	if (!uFnQueueMessage)
	{
		uFnQueueMessage = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.QueueMessage");
	}

	UPartyMessageQueue_X_execQueueMessage_Params QueueMessage_Params;
	memcpy_s(&QueueMessage_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&QueueMessage_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnQueueMessage, &QueueMessage_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.SetPaused
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bPause                         (CPF_Parm)

void UPartyMessageQueue_X::SetPaused(unsigned long bPause)
{
	static UFunction* uFnSetPaused = nullptr;

	if (!uFnSetPaused)
	{
		uFnSetPaused = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.SetPaused");
	}

	UPartyMessageQueue_X_execSetPaused_Params SetPaused_Params;
	SetPaused_Params.bPause = bPause;

	this->ProcessEvent(uFnSetPaused, &SetPaused_Params, nullptr);
};

// Function ProjectX.PartyMessageQueue_X.SendMessageServiceDelegate
// [0x00120003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Parm)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UPartyMessageQueue_X::SendMessageServiceDelegateW(struct FUniqueLobbyId LobbyId, class FString Message)
{
	static UFunction* uFnSendMessageServiceDelegateW = nullptr;

	if (!uFnSendMessageServiceDelegateW)
	{
		uFnSendMessageServiceDelegateW = UFunction::FindFunction("Function ProjectX.PartyMessageQueue_X.SendMessageServiceDelegate");
	}

	UPartyMessageQueue_X_execSendMessageServiceDelegateW_Params SendMessageServiceDelegateW_Params;
	memcpy_s(&SendMessageServiceDelegateW_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&SendMessageServiceDelegateW_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnSendMessageServiceDelegateW, &SendMessageServiceDelegateW_Params, nullptr);

	return SendMessageServiceDelegateW_Params.ReturnValue;
};

// Function ProjectX.__PartySequence_CreateParty_X__CreateParty_0x1.__PartySequence_CreateParty_X__CreateParty_0x1
// [0x20820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyCreate_X*      RPC                            (CPF_Parm)

void U__PartySequence_CreateParty_X__CreateParty_0x1::__PartySequence_CreateParty_X__CreateParty_0x1(class URPC_PartyCreate_X* RPC)
{
	static UFunction* uFn__PartySequence_CreateParty_X__CreateParty_0x1 = nullptr;

	if (!uFn__PartySequence_CreateParty_X__CreateParty_0x1)
	{
		uFn__PartySequence_CreateParty_X__CreateParty_0x1 = UFunction::FindFunction("Function ProjectX.__PartySequence_CreateParty_X__CreateParty_0x1.__PartySequence_CreateParty_X__CreateParty_0x1");
	}

	U__PartySequence_CreateParty_X__CreateParty_0x1_exec__PartySequence_CreateParty_X__CreateParty_0x1_Params __PartySequence_CreateParty_X__CreateParty_0x1_Params;
	memcpy_s(&__PartySequence_CreateParty_X__CreateParty_0x1_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__PartySequence_CreateParty_X__CreateParty_0x1, &__PartySequence_CreateParty_X__CreateParty_0x1_Params, nullptr);
};

// Function ProjectX.RPC_PartyCreate_X.SetRequirePsyNetParty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyCreate_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bValue                         (CPF_Parm)

class URPC_PartyCreate_X* URPC_PartyCreate_X::SetRequirePsyNetParty(unsigned long bValue)
{
	static UFunction* uFnSetRequirePsyNetParty = nullptr;

	if (!uFnSetRequirePsyNetParty)
	{
		uFnSetRequirePsyNetParty = UFunction::FindFunction("Function ProjectX.RPC_PartyCreate_X.SetRequirePsyNetParty");
	}

	URPC_PartyCreate_X_execSetRequirePsyNetParty_Params SetRequirePsyNetParty_Params;
	SetRequirePsyNetParty_Params.bValue = bValue;

	this->ProcessEvent(uFnSetRequirePsyNetParty, &SetRequirePsyNetParty_Params, nullptr);

	return SetRequirePsyNetParty_Params.ReturnValue;
};

// Function ProjectX.PartySequence_CreateParty_X.__PartySequence_CreateParty_X__CreateParty_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  _                              (CPF_Parm)

void UPartySequence_CreateParty_X::__PartySequence_CreateParty_X__CreateParty_0x2(class URPC_X* _)
{
	static UFunction* uFn__PartySequence_CreateParty_X__CreateParty_0x2 = nullptr;

	if (!uFn__PartySequence_CreateParty_X__CreateParty_0x2)
	{
		uFn__PartySequence_CreateParty_X__CreateParty_0x2 = UFunction::FindFunction("Function ProjectX.PartySequence_CreateParty_X.__PartySequence_CreateParty_X__CreateParty_0x2");
	}

	UPartySequence_CreateParty_X_exec__PartySequence_CreateParty_X__CreateParty_0x2_Params __PartySequence_CreateParty_X__CreateParty_0x2_Params;
	memcpy_s(&__PartySequence_CreateParty_X__CreateParty_0x2_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__PartySequence_CreateParty_X__CreateParty_0x2, &__PartySequence_CreateParty_X__CreateParty_0x2_Params, nullptr);
};

// Function ProjectX.PartySequence_CreateParty_X.HandleCreatePartyComplete
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UPartySequence_CreateParty_X::HandleCreatePartyComplete()
{
	static UFunction* uFnHandleCreatePartyComplete = nullptr;

	if (!uFnHandleCreatePartyComplete)
	{
		uFnHandleCreatePartyComplete = UFunction::FindFunction("Function ProjectX.PartySequence_CreateParty_X.HandleCreatePartyComplete");
	}

	UPartySequence_CreateParty_X_execHandleCreatePartyComplete_Params HandleCreatePartyComplete_Params;

	this->ProcessEvent(uFnHandleCreatePartyComplete, &HandleCreatePartyComplete_Params, nullptr);
};

// Function ProjectX.PartySequence_CreateParty_X.HandlePlatformPartyCreated
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          PlatformPartyID                (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_CreateParty_X::HandlePlatformPartyCreated(unsigned long bWasSuccessful, class FString Error, struct FUniqueLobbyId& PlatformPartyID)
{
	static UFunction* uFnHandlePlatformPartyCreated = nullptr;

	if (!uFnHandlePlatformPartyCreated)
	{
		uFnHandlePlatformPartyCreated = UFunction::FindFunction("Function ProjectX.PartySequence_CreateParty_X.HandlePlatformPartyCreated");
	}

	UPartySequence_CreateParty_X_execHandlePlatformPartyCreated_Params HandlePlatformPartyCreated_Params;
	HandlePlatformPartyCreated_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&HandlePlatformPartyCreated_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&HandlePlatformPartyCreated_Params.PlatformPartyID, 0x10, &PlatformPartyID, 0x10);

	this->ProcessEvent(uFnHandlePlatformPartyCreated, &HandlePlatformPartyCreated_Params, nullptr);

	memcpy_s(&PlatformPartyID, 0x10, &HandlePlatformPartyCreated_Params.PlatformPartyID, 0x10);
};

// Function ProjectX.PartySequence_CreateParty_X.CreateParty
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        LocalPlayerNum                 (CPF_Parm)
// int32_t                        MaxPlayers                     (CPF_Parm)
// uint8_t                        Type                           (CPF_OptionalParm | CPF_Parm)
// TArray<struct FLobbyMetaData>  InitialSettings                (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UPartySequence_CreateParty_X::CreateParty(int32_t LocalPlayerNum, int32_t MaxPlayers, uint8_t Type, TArray<struct FLobbyMetaData> InitialSettings)
{
	static UFunction* uFnCreateParty = nullptr;

	if (!uFnCreateParty)
	{
		uFnCreateParty = UFunction::FindFunction("Function ProjectX.PartySequence_CreateParty_X.CreateParty");
	}

	UPartySequence_CreateParty_X_execCreateParty_Params CreateParty_Params;
	memcpy_s(&CreateParty_Params.LocalPlayerNum, 0x4, &LocalPlayerNum, 0x4);
	memcpy_s(&CreateParty_Params.MaxPlayers, 0x4, &MaxPlayers, 0x4);
	memcpy_s(&CreateParty_Params.Type, 0x1, &Type, 0x1);
	memcpy_s(&CreateParty_Params.InitialSettings, 0x10, &InitialSettings, 0x10);

	this->ProcessEvent(uFnCreateParty, &CreateParty_Params, nullptr);

	return CreateParty_Params.ReturnValue;
};

// Function ProjectX.PartySequence_CreateParty_X.EventPartyCreated
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PsyNetPartyId                  (CPF_Parm)
// TArray<struct FPsyNetPartyMember> Members                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPartySequence_CreateParty_X::EventPartyCreated(struct FUniqueLobbyId PsyNetPartyId, TArray<struct FPsyNetPartyMember>& Members)
{
	static UFunction* uFnEventPartyCreated = nullptr;

	if (!uFnEventPartyCreated)
	{
		uFnEventPartyCreated = UFunction::FindFunction("Function ProjectX.PartySequence_CreateParty_X.EventPartyCreated");
	}

	UPartySequence_CreateParty_X_execEventPartyCreated_Params EventPartyCreated_Params;
	memcpy_s(&EventPartyCreated_Params.PsyNetPartyId, 0x10, &PsyNetPartyId, 0x10);
	memcpy_s(&EventPartyCreated_Params.Members, 0x10, &Members, 0x10);

	this->ProcessEvent(uFnEventPartyCreated, &EventPartyCreated_Params, nullptr);

	memcpy_s(&Members, 0x10, &EventPartyCreated_Params.Members, 0x10);
};

// Function ProjectX.__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1.__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1::__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1()
{
	static UFunction* uFn__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1 = nullptr;

	if (!uFn__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1)
	{
		uFn__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1 = UFunction::FindFunction("Function ProjectX.__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1.__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1");
	}

	U__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1_exec__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1_Params __PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1_Params;

	this->ProcessEvent(uFn__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1, &__PartySequence_InvitedToPlatformParty_X__HandlePlayerInvited_0x1_Params, nullptr);
};

// Function ProjectX.__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1.__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1::__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1()
{
	static UFunction* uFn__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1 = nullptr;

	if (!uFn__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1)
	{
		uFn__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1 = UFunction::FindFunction("Function ProjectX.__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1.__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1");
	}

	U__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1_exec__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1_Params __PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1_Params;

	this->ProcessEvent(uFn__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1, &__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedPrompt_0x1_Params, nullptr);
};

// Function ProjectX.__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1.__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1::__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1()
{
	static UFunction* uFn__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1 = nullptr;

	if (!uFn__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1)
	{
		uFn__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1 = UFunction::FindFunction("Function ProjectX.__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1.__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1");
	}

	U__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1_exec__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1_Params __PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1_Params;

	this->ProcessEvent(uFn__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1, &__PartySequence_InvitedToPsyNetParty_X__HandlePlayerInvitedSilent_0x1_Params, nullptr);
};

// Function ProjectX.__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1.__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyMember            M                              (CPF_Parm | CPF_NeedCtorLink)

bool U__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1::__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1(struct FPartyMember M)
{
	static UFunction* uFn__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1 = nullptr;

	if (!uFn__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1)
	{
		uFn__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1 = UFunction::FindFunction("Function ProjectX.__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1.__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1");
	}

	U__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1_exec__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1_Params __PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1_Params;
	memcpy_s(&__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1_Params.M, 0x170, &M, 0x170);

	this->ProcessEvent(uFn__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1, &__PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1_Params, nullptr);

	return __PartySequence_JoinParty_X__HandleGetPlatformPartyMessage_0x1_Params.ReturnValue;
};

// Function ProjectX.PartySequence_JoinParty_X.HandlePlatformPartyCreated
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          PlatformPartyID                (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_JoinParty_X::HandlePlatformPartyCreated(unsigned long bWasSuccessful, class FString Error, struct FUniqueLobbyId& PlatformPartyID)
{
	static UFunction* uFnHandlePlatformPartyCreated = nullptr;

	if (!uFnHandlePlatformPartyCreated)
	{
		uFnHandlePlatformPartyCreated = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.HandlePlatformPartyCreated");
	}

	UPartySequence_JoinParty_X_execHandlePlatformPartyCreated_Params HandlePlatformPartyCreated_Params;
	HandlePlatformPartyCreated_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&HandlePlatformPartyCreated_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&HandlePlatformPartyCreated_Params.PlatformPartyID, 0x10, &PlatformPartyID, 0x10);

	this->ProcessEvent(uFnHandlePlatformPartyCreated, &HandlePlatformPartyCreated_Params, nullptr);

	memcpy_s(&PlatformPartyID, 0x10, &HandlePlatformPartyCreated_Params.PlatformPartyID, 0x10);
};

// Function ProjectX.PartySequence_JoinParty_X.HandleJoinLobby
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bWasSuccessful                 (CPF_Parm)
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FActiveLobbyInfo        LobbyInfo                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// struct FUniqueLobbyId          LobbyUID                       (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_JoinParty_X::HandleJoinLobby(unsigned long bWasSuccessful, class FString Error, struct FActiveLobbyInfo& LobbyInfo, struct FUniqueLobbyId& LobbyUID)
{
	static UFunction* uFnHandleJoinLobby = nullptr;

	if (!uFnHandleJoinLobby)
	{
		uFnHandleJoinLobby = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.HandleJoinLobby");
	}

	UPartySequence_JoinParty_X_execHandleJoinLobby_Params HandleJoinLobby_Params;
	HandleJoinLobby_Params.bWasSuccessful = bWasSuccessful;
	memcpy_s(&HandleJoinLobby_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&HandleJoinLobby_Params.LobbyInfo, 0x30, &LobbyInfo, 0x30);
	memcpy_s(&HandleJoinLobby_Params.LobbyUID, 0x10, &LobbyUID, 0x10);

	this->ProcessEvent(uFnHandleJoinLobby, &HandleJoinLobby_Params, nullptr);

	memcpy_s(&LobbyInfo, 0x30, &HandleJoinLobby_Params.LobbyInfo, 0x30);
	memcpy_s(&LobbyUID, 0x10, &HandleJoinLobby_Params.LobbyUID, 0x10);
};

// Function ProjectX.PartySequence_JoinParty_X.HandleGetPlatformPartyResponseMessage
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UPartyMessage_GetPlatformPartyResponse_X* Message                        (CPF_Parm)

void UPartySequence_JoinParty_X::HandleGetPlatformPartyResponseMessage(class UOnlineMessageComponent_X* Component, class UPartyMessage_GetPlatformPartyResponse_X* Message)
{
	static UFunction* uFnHandleGetPlatformPartyResponseMessage = nullptr;

	if (!uFnHandleGetPlatformPartyResponseMessage)
	{
		uFnHandleGetPlatformPartyResponseMessage = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.HandleGetPlatformPartyResponseMessage");
	}

	UPartySequence_JoinParty_X_execHandleGetPlatformPartyResponseMessage_Params HandleGetPlatformPartyResponseMessage_Params;
	memcpy_s(&HandleGetPlatformPartyResponseMessage_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleGetPlatformPartyResponseMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleGetPlatformPartyResponseMessage, &HandleGetPlatformPartyResponseMessage_Params, nullptr);
};

// Function ProjectX.PartySequence_JoinParty_X.HandleGetPlatformPartyMessage
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class UPartyMessage_GetPlatformParty_X* Message                        (CPF_Parm)

void UPartySequence_JoinParty_X::HandleGetPlatformPartyMessage(class UOnlineMessageComponent_X* Component, class UPartyMessage_GetPlatformParty_X* Message)
{
	static UFunction* uFnHandleGetPlatformPartyMessage = nullptr;

	if (!uFnHandleGetPlatformPartyMessage)
	{
		uFnHandleGetPlatformPartyMessage = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.HandleGetPlatformPartyMessage");
	}

	UPartySequence_JoinParty_X_execHandleGetPlatformPartyMessage_Params HandleGetPlatformPartyMessage_Params;
	memcpy_s(&HandleGetPlatformPartyMessage_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleGetPlatformPartyMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleGetPlatformPartyMessage, &HandleGetPlatformPartyMessage_Params, nullptr);
};

// Function ProjectX.PartySequence_JoinParty_X.HandlePsyNetLobbyJoinSucceeded
// [0x20840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyJoin_X*        RpcPartyJoin                   (CPF_Parm)

void UPartySequence_JoinParty_X::HandlePsyNetLobbyJoinSucceeded(class URPC_PartyJoin_X* RpcPartyJoin)
{
	static UFunction* uFnHandlePsyNetLobbyJoinSucceeded = nullptr;

	if (!uFnHandlePsyNetLobbyJoinSucceeded)
	{
		uFnHandlePsyNetLobbyJoinSucceeded = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.HandlePsyNetLobbyJoinSucceeded");
	}

	UPartySequence_JoinParty_X_execHandlePsyNetLobbyJoinSucceeded_Params HandlePsyNetLobbyJoinSucceeded_Params;
	memcpy_s(&HandlePsyNetLobbyJoinSucceeded_Params.RpcPartyJoin, 0x8, &RpcPartyJoin, 0x8);

	this->ProcessEvent(uFnHandlePsyNetLobbyJoinSucceeded, &HandlePsyNetLobbyJoinSucceeded_Params, nullptr);
};

// Function ProjectX.PartySequence_JoinParty_X.JoinLobbyWithKey
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  PsyNetPartyId                  (CPF_Parm | CPF_NeedCtorLink)
// class FString                  JoinKey                        (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UPartySequence_JoinParty_X::JoinLobbyWithKey(class FString PsyNetPartyId, class FString JoinKey)
{
	static UFunction* uFnJoinLobbyWithKey = nullptr;

	if (!uFnJoinLobbyWithKey)
	{
		uFnJoinLobbyWithKey = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.JoinLobbyWithKey");
	}

	UPartySequence_JoinParty_X_execJoinLobbyWithKey_Params JoinLobbyWithKey_Params;
	memcpy_s(&JoinLobbyWithKey_Params.PsyNetPartyId, 0x10, &PsyNetPartyId, 0x10);
	memcpy_s(&JoinLobbyWithKey_Params.JoinKey, 0x10, &JoinKey, 0x10);

	this->ProcessEvent(uFnJoinLobbyWithKey, &JoinLobbyWithKey_Params, nullptr);

	return JoinLobbyWithKey_Params.ReturnValue;
};

// Function ProjectX.PartySequence_JoinParty_X.JoinLobby
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

class UAsyncTask* UPartySequence_JoinParty_X::JoinLobby(struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnJoinLobby = nullptr;

	if (!uFnJoinLobby)
	{
		uFnJoinLobby = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.JoinLobby");
	}

	UPartySequence_JoinParty_X_execJoinLobby_Params JoinLobby_Params;
	memcpy_s(&JoinLobby_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnJoinLobby, &JoinLobby_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &JoinLobby_Params.LobbyId, 0x10);

	return JoinLobby_Params.ReturnValue;
};

// Function ProjectX.PartySequence_JoinParty_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPartySequence_JoinParty_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.Init");
	}

	UPartySequence_JoinParty_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.PartySequence_JoinParty_X.EventJoinedParty
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          PsyNetPartyId                  (CPF_Parm)
// TArray<struct FPsyNetPartyMember> Members                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPartySequence_JoinParty_X::EventJoinedParty(struct FUniqueLobbyId PsyNetPartyId, TArray<struct FPsyNetPartyMember>& Members)
{
	static UFunction* uFnEventJoinedParty = nullptr;

	if (!uFnEventJoinedParty)
	{
		uFnEventJoinedParty = UFunction::FindFunction("Function ProjectX.PartySequence_JoinParty_X.EventJoinedParty");
	}

	UPartySequence_JoinParty_X_execEventJoinedParty_Params EventJoinedParty_Params;
	memcpy_s(&EventJoinedParty_Params.PsyNetPartyId, 0x10, &PsyNetPartyId, 0x10);
	memcpy_s(&EventJoinedParty_Params.Members, 0x10, &Members, 0x10);

	this->ProcessEvent(uFnEventJoinedParty, &EventJoinedParty_Params, nullptr);

	memcpy_s(&Members, 0x10, &EventJoinedParty_Params.Members, 0x10);
};

// Function ProjectX.__PRI_X__RegisterPlayerWithSession_0x1.__PRI_X__RegisterPlayerWithSession_0x1
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            _                              (CPF_Parm | CPF_NeedCtorLink)

void U__PRI_X__RegisterPlayerWithSession_0x1::__PRI_X__RegisterPlayerWithSession_0x1(struct FUniqueNetId _)
{
	static UFunction* uFn__PRI_X__RegisterPlayerWithSession_0x1 = nullptr;

	if (!uFn__PRI_X__RegisterPlayerWithSession_0x1)
	{
		uFn__PRI_X__RegisterPlayerWithSession_0x1 = UFunction::FindFunction("Function ProjectX.__PRI_X__RegisterPlayerWithSession_0x1.__PRI_X__RegisterPlayerWithSession_0x1");
	}

	U__PRI_X__RegisterPlayerWithSession_0x1_exec__PRI_X__RegisterPlayerWithSession_0x1_Params __PRI_X__RegisterPlayerWithSession_0x1_Params;
	memcpy_s(&__PRI_X__RegisterPlayerWithSession_0x1_Params._, 0x48, &_, 0x48);

	this->ProcessEvent(uFn__PRI_X__RegisterPlayerWithSession_0x1, &__PRI_X__RegisterPlayerWithSession_0x1_Params, nullptr);
};

// Function ProjectX.PRI_X.Destroyed
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APRI_X::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function ProjectX.PRI_X.Destroyed");
	}

	APRI_X_eventDestroyed_Params Destroyed_Params;

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function ProjectX.PRI_X.OnUniqueIdChanged
// [0x00080102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void APRI_X::OnUniqueIdChanged()
{
	static UFunction* uFnOnUniqueIdChanged = nullptr;

	if (!uFnOnUniqueIdChanged)
	{
		uFnOnUniqueIdChanged = UFunction::FindFunction("Function ProjectX.PRI_X.OnUniqueIdChanged");
	}

	APRI_X_execOnUniqueIdChanged_Params OnUniqueIdChanged_Params;

	this->ProcessEvent(uFnOnUniqueIdChanged, &OnUniqueIdChanged_Params, nullptr);
};

// Function ProjectX.PRI_X.SetUniqueId
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerUniqueId                 (CPF_Parm | CPF_NeedCtorLink)

void APRI_X::SetUniqueId(struct FUniqueNetId PlayerUniqueId)
{
	static UFunction* uFnSetUniqueId = nullptr;

	if (!uFnSetUniqueId)
	{
		uFnSetUniqueId = UFunction::FindFunction("Function ProjectX.PRI_X.SetUniqueId");
	}

	APRI_X_execSetUniqueId_Params SetUniqueId_Params;
	memcpy_s(&SetUniqueId_Params.PlayerUniqueId, 0x48, &PlayerUniqueId, 0x48);

	this->ProcessEvent(uFnSetUniqueId, &SetUniqueId_Params, nullptr);
};

// Function ProjectX.PRI_X.UnregisterPlayerFromSession
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APRI_X::UnregisterPlayerFromSession()
{
	static UFunction* uFnUnregisterPlayerFromSession = nullptr;

	if (!uFnUnregisterPlayerFromSession)
	{
		uFnUnregisterPlayerFromSession = UFunction::FindFunction("Function ProjectX.PRI_X.UnregisterPlayerFromSession");
	}

	APRI_X_execUnregisterPlayerFromSession_Params UnregisterPlayerFromSession_Params;

	this->ProcessEvent(uFnUnregisterPlayerFromSession, &UnregisterPlayerFromSession_Params, nullptr);
};

// Function ProjectX.PRI_X.RegisterPlayerWithSession
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APRI_X::RegisterPlayerWithSession()
{
	static UFunction* uFnRegisterPlayerWithSession = nullptr;

	if (!uFnRegisterPlayerWithSession)
	{
		uFnRegisterPlayerWithSession = UFunction::FindFunction("Function ProjectX.PRI_X.RegisterPlayerWithSession");
	}

	APRI_X_execRegisterPlayerWithSession_Params RegisterPlayerWithSession_Params;

	this->ProcessEvent(uFnRegisterPlayerWithSession, &RegisterPlayerWithSession_Params, nullptr);
};

// Function ProjectX.PRI_X.AddPlayerHistoryKey
// [0x00080102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UOnlineRecentPlayersList* PlayersList                    (CPF_Parm)

void APRI_X::AddPlayerHistoryKey(class UOnlineRecentPlayersList* PlayersList)
{
	static UFunction* uFnAddPlayerHistoryKey = nullptr;

	if (!uFnAddPlayerHistoryKey)
	{
		uFnAddPlayerHistoryKey = UFunction::FindFunction("Function ProjectX.PRI_X.AddPlayerHistoryKey");
	}

	APRI_X_execAddPlayerHistoryKey_Params AddPlayerHistoryKey_Params;
	memcpy_s(&AddPlayerHistoryKey_Params.PlayersList, 0x8, &PlayersList, 0x8);

	this->ProcessEvent(uFnAddPlayerHistoryKey, &AddPlayerHistoryKey_Params, nullptr);
};

// Function ProjectX.PRI_X.OnOwnerChanged
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void APRI_X::eventOnOwnerChanged()
{
	static UFunction* uFnOnOwnerChanged = nullptr;

	if (!uFnOnOwnerChanged)
	{
		uFnOnOwnerChanged = UFunction::FindFunction("Function ProjectX.PRI_X.OnOwnerChanged");
	}

	APRI_X_eventOnOwnerChanged_Params OnOwnerChanged_Params;

	this->ProcessEvent(uFnOnOwnerChanged, &OnOwnerChanged_Params, nullptr);
};

// Function ProjectX.PRI_X.SetPlayerName
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  S                              (CPF_Parm | CPF_NeedCtorLink)

void APRI_X::eventSetPlayerName(class FString S)
{
	static UFunction* uFnSetPlayerName = nullptr;

	if (!uFnSetPlayerName)
	{
		uFnSetPlayerName = UFunction::FindFunction("Function ProjectX.PRI_X.SetPlayerName");
	}

	APRI_X_eventSetPlayerName_Params SetPlayerName_Params;
	memcpy_s(&SetPlayerName_Params.S, 0x10, &S, 0x10);

	this->ProcessEvent(uFnSetPlayerName, &SetPlayerName_Params, nullptr);
};

// Function ProjectX.PRI_X.ReplicatedEvent
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FName                   VarName                        (CPF_Parm)

void APRI_X::eventReplicatedEvent(struct FName VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function ProjectX.PRI_X.ReplicatedEvent");
	}

	APRI_X_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memcpy_s(&ReplicatedEvent_Params.VarName, 0x8, &VarName, 0x8);

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function ProjectX.PRI_X.EventDestroyed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APRI_X*                  PRI                            (CPF_Parm)

void APRI_X::EventDestroyed(class APRI_X* PRI)
{
	static UFunction* uFnEventDestroyed = nullptr;

	if (!uFnEventDestroyed)
	{
		uFnEventDestroyed = UFunction::FindFunction("Function ProjectX.PRI_X.EventDestroyed");
	}

	APRI_X_execEventDestroyed_Params EventDestroyed_Params;
	memcpy_s(&EventDestroyed_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnEventDestroyed, &EventDestroyed_Params, nullptr);
};

// Function ProjectX.PRI_X.EventUniqueIdChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APRI_X*                  PRI                            (CPF_Parm)

void APRI_X::EventUniqueIdChanged(class APRI_X* PRI)
{
	static UFunction* uFnEventUniqueIdChanged = nullptr;

	if (!uFnEventUniqueIdChanged)
	{
		uFnEventUniqueIdChanged = UFunction::FindFunction("Function ProjectX.PRI_X.EventUniqueIdChanged");
	}

	APRI_X_execEventUniqueIdChanged_Params EventUniqueIdChanged_Params;
	memcpy_s(&EventUniqueIdChanged_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnEventUniqueIdChanged, &EventUniqueIdChanged_Params, nullptr);
};

// Function ProjectX.PRI_X.EventPlayerNameChanged
// [0x00128001] (FUNC_Final | FUNC_UbergraphFunction | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class APRI_X*                  PRI                            (CPF_Parm)

void APRI_X::EventPlayerNameChanged(class APRI_X* PRI)
{
	static UFunction* uFnEventPlayerNameChanged = nullptr;

	if (!uFnEventPlayerNameChanged)
	{
		uFnEventPlayerNameChanged = UFunction::FindFunction("Function ProjectX.PRI_X.EventPlayerNameChanged");
	}

	APRI_X_execEventPlayerNameChanged_Params EventPlayerNameChanged_Params;
	memcpy_s(&EventPlayerNameChanged_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnEventPlayerNameChanged, &EventPlayerNameChanged_Params, nullptr);
};

// Function ProjectX.__PsyNetBeacon_X__SendMessageToClients_0x1.__PsyNetBeacon_X__SendMessageToClients_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URPC_RelayToClient_X*    OtherRPC                       (CPF_Parm)

bool U__PsyNetBeacon_X__SendMessageToClients_0x1::__PsyNetBeacon_X__SendMessageToClients_0x1W(class URPC_RelayToClient_X* OtherRPC)
{
	static UFunction* uFn__PsyNetBeacon_X__SendMessageToClients_0x1W = nullptr;

	if (!uFn__PsyNetBeacon_X__SendMessageToClients_0x1W)
	{
		uFn__PsyNetBeacon_X__SendMessageToClients_0x1W = UFunction::FindFunction("Function ProjectX.__PsyNetBeacon_X__SendMessageToClients_0x1.__PsyNetBeacon_X__SendMessageToClients_0x1");
	}

	U__PsyNetBeacon_X__SendMessageToClients_0x1_exec__PsyNetBeacon_X__SendMessageToClients_0x1W_Params __PsyNetBeacon_X__SendMessageToClients_0x1W_Params;
	memcpy_s(&__PsyNetBeacon_X__SendMessageToClients_0x1W_Params.OtherRPC, 0x8, &OtherRPC, 0x8);

	this->ProcessEvent(uFn__PsyNetBeacon_X__SendMessageToClients_0x1W, &__PsyNetBeacon_X__SendMessageToClients_0x1W_Params, nullptr);

	return __PsyNetBeacon_X__SendMessageToClients_0x1W_Params.ReturnValue;
};

// Function ProjectX.__PsyNetBeacon_X__SendMessageToServer_0x1.__PsyNetBeacon_X__SendMessageToServer_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  _                              (CPF_Parm)

void U__PsyNetBeacon_X__SendMessageToServer_0x1::__PsyNetBeacon_X__SendMessageToServer_0x1W(class URPC_X* _)
{
	static UFunction* uFn__PsyNetBeacon_X__SendMessageToServer_0x1W = nullptr;

	if (!uFn__PsyNetBeacon_X__SendMessageToServer_0x1W)
	{
		uFn__PsyNetBeacon_X__SendMessageToServer_0x1W = UFunction::FindFunction("Function ProjectX.__PsyNetBeacon_X__SendMessageToServer_0x1.__PsyNetBeacon_X__SendMessageToServer_0x1");
	}

	U__PsyNetBeacon_X__SendMessageToServer_0x1_exec__PsyNetBeacon_X__SendMessageToServer_0x1W_Params __PsyNetBeacon_X__SendMessageToServer_0x1W_Params;
	memcpy_s(&__PsyNetBeacon_X__SendMessageToServer_0x1W_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__PsyNetBeacon_X__SendMessageToServer_0x1W, &__PsyNetBeacon_X__SendMessageToServer_0x1W_Params, nullptr);
};

// Function ProjectX.__PsyNetConnection_X__ProcessServiceCall_0x1.__PsyNetConnection_X__ProcessServiceCall_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  _                              (CPF_Parm)

void U__PsyNetConnection_X__ProcessServiceCall_0x1::__PsyNetConnection_X__ProcessServiceCall_0x1(class UError* _)
{
	static UFunction* uFn__PsyNetConnection_X__ProcessServiceCall_0x1 = nullptr;

	if (!uFn__PsyNetConnection_X__ProcessServiceCall_0x1)
	{
		uFn__PsyNetConnection_X__ProcessServiceCall_0x1 = UFunction::FindFunction("Function ProjectX.__PsyNetConnection_X__ProcessServiceCall_0x1.__PsyNetConnection_X__ProcessServiceCall_0x1");
	}

	U__PsyNetConnection_X__ProcessServiceCall_0x1_exec__PsyNetConnection_X__ProcessServiceCall_0x1_Params __PsyNetConnection_X__ProcessServiceCall_0x1_Params;
	memcpy_s(&__PsyNetConnection_X__ProcessServiceCall_0x1_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__PsyNetConnection_X__ProcessServiceCall_0x1, &__PsyNetConnection_X__ProcessServiceCall_0x1_Params, nullptr);
};

// Function ProjectX.__PsyNetMessengerHttp_X__SendMessage_0x1.__PsyNetMessengerHttp_X__SendMessage_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           Request                        (CPF_Parm)

void U__PsyNetMessengerHttp_X__SendMessage_0x1::__PsyNetMessengerHttp_X__SendMessage_0x1W(class UWebRequest_X* Request)
{
	static UFunction* uFn__PsyNetMessengerHttp_X__SendMessage_0x1W = nullptr;

	if (!uFn__PsyNetMessengerHttp_X__SendMessage_0x1W)
	{
		uFn__PsyNetMessengerHttp_X__SendMessage_0x1W = UFunction::FindFunction("Function ProjectX.__PsyNetMessengerHttp_X__SendMessage_0x1.__PsyNetMessengerHttp_X__SendMessage_0x1");
	}

	U__PsyNetMessengerHttp_X__SendMessage_0x1_exec__PsyNetMessengerHttp_X__SendMessage_0x1W_Params __PsyNetMessengerHttp_X__SendMessage_0x1W_Params;
	memcpy_s(&__PsyNetMessengerHttp_X__SendMessage_0x1W_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFn__PsyNetMessengerHttp_X__SendMessage_0x1W, &__PsyNetMessengerHttp_X__SendMessage_0x1W_Params, nullptr);
};

// Function ProjectX.__PsyNetRequestQue_X__SendRequest_0x1.__PsyNetRequestQue_X__SendRequest_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__PsyNetRequestQue_X__SendRequest_0x1::__PsyNetRequestQue_X__SendRequest_0x1()
{
	static UFunction* uFn__PsyNetRequestQue_X__SendRequest_0x1 = nullptr;

	if (!uFn__PsyNetRequestQue_X__SendRequest_0x1)
	{
		uFn__PsyNetRequestQue_X__SendRequest_0x1 = UFunction::FindFunction("Function ProjectX.__PsyNetRequestQue_X__SendRequest_0x1.__PsyNetRequestQue_X__SendRequest_0x1");
	}

	U__PsyNetRequestQue_X__SendRequest_0x1_exec__PsyNetRequestQue_X__SendRequest_0x1_Params __PsyNetRequestQue_X__SendRequest_0x1_Params;

	this->ProcessEvent(uFn__PsyNetRequestQue_X__SendRequest_0x1, &__PsyNetRequestQue_X__SendRequest_0x1_Params, nullptr);
};

// Function ProjectX.PsyNetRequestQue_X.FailAllPending
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UPsyNetRequestQue_X::FailAllPending(class UError* Error)
{
	static UFunction* uFnFailAllPending = nullptr;

	if (!uFnFailAllPending)
	{
		uFnFailAllPending = UFunction::FindFunction("Function ProjectX.PsyNetRequestQue_X.FailAllPending");
	}

	UPsyNetRequestQue_X_execFailAllPending_Params FailAllPending_Params;
	memcpy_s(&FailAllPending_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnFailAllPending, &FailAllPending_Params, nullptr);
};

// Function ProjectX.PsyNetRequestQue_X.TimeoutRequests
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetRequestQue_X::TimeoutRequests()
{
	static UFunction* uFnTimeoutRequests = nullptr;

	if (!uFnTimeoutRequests)
	{
		uFnTimeoutRequests = UFunction::FindFunction("Function ProjectX.PsyNetRequestQue_X.TimeoutRequests");
	}

	UPsyNetRequestQue_X_execTimeoutRequests_Params TimeoutRequests_Params;

	this->ProcessEvent(uFnTimeoutRequests, &TimeoutRequests_Params, nullptr);
};

// Function ProjectX.PsyNetRequestQue_X.ProcessResponseMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

bool UPsyNetRequestQue_X::ProcessResponseMessage(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnProcessResponseMessage = nullptr;

	if (!uFnProcessResponseMessage)
	{
		uFnProcessResponseMessage = UFunction::FindFunction("Function ProjectX.PsyNetRequestQue_X.ProcessResponseMessage");
	}

	UPsyNetRequestQue_X_execProcessResponseMessage_Params ProcessResponseMessage_Params;
	memcpy_s(&ProcessResponseMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnProcessResponseMessage, &ProcessResponseMessage_Params, nullptr);

	return ProcessResponseMessage_Params.ReturnValue;
};

// Function ProjectX.PsyNetRequestQue_X.RemoveRequest
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FName                   RequestID                      (CPF_Parm)

void UPsyNetRequestQue_X::RemoveRequest(struct FName RequestID)
{
	static UFunction* uFnRemoveRequest = nullptr;

	if (!uFnRemoveRequest)
	{
		uFnRemoveRequest = UFunction::FindFunction("Function ProjectX.PsyNetRequestQue_X.RemoveRequest");
	}

	UPsyNetRequestQue_X_execRemoveRequest_Params RemoveRequest_Params;
	memcpy_s(&RemoveRequest_Params.RequestID, 0x8, &RequestID, 0x8);

	this->ProcessEvent(uFnRemoveRequest, &RemoveRequest_Params, nullptr);
};

// Function ProjectX.PsyNetRequestQue_X.SetRequestComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FName                   RequestID                      (CPF_Parm)
// class UPsyNetMessage_X*        Response                       (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UPsyNetRequestQue_X::SetRequestComplete(struct FName RequestID, class UPsyNetMessage_X* Response, class UError* Error)
{
	static UFunction* uFnSetRequestComplete = nullptr;

	if (!uFnSetRequestComplete)
	{
		uFnSetRequestComplete = UFunction::FindFunction("Function ProjectX.PsyNetRequestQue_X.SetRequestComplete");
	}

	UPsyNetRequestQue_X_execSetRequestComplete_Params SetRequestComplete_Params;
	memcpy_s(&SetRequestComplete_Params.RequestID, 0x8, &RequestID, 0x8);
	memcpy_s(&SetRequestComplete_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&SetRequestComplete_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnSetRequestComplete, &SetRequestComplete_Params, nullptr);
};

// Function ProjectX.PsyNetRequestQue_X.SendRequest
// [0x00820803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UTAsyncResult__PsyNetMessage_X* UPsyNetRequestQue_X::eventSendRequest(class FString Service, class UPsyNetMessage_X* Message)
{
	static UFunction* uFnSendRequest = nullptr;

	if (!uFnSendRequest)
	{
		uFnSendRequest = UFunction::FindFunction("Function ProjectX.PsyNetRequestQue_X.SendRequest");
	}

	UPsyNetRequestQue_X_eventSendRequest_Params SendRequest_Params;
	memcpy_s(&SendRequest_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&SendRequest_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendRequest, &SendRequest_Params, nullptr);

	return SendRequest_Params.ReturnValue;
};

// Function ProjectX.PsyNetRequestQue_X.SendMessageDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UAsyncTask* UPsyNetRequestQue_X::SendMessageDelegateW(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnSendMessageDelegateW = nullptr;

	if (!uFnSendMessageDelegateW)
	{
		uFnSendMessageDelegateW = UFunction::FindFunction("Function ProjectX.PsyNetRequestQue_X.SendMessageDelegate");
	}

	UPsyNetRequestQue_X_execSendMessageDelegateW_Params SendMessageDelegateW_Params;
	memcpy_s(&SendMessageDelegateW_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnSendMessageDelegateW, &SendMessageDelegateW_Params, nullptr);

	return SendMessageDelegateW_Params.ReturnValue;
};

// Function ProjectX.__PsyNetServiceProvider_X__CreateChannel_0x1.__PsyNetServiceProvider_X__CreateChannel_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetChannel_X*        C                              (CPF_Parm)

bool U__PsyNetServiceProvider_X__CreateChannel_0x1::__PsyNetServiceProvider_X__CreateChannel_0x1(class UPsyNetChannel_X* C)
{
	static UFunction* uFn__PsyNetServiceProvider_X__CreateChannel_0x1 = nullptr;

	if (!uFn__PsyNetServiceProvider_X__CreateChannel_0x1)
	{
		uFn__PsyNetServiceProvider_X__CreateChannel_0x1 = UFunction::FindFunction("Function ProjectX.__PsyNetServiceProvider_X__CreateChannel_0x1.__PsyNetServiceProvider_X__CreateChannel_0x1");
	}

	U__PsyNetServiceProvider_X__CreateChannel_0x1_exec__PsyNetServiceProvider_X__CreateChannel_0x1_Params __PsyNetServiceProvider_X__CreateChannel_0x1_Params;
	memcpy_s(&__PsyNetServiceProvider_X__CreateChannel_0x1_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFn__PsyNetServiceProvider_X__CreateChannel_0x1, &__PsyNetServiceProvider_X__CreateChannel_0x1_Params, nullptr);

	return __PsyNetServiceProvider_X__CreateChannel_0x1_Params.ReturnValue;
};

// Function ProjectX.PsyNetChannel_X.GetDebugName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UPsyNetChannel_X::GetDebugName()
{
	static UFunction* uFnGetDebugName = nullptr;

	if (!uFnGetDebugName)
	{
		uFnGetDebugName = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.GetDebugName");
	}

	UPsyNetChannel_X_execGetDebugName_Params GetDebugName_Params;

	this->ProcessEvent(uFnGetDebugName, &GetDebugName_Params, nullptr);

	return GetDebugName_Params.ReturnValue;
};

// Function ProjectX.PsyNetChannel_X.Close
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetChannel_X::Close()
{
	static UFunction* uFnClose = nullptr;

	if (!uFnClose)
	{
		uFnClose = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.Close");
	}

	UPsyNetChannel_X_execClose_Params Close_Params;

	this->ProcessEvent(uFnClose, &Close_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.Timeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetChannel_X::Timeout()
{
	static UFunction* uFnTimeout = nullptr;

	if (!uFnTimeout)
	{
		uFnTimeout = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.Timeout");
	}

	UPsyNetChannel_X_execTimeout_Params Timeout_Params;

	this->ProcessEvent(uFnTimeout, &Timeout_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.ClearTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetChannel_X::ClearTimeout()
{
	static UFunction* uFnClearTimeout = nullptr;

	if (!uFnClearTimeout)
	{
		uFnClearTimeout = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.ClearTimeout");
	}

	UPsyNetChannel_X_execClearTimeout_Params ClearTimeout_Params;

	this->ProcessEvent(uFnClearTimeout, &ClearTimeout_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.UpdateTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetChannel_X::UpdateTimeout()
{
	static UFunction* uFnUpdateTimeout = nullptr;

	if (!uFnUpdateTimeout)
	{
		uFnUpdateTimeout = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.UpdateTimeout");
	}

	UPsyNetChannel_X_execUpdateTimeout_Params UpdateTimeout_Params;

	this->ProcessEvent(uFnUpdateTimeout, &UpdateTimeout_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.ExecuteService
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  Service                        (CPF_Parm)

void UPsyNetChannel_X::ExecuteService(class UPsyNetClientService_X* Service)
{
	static UFunction* uFnExecuteService = nullptr;

	if (!uFnExecuteService)
	{
		uFnExecuteService = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.ExecuteService");
	}

	UPsyNetChannel_X_execExecuteService_Params ExecuteService_Params;
	memcpy_s(&ExecuteService_Params.Service, 0x8, &Service, 0x8);

	this->ProcessEvent(uFnExecuteService, &ExecuteService_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.ExecuteNext
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UPsyNetChannel_X::ExecuteNext()
{
	static UFunction* uFnExecuteNext = nullptr;

	if (!uFnExecuteNext)
	{
		uFnExecuteNext = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.ExecuteNext");
	}

	UPsyNetChannel_X_execExecuteNext_Params ExecuteNext_Params;

	this->ProcessEvent(uFnExecuteNext, &ExecuteNext_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.CreatePendingService
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetClientService_X*  Service                        (CPF_Parm)
// int32_t                        MessageId                      (CPF_Parm)

class UAsyncTask* UPsyNetChannel_X::CreatePendingService(class UPsyNetClientService_X* Service, int32_t MessageId)
{
	static UFunction* uFnCreatePendingService = nullptr;

	if (!uFnCreatePendingService)
	{
		uFnCreatePendingService = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.CreatePendingService");
	}

	UPsyNetChannel_X_execCreatePendingService_Params CreatePendingService_Params;
	memcpy_s(&CreatePendingService_Params.Service, 0x8, &Service, 0x8);
	memcpy_s(&CreatePendingService_Params.MessageId, 0x4, &MessageId, 0x4);

	this->ProcessEvent(uFnCreatePendingService, &CreatePendingService_Params, nullptr);

	return CreatePendingService_Params.ReturnValue;
};

// Function ProjectX.PsyNetChannel_X.QueueServiceCall
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetClientService_X*  Service                        (CPF_Parm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UAsyncTask* UPsyNetChannel_X::QueueServiceCall(class UPsyNetClientService_X* Service, class UPsyNetMessage_X* Message)
{
	static UFunction* uFnQueueServiceCall = nullptr;

	if (!uFnQueueServiceCall)
	{
		uFnQueueServiceCall = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.QueueServiceCall");
	}

	UPsyNetChannel_X_execQueueServiceCall_Params QueueServiceCall_Params;
	memcpy_s(&QueueServiceCall_Params.Service, 0x8, &Service, 0x8);
	memcpy_s(&QueueServiceCall_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnQueueServiceCall, &QueueServiceCall_Params, nullptr);

	return QueueServiceCall_Params.ReturnValue;
};

// Function ProjectX.PsyNetChannel_X.Open
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetChannel_X::Open()
{
	static UFunction* uFnOpen = nullptr;

	if (!uFnOpen)
	{
		uFnOpen = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.Open");
	}

	UPsyNetChannel_X_execOpen_Params Open_Params;

	this->ProcessEvent(uFnOpen, &Open_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.Unsubscribe
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetChannel_X::Unsubscribe(struct FScriptDelegate Callback)
{
	static UFunction* uFnUnsubscribe = nullptr;

	if (!uFnUnsubscribe)
	{
		uFnUnsubscribe = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.Unsubscribe");
	}

	UPsyNetChannel_X_execUnsubscribe_Params Unsubscribe_Params;
	memcpy_s(&Unsubscribe_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnUnsubscribe, &Unsubscribe_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.Subscribe
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ServiceClass                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetChannel_X::Subscribe(class UClass* ServiceClass, struct FScriptDelegate Callback)
{
	static UFunction* uFnSubscribe = nullptr;

	if (!uFnSubscribe)
	{
		uFnSubscribe = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.Subscribe");
	}

	UPsyNetChannel_X_execSubscribe_Params Subscribe_Params;
	memcpy_s(&Subscribe_Params.ServiceClass, 0x8, &ServiceClass, 0x8);
	memcpy_s(&Subscribe_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSubscribe, &Subscribe_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InChannelName                  (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetChannel_X::Init(class FString InChannelName)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.Init");
	}

	UPsyNetChannel_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.InChannelName, 0x10, &InChannelName, 0x10);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.PsyNetChannel_X.EventClosed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetChannel_X*        Channel                        (CPF_Parm)

void UPsyNetChannel_X::EventClosed(class UPsyNetChannel_X* Channel)
{
	static UFunction* uFnEventClosed = nullptr;

	if (!uFnEventClosed)
	{
		uFnEventClosed = UFunction::FindFunction("Function ProjectX.PsyNetChannel_X.EventClosed");
	}

	UPsyNetChannel_X_execEventClosed_Params EventClosed_Params;
	memcpy_s(&EventClosed_Params.Channel, 0x8, &Channel, 0x8);

	this->ProcessEvent(uFnEventClosed, &EventClosed_Params, nullptr);
};

// Function ProjectX.PsyNetServiceProvider_X.FinalizeServiceTask
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  Service                        (CPF_Parm)
// class UTAsyncResult__PsyNetClientService_X* Task                           (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UPsyNetServiceProvider_X::FinalizeServiceTask(class UPsyNetClientService_X* Service, class UTAsyncResult__PsyNetClientService_X* Task, class UError* Error)
{
	static UFunction* uFnFinalizeServiceTask = nullptr;

	if (!uFnFinalizeServiceTask)
	{
		uFnFinalizeServiceTask = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.FinalizeServiceTask");
	}

	UPsyNetServiceProvider_X_execFinalizeServiceTask_Params FinalizeServiceTask_Params;
	memcpy_s(&FinalizeServiceTask_Params.Service, 0x8, &Service, 0x8);
	memcpy_s(&FinalizeServiceTask_Params.Task, 0x8, &Task, 0x8);
	memcpy_s(&FinalizeServiceTask_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnFinalizeServiceTask, &FinalizeServiceTask_Params, nullptr);
};

// Function ProjectX.PsyNetServiceProvider_X.PrintServiceResult
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ServiceName                    (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UPsyNetServiceProvider_X::PrintServiceResult(class FString ServiceName, class UError* Error)
{
	static UFunction* uFnPrintServiceResult = nullptr;

	if (!uFnPrintServiceResult)
	{
		uFnPrintServiceResult = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.PrintServiceResult");
	}

	UPsyNetServiceProvider_X_execPrintServiceResult_Params PrintServiceResult_Params;
	memcpy_s(&PrintServiceResult_Params.ServiceName, 0x10, &ServiceName, 0x10);
	memcpy_s(&PrintServiceResult_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnPrintServiceResult, &PrintServiceResult_Params, nullptr);
};

// Function ProjectX.PsyNetServiceProvider_X.ExecuteServiceMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UTAsyncResult__PsyNetClientService_X* UPsyNetServiceProvider_X::ExecuteServiceMessage(class UPsyNetConnection_X* Connection, class UPsyNetMessage_X* Message)
{
	static UFunction* uFnExecuteServiceMessage = nullptr;

	if (!uFnExecuteServiceMessage)
	{
		uFnExecuteServiceMessage = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.ExecuteServiceMessage");
	}

	UPsyNetServiceProvider_X_execExecuteServiceMessage_Params ExecuteServiceMessage_Params;
	memcpy_s(&ExecuteServiceMessage_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&ExecuteServiceMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnExecuteServiceMessage, &ExecuteServiceMessage_Params, nullptr);

	return ExecuteServiceMessage_Params.ReturnValue;
};

// Function ProjectX.PsyNetServiceProvider_X.IsServiceRequest
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

bool UPsyNetServiceProvider_X::IsServiceRequest(class UPsyNetMessage_X* Message)
{
	static UFunction* uFnIsServiceRequest = nullptr;

	if (!uFnIsServiceRequest)
	{
		uFnIsServiceRequest = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.IsServiceRequest");
	}

	UPsyNetServiceProvider_X_execIsServiceRequest_Params IsServiceRequest_Params;
	memcpy_s(&IsServiceRequest_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnIsServiceRequest, &IsServiceRequest_Params, nullptr);

	return IsServiceRequest_Params.ReturnValue;
};

// Function ProjectX.PsyNetServiceProvider_X.ExecuteNotification
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)
// class UPsyNetMessage_X*        Message                        (CPF_Parm)

class UTAsyncResult__PsyNetClientService_X* UPsyNetServiceProvider_X::ExecuteNotification(class UPsyNetConnection_X* Connection, class UPsyNetMessage_X* Message)
{
	static UFunction* uFnExecuteNotification = nullptr;

	if (!uFnExecuteNotification)
	{
		uFnExecuteNotification = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.ExecuteNotification");
	}

	UPsyNetServiceProvider_X_execExecuteNotification_Params ExecuteNotification_Params;
	memcpy_s(&ExecuteNotification_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&ExecuteNotification_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnExecuteNotification, &ExecuteNotification_Params, nullptr);

	return ExecuteNotification_Params.ReturnValue;
};

// Function ProjectX.PsyNetServiceProvider_X.SetResponse
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  Service                        (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)
// class UPsyNetMessage_X*        Response                       (CPF_Parm)

void UPsyNetServiceProvider_X::SetResponse(class UPsyNetClientService_X* Service, class UError* Error, class UPsyNetMessage_X* Response)
{
	static UFunction* uFnSetResponse = nullptr;

	if (!uFnSetResponse)
	{
		uFnSetResponse = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.SetResponse");
	}

	UPsyNetServiceProvider_X_execSetResponse_Params SetResponse_Params;
	memcpy_s(&SetResponse_Params.Service, 0x8, &Service, 0x8);
	memcpy_s(&SetResponse_Params.Error, 0x8, &Error, 0x8);
	memcpy_s(&SetResponse_Params.Response, 0x8, &Response, 0x8);

	this->ProcessEvent(uFnSetResponse, &SetResponse_Params, nullptr);
};

// Function ProjectX.PsyNetServiceProvider_X.ExecuteRequest
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)
// class UPsyNetMessage_X*        Request                        (CPF_Parm)
// class UPsyNetMessage_X*        Response                       (CPF_Parm)

class UTAsyncResult__PsyNetClientService_X* UPsyNetServiceProvider_X::ExecuteRequest(class UPsyNetConnection_X* Connection, class UPsyNetMessage_X* Request, class UPsyNetMessage_X* Response)
{
	static UFunction* uFnExecuteRequest = nullptr;

	if (!uFnExecuteRequest)
	{
		uFnExecuteRequest = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.ExecuteRequest");
	}

	UPsyNetServiceProvider_X_execExecuteRequest_Params ExecuteRequest_Params;
	memcpy_s(&ExecuteRequest_Params.Connection, 0x8, &Connection, 0x8);
	memcpy_s(&ExecuteRequest_Params.Request, 0x8, &Request, 0x8);
	memcpy_s(&ExecuteRequest_Params.Response, 0x8, &Response, 0x8);

	this->ProcessEvent(uFnExecuteRequest, &ExecuteRequest_Params, nullptr);

	return ExecuteRequest_Params.ReturnValue;
};

// Function ProjectX.PsyNetServiceProvider_X.HandleChannelClosed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetChannel_X*        Channel                        (CPF_Parm)

void UPsyNetServiceProvider_X::HandleChannelClosed(class UPsyNetChannel_X* Channel)
{
	static UFunction* uFnHandleChannelClosed = nullptr;

	if (!uFnHandleChannelClosed)
	{
		uFnHandleChannelClosed = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.HandleChannelClosed");
	}

	UPsyNetServiceProvider_X_execHandleChannelClosed_Params HandleChannelClosed_Params;
	memcpy_s(&HandleChannelClosed_Params.Channel, 0x8, &Channel, 0x8);

	this->ProcessEvent(uFnHandleChannelClosed, &HandleChannelClosed_Params, nullptr);
};

// Function ProjectX.PsyNetServiceProvider_X.CreateChannel
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetChannel_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ChannelName                    (CPF_Parm | CPF_NeedCtorLink)

class UPsyNetChannel_X* UPsyNetServiceProvider_X::CreateChannel(class FString ChannelName)
{
	static UFunction* uFnCreateChannel = nullptr;

	if (!uFnCreateChannel)
	{
		uFnCreateChannel = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.CreateChannel");
	}

	UPsyNetServiceProvider_X_execCreateChannel_Params CreateChannel_Params;
	memcpy_s(&CreateChannel_Params.ChannelName, 0x10, &ChannelName, 0x10);

	this->ProcessEvent(uFnCreateChannel, &CreateChannel_Params, nullptr);

	return CreateChannel_Params.ReturnValue;
};

// Function ProjectX.PsyNetServiceProvider_X.Unsubscribe
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetServiceProvider_X::Unsubscribe(struct FScriptDelegate Callback)
{
	static UFunction* uFnUnsubscribe = nullptr;

	if (!uFnUnsubscribe)
	{
		uFnUnsubscribe = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.Unsubscribe");
	}

	UPsyNetServiceProvider_X_execUnsubscribe_Params Unsubscribe_Params;
	memcpy_s(&Unsubscribe_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnUnsubscribe, &Unsubscribe_Params, nullptr);
};

// Function ProjectX.PsyNetServiceProvider_X.Subscribe
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClass*                  ServiceClass                   (CPF_Parm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetServiceProvider_X::Subscribe(class UClass* ServiceClass, struct FScriptDelegate Callback)
{
	static UFunction* uFnSubscribe = nullptr;

	if (!uFnSubscribe)
	{
		uFnSubscribe = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.Subscribe");
	}

	UPsyNetServiceProvider_X_execSubscribe_Params Subscribe_Params;
	memcpy_s(&Subscribe_Params.ServiceClass, 0x8, &ServiceClass, 0x8);
	memcpy_s(&Subscribe_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSubscribe, &Subscribe_Params, nullptr);
};

// Function ProjectX.PsyNetServiceProvider_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPsyNetServiceProvider_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.Construct");
	}

	UPsyNetServiceProvider_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.PsyNetServiceProvider_X.EventServiceExecuted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetServiceProvider_X* ServiceProvider                (CPF_Parm)
// class UPsyNetClientService_X*  Service                        (CPF_Parm)

void UPsyNetServiceProvider_X::EventServiceExecuted(class UPsyNetServiceProvider_X* ServiceProvider, class UPsyNetClientService_X* Service)
{
	static UFunction* uFnEventServiceExecuted = nullptr;

	if (!uFnEventServiceExecuted)
	{
		uFnEventServiceExecuted = UFunction::FindFunction("Function ProjectX.PsyNetServiceProvider_X.EventServiceExecuted");
	}

	UPsyNetServiceProvider_X_execEventServiceExecuted_Params EventServiceExecuted_Params;
	memcpy_s(&EventServiceExecuted_Params.ServiceProvider, 0x8, &ServiceProvider, 0x8);
	memcpy_s(&EventServiceExecuted_Params.Service, 0x8, &Service, 0x8);

	this->ProcessEvent(uFnEventServiceExecuted, &EventServiceExecuted_Params, nullptr);
};

// Function ProjectX.__PsyNetServiceProvider_X__ExecuteRequest_0x1.__PsyNetServiceProvider_X__ExecuteRequest_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  Result                         (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void U__PsyNetServiceProvider_X__ExecuteRequest_0x1::__PsyNetServiceProvider_X__ExecuteRequest_0x1(class UPsyNetClientService_X* Result, class UError* Error)
{
	static UFunction* uFn__PsyNetServiceProvider_X__ExecuteRequest_0x1 = nullptr;

	if (!uFn__PsyNetServiceProvider_X__ExecuteRequest_0x1)
	{
		uFn__PsyNetServiceProvider_X__ExecuteRequest_0x1 = UFunction::FindFunction("Function ProjectX.__PsyNetServiceProvider_X__ExecuteRequest_0x1.__PsyNetServiceProvider_X__ExecuteRequest_0x1");
	}

	U__PsyNetServiceProvider_X__ExecuteRequest_0x1_exec__PsyNetServiceProvider_X__ExecuteRequest_0x1_Params __PsyNetServiceProvider_X__ExecuteRequest_0x1_Params;
	memcpy_s(&__PsyNetServiceProvider_X__ExecuteRequest_0x1_Params.Result, 0x8, &Result, 0x8);
	memcpy_s(&__PsyNetServiceProvider_X__ExecuteRequest_0x1_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__PsyNetServiceProvider_X__ExecuteRequest_0x1, &__PsyNetServiceProvider_X__ExecuteRequest_0x1_Params, nullptr);
};

// Function ProjectX.__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1.__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Err                            (CPF_Parm)

void U__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1::__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2(class UError* Err)
{
	static UFunction* uFn__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2 = nullptr;

	if (!uFn__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2)
	{
		uFn__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2 = UFunction::FindFunction("Function ProjectX.__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1.__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2");
	}

	U__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1_exec__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2_Params __PsyNetServiceProvider_X__ExecuteServiceMessage_0x2_Params;
	memcpy_s(&__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2, &__PsyNetServiceProvider_X__ExecuteServiceMessage_0x2_Params, nullptr);
};

// Function ProjectX.__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1.__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1::__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1(class UPsyNetClientService_X* R, class UError* E)
{
	static UFunction* uFn__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1 = nullptr;

	if (!uFn__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1)
	{
		uFn__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1 = UFunction::FindFunction("Function ProjectX.__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1.__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1");
	}

	U__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1_exec__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1_Params __PsyNetServiceProvider_X__ExecuteServiceMessage_0x1_Params;
	memcpy_s(&__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1, &__PsyNetServiceProvider_X__ExecuteServiceMessage_0x1_Params, nullptr);
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.CreateResultError
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  InError                        (CPF_Parm)

class UTAsyncResult__PsyNetClientService_X* UTAsyncResult__PsyNetClientService_X::CreateResultError(class UError* InError)
{
	static UFunction* uFnCreateResultError = nullptr;

	if (!uFnCreateResultError)
	{
		uFnCreateResultError = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.CreateResultError");
	}

	UTAsyncResult__PsyNetClientService_X_execCreateResultError_Params CreateResultError_Params;
	memcpy_s(&CreateResultError_Params.InError, 0x8, &InError, 0x8);

	UTAsyncResult__PsyNetClientService_X::StaticClass()->ProcessEvent(uFnCreateResultError, &CreateResultError_Params, nullptr);

	return CreateResultError_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.CreateResult
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetClientService_X*  InResult                       (CPF_Parm)

class UTAsyncResult__PsyNetClientService_X* UTAsyncResult__PsyNetClientService_X::CreateResult(class UPsyNetClientService_X* InResult)
{
	static UFunction* uFnCreateResult = nullptr;

	if (!uFnCreateResult)
	{
		uFnCreateResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.CreateResult");
	}

	UTAsyncResult__PsyNetClientService_X_execCreateResult_Params CreateResult_Params;
	memcpy_s(&CreateResult_Params.InResult, 0x8, &InResult, 0x8);

	UTAsyncResult__PsyNetClientService_X::StaticClass()->ProcessEvent(uFnCreateResult, &CreateResult_Params, nullptr);

	return CreateResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.Copy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__PsyNetClientService_X* UTAsyncResult__PsyNetClientService_X::Copy()
{
	static UFunction* uFnCopy = nullptr;

	if (!uFnCopy)
	{
		uFnCopy = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.Copy");
	}

	UTAsyncResult__PsyNetClientService_X_execCopy_Params Copy_Params;

	this->ProcessEvent(uFnCopy, &Copy_Params, nullptr);

	return Copy_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.ClearCallbacks
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UTAsyncResult__PsyNetClientService_X::eventClearCallbacks()
{
	static UFunction* uFnClearCallbacks = nullptr;

	if (!uFnClearCallbacks)
	{
		uFnClearCallbacks = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.ClearCallbacks");
	}

	UTAsyncResult__PsyNetClientService_X_eventClearCallbacks_Params ClearCallbacks_Params;

	this->ProcessEvent(uFnClearCallbacks, &ClearCallbacks_Params, nullptr);
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.SetResultWhen
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAsyncTask*              Other                          (CPF_Parm)
// struct FScriptDelegate         GetResultDelegate              (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__PsyNetClientService_X* UTAsyncResult__PsyNetClientService_X::eventSetResultWhen(class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate)
{
	static UFunction* uFnSetResultWhen = nullptr;

	if (!uFnSetResultWhen)
	{
		uFnSetResultWhen = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.SetResultWhen");
	}

	UTAsyncResult__PsyNetClientService_X_eventSetResultWhen_Params SetResultWhen_Params;
	memcpy_s(&SetResultWhen_Params.Other, 0x8, &Other, 0x8);
	memcpy_s(&SetResultWhen_Params.GetResultDelegate, 0x18, &GetResultDelegate, 0x18);

	this->ProcessEvent(uFnSetResultWhen, &SetResultWhen_Params, nullptr);

	return SetResultWhen_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.SetResult
// [0x00024803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetClientService_X*  InResult                       (CPF_Parm)
// class UError*                  InError                        (CPF_OptionalParm | CPF_Parm)

class UTAsyncResult__PsyNetClientService_X* UTAsyncResult__PsyNetClientService_X::eventSetResult(class UPsyNetClientService_X* InResult, class UError* InError)
{
	static UFunction* uFnSetResult = nullptr;

	if (!uFnSetResult)
	{
		uFnSetResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.SetResult");
	}

	UTAsyncResult__PsyNetClientService_X_eventSetResult_Params SetResult_Params;
	memcpy_s(&SetResult_Params.InResult, 0x8, &InResult, 0x8);
	memcpy_s(&SetResult_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnSetResult, &SetResult_Params, nullptr);

	return SetResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.NotifyOnResultComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__PsyNetClientService_X* UTAsyncResult__PsyNetClientService_X::NotifyOnResultComplete(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResultComplete = nullptr;

	if (!uFnNotifyOnResultComplete)
	{
		uFnNotifyOnResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.NotifyOnResultComplete");
	}

	UTAsyncResult__PsyNetClientService_X_execNotifyOnResultComplete_Params NotifyOnResultComplete_Params;
	memcpy_s(&NotifyOnResultComplete_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResultComplete, &NotifyOnResultComplete_Params, nullptr);

	return NotifyOnResultComplete_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.NotifyOnResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetClientService_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__PsyNetClientService_X* UTAsyncResult__PsyNetClientService_X::NotifyOnResult(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResult = nullptr;

	if (!uFnNotifyOnResult)
	{
		uFnNotifyOnResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.NotifyOnResult");
	}

	UTAsyncResult__PsyNetClientService_X_execNotifyOnResult_Params NotifyOnResult_Params;
	memcpy_s(&NotifyOnResult_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResult, &NotifyOnResult_Params, nullptr);

	return NotifyOnResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.ResultDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPsyNetClientService_X* UTAsyncResult__PsyNetClientService_X::ResultDelegate()
{
	static UFunction* uFnResultDelegate = nullptr;

	if (!uFnResultDelegate)
	{
		uFnResultDelegate = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.ResultDelegate");
	}

	UTAsyncResult__PsyNetClientService_X_execResultDelegate_Params ResultDelegate_Params;

	this->ProcessEvent(uFnResultDelegate, &ResultDelegate_Params, nullptr);

	return ResultDelegate_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.EventResultComplete
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  OutResult                      (CPF_Parm)
// class UError*                  OutError                       (CPF_Parm)

void UTAsyncResult__PsyNetClientService_X::EventResultComplete(class UPsyNetClientService_X* OutResult, class UError* OutError)
{
	static UFunction* uFnEventResultComplete = nullptr;

	if (!uFnEventResultComplete)
	{
		uFnEventResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.EventResultComplete");
	}

	UTAsyncResult__PsyNetClientService_X_execEventResultComplete_Params EventResultComplete_Params;
	memcpy_s(&EventResultComplete_Params.OutResult, 0x8, &OutResult, 0x8);
	memcpy_s(&EventResultComplete_Params.OutError, 0x8, &OutError, 0x8);

	this->ProcessEvent(uFnEventResultComplete, &EventResultComplete_Params, nullptr);
};

// Function ProjectX.TAsyncResult__PsyNetClientService_X.EventResult
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  OutResult                      (CPF_Parm)

void UTAsyncResult__PsyNetClientService_X::EventResult(class UPsyNetClientService_X* OutResult)
{
	static UFunction* uFnEventResult = nullptr;

	if (!uFnEventResult)
	{
		uFnEventResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetClientService_X.EventResult");
	}

	UTAsyncResult__PsyNetClientService_X_execEventResult_Params EventResult_Params;
	memcpy_s(&EventResult_Params.OutResult, 0x8, &OutResult, 0x8);

	this->ProcessEvent(uFnEventResult, &EventResult_Params, nullptr);
};

// Function ProjectX.__RegionConfig_X__GetSubRegions_0x1.__RegionConfig_X__GetSubRegions_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URegion_X*               R                              (CPF_Parm)

bool U__RegionConfig_X__GetSubRegions_0x1::__RegionConfig_X__GetSubRegions_0x1(class URegion_X* R)
{
	static UFunction* uFn__RegionConfig_X__GetSubRegions_0x1 = nullptr;

	if (!uFn__RegionConfig_X__GetSubRegions_0x1)
	{
		uFn__RegionConfig_X__GetSubRegions_0x1 = UFunction::FindFunction("Function ProjectX.__RegionConfig_X__GetSubRegions_0x1.__RegionConfig_X__GetSubRegions_0x1");
	}

	U__RegionConfig_X__GetSubRegions_0x1_exec__RegionConfig_X__GetSubRegions_0x1_Params __RegionConfig_X__GetSubRegions_0x1_Params;
	memcpy_s(&__RegionConfig_X__GetSubRegions_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__RegionConfig_X__GetSubRegions_0x1, &__RegionConfig_X__GetSubRegions_0x1_Params, nullptr);

	return __RegionConfig_X__GetSubRegions_0x1_Params.ReturnValue;
};

// Function ProjectX.RegionConfig_X.__RegionConfig_X__GetRegionSecrets_0x2
// [0x40840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FRegionSecret           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class URegion_X*               R                              (CPF_Parm)

struct FRegionSecret URegionConfig_X::__RegionConfig_X__GetRegionSecrets_0x2(class URegion_X* R)
{
	static UFunction* uFn__RegionConfig_X__GetRegionSecrets_0x2 = nullptr;

	if (!uFn__RegionConfig_X__GetRegionSecrets_0x2)
	{
		uFn__RegionConfig_X__GetRegionSecrets_0x2 = UFunction::FindFunction("Function ProjectX.RegionConfig_X.__RegionConfig_X__GetRegionSecrets_0x2");
	}

	URegionConfig_X_exec__RegionConfig_X__GetRegionSecrets_0x2_Params __RegionConfig_X__GetRegionSecrets_0x2_Params;
	memcpy_s(&__RegionConfig_X__GetRegionSecrets_0x2_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__RegionConfig_X__GetRegionSecrets_0x2, &__RegionConfig_X__GetRegionSecrets_0x2_Params, nullptr);

	return __RegionConfig_X__GetRegionSecrets_0x2_Params.ReturnValue;
};

// Function ProjectX.RegionConfig_X.__RegionConfig_X__GetRegionSecrets_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URegion_X*               R                              (CPF_Parm)

bool URegionConfig_X::__RegionConfig_X__GetRegionSecrets_0x1(class URegion_X* R)
{
	static UFunction* uFn__RegionConfig_X__GetRegionSecrets_0x1 = nullptr;

	if (!uFn__RegionConfig_X__GetRegionSecrets_0x1)
	{
		uFn__RegionConfig_X__GetRegionSecrets_0x1 = UFunction::FindFunction("Function ProjectX.RegionConfig_X.__RegionConfig_X__GetRegionSecrets_0x1");
	}

	URegionConfig_X_exec__RegionConfig_X__GetRegionSecrets_0x1_Params __RegionConfig_X__GetRegionSecrets_0x1_Params;
	memcpy_s(&__RegionConfig_X__GetRegionSecrets_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__RegionConfig_X__GetRegionSecrets_0x1, &__RegionConfig_X__GetRegionSecrets_0x1_Params, nullptr);

	return __RegionConfig_X__GetRegionSecrets_0x1_Params.ReturnValue;
};

// Function ProjectX.RegionConfig_X.GetRegionSecrets
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FRegionSecret>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FRegionSecret> URegionConfig_X::GetRegionSecrets()
{
	static UFunction* uFnGetRegionSecrets = nullptr;

	if (!uFnGetRegionSecrets)
	{
		uFnGetRegionSecrets = UFunction::FindFunction("Function ProjectX.RegionConfig_X.GetRegionSecrets");
	}

	URegionConfig_X_execGetRegionSecrets_Params GetRegionSecrets_Params;

	this->ProcessEvent(uFnGetRegionSecrets, &GetRegionSecrets_Params, nullptr);

	return GetRegionSecrets_Params.ReturnValue;
};

// Function ProjectX.RegionConfig_X.GetSubRegions
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class URegion_X*>       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  SuperRegionID                  (CPF_Parm | CPF_NeedCtorLink)

TArray<class URegion_X*> URegionConfig_X::GetSubRegions(class FString SuperRegionID)
{
	static UFunction* uFnGetSubRegions = nullptr;

	if (!uFnGetSubRegions)
	{
		uFnGetSubRegions = UFunction::FindFunction("Function ProjectX.RegionConfig_X.GetSubRegions");
	}

	URegionConfig_X_execGetSubRegions_Params GetSubRegions_Params;
	memcpy_s(&GetSubRegions_Params.SuperRegionID, 0x10, &SuperRegionID, 0x10);

	this->ProcessEvent(uFnGetSubRegions, &GetSubRegions_Params, nullptr);

	return GetSubRegions_Params.ReturnValue;
};

// Function ProjectX.RegionConfig_X.FindRegion
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URegion_X*               ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  RegionID                       (CPF_Parm | CPF_NeedCtorLink)

class URegion_X* URegionConfig_X::FindRegion(class FString RegionID)
{
	static UFunction* uFnFindRegion = nullptr;

	if (!uFnFindRegion)
	{
		uFnFindRegion = UFunction::FindFunction("Function ProjectX.RegionConfig_X.FindRegion");
	}

	URegionConfig_X_execFindRegion_Params FindRegion_Params;
	memcpy_s(&FindRegion_Params.RegionID, 0x10, &RegionID, 0x10);

	this->ProcessEvent(uFnFindRegion, &FindRegion_Params, nullptr);

	return FindRegion_Params.ReturnValue;
};

// Function ProjectX.RegionConfig_X.FindSuperRegion
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class USuperRegion_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  SuperRegionID                  (CPF_Parm | CPF_NeedCtorLink)

class USuperRegion_X* URegionConfig_X::FindSuperRegion(class FString SuperRegionID)
{
	static UFunction* uFnFindSuperRegion = nullptr;

	if (!uFnFindSuperRegion)
	{
		uFnFindSuperRegion = UFunction::FindFunction("Function ProjectX.RegionConfig_X.FindSuperRegion");
	}

	URegionConfig_X_execFindSuperRegion_Params FindSuperRegion_Params;
	memcpy_s(&FindSuperRegion_Params.SuperRegionID, 0x10, &SuperRegionID, 0x10);

	this->ProcessEvent(uFnFindSuperRegion, &FindSuperRegion_Params, nullptr);

	return FindSuperRegion_Params.ReturnValue;
};

// Function ProjectX.RegionConfig_X.Apply
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void URegionConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.RegionConfig_X.Apply");
	}

	URegionConfig_X_execApply_Params Apply_Params;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);
};

// Function ProjectX.__RemoteAvatarPermissions_X__GetPermissions_0x1.__RemoteAvatarPermissions_X__GetPermissions_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void U__RemoteAvatarPermissions_X__GetPermissions_0x1::__RemoteAvatarPermissions_X__GetPermissions_0x1(struct FUniqueNetId PlayerID)
{
	static UFunction* uFn__RemoteAvatarPermissions_X__GetPermissions_0x1 = nullptr;

	if (!uFn__RemoteAvatarPermissions_X__GetPermissions_0x1)
	{
		uFn__RemoteAvatarPermissions_X__GetPermissions_0x1 = UFunction::FindFunction("Function ProjectX.__RemoteAvatarPermissions_X__GetPermissions_0x1.__RemoteAvatarPermissions_X__GetPermissions_0x1");
	}

	U__RemoteAvatarPermissions_X__GetPermissions_0x1_exec__RemoteAvatarPermissions_X__GetPermissions_0x1_Params __RemoteAvatarPermissions_X__GetPermissions_0x1_Params;
	memcpy_s(&__RemoteAvatarPermissions_X__GetPermissions_0x1_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFn__RemoteAvatarPermissions_X__GetPermissions_0x1, &__RemoteAvatarPermissions_X__GetPermissions_0x1_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.CheckFinished
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void URemoteAvatarPermissionsRequestBatch_X::CheckFinished()
{
	static UFunction* uFnCheckFinished = nullptr;

	if (!uFnCheckFinished)
	{
		uFnCheckFinished = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.CheckFinished");
	}

	URemoteAvatarPermissionsRequestBatch_X_execCheckFinished_Params CheckFinished_Params;

	this->ProcessEvent(uFnCheckFinished, &CheckFinished_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.SetDisallowed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void URemoteAvatarPermissionsRequestBatch_X::SetDisallowed(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSetDisallowed = nullptr;

	if (!uFnSetDisallowed)
	{
		uFnSetDisallowed = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.SetDisallowed");
	}

	URemoteAvatarPermissionsRequestBatch_X_execSetDisallowed_Params SetDisallowed_Params;
	memcpy_s(&SetDisallowed_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSetDisallowed, &SetDisallowed_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.SetAllowed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void URemoteAvatarPermissionsRequestBatch_X::SetAllowed(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSetAllowed = nullptr;

	if (!uFnSetAllowed)
	{
		uFnSetAllowed = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.SetAllowed");
	}

	URemoteAvatarPermissionsRequestBatch_X_execSetAllowed_Params SetAllowed_Params;
	memcpy_s(&SetAllowed_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSetAllowed, &SetAllowed_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.EventDisallowed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    DisallowedIds                  (CPF_Parm | CPF_NeedCtorLink)

void URemoteAvatarPermissionsRequestBatch_X::EventDisallowed(TArray<struct FUniqueNetId> DisallowedIds)
{
	static UFunction* uFnEventDisallowed = nullptr;

	if (!uFnEventDisallowed)
	{
		uFnEventDisallowed = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.EventDisallowed");
	}

	URemoteAvatarPermissionsRequestBatch_X_execEventDisallowed_Params EventDisallowed_Params;
	memcpy_s(&EventDisallowed_Params.DisallowedIds, 0x10, &DisallowedIds, 0x10);

	this->ProcessEvent(uFnEventDisallowed, &EventDisallowed_Params, nullptr);
};

// Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.EventAllowed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    AllowedIds                     (CPF_Parm | CPF_NeedCtorLink)

void URemoteAvatarPermissionsRequestBatch_X::EventAllowed(TArray<struct FUniqueNetId> AllowedIds)
{
	static UFunction* uFnEventAllowed = nullptr;

	if (!uFnEventAllowed)
	{
		uFnEventAllowed = UFunction::FindFunction("Function ProjectX.RemoteAvatarPermissionsRequestBatch_X.EventAllowed");
	}

	URemoteAvatarPermissionsRequestBatch_X_execEventAllowed_Params EventAllowed_Params;
	memcpy_s(&EventAllowed_Params.AllowedIds, 0x10, &AllowedIds, 0x10);

	this->ProcessEvent(uFnEventAllowed, &EventAllowed_Params, nullptr);
};

// Function ProjectX.__RemoteAvatarPermissions_X__SetAvatarPermission_0x1.__RemoteAvatarPermissions_X__SetAvatarPermission_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URemoteAvatarPermissionsRequest_X* R                              (CPF_Parm)

bool U__RemoteAvatarPermissions_X__SetAvatarPermission_0x1::__RemoteAvatarPermissions_X__SetAvatarPermission_0x1(class URemoteAvatarPermissionsRequest_X* R)
{
	static UFunction* uFn__RemoteAvatarPermissions_X__SetAvatarPermission_0x1 = nullptr;

	if (!uFn__RemoteAvatarPermissions_X__SetAvatarPermission_0x1)
	{
		uFn__RemoteAvatarPermissions_X__SetAvatarPermission_0x1 = UFunction::FindFunction("Function ProjectX.__RemoteAvatarPermissions_X__SetAvatarPermission_0x1.__RemoteAvatarPermissions_X__SetAvatarPermission_0x1");
	}

	U__RemoteAvatarPermissions_X__SetAvatarPermission_0x1_exec__RemoteAvatarPermissions_X__SetAvatarPermission_0x1_Params __RemoteAvatarPermissions_X__SetAvatarPermission_0x1_Params;
	memcpy_s(&__RemoteAvatarPermissions_X__SetAvatarPermission_0x1_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__RemoteAvatarPermissions_X__SetAvatarPermission_0x1, &__RemoteAvatarPermissions_X__SetAvatarPermission_0x1_Params, nullptr);

	return __RemoteAvatarPermissions_X__SetAvatarPermission_0x1_Params.ReturnValue;
};

// Function ProjectX.__RPC_X__CreateTask_0x1.__RPC_X__CreateTask_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Err                            (CPF_Parm)

void U__RPC_X__CreateTask_0x1::__RPC_X__CreateTask_0x1(class UError* Err)
{
	static UFunction* uFn__RPC_X__CreateTask_0x1 = nullptr;

	if (!uFn__RPC_X__CreateTask_0x1)
	{
		uFn__RPC_X__CreateTask_0x1 = UFunction::FindFunction("Function ProjectX.__RPC_X__CreateTask_0x1.__RPC_X__CreateTask_0x1");
	}

	U__RPC_X__CreateTask_0x1_exec__RPC_X__CreateTask_0x1_Params __RPC_X__CreateTask_0x1_Params;
	memcpy_s(&__RPC_X__CreateTask_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__RPC_X__CreateTask_0x1, &__RPC_X__CreateTask_0x1_Params, nullptr);
};

// Function ProjectX.__RPCQueue_X__CreateBatch_0x2.__RPCQueue_X__CreateBatch_0x2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Response                       (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void U__RPCQueue_X__CreateBatch_0x2::__RPCQueue_X__CreateBatch_0x2(class UPsyNetMessage_X* Response, class UError* Error)
{
	static UFunction* uFn__RPCQueue_X__CreateBatch_0x2 = nullptr;

	if (!uFn__RPCQueue_X__CreateBatch_0x2)
	{
		uFn__RPCQueue_X__CreateBatch_0x2 = UFunction::FindFunction("Function ProjectX.__RPCQueue_X__CreateBatch_0x2.__RPCQueue_X__CreateBatch_0x2");
	}

	U__RPCQueue_X__CreateBatch_0x2_exec__RPCQueue_X__CreateBatch_0x2_Params __RPCQueue_X__CreateBatch_0x2_Params;
	memcpy_s(&__RPCQueue_X__CreateBatch_0x2_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&__RPCQueue_X__CreateBatch_0x2_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__RPCQueue_X__CreateBatch_0x2, &__RPCQueue_X__CreateBatch_0x2_Params, nullptr);
};

// Function ProjectX.__RPCQueue_X__CreateBatchSingleRPC_0x1.__RPCQueue_X__CreateBatchSingleRPC_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        Response                       (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void U__RPCQueue_X__CreateBatchSingleRPC_0x1::__RPCQueue_X__CreateBatchSingleRPC_0x1(class UPsyNetMessage_X* Response, class UError* Error)
{
	static UFunction* uFn__RPCQueue_X__CreateBatchSingleRPC_0x1 = nullptr;

	if (!uFn__RPCQueue_X__CreateBatchSingleRPC_0x1)
	{
		uFn__RPCQueue_X__CreateBatchSingleRPC_0x1 = UFunction::FindFunction("Function ProjectX.__RPCQueue_X__CreateBatchSingleRPC_0x1.__RPCQueue_X__CreateBatchSingleRPC_0x1");
	}

	U__RPCQueue_X__CreateBatchSingleRPC_0x1_exec__RPCQueue_X__CreateBatchSingleRPC_0x1_Params __RPCQueue_X__CreateBatchSingleRPC_0x1_Params;
	memcpy_s(&__RPCQueue_X__CreateBatchSingleRPC_0x1_Params.Response, 0x8, &Response, 0x8);
	memcpy_s(&__RPCQueue_X__CreateBatchSingleRPC_0x1_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__RPCQueue_X__CreateBatchSingleRPC_0x1, &__RPCQueue_X__CreateBatchSingleRPC_0x1_Params, nullptr);
};

// Function ProjectX.__ServerPlayerTracker_X__AddPlayer_0x1.__ServerPlayerTracker_X__AddPlayer_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            P                              (CPF_Parm | CPF_NeedCtorLink)

bool U__ServerPlayerTracker_X__AddPlayer_0x1::__ServerPlayerTracker_X__AddPlayer_0x1(struct FUniqueNetId P)
{
	static UFunction* uFn__ServerPlayerTracker_X__AddPlayer_0x1 = nullptr;

	if (!uFn__ServerPlayerTracker_X__AddPlayer_0x1)
	{
		uFn__ServerPlayerTracker_X__AddPlayer_0x1 = UFunction::FindFunction("Function ProjectX.__ServerPlayerTracker_X__AddPlayer_0x1.__ServerPlayerTracker_X__AddPlayer_0x1");
	}

	U__ServerPlayerTracker_X__AddPlayer_0x1_exec__ServerPlayerTracker_X__AddPlayer_0x1_Params __ServerPlayerTracker_X__AddPlayer_0x1_Params;
	memcpy_s(&__ServerPlayerTracker_X__AddPlayer_0x1_Params.P, 0x48, &P, 0x48);

	this->ProcessEvent(uFn__ServerPlayerTracker_X__AddPlayer_0x1, &__ServerPlayerTracker_X__AddPlayer_0x1_Params, nullptr);

	return __ServerPlayerTracker_X__AddPlayer_0x1_Params.ReturnValue;
};

// Function ProjectX.ServerPlayerTracker_X.__ServerPlayerTracker_X__Refresh_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// TArray<struct FUniqueNetId>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UAddReservationMessage_X* Message                        (CPF_Parm)

TArray<struct FUniqueNetId> UServerPlayerTracker_X::__ServerPlayerTracker_X__Refresh_0x3(class UAddReservationMessage_X* Message)
{
	static UFunction* uFn__ServerPlayerTracker_X__Refresh_0x3 = nullptr;

	if (!uFn__ServerPlayerTracker_X__Refresh_0x3)
	{
		uFn__ServerPlayerTracker_X__Refresh_0x3 = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.__ServerPlayerTracker_X__Refresh_0x3");
	}

	UServerPlayerTracker_X_exec__ServerPlayerTracker_X__Refresh_0x3_Params __ServerPlayerTracker_X__Refresh_0x3_Params;
	memcpy_s(&__ServerPlayerTracker_X__Refresh_0x3_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFn__ServerPlayerTracker_X__Refresh_0x3, &__ServerPlayerTracker_X__Refresh_0x3_Params, nullptr);

	return __ServerPlayerTracker_X__Refresh_0x3_Params.ReturnValue;
};

// Function ProjectX.ServerPlayerTracker_X.__ServerPlayerTracker_X__Refresh_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

struct FUniqueNetId UServerPlayerTracker_X::__ServerPlayerTracker_X__Refresh_0x2(struct FReservationData P)
{
	static UFunction* uFn__ServerPlayerTracker_X__Refresh_0x2 = nullptr;

	if (!uFn__ServerPlayerTracker_X__Refresh_0x2)
	{
		uFn__ServerPlayerTracker_X__Refresh_0x2 = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.__ServerPlayerTracker_X__Refresh_0x2");
	}

	UServerPlayerTracker_X_exec__ServerPlayerTracker_X__Refresh_0x2_Params __ServerPlayerTracker_X__Refresh_0x2_Params;
	memcpy_s(&__ServerPlayerTracker_X__Refresh_0x2_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__ServerPlayerTracker_X__Refresh_0x2, &__ServerPlayerTracker_X__Refresh_0x2_Params, nullptr);

	return __ServerPlayerTracker_X__Refresh_0x2_Params.ReturnValue;
};

// Function ProjectX.ServerPlayerTracker_X.__ServerPlayerTracker_X__Refresh_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FReservationData        P                              (CPF_Parm | CPF_NeedCtorLink)

bool UServerPlayerTracker_X::__ServerPlayerTracker_X__Refresh_0x1(struct FReservationData P)
{
	static UFunction* uFn__ServerPlayerTracker_X__Refresh_0x1 = nullptr;

	if (!uFn__ServerPlayerTracker_X__Refresh_0x1)
	{
		uFn__ServerPlayerTracker_X__Refresh_0x1 = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.__ServerPlayerTracker_X__Refresh_0x1");
	}

	UServerPlayerTracker_X_exec__ServerPlayerTracker_X__Refresh_0x1_Params __ServerPlayerTracker_X__Refresh_0x1_Params;
	memcpy_s(&__ServerPlayerTracker_X__Refresh_0x1_Params.P, 0x108, &P, 0x108);

	this->ProcessEvent(uFn__ServerPlayerTracker_X__Refresh_0x1, &__ServerPlayerTracker_X__Refresh_0x1_Params, nullptr);

	return __ServerPlayerTracker_X__Refresh_0x1_Params.ReturnValue;
};

// Function ProjectX.ServerPlayerTracker_X.GetPlayerName
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class FString UServerPlayerTracker_X::GetPlayerName(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnGetPlayerName = nullptr;

	if (!uFnGetPlayerName)
	{
		uFnGetPlayerName = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.GetPlayerName");
	}

	UServerPlayerTracker_X_execGetPlayerName_Params GetPlayerName_Params;
	memcpy_s(&GetPlayerName_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnGetPlayerName, &GetPlayerName_Params, nullptr);

	return GetPlayerName_Params.ReturnValue;
};

// Function ProjectX.ServerPlayerTracker_X.Reset
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UServerPlayerTracker_X::Reset()
{
	static UFunction* uFnReset = nullptr;

	if (!uFnReset)
	{
		uFnReset = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.Reset");
	}

	UServerPlayerTracker_X_execReset_Params Reset_Params;

	this->ProcessEvent(uFnReset, &Reset_Params, nullptr);
};

// Function ProjectX.ServerPlayerTracker_X.Refresh
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UServerPlayerTracker_X::Refresh()
{
	static UFunction* uFnRefresh = nullptr;

	if (!uFnRefresh)
	{
		uFnRefresh = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.Refresh");
	}

	UServerPlayerTracker_X_execRefresh_Params Refresh_Params;

	this->ProcessEvent(uFnRefresh, &Refresh_Params, nullptr);
};

// Function ProjectX.ServerPlayerTracker_X.RemoveReservationMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* Message                        (CPF_Parm)

void UServerPlayerTracker_X::RemoveReservationMessage(class UAddReservationMessage_X* Message)
{
	static UFunction* uFnRemoveReservationMessage = nullptr;

	if (!uFnRemoveReservationMessage)
	{
		uFnRemoveReservationMessage = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.RemoveReservationMessage");
	}

	UServerPlayerTracker_X_execRemoveReservationMessage_Params RemoveReservationMessage_Params;
	memcpy_s(&RemoveReservationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnRemoveReservationMessage, &RemoveReservationMessage_Params, nullptr);
};

// Function ProjectX.ServerPlayerTracker_X.AddReservationMessage
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* Message                        (CPF_Parm)

void UServerPlayerTracker_X::AddReservationMessage(class UAddReservationMessage_X* Message)
{
	static UFunction* uFnAddReservationMessage = nullptr;

	if (!uFnAddReservationMessage)
	{
		uFnAddReservationMessage = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.AddReservationMessage");
	}

	UServerPlayerTracker_X_execAddReservationMessage_Params AddReservationMessage_Params;
	memcpy_s(&AddReservationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnAddReservationMessage, &AddReservationMessage_Params, nullptr);
};

// Function ProjectX.ServerPlayerTracker_X.RemovePlayer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UServerPlayerTracker_X::RemovePlayer(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnRemovePlayer = nullptr;

	if (!uFnRemovePlayer)
	{
		uFnRemovePlayer = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.RemovePlayer");
	}

	UServerPlayerTracker_X_execRemovePlayer_Params RemovePlayer_Params;
	memcpy_s(&RemovePlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnRemovePlayer, &RemovePlayer_Params, nullptr);
};

// Function ProjectX.ServerPlayerTracker_X.AddPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UServerPlayerTracker_X::AddPlayer(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnAddPlayer = nullptr;

	if (!uFnAddPlayer)
	{
		uFnAddPlayer = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.AddPlayer");
	}

	UServerPlayerTracker_X_execAddPlayer_Params AddPlayer_Params;
	memcpy_s(&AddPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnAddPlayer, &AddPlayer_Params, nullptr);
};

// Function ProjectX.ServerPlayerTracker_X.EventPlayerRemoved
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UServerPlayerTracker_X*  Tracker                        (CPF_Parm | CPF_EditInline)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UServerPlayerTracker_X::EventPlayerRemoved(class UServerPlayerTracker_X* Tracker, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnEventPlayerRemoved = nullptr;

	if (!uFnEventPlayerRemoved)
	{
		uFnEventPlayerRemoved = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.EventPlayerRemoved");
	}

	UServerPlayerTracker_X_execEventPlayerRemoved_Params EventPlayerRemoved_Params;
	memcpy_s(&EventPlayerRemoved_Params.Tracker, 0x8, &Tracker, 0x8);
	memcpy_s(&EventPlayerRemoved_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnEventPlayerRemoved, &EventPlayerRemoved_Params, nullptr);
};

// Function ProjectX.ServerPlayerTracker_X.EventPlayerAdded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UServerPlayerTracker_X*  Tracker                        (CPF_Parm | CPF_EditInline)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UServerPlayerTracker_X::EventPlayerAdded(class UServerPlayerTracker_X* Tracker, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnEventPlayerAdded = nullptr;

	if (!uFnEventPlayerAdded)
	{
		uFnEventPlayerAdded = UFunction::FindFunction("Function ProjectX.ServerPlayerTracker_X.EventPlayerAdded");
	}

	UServerPlayerTracker_X_execEventPlayerAdded_Params EventPlayerAdded_Params;
	memcpy_s(&EventPlayerAdded_Params.Tracker, 0x8, &Tracker, 0x8);
	memcpy_s(&EventPlayerAdded_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnEventPlayerAdded, &EventPlayerAdded_Params, nullptr);
};

// Function ProjectX.__StatusObserver_X__FindByAcceptedType_0x1.__StatusObserver_X__FindByAcceptedType_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UTriggerInfo*            TT                             (CPF_Parm)

bool U__StatusObserver_X__FindByAcceptedType_0x1::__StatusObserver_X__FindByAcceptedType_0x1(class UTriggerInfo* TT)
{
	static UFunction* uFn__StatusObserver_X__FindByAcceptedType_0x1 = nullptr;

	if (!uFn__StatusObserver_X__FindByAcceptedType_0x1)
	{
		uFn__StatusObserver_X__FindByAcceptedType_0x1 = UFunction::FindFunction("Function ProjectX.__StatusObserver_X__FindByAcceptedType_0x1.__StatusObserver_X__FindByAcceptedType_0x1");
	}

	U__StatusObserver_X__FindByAcceptedType_0x1_exec__StatusObserver_X__FindByAcceptedType_0x1_Params __StatusObserver_X__FindByAcceptedType_0x1_Params;
	memcpy_s(&__StatusObserver_X__FindByAcceptedType_0x1_Params.TT, 0x8, &TT, 0x8);

	this->ProcessEvent(uFn__StatusObserver_X__FindByAcceptedType_0x1, &__StatusObserver_X__FindByAcceptedType_0x1_Params, nullptr);

	return __StatusObserver_X__FindByAcceptedType_0x1_Params.ReturnValue;
};

// Function ProjectX.StatusTrigger_X.EventPropertyChangeFunc
// [0x00000000] 
// Parameter info:

void UStatusTrigger_X::EventPropertyChangeFunc()
{
	static UFunction* uFnEventPropertyChangeFunc = nullptr;

	if (!uFnEventPropertyChangeFunc)
	{
		uFnEventPropertyChangeFunc = UFunction::FindFunction("Function ProjectX.StatusTrigger_X.EventPropertyChangeFunc");
	}

	UStatusTrigger_X_execEventPropertyChangeFunc_Params EventPropertyChangeFunc_Params;

	this->ProcessEvent(uFnEventPropertyChangeFunc, &EventPropertyChangeFunc_Params, nullptr);
};

// Function ProjectX.StatusTrigger_X.EvaluateCondition
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  InConditionalValue             (CPF_Parm)

void UStatusTrigger_X::EvaluateCondition(unsigned long InConditionalValue)
{
	static UFunction* uFnEvaluateCondition = nullptr;

	if (!uFnEvaluateCondition)
	{
		uFnEvaluateCondition = UFunction::FindFunction("Function ProjectX.StatusTrigger_X.EvaluateCondition");
	}

	UStatusTrigger_X_execEvaluateCondition_Params EvaluateCondition_Params;
	EvaluateCondition_Params.InConditionalValue = InConditionalValue;

	this->ProcessEvent(uFnEvaluateCondition, &EvaluateCondition_Params, nullptr);
};

// Function ProjectX.StatusTrigger_X.IsTriggered
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UStatusTrigger_X::IsTriggered()
{
	static UFunction* uFnIsTriggered = nullptr;

	if (!uFnIsTriggered)
	{
		uFnIsTriggered = UFunction::FindFunction("Function ProjectX.StatusTrigger_X.IsTriggered");
	}

	UStatusTrigger_X_execIsTriggered_Params IsTriggered_Params;

	this->ProcessEvent(uFnIsTriggered, &IsTriggered_Params, nullptr);

	return IsTriggered_Params.ReturnValue;
};

// Function ProjectX.StatusTrigger_X.ToggleTriggered
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UStatusTrigger_X::ToggleTriggered()
{
	static UFunction* uFnToggleTriggered = nullptr;

	if (!uFnToggleTriggered)
	{
		uFnToggleTriggered = UFunction::FindFunction("Function ProjectX.StatusTrigger_X.ToggleTriggered");
	}

	UStatusTrigger_X_execToggleTriggered_Params ToggleTriggered_Params;

	this->ProcessEvent(uFnToggleTriggered, &ToggleTriggered_Params, nullptr);
};

// Function ProjectX.StatusTrigger_X.DebugPrintInfo
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  AddedInfo                      (CPF_Parm | CPF_NeedCtorLink)

void UStatusTrigger_X::DebugPrintInfo(class FString AddedInfo)
{
	static UFunction* uFnDebugPrintInfo = nullptr;

	if (!uFnDebugPrintInfo)
	{
		uFnDebugPrintInfo = UFunction::FindFunction("Function ProjectX.StatusTrigger_X.DebugPrintInfo");
	}

	UStatusTrigger_X_execDebugPrintInfo_Params DebugPrintInfo_Params;
	memcpy_s(&DebugPrintInfo_Params.AddedInfo, 0x10, &AddedInfo, 0x10);

	this->ProcessEvent(uFnDebugPrintInfo, &DebugPrintInfo_Params, nullptr);
};

// Function ProjectX.StatusTrigger_X.DebugPrint
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UStatusTrigger_X::DebugPrint()
{
	static UFunction* uFnDebugPrint = nullptr;

	if (!uFnDebugPrint)
	{
		uFnDebugPrint = UFunction::FindFunction("Function ProjectX.StatusTrigger_X.DebugPrint");
	}

	UStatusTrigger_X_execDebugPrint_Params DebugPrint_Params;

	this->ProcessEvent(uFnDebugPrint, &DebugPrint_Params, nullptr);
};

// Function ProjectX.TriggerInfo.SetType
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTriggerInfo*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  InType                         (CPF_Parm)

class UTriggerInfo* UTriggerInfo::SetType(class UClass* InType)
{
	static UFunction* uFnSetType = nullptr;

	if (!uFnSetType)
	{
		uFnSetType = UFunction::FindFunction("Function ProjectX.TriggerInfo.SetType");
	}

	UTriggerInfo_execSetType_Params SetType_Params;
	memcpy_s(&SetType_Params.InType, 0x8, &InType, 0x8);

	this->ProcessEvent(uFnSetType, &SetType_Params, nullptr);

	return SetType_Params.ReturnValue;
};

// Function ProjectX.TriggerInfo.UpdateTrigger
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UStatusTrigger_X*        InTrigger                      (CPF_Parm)

void UTriggerInfo::UpdateTrigger(class UStatusTrigger_X* InTrigger)
{
	static UFunction* uFnUpdateTrigger = nullptr;

	if (!uFnUpdateTrigger)
	{
		uFnUpdateTrigger = UFunction::FindFunction("Function ProjectX.TriggerInfo.UpdateTrigger");
	}

	UTriggerInfo_execUpdateTrigger_Params UpdateTrigger_Params;
	memcpy_s(&UpdateTrigger_Params.InTrigger, 0x8, &InTrigger, 0x8);

	this->ProcessEvent(uFnUpdateTrigger, &UpdateTrigger_Params, nullptr);
};

// Function ProjectX.StatusObserver_X.__StatusObserver_X__Init_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UTriggerInfo*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  T                              (CPF_Parm)

class UTriggerInfo* UStatusObserver_X::__StatusObserver_X__Init_0x1(class UClass* T)
{
	static UFunction* uFn__StatusObserver_X__Init_0x1 = nullptr;

	if (!uFn__StatusObserver_X__Init_0x1)
	{
		uFn__StatusObserver_X__Init_0x1 = UFunction::FindFunction("Function ProjectX.StatusObserver_X.__StatusObserver_X__Init_0x1");
	}

	UStatusObserver_X_exec__StatusObserver_X__Init_0x1_Params __StatusObserver_X__Init_0x1_Params;
	memcpy_s(&__StatusObserver_X__Init_0x1_Params.T, 0x8, &T, 0x8);

	this->ProcessEvent(uFn__StatusObserver_X__Init_0x1, &__StatusObserver_X__Init_0x1_Params, nullptr);

	return __StatusObserver_X__Init_0x1_Params.ReturnValue;
};

// Function ProjectX.StatusObserver_X.__bInitComplete__ChangeNotifyFunc
// [0x00000000] 
// Parameter info:

void UStatusObserver_X::__bInitComplete__ChangeNotifyFunc()
{
	static UFunction* uFn__bInitComplete__ChangeNotifyFunc = nullptr;

	if (!uFn__bInitComplete__ChangeNotifyFunc)
	{
		uFn__bInitComplete__ChangeNotifyFunc = UFunction::FindFunction("Function ProjectX.StatusObserver_X.__bInitComplete__ChangeNotifyFunc");
	}

	UStatusObserver_X_exec__bInitComplete__ChangeNotifyFunc_Params __bInitComplete__ChangeNotifyFunc_Params;

	this->ProcessEvent(uFn__bInitComplete__ChangeNotifyFunc, &__bInitComplete__ChangeNotifyFunc_Params, nullptr);
};

// Function ProjectX.StatusObserver_X.DebugPrintTriggers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UStatusObserver_X::DebugPrintTriggers()
{
	static UFunction* uFnDebugPrintTriggers = nullptr;

	if (!uFnDebugPrintTriggers)
	{
		uFnDebugPrintTriggers = UFunction::FindFunction("Function ProjectX.StatusObserver_X.DebugPrintTriggers");
	}

	UStatusObserver_X_execDebugPrintTriggers_Params DebugPrintTriggers_Params;

	this->ProcessEvent(uFnDebugPrintTriggers, &DebugPrintTriggers_Params, nullptr);
};

// Function ProjectX.StatusObserver_X.DebugPrint
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UStatusObserver_X::DebugPrint()
{
	static UFunction* uFnDebugPrint = nullptr;

	if (!uFnDebugPrint)
	{
		uFnDebugPrint = UFunction::FindFunction("Function ProjectX.StatusObserver_X.DebugPrint");
	}

	UStatusObserver_X_execDebugPrint_Params DebugPrint_Params;

	this->ProcessEvent(uFnDebugPrint, &DebugPrint_Params, nullptr);
};

// Function ProjectX.StatusObserver_X.ObservesTriggerType
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UStatusTrigger_X*        InTrigger                      (CPF_Parm)

bool UStatusObserver_X::ObservesTriggerType(class UStatusTrigger_X* InTrigger)
{
	static UFunction* uFnObservesTriggerType = nullptr;

	if (!uFnObservesTriggerType)
	{
		uFnObservesTriggerType = UFunction::FindFunction("Function ProjectX.StatusObserver_X.ObservesTriggerType");
	}

	UStatusObserver_X_execObservesTriggerType_Params ObservesTriggerType_Params;
	memcpy_s(&ObservesTriggerType_Params.InTrigger, 0x8, &InTrigger, 0x8);

	this->ProcessEvent(uFnObservesTriggerType, &ObservesTriggerType_Params, nullptr);

	return ObservesTriggerType_Params.ReturnValue;
};

// Function ProjectX.StatusObserver_X.UpdateTriggers
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UClass*                  InType                         (CPF_Parm)

void UStatusObserver_X::UpdateTriggers(class UClass* InType)
{
	static UFunction* uFnUpdateTriggers = nullptr;

	if (!uFnUpdateTriggers)
	{
		uFnUpdateTriggers = UFunction::FindFunction("Function ProjectX.StatusObserver_X.UpdateTriggers");
	}

	UStatusObserver_X_execUpdateTriggers_Params UpdateTriggers_Params;
	memcpy_s(&UpdateTriggers_Params.InType, 0x8, &InType, 0x8);

	this->ProcessEvent(uFnUpdateTriggers, &UpdateTriggers_Params, nullptr);
};

// Function ProjectX.StatusObserver_X.UnRegisterTriggers
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class UStatusTrigger_X*> InTriggers                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UStatusObserver_X::UnRegisterTriggers(TArray<class UStatusTrigger_X*>& InTriggers)
{
	static UFunction* uFnUnRegisterTriggers = nullptr;

	if (!uFnUnRegisterTriggers)
	{
		uFnUnRegisterTriggers = UFunction::FindFunction("Function ProjectX.StatusObserver_X.UnRegisterTriggers");
	}

	UStatusObserver_X_execUnRegisterTriggers_Params UnRegisterTriggers_Params;
	memcpy_s(&UnRegisterTriggers_Params.InTriggers, 0x10, &InTriggers, 0x10);

	this->ProcessEvent(uFnUnRegisterTriggers, &UnRegisterTriggers_Params, nullptr);

	memcpy_s(&InTriggers, 0x10, &UnRegisterTriggers_Params.InTriggers, 0x10);
};

// Function ProjectX.StatusObserver_X.RegisterTriggers
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class UStatusTrigger_X*> InTriggers                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UStatusObserver_X::RegisterTriggers(TArray<class UStatusTrigger_X*>& InTriggers)
{
	static UFunction* uFnRegisterTriggers = nullptr;

	if (!uFnRegisterTriggers)
	{
		uFnRegisterTriggers = UFunction::FindFunction("Function ProjectX.StatusObserver_X.RegisterTriggers");
	}

	UStatusObserver_X_execRegisterTriggers_Params RegisterTriggers_Params;
	memcpy_s(&RegisterTriggers_Params.InTriggers, 0x10, &InTriggers, 0x10);

	this->ProcessEvent(uFnRegisterTriggers, &RegisterTriggers_Params, nullptr);

	memcpy_s(&InTriggers, 0x10, &RegisterTriggers_Params.InTriggers, 0x10);
};

// Function ProjectX.StatusObserver_X.AddCallback
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UClass*                  InType                         (CPF_Parm)
// struct FScriptDelegate         InCallback                     (CPF_Parm | CPF_NeedCtorLink)

void UStatusObserver_X::AddCallback(class UClass* InType, struct FScriptDelegate InCallback)
{
	static UFunction* uFnAddCallback = nullptr;

	if (!uFnAddCallback)
	{
		uFnAddCallback = UFunction::FindFunction("Function ProjectX.StatusObserver_X.AddCallback");
	}

	UStatusObserver_X_execAddCallback_Params AddCallback_Params;
	memcpy_s(&AddCallback_Params.InType, 0x8, &InType, 0x8);
	memcpy_s(&AddCallback_Params.InCallback, 0x18, &InCallback, 0x18);

	this->ProcessEvent(uFnAddCallback, &AddCallback_Params, nullptr);
};

// Function ProjectX.StatusObserver_X.FindByAcceptedType
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTriggerInfo*            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  InType                         (CPF_Parm)

class UTriggerInfo* UStatusObserver_X::FindByAcceptedType(class UClass* InType)
{
	static UFunction* uFnFindByAcceptedType = nullptr;

	if (!uFnFindByAcceptedType)
	{
		uFnFindByAcceptedType = UFunction::FindFunction("Function ProjectX.StatusObserver_X.FindByAcceptedType");
	}

	UStatusObserver_X_execFindByAcceptedType_Params FindByAcceptedType_Params;
	memcpy_s(&FindByAcceptedType_Params.InType, 0x8, &InType, 0x8);

	this->ProcessEvent(uFnFindByAcceptedType, &FindByAcceptedType_Params, nullptr);

	return FindByAcceptedType_Params.ReturnValue;
};

// Function ProjectX.StatusObserver_X.SetInitComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UStatusObserver_X::SetInitComplete()
{
	static UFunction* uFnSetInitComplete = nullptr;

	if (!uFnSetInitComplete)
	{
		uFnSetInitComplete = UFunction::FindFunction("Function ProjectX.StatusObserver_X.SetInitComplete");
	}

	UStatusObserver_X_execSetInitComplete_Params SetInitComplete_Params;

	this->ProcessEvent(uFnSetInitComplete, &SetInitComplete_Params, nullptr);
};

// Function ProjectX.StatusObserver_X.Init
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULocalPlayer_X*          LP                             (CPF_Parm)

void UStatusObserver_X::Init(class ULocalPlayer_X* LP)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.StatusObserver_X.Init");
	}

	UStatusObserver_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.LP, 0x8, &LP, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.__StatusObserver_X__ObservesTriggerType_0x1.__StatusObserver_X__ObservesTriggerType_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClass*                  C                              (CPF_Parm)

bool U__StatusObserver_X__ObservesTriggerType_0x1::__StatusObserver_X__ObservesTriggerType_0x1(class UClass* C)
{
	static UFunction* uFn__StatusObserver_X__ObservesTriggerType_0x1 = nullptr;

	if (!uFn__StatusObserver_X__ObservesTriggerType_0x1)
	{
		uFn__StatusObserver_X__ObservesTriggerType_0x1 = UFunction::FindFunction("Function ProjectX.__StatusObserver_X__ObservesTriggerType_0x1.__StatusObserver_X__ObservesTriggerType_0x1");
	}

	U__StatusObserver_X__ObservesTriggerType_0x1_exec__StatusObserver_X__ObservesTriggerType_0x1_Params __StatusObserver_X__ObservesTriggerType_0x1_Params;
	memcpy_s(&__StatusObserver_X__ObservesTriggerType_0x1_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFn__StatusObserver_X__ObservesTriggerType_0x1, &__StatusObserver_X__ObservesTriggerType_0x1_Params, nullptr);

	return __StatusObserver_X__ObservesTriggerType_0x1_Params.ReturnValue;
};

// Function ProjectX.__TAsyncResult__array_ClubInvite_X__Copy_0x1.__TAsyncResult__array_ClubInvite_X__Copy_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class UClubInvite_X*>   R                              (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  E                              (CPF_Parm)

void U__TAsyncResult__array_ClubInvite_X__Copy_0x1::__TAsyncResult__array_ClubInvite_X__Copy_0x1(TArray<class UClubInvite_X*> R, class UError* E)
{
	static UFunction* uFn__TAsyncResult__array_ClubInvite_X__Copy_0x1 = nullptr;

	if (!uFn__TAsyncResult__array_ClubInvite_X__Copy_0x1)
	{
		uFn__TAsyncResult__array_ClubInvite_X__Copy_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__array_ClubInvite_X__Copy_0x1.__TAsyncResult__array_ClubInvite_X__Copy_0x1");
	}

	U__TAsyncResult__array_ClubInvite_X__Copy_0x1_exec__TAsyncResult__array_ClubInvite_X__Copy_0x1_Params __TAsyncResult__array_ClubInvite_X__Copy_0x1_Params;
	memcpy_s(&__TAsyncResult__array_ClubInvite_X__Copy_0x1_Params.R, 0x10, &R, 0x10);
	memcpy_s(&__TAsyncResult__array_ClubInvite_X__Copy_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__array_ClubInvite_X__Copy_0x1, &__TAsyncResult__array_ClubInvite_X__Copy_0x1_Params, nullptr);
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.CreateResultError
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  InError                        (CPF_Parm)

class UTAsyncResult__array_ClubInvite_X* UTAsyncResult__array_ClubInvite_X::CreateResultError(class UError* InError)
{
	static UFunction* uFnCreateResultError = nullptr;

	if (!uFnCreateResultError)
	{
		uFnCreateResultError = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.CreateResultError");
	}

	UTAsyncResult__array_ClubInvite_X_execCreateResultError_Params CreateResultError_Params;
	memcpy_s(&CreateResultError_Params.InError, 0x8, &InError, 0x8);

	UTAsyncResult__array_ClubInvite_X::StaticClass()->ProcessEvent(uFnCreateResultError, &CreateResultError_Params, nullptr);

	return CreateResultError_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.CreateResult
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<class UClubInvite_X*>   InResult                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__array_ClubInvite_X* UTAsyncResult__array_ClubInvite_X::CreateResult(TArray<class UClubInvite_X*> InResult)
{
	static UFunction* uFnCreateResult = nullptr;

	if (!uFnCreateResult)
	{
		uFnCreateResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.CreateResult");
	}

	UTAsyncResult__array_ClubInvite_X_execCreateResult_Params CreateResult_Params;
	memcpy_s(&CreateResult_Params.InResult, 0x10, &InResult, 0x10);

	UTAsyncResult__array_ClubInvite_X::StaticClass()->ProcessEvent(uFnCreateResult, &CreateResult_Params, nullptr);

	return CreateResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.Copy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__array_ClubInvite_X* UTAsyncResult__array_ClubInvite_X::Copy()
{
	static UFunction* uFnCopy = nullptr;

	if (!uFnCopy)
	{
		uFnCopy = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.Copy");
	}

	UTAsyncResult__array_ClubInvite_X_execCopy_Params Copy_Params;

	this->ProcessEvent(uFnCopy, &Copy_Params, nullptr);

	return Copy_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.ClearCallbacks
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UTAsyncResult__array_ClubInvite_X::eventClearCallbacks()
{
	static UFunction* uFnClearCallbacks = nullptr;

	if (!uFnClearCallbacks)
	{
		uFnClearCallbacks = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.ClearCallbacks");
	}

	UTAsyncResult__array_ClubInvite_X_eventClearCallbacks_Params ClearCallbacks_Params;

	this->ProcessEvent(uFnClearCallbacks, &ClearCallbacks_Params, nullptr);
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.SetResultWhen
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAsyncTask*              Other                          (CPF_Parm)
// struct FScriptDelegate         GetResultDelegate              (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__array_ClubInvite_X* UTAsyncResult__array_ClubInvite_X::eventSetResultWhen(class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate)
{
	static UFunction* uFnSetResultWhen = nullptr;

	if (!uFnSetResultWhen)
	{
		uFnSetResultWhen = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.SetResultWhen");
	}

	UTAsyncResult__array_ClubInvite_X_eventSetResultWhen_Params SetResultWhen_Params;
	memcpy_s(&SetResultWhen_Params.Other, 0x8, &Other, 0x8);
	memcpy_s(&SetResultWhen_Params.GetResultDelegate, 0x18, &GetResultDelegate, 0x18);

	this->ProcessEvent(uFnSetResultWhen, &SetResultWhen_Params, nullptr);

	return SetResultWhen_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.SetResult
// [0x00024803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<class UClubInvite_X*>   InResult                       (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  InError                        (CPF_OptionalParm | CPF_Parm)

class UTAsyncResult__array_ClubInvite_X* UTAsyncResult__array_ClubInvite_X::eventSetResult(TArray<class UClubInvite_X*> InResult, class UError* InError)
{
	static UFunction* uFnSetResult = nullptr;

	if (!uFnSetResult)
	{
		uFnSetResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.SetResult");
	}

	UTAsyncResult__array_ClubInvite_X_eventSetResult_Params SetResult_Params;
	memcpy_s(&SetResult_Params.InResult, 0x10, &InResult, 0x10);
	memcpy_s(&SetResult_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnSetResult, &SetResult_Params, nullptr);

	return SetResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.NotifyOnResultComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__array_ClubInvite_X* UTAsyncResult__array_ClubInvite_X::NotifyOnResultComplete(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResultComplete = nullptr;

	if (!uFnNotifyOnResultComplete)
	{
		uFnNotifyOnResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.NotifyOnResultComplete");
	}

	UTAsyncResult__array_ClubInvite_X_execNotifyOnResultComplete_Params NotifyOnResultComplete_Params;
	memcpy_s(&NotifyOnResultComplete_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResultComplete, &NotifyOnResultComplete_Params, nullptr);

	return NotifyOnResultComplete_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.NotifyOnResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__array_ClubInvite_X* UTAsyncResult__array_ClubInvite_X::NotifyOnResult(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResult = nullptr;

	if (!uFnNotifyOnResult)
	{
		uFnNotifyOnResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.NotifyOnResult");
	}

	UTAsyncResult__array_ClubInvite_X_execNotifyOnResult_Params NotifyOnResult_Params;
	memcpy_s(&NotifyOnResult_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResult, &NotifyOnResult_Params, nullptr);

	return NotifyOnResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.ResultDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<class UClubInvite_X*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<class UClubInvite_X*> UTAsyncResult__array_ClubInvite_X::ResultDelegate()
{
	static UFunction* uFnResultDelegate = nullptr;

	if (!uFnResultDelegate)
	{
		uFnResultDelegate = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.ResultDelegate");
	}

	UTAsyncResult__array_ClubInvite_X_execResultDelegate_Params ResultDelegate_Params;

	this->ProcessEvent(uFnResultDelegate, &ResultDelegate_Params, nullptr);

	return ResultDelegate_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.EventResultComplete
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<class UClubInvite_X*>   OutResult                      (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  OutError                       (CPF_Parm)

void UTAsyncResult__array_ClubInvite_X::EventResultComplete(TArray<class UClubInvite_X*> OutResult, class UError* OutError)
{
	static UFunction* uFnEventResultComplete = nullptr;

	if (!uFnEventResultComplete)
	{
		uFnEventResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.EventResultComplete");
	}

	UTAsyncResult__array_ClubInvite_X_execEventResultComplete_Params EventResultComplete_Params;
	memcpy_s(&EventResultComplete_Params.OutResult, 0x10, &OutResult, 0x10);
	memcpy_s(&EventResultComplete_Params.OutError, 0x8, &OutError, 0x8);

	this->ProcessEvent(uFnEventResultComplete, &EventResultComplete_Params, nullptr);
};

// Function ProjectX.TAsyncResult__array_ClubInvite_X.EventResult
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<class UClubInvite_X*>   OutResult                      (CPF_Parm | CPF_NeedCtorLink)

void UTAsyncResult__array_ClubInvite_X::EventResult(TArray<class UClubInvite_X*> OutResult)
{
	static UFunction* uFnEventResult = nullptr;

	if (!uFnEventResult)
	{
		uFnEventResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_ClubInvite_X.EventResult");
	}

	UTAsyncResult__array_ClubInvite_X_execEventResult_Params EventResult_Params;
	memcpy_s(&EventResult_Params.OutResult, 0x10, &OutResult, 0x10);

	this->ProcessEvent(uFnEventResult, &EventResult_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1.__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1::__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1()
{
	static UFunction* uFn__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1 = nullptr;

	if (!uFn__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1)
	{
		uFn__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1.__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1");
	}

	U__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1_exec__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1_Params __TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1, &__TAsyncResult__array_ClubInvite_X__NotifyOnResult_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1.__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Err                            (CPF_Parm)

void U__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1::__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1(class UError* Err)
{
	static UFunction* uFn__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1 = nullptr;

	if (!uFn__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1)
	{
		uFn__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1.__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1");
	}

	U__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1_exec__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1_Params __TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1_Params;
	memcpy_s(&__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1, &__TAsyncResult__array_ClubInvite_X__NotifyOnResultComplete_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1.__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1::__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1()
{
	static UFunction* uFn__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1 = nullptr;

	if (!uFn__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1)
	{
		uFn__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1.__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1");
	}

	U__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1_exec__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1_Params __TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1, &__TAsyncResult__array_ClubInvite_X__SetResultWhen_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__array_LanServerRecord_X__Copy_0x1.__TAsyncResult__array_LanServerRecord_X__Copy_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class ULanServerRecord_X*> R                              (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  E                              (CPF_Parm)

void U__TAsyncResult__array_LanServerRecord_X__Copy_0x1::__TAsyncResult__array_LanServerRecord_X__Copy_0x1(TArray<class ULanServerRecord_X*> R, class UError* E)
{
	static UFunction* uFn__TAsyncResult__array_LanServerRecord_X__Copy_0x1 = nullptr;

	if (!uFn__TAsyncResult__array_LanServerRecord_X__Copy_0x1)
	{
		uFn__TAsyncResult__array_LanServerRecord_X__Copy_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__array_LanServerRecord_X__Copy_0x1.__TAsyncResult__array_LanServerRecord_X__Copy_0x1");
	}

	U__TAsyncResult__array_LanServerRecord_X__Copy_0x1_exec__TAsyncResult__array_LanServerRecord_X__Copy_0x1_Params __TAsyncResult__array_LanServerRecord_X__Copy_0x1_Params;
	memcpy_s(&__TAsyncResult__array_LanServerRecord_X__Copy_0x1_Params.R, 0x10, &R, 0x10);
	memcpy_s(&__TAsyncResult__array_LanServerRecord_X__Copy_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__array_LanServerRecord_X__Copy_0x1, &__TAsyncResult__array_LanServerRecord_X__Copy_0x1_Params, nullptr);
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.CreateResultError
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  InError                        (CPF_Parm)

class UTAsyncResult__array_LanServerRecord_X* UTAsyncResult__array_LanServerRecord_X::CreateResultError(class UError* InError)
{
	static UFunction* uFnCreateResultError = nullptr;

	if (!uFnCreateResultError)
	{
		uFnCreateResultError = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.CreateResultError");
	}

	UTAsyncResult__array_LanServerRecord_X_execCreateResultError_Params CreateResultError_Params;
	memcpy_s(&CreateResultError_Params.InError, 0x8, &InError, 0x8);

	UTAsyncResult__array_LanServerRecord_X::StaticClass()->ProcessEvent(uFnCreateResultError, &CreateResultError_Params, nullptr);

	return CreateResultError_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.CreateResult
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<class ULanServerRecord_X*> InResult                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__array_LanServerRecord_X* UTAsyncResult__array_LanServerRecord_X::CreateResult(TArray<class ULanServerRecord_X*> InResult)
{
	static UFunction* uFnCreateResult = nullptr;

	if (!uFnCreateResult)
	{
		uFnCreateResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.CreateResult");
	}

	UTAsyncResult__array_LanServerRecord_X_execCreateResult_Params CreateResult_Params;
	memcpy_s(&CreateResult_Params.InResult, 0x10, &InResult, 0x10);

	UTAsyncResult__array_LanServerRecord_X::StaticClass()->ProcessEvent(uFnCreateResult, &CreateResult_Params, nullptr);

	return CreateResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.Copy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__array_LanServerRecord_X* UTAsyncResult__array_LanServerRecord_X::Copy()
{
	static UFunction* uFnCopy = nullptr;

	if (!uFnCopy)
	{
		uFnCopy = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.Copy");
	}

	UTAsyncResult__array_LanServerRecord_X_execCopy_Params Copy_Params;

	this->ProcessEvent(uFnCopy, &Copy_Params, nullptr);

	return Copy_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.ClearCallbacks
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UTAsyncResult__array_LanServerRecord_X::eventClearCallbacks()
{
	static UFunction* uFnClearCallbacks = nullptr;

	if (!uFnClearCallbacks)
	{
		uFnClearCallbacks = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.ClearCallbacks");
	}

	UTAsyncResult__array_LanServerRecord_X_eventClearCallbacks_Params ClearCallbacks_Params;

	this->ProcessEvent(uFnClearCallbacks, &ClearCallbacks_Params, nullptr);
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.SetResultWhen
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAsyncTask*              Other                          (CPF_Parm)
// struct FScriptDelegate         GetResultDelegate              (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__array_LanServerRecord_X* UTAsyncResult__array_LanServerRecord_X::eventSetResultWhen(class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate)
{
	static UFunction* uFnSetResultWhen = nullptr;

	if (!uFnSetResultWhen)
	{
		uFnSetResultWhen = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.SetResultWhen");
	}

	UTAsyncResult__array_LanServerRecord_X_eventSetResultWhen_Params SetResultWhen_Params;
	memcpy_s(&SetResultWhen_Params.Other, 0x8, &Other, 0x8);
	memcpy_s(&SetResultWhen_Params.GetResultDelegate, 0x18, &GetResultDelegate, 0x18);

	this->ProcessEvent(uFnSetResultWhen, &SetResultWhen_Params, nullptr);

	return SetResultWhen_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.SetResult
// [0x00024803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<class ULanServerRecord_X*> InResult                       (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  InError                        (CPF_OptionalParm | CPF_Parm)

class UTAsyncResult__array_LanServerRecord_X* UTAsyncResult__array_LanServerRecord_X::eventSetResult(TArray<class ULanServerRecord_X*> InResult, class UError* InError)
{
	static UFunction* uFnSetResult = nullptr;

	if (!uFnSetResult)
	{
		uFnSetResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.SetResult");
	}

	UTAsyncResult__array_LanServerRecord_X_eventSetResult_Params SetResult_Params;
	memcpy_s(&SetResult_Params.InResult, 0x10, &InResult, 0x10);
	memcpy_s(&SetResult_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnSetResult, &SetResult_Params, nullptr);

	return SetResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.NotifyOnResultComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__array_LanServerRecord_X* UTAsyncResult__array_LanServerRecord_X::NotifyOnResultComplete(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResultComplete = nullptr;

	if (!uFnNotifyOnResultComplete)
	{
		uFnNotifyOnResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.NotifyOnResultComplete");
	}

	UTAsyncResult__array_LanServerRecord_X_execNotifyOnResultComplete_Params NotifyOnResultComplete_Params;
	memcpy_s(&NotifyOnResultComplete_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResultComplete, &NotifyOnResultComplete_Params, nullptr);

	return NotifyOnResultComplete_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.NotifyOnResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__array_LanServerRecord_X* UTAsyncResult__array_LanServerRecord_X::NotifyOnResult(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResult = nullptr;

	if (!uFnNotifyOnResult)
	{
		uFnNotifyOnResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.NotifyOnResult");
	}

	UTAsyncResult__array_LanServerRecord_X_execNotifyOnResult_Params NotifyOnResult_Params;
	memcpy_s(&NotifyOnResult_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResult, &NotifyOnResult_Params, nullptr);

	return NotifyOnResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.ResultDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<class ULanServerRecord_X*> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<class ULanServerRecord_X*> UTAsyncResult__array_LanServerRecord_X::ResultDelegate()
{
	static UFunction* uFnResultDelegate = nullptr;

	if (!uFnResultDelegate)
	{
		uFnResultDelegate = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.ResultDelegate");
	}

	UTAsyncResult__array_LanServerRecord_X_execResultDelegate_Params ResultDelegate_Params;

	this->ProcessEvent(uFnResultDelegate, &ResultDelegate_Params, nullptr);

	return ResultDelegate_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.EventResultComplete
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<class ULanServerRecord_X*> OutResult                      (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  OutError                       (CPF_Parm)

void UTAsyncResult__array_LanServerRecord_X::EventResultComplete(TArray<class ULanServerRecord_X*> OutResult, class UError* OutError)
{
	static UFunction* uFnEventResultComplete = nullptr;

	if (!uFnEventResultComplete)
	{
		uFnEventResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.EventResultComplete");
	}

	UTAsyncResult__array_LanServerRecord_X_execEventResultComplete_Params EventResultComplete_Params;
	memcpy_s(&EventResultComplete_Params.OutResult, 0x10, &OutResult, 0x10);
	memcpy_s(&EventResultComplete_Params.OutError, 0x8, &OutError, 0x8);

	this->ProcessEvent(uFnEventResultComplete, &EventResultComplete_Params, nullptr);
};

// Function ProjectX.TAsyncResult__array_LanServerRecord_X.EventResult
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// TArray<class ULanServerRecord_X*> OutResult                      (CPF_Parm | CPF_NeedCtorLink)

void UTAsyncResult__array_LanServerRecord_X::EventResult(TArray<class ULanServerRecord_X*> OutResult)
{
	static UFunction* uFnEventResult = nullptr;

	if (!uFnEventResult)
	{
		uFnEventResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__array_LanServerRecord_X.EventResult");
	}

	UTAsyncResult__array_LanServerRecord_X_execEventResult_Params EventResult_Params;
	memcpy_s(&EventResult_Params.OutResult, 0x10, &OutResult, 0x10);

	this->ProcessEvent(uFnEventResult, &EventResult_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1.__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1::__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1()
{
	static UFunction* uFn__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1 = nullptr;

	if (!uFn__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1)
	{
		uFn__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1.__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1");
	}

	U__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1_exec__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1_Params __TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1, &__TAsyncResult__array_LanServerRecord_X__NotifyOnResult_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1.__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Err                            (CPF_Parm)

void U__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1::__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1(class UError* Err)
{
	static UFunction* uFn__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1 = nullptr;

	if (!uFn__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1)
	{
		uFn__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1.__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1");
	}

	U__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1_exec__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1_Params __TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1_Params;
	memcpy_s(&__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1, &__TAsyncResult__array_LanServerRecord_X__NotifyOnResultComplete_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1.__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1::__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1()
{
	static UFunction* uFn__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1 = nullptr;

	if (!uFn__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1)
	{
		uFn__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1.__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1");
	}

	U__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1_exec__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1_Params __TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1, &__TAsyncResult__array_LanServerRecord_X__SetResultWhen_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__ClubDetails_X__Copy_0x1.__TAsyncResult__ClubDetails_X__Copy_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__TAsyncResult__ClubDetails_X__Copy_0x1::__TAsyncResult__ClubDetails_X__Copy_0x1(class UClubDetails_X* R, class UError* E)
{
	static UFunction* uFn__TAsyncResult__ClubDetails_X__Copy_0x1 = nullptr;

	if (!uFn__TAsyncResult__ClubDetails_X__Copy_0x1)
	{
		uFn__TAsyncResult__ClubDetails_X__Copy_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__ClubDetails_X__Copy_0x1.__TAsyncResult__ClubDetails_X__Copy_0x1");
	}

	U__TAsyncResult__ClubDetails_X__Copy_0x1_exec__TAsyncResult__ClubDetails_X__Copy_0x1_Params __TAsyncResult__ClubDetails_X__Copy_0x1_Params;
	memcpy_s(&__TAsyncResult__ClubDetails_X__Copy_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__TAsyncResult__ClubDetails_X__Copy_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__ClubDetails_X__Copy_0x1, &__TAsyncResult__ClubDetails_X__Copy_0x1_Params, nullptr);
};

// Function ProjectX.TAsyncResult__ClubDetails_X.CreateResultError
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  InError                        (CPF_Parm)

class UTAsyncResult__ClubDetails_X* UTAsyncResult__ClubDetails_X::CreateResultError(class UError* InError)
{
	static UFunction* uFnCreateResultError = nullptr;

	if (!uFnCreateResultError)
	{
		uFnCreateResultError = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.CreateResultError");
	}

	UTAsyncResult__ClubDetails_X_execCreateResultError_Params CreateResultError_Params;
	memcpy_s(&CreateResultError_Params.InError, 0x8, &InError, 0x8);

	UTAsyncResult__ClubDetails_X::StaticClass()->ProcessEvent(uFnCreateResultError, &CreateResultError_Params, nullptr);

	return CreateResultError_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__ClubDetails_X.CreateResult
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubDetails_X*          InResult                       (CPF_Parm)

class UTAsyncResult__ClubDetails_X* UTAsyncResult__ClubDetails_X::CreateResult(class UClubDetails_X* InResult)
{
	static UFunction* uFnCreateResult = nullptr;

	if (!uFnCreateResult)
	{
		uFnCreateResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.CreateResult");
	}

	UTAsyncResult__ClubDetails_X_execCreateResult_Params CreateResult_Params;
	memcpy_s(&CreateResult_Params.InResult, 0x8, &InResult, 0x8);

	UTAsyncResult__ClubDetails_X::StaticClass()->ProcessEvent(uFnCreateResult, &CreateResult_Params, nullptr);

	return CreateResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__ClubDetails_X.Copy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__ClubDetails_X* UTAsyncResult__ClubDetails_X::Copy()
{
	static UFunction* uFnCopy = nullptr;

	if (!uFnCopy)
	{
		uFnCopy = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.Copy");
	}

	UTAsyncResult__ClubDetails_X_execCopy_Params Copy_Params;

	this->ProcessEvent(uFnCopy, &Copy_Params, nullptr);

	return Copy_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__ClubDetails_X.ClearCallbacks
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UTAsyncResult__ClubDetails_X::eventClearCallbacks()
{
	static UFunction* uFnClearCallbacks = nullptr;

	if (!uFnClearCallbacks)
	{
		uFnClearCallbacks = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.ClearCallbacks");
	}

	UTAsyncResult__ClubDetails_X_eventClearCallbacks_Params ClearCallbacks_Params;

	this->ProcessEvent(uFnClearCallbacks, &ClearCallbacks_Params, nullptr);
};

// Function ProjectX.TAsyncResult__ClubDetails_X.SetResultWhen
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAsyncTask*              Other                          (CPF_Parm)
// struct FScriptDelegate         GetResultDelegate              (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UTAsyncResult__ClubDetails_X::eventSetResultWhen(class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate)
{
	static UFunction* uFnSetResultWhen = nullptr;

	if (!uFnSetResultWhen)
	{
		uFnSetResultWhen = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.SetResultWhen");
	}

	UTAsyncResult__ClubDetails_X_eventSetResultWhen_Params SetResultWhen_Params;
	memcpy_s(&SetResultWhen_Params.Other, 0x8, &Other, 0x8);
	memcpy_s(&SetResultWhen_Params.GetResultDelegate, 0x18, &GetResultDelegate, 0x18);

	this->ProcessEvent(uFnSetResultWhen, &SetResultWhen_Params, nullptr);

	return SetResultWhen_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__ClubDetails_X.SetResult
// [0x00024803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubDetails_X*          InResult                       (CPF_Parm)
// class UError*                  InError                        (CPF_OptionalParm | CPF_Parm)

class UTAsyncResult__ClubDetails_X* UTAsyncResult__ClubDetails_X::eventSetResult(class UClubDetails_X* InResult, class UError* InError)
{
	static UFunction* uFnSetResult = nullptr;

	if (!uFnSetResult)
	{
		uFnSetResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.SetResult");
	}

	UTAsyncResult__ClubDetails_X_eventSetResult_Params SetResult_Params;
	memcpy_s(&SetResult_Params.InResult, 0x8, &InResult, 0x8);
	memcpy_s(&SetResult_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnSetResult, &SetResult_Params, nullptr);

	return SetResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__ClubDetails_X.NotifyOnResultComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UTAsyncResult__ClubDetails_X::NotifyOnResultComplete(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResultComplete = nullptr;

	if (!uFnNotifyOnResultComplete)
	{
		uFnNotifyOnResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.NotifyOnResultComplete");
	}

	UTAsyncResult__ClubDetails_X_execNotifyOnResultComplete_Params NotifyOnResultComplete_Params;
	memcpy_s(&NotifyOnResultComplete_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResultComplete, &NotifyOnResultComplete_Params, nullptr);

	return NotifyOnResultComplete_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__ClubDetails_X.NotifyOnResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__ClubDetails_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__ClubDetails_X* UTAsyncResult__ClubDetails_X::NotifyOnResult(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResult = nullptr;

	if (!uFnNotifyOnResult)
	{
		uFnNotifyOnResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.NotifyOnResult");
	}

	UTAsyncResult__ClubDetails_X_execNotifyOnResult_Params NotifyOnResult_Params;
	memcpy_s(&NotifyOnResult_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResult, &NotifyOnResult_Params, nullptr);

	return NotifyOnResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__ClubDetails_X.ResultDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UClubDetails_X* UTAsyncResult__ClubDetails_X::ResultDelegate()
{
	static UFunction* uFnResultDelegate = nullptr;

	if (!uFnResultDelegate)
	{
		uFnResultDelegate = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.ResultDelegate");
	}

	UTAsyncResult__ClubDetails_X_execResultDelegate_Params ResultDelegate_Params;

	this->ProcessEvent(uFnResultDelegate, &ResultDelegate_Params, nullptr);

	return ResultDelegate_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__ClubDetails_X.EventResultComplete
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          OutResult                      (CPF_Parm)
// class UError*                  OutError                       (CPF_Parm)

void UTAsyncResult__ClubDetails_X::EventResultComplete(class UClubDetails_X* OutResult, class UError* OutError)
{
	static UFunction* uFnEventResultComplete = nullptr;

	if (!uFnEventResultComplete)
	{
		uFnEventResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.EventResultComplete");
	}

	UTAsyncResult__ClubDetails_X_execEventResultComplete_Params EventResultComplete_Params;
	memcpy_s(&EventResultComplete_Params.OutResult, 0x8, &OutResult, 0x8);
	memcpy_s(&EventResultComplete_Params.OutError, 0x8, &OutError, 0x8);

	this->ProcessEvent(uFnEventResultComplete, &EventResultComplete_Params, nullptr);
};

// Function ProjectX.TAsyncResult__ClubDetails_X.EventResult
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UClubDetails_X*          OutResult                      (CPF_Parm)

void UTAsyncResult__ClubDetails_X::EventResult(class UClubDetails_X* OutResult)
{
	static UFunction* uFnEventResult = nullptr;

	if (!uFnEventResult)
	{
		uFnEventResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__ClubDetails_X.EventResult");
	}

	UTAsyncResult__ClubDetails_X_execEventResult_Params EventResult_Params;
	memcpy_s(&EventResult_Params.OutResult, 0x8, &OutResult, 0x8);

	this->ProcessEvent(uFnEventResult, &EventResult_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1.__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1::__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1()
{
	static UFunction* uFn__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1 = nullptr;

	if (!uFn__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1)
	{
		uFn__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1.__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1");
	}

	U__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1_exec__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1_Params __TAsyncResult__ClubDetails_X__NotifyOnResult_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1, &__TAsyncResult__ClubDetails_X__NotifyOnResult_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1.__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Err                            (CPF_Parm)

void U__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1::__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1(class UError* Err)
{
	static UFunction* uFn__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1 = nullptr;

	if (!uFn__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1)
	{
		uFn__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1.__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1");
	}

	U__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1_exec__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1_Params __TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1_Params;
	memcpy_s(&__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1, &__TAsyncResult__ClubDetails_X__NotifyOnResultComplete_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__ClubDetails_X__SetResultWhen_0x1.__TAsyncResult__ClubDetails_X__SetResultWhen_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__ClubDetails_X__SetResultWhen_0x1::__TAsyncResult__ClubDetails_X__SetResultWhen_0x1()
{
	static UFunction* uFn__TAsyncResult__ClubDetails_X__SetResultWhen_0x1 = nullptr;

	if (!uFn__TAsyncResult__ClubDetails_X__SetResultWhen_0x1)
	{
		uFn__TAsyncResult__ClubDetails_X__SetResultWhen_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__ClubDetails_X__SetResultWhen_0x1.__TAsyncResult__ClubDetails_X__SetResultWhen_0x1");
	}

	U__TAsyncResult__ClubDetails_X__SetResultWhen_0x1_exec__TAsyncResult__ClubDetails_X__SetResultWhen_0x1_Params __TAsyncResult__ClubDetails_X__SetResultWhen_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__ClubDetails_X__SetResultWhen_0x1, &__TAsyncResult__ClubDetails_X__SetResultWhen_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__PsyNetClientService_X__Copy_0x1.__TAsyncResult__PsyNetClientService_X__Copy_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetClientService_X*  R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__TAsyncResult__PsyNetClientService_X__Copy_0x1::__TAsyncResult__PsyNetClientService_X__Copy_0x1(class UPsyNetClientService_X* R, class UError* E)
{
	static UFunction* uFn__TAsyncResult__PsyNetClientService_X__Copy_0x1 = nullptr;

	if (!uFn__TAsyncResult__PsyNetClientService_X__Copy_0x1)
	{
		uFn__TAsyncResult__PsyNetClientService_X__Copy_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__PsyNetClientService_X__Copy_0x1.__TAsyncResult__PsyNetClientService_X__Copy_0x1");
	}

	U__TAsyncResult__PsyNetClientService_X__Copy_0x1_exec__TAsyncResult__PsyNetClientService_X__Copy_0x1_Params __TAsyncResult__PsyNetClientService_X__Copy_0x1_Params;
	memcpy_s(&__TAsyncResult__PsyNetClientService_X__Copy_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__TAsyncResult__PsyNetClientService_X__Copy_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__PsyNetClientService_X__Copy_0x1, &__TAsyncResult__PsyNetClientService_X__Copy_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1.__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1::__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1()
{
	static UFunction* uFn__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1 = nullptr;

	if (!uFn__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1)
	{
		uFn__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1.__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1");
	}

	U__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1_exec__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1_Params __TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1, &__TAsyncResult__PsyNetClientService_X__NotifyOnResult_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1.__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Err                            (CPF_Parm)

void U__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1::__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1(class UError* Err)
{
	static UFunction* uFn__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1 = nullptr;

	if (!uFn__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1)
	{
		uFn__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1.__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1");
	}

	U__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1_exec__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1_Params __TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1_Params;
	memcpy_s(&__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1, &__TAsyncResult__PsyNetClientService_X__NotifyOnResultComplete_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1.__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1::__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1()
{
	static UFunction* uFn__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1 = nullptr;

	if (!uFn__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1)
	{
		uFn__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1.__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1");
	}

	U__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1_exec__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1_Params __TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1, &__TAsyncResult__PsyNetClientService_X__SetResultWhen_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__PsyNetMessage_X__Copy_0x1.__TAsyncResult__PsyNetMessage_X__Copy_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__TAsyncResult__PsyNetMessage_X__Copy_0x1::__TAsyncResult__PsyNetMessage_X__Copy_0x1(class UPsyNetMessage_X* R, class UError* E)
{
	static UFunction* uFn__TAsyncResult__PsyNetMessage_X__Copy_0x1 = nullptr;

	if (!uFn__TAsyncResult__PsyNetMessage_X__Copy_0x1)
	{
		uFn__TAsyncResult__PsyNetMessage_X__Copy_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__PsyNetMessage_X__Copy_0x1.__TAsyncResult__PsyNetMessage_X__Copy_0x1");
	}

	U__TAsyncResult__PsyNetMessage_X__Copy_0x1_exec__TAsyncResult__PsyNetMessage_X__Copy_0x1_Params __TAsyncResult__PsyNetMessage_X__Copy_0x1_Params;
	memcpy_s(&__TAsyncResult__PsyNetMessage_X__Copy_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__TAsyncResult__PsyNetMessage_X__Copy_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__PsyNetMessage_X__Copy_0x1, &__TAsyncResult__PsyNetMessage_X__Copy_0x1_Params, nullptr);
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.CreateResultError
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  InError                        (CPF_Parm)

class UTAsyncResult__PsyNetMessage_X* UTAsyncResult__PsyNetMessage_X::CreateResultError(class UError* InError)
{
	static UFunction* uFnCreateResultError = nullptr;

	if (!uFnCreateResultError)
	{
		uFnCreateResultError = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.CreateResultError");
	}

	UTAsyncResult__PsyNetMessage_X_execCreateResultError_Params CreateResultError_Params;
	memcpy_s(&CreateResultError_Params.InError, 0x8, &InError, 0x8);

	UTAsyncResult__PsyNetMessage_X::StaticClass()->ProcessEvent(uFnCreateResultError, &CreateResultError_Params, nullptr);

	return CreateResultError_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.CreateResult
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        InResult                       (CPF_Parm)

class UTAsyncResult__PsyNetMessage_X* UTAsyncResult__PsyNetMessage_X::CreateResult(class UPsyNetMessage_X* InResult)
{
	static UFunction* uFnCreateResult = nullptr;

	if (!uFnCreateResult)
	{
		uFnCreateResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.CreateResult");
	}

	UTAsyncResult__PsyNetMessage_X_execCreateResult_Params CreateResult_Params;
	memcpy_s(&CreateResult_Params.InResult, 0x8, &InResult, 0x8);

	UTAsyncResult__PsyNetMessage_X::StaticClass()->ProcessEvent(uFnCreateResult, &CreateResult_Params, nullptr);

	return CreateResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.Copy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__PsyNetMessage_X* UTAsyncResult__PsyNetMessage_X::Copy()
{
	static UFunction* uFnCopy = nullptr;

	if (!uFnCopy)
	{
		uFnCopy = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.Copy");
	}

	UTAsyncResult__PsyNetMessage_X_execCopy_Params Copy_Params;

	this->ProcessEvent(uFnCopy, &Copy_Params, nullptr);

	return Copy_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.ClearCallbacks
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UTAsyncResult__PsyNetMessage_X::eventClearCallbacks()
{
	static UFunction* uFnClearCallbacks = nullptr;

	if (!uFnClearCallbacks)
	{
		uFnClearCallbacks = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.ClearCallbacks");
	}

	UTAsyncResult__PsyNetMessage_X_eventClearCallbacks_Params ClearCallbacks_Params;

	this->ProcessEvent(uFnClearCallbacks, &ClearCallbacks_Params, nullptr);
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.SetResultWhen
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAsyncTask*              Other                          (CPF_Parm)
// struct FScriptDelegate         GetResultDelegate              (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__PsyNetMessage_X* UTAsyncResult__PsyNetMessage_X::eventSetResultWhen(class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate)
{
	static UFunction* uFnSetResultWhen = nullptr;

	if (!uFnSetResultWhen)
	{
		uFnSetResultWhen = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.SetResultWhen");
	}

	UTAsyncResult__PsyNetMessage_X_eventSetResultWhen_Params SetResultWhen_Params;
	memcpy_s(&SetResultWhen_Params.Other, 0x8, &Other, 0x8);
	memcpy_s(&SetResultWhen_Params.GetResultDelegate, 0x18, &GetResultDelegate, 0x18);

	this->ProcessEvent(uFnSetResultWhen, &SetResultWhen_Params, nullptr);

	return SetResultWhen_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.SetResult
// [0x00024803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPsyNetMessage_X*        InResult                       (CPF_Parm)
// class UError*                  InError                        (CPF_OptionalParm | CPF_Parm)

class UTAsyncResult__PsyNetMessage_X* UTAsyncResult__PsyNetMessage_X::eventSetResult(class UPsyNetMessage_X* InResult, class UError* InError)
{
	static UFunction* uFnSetResult = nullptr;

	if (!uFnSetResult)
	{
		uFnSetResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.SetResult");
	}

	UTAsyncResult__PsyNetMessage_X_eventSetResult_Params SetResult_Params;
	memcpy_s(&SetResult_Params.InResult, 0x8, &InResult, 0x8);
	memcpy_s(&SetResult_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnSetResult, &SetResult_Params, nullptr);

	return SetResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.NotifyOnResultComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__PsyNetMessage_X* UTAsyncResult__PsyNetMessage_X::NotifyOnResultComplete(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResultComplete = nullptr;

	if (!uFnNotifyOnResultComplete)
	{
		uFnNotifyOnResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.NotifyOnResultComplete");
	}

	UTAsyncResult__PsyNetMessage_X_execNotifyOnResultComplete_Params NotifyOnResultComplete_Params;
	memcpy_s(&NotifyOnResultComplete_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResultComplete, &NotifyOnResultComplete_Params, nullptr);

	return NotifyOnResultComplete_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.NotifyOnResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__PsyNetMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__PsyNetMessage_X* UTAsyncResult__PsyNetMessage_X::NotifyOnResult(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResult = nullptr;

	if (!uFnNotifyOnResult)
	{
		uFnNotifyOnResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.NotifyOnResult");
	}

	UTAsyncResult__PsyNetMessage_X_execNotifyOnResult_Params NotifyOnResult_Params;
	memcpy_s(&NotifyOnResult_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResult, &NotifyOnResult_Params, nullptr);

	return NotifyOnResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.ResultDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPsyNetMessage_X* UTAsyncResult__PsyNetMessage_X::ResultDelegate()
{
	static UFunction* uFnResultDelegate = nullptr;

	if (!uFnResultDelegate)
	{
		uFnResultDelegate = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.ResultDelegate");
	}

	UTAsyncResult__PsyNetMessage_X_execResultDelegate_Params ResultDelegate_Params;

	this->ProcessEvent(uFnResultDelegate, &ResultDelegate_Params, nullptr);

	return ResultDelegate_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.EventResultComplete
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        OutResult                      (CPF_Parm)
// class UError*                  OutError                       (CPF_Parm)

void UTAsyncResult__PsyNetMessage_X::EventResultComplete(class UPsyNetMessage_X* OutResult, class UError* OutError)
{
	static UFunction* uFnEventResultComplete = nullptr;

	if (!uFnEventResultComplete)
	{
		uFnEventResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.EventResultComplete");
	}

	UTAsyncResult__PsyNetMessage_X_execEventResultComplete_Params EventResultComplete_Params;
	memcpy_s(&EventResultComplete_Params.OutResult, 0x8, &OutResult, 0x8);
	memcpy_s(&EventResultComplete_Params.OutError, 0x8, &OutError, 0x8);

	this->ProcessEvent(uFnEventResultComplete, &EventResultComplete_Params, nullptr);
};

// Function ProjectX.TAsyncResult__PsyNetMessage_X.EventResult
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessage_X*        OutResult                      (CPF_Parm)

void UTAsyncResult__PsyNetMessage_X::EventResult(class UPsyNetMessage_X* OutResult)
{
	static UFunction* uFnEventResult = nullptr;

	if (!uFnEventResult)
	{
		uFnEventResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__PsyNetMessage_X.EventResult");
	}

	UTAsyncResult__PsyNetMessage_X_execEventResult_Params EventResult_Params;
	memcpy_s(&EventResult_Params.OutResult, 0x8, &OutResult, 0x8);

	this->ProcessEvent(uFnEventResult, &EventResult_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1.__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1::__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1()
{
	static UFunction* uFn__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1 = nullptr;

	if (!uFn__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1)
	{
		uFn__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1.__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1");
	}

	U__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1_exec__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1_Params __TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1, &__TAsyncResult__PsyNetMessage_X__NotifyOnResult_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1.__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Err                            (CPF_Parm)

void U__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1::__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1(class UError* Err)
{
	static UFunction* uFn__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1 = nullptr;

	if (!uFn__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1)
	{
		uFn__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1.__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1");
	}

	U__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1_exec__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1_Params __TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1_Params;
	memcpy_s(&__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1, &__TAsyncResult__PsyNetMessage_X__NotifyOnResultComplete_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1.__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1::__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1()
{
	static UFunction* uFn__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1 = nullptr;

	if (!uFn__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1)
	{
		uFn__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1.__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1");
	}

	U__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1_exec__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1_Params __TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1, &__TAsyncResult__PsyNetMessage_X__SetResultWhen_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__Texture2DDynamic__Copy_0x1.__TAsyncResult__Texture2DDynamic__Copy_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTexture2DDynamic*       R                              (CPF_Parm)
// class UError*                  E                              (CPF_Parm)

void U__TAsyncResult__Texture2DDynamic__Copy_0x1::__TAsyncResult__Texture2DDynamic__Copy_0x1(class UTexture2DDynamic* R, class UError* E)
{
	static UFunction* uFn__TAsyncResult__Texture2DDynamic__Copy_0x1 = nullptr;

	if (!uFn__TAsyncResult__Texture2DDynamic__Copy_0x1)
	{
		uFn__TAsyncResult__Texture2DDynamic__Copy_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__Texture2DDynamic__Copy_0x1.__TAsyncResult__Texture2DDynamic__Copy_0x1");
	}

	U__TAsyncResult__Texture2DDynamic__Copy_0x1_exec__TAsyncResult__Texture2DDynamic__Copy_0x1_Params __TAsyncResult__Texture2DDynamic__Copy_0x1_Params;
	memcpy_s(&__TAsyncResult__Texture2DDynamic__Copy_0x1_Params.R, 0x8, &R, 0x8);
	memcpy_s(&__TAsyncResult__Texture2DDynamic__Copy_0x1_Params.E, 0x8, &E, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__Texture2DDynamic__Copy_0x1, &__TAsyncResult__Texture2DDynamic__Copy_0x1_Params, nullptr);
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.CreateResultError
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UError*                  InError                        (CPF_Parm)

class UTAsyncResult__Texture2DDynamic* UTAsyncResult__Texture2DDynamic::CreateResultError(class UError* InError)
{
	static UFunction* uFnCreateResultError = nullptr;

	if (!uFnCreateResultError)
	{
		uFnCreateResultError = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.CreateResultError");
	}

	UTAsyncResult__Texture2DDynamic_execCreateResultError_Params CreateResultError_Params;
	memcpy_s(&CreateResultError_Params.InError, 0x8, &InError, 0x8);

	UTAsyncResult__Texture2DDynamic::StaticClass()->ProcessEvent(uFnCreateResultError, &CreateResultError_Params, nullptr);

	return CreateResultError_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.CreateResult
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UTexture2DDynamic*       InResult                       (CPF_Parm)

class UTAsyncResult__Texture2DDynamic* UTAsyncResult__Texture2DDynamic::CreateResult(class UTexture2DDynamic* InResult)
{
	static UFunction* uFnCreateResult = nullptr;

	if (!uFnCreateResult)
	{
		uFnCreateResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.CreateResult");
	}

	UTAsyncResult__Texture2DDynamic_execCreateResult_Params CreateResult_Params;
	memcpy_s(&CreateResult_Params.InResult, 0x8, &InResult, 0x8);

	UTAsyncResult__Texture2DDynamic::StaticClass()->ProcessEvent(uFnCreateResult, &CreateResult_Params, nullptr);

	return CreateResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.Copy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__Texture2DDynamic* UTAsyncResult__Texture2DDynamic::Copy()
{
	static UFunction* uFnCopy = nullptr;

	if (!uFnCopy)
	{
		uFnCopy = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.Copy");
	}

	UTAsyncResult__Texture2DDynamic_execCopy_Params Copy_Params;

	this->ProcessEvent(uFnCopy, &Copy_Params, nullptr);

	return Copy_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.ClearCallbacks
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UTAsyncResult__Texture2DDynamic::eventClearCallbacks()
{
	static UFunction* uFnClearCallbacks = nullptr;

	if (!uFnClearCallbacks)
	{
		uFnClearCallbacks = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.ClearCallbacks");
	}

	UTAsyncResult__Texture2DDynamic_eventClearCallbacks_Params ClearCallbacks_Params;

	this->ProcessEvent(uFnClearCallbacks, &ClearCallbacks_Params, nullptr);
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.SetResultWhen
// [0x00020803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UAsyncTask*              Other                          (CPF_Parm)
// struct FScriptDelegate         GetResultDelegate              (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__Texture2DDynamic* UTAsyncResult__Texture2DDynamic::eventSetResultWhen(class UAsyncTask* Other, struct FScriptDelegate GetResultDelegate)
{
	static UFunction* uFnSetResultWhen = nullptr;

	if (!uFnSetResultWhen)
	{
		uFnSetResultWhen = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.SetResultWhen");
	}

	UTAsyncResult__Texture2DDynamic_eventSetResultWhen_Params SetResultWhen_Params;
	memcpy_s(&SetResultWhen_Params.Other, 0x8, &Other, 0x8);
	memcpy_s(&SetResultWhen_Params.GetResultDelegate, 0x18, &GetResultDelegate, 0x18);

	this->ProcessEvent(uFnSetResultWhen, &SetResultWhen_Params, nullptr);

	return SetResultWhen_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.SetResult
// [0x00024803] (FUNC_Final | FUNC_RequiredAPI | FUNC_Event | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UTexture2DDynamic*       InResult                       (CPF_Parm)
// class UError*                  InError                        (CPF_OptionalParm | CPF_Parm)

class UTAsyncResult__Texture2DDynamic* UTAsyncResult__Texture2DDynamic::eventSetResult(class UTexture2DDynamic* InResult, class UError* InError)
{
	static UFunction* uFnSetResult = nullptr;

	if (!uFnSetResult)
	{
		uFnSetResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.SetResult");
	}

	UTAsyncResult__Texture2DDynamic_eventSetResult_Params SetResult_Params;
	memcpy_s(&SetResult_Params.InResult, 0x8, &InResult, 0x8);
	memcpy_s(&SetResult_Params.InError, 0x8, &InError, 0x8);

	this->ProcessEvent(uFnSetResult, &SetResult_Params, nullptr);

	return SetResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.NotifyOnResultComplete
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__Texture2DDynamic* UTAsyncResult__Texture2DDynamic::NotifyOnResultComplete(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResultComplete = nullptr;

	if (!uFnNotifyOnResultComplete)
	{
		uFnNotifyOnResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.NotifyOnResultComplete");
	}

	UTAsyncResult__Texture2DDynamic_execNotifyOnResultComplete_Params NotifyOnResultComplete_Params;
	memcpy_s(&NotifyOnResultComplete_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResultComplete, &NotifyOnResultComplete_Params, nullptr);

	return NotifyOnResultComplete_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.NotifyOnResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__Texture2DDynamic* UTAsyncResult__Texture2DDynamic::NotifyOnResult(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnResult = nullptr;

	if (!uFnNotifyOnResult)
	{
		uFnNotifyOnResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.NotifyOnResult");
	}

	UTAsyncResult__Texture2DDynamic_execNotifyOnResult_Params NotifyOnResult_Params;
	memcpy_s(&NotifyOnResult_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnResult, &NotifyOnResult_Params, nullptr);

	return NotifyOnResult_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.ResultDelegate
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UTexture2DDynamic*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTexture2DDynamic* UTAsyncResult__Texture2DDynamic::ResultDelegate()
{
	static UFunction* uFnResultDelegate = nullptr;

	if (!uFnResultDelegate)
	{
		uFnResultDelegate = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.ResultDelegate");
	}

	UTAsyncResult__Texture2DDynamic_execResultDelegate_Params ResultDelegate_Params;

	this->ProcessEvent(uFnResultDelegate, &ResultDelegate_Params, nullptr);

	return ResultDelegate_Params.ReturnValue;
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.EventResultComplete
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UTexture2DDynamic*       OutResult                      (CPF_Parm)
// class UError*                  OutError                       (CPF_Parm)

void UTAsyncResult__Texture2DDynamic::EventResultComplete(class UTexture2DDynamic* OutResult, class UError* OutError)
{
	static UFunction* uFnEventResultComplete = nullptr;

	if (!uFnEventResultComplete)
	{
		uFnEventResultComplete = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.EventResultComplete");
	}

	UTAsyncResult__Texture2DDynamic_execEventResultComplete_Params EventResultComplete_Params;
	memcpy_s(&EventResultComplete_Params.OutResult, 0x8, &OutResult, 0x8);
	memcpy_s(&EventResultComplete_Params.OutError, 0x8, &OutError, 0x8);

	this->ProcessEvent(uFnEventResultComplete, &EventResultComplete_Params, nullptr);
};

// Function ProjectX.TAsyncResult__Texture2DDynamic.EventResult
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UTexture2DDynamic*       OutResult                      (CPF_Parm)

void UTAsyncResult__Texture2DDynamic::EventResult(class UTexture2DDynamic* OutResult)
{
	static UFunction* uFnEventResult = nullptr;

	if (!uFnEventResult)
	{
		uFnEventResult = UFunction::FindFunction("Function ProjectX.TAsyncResult__Texture2DDynamic.EventResult");
	}

	UTAsyncResult__Texture2DDynamic_execEventResult_Params EventResult_Params;
	memcpy_s(&EventResult_Params.OutResult, 0x8, &OutResult, 0x8);

	this->ProcessEvent(uFnEventResult, &EventResult_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1.__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1::__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1()
{
	static UFunction* uFn__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1 = nullptr;

	if (!uFn__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1)
	{
		uFn__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1.__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1");
	}

	U__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1_exec__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1_Params __TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1, &__TAsyncResult__Texture2DDynamic__NotifyOnResult_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1.__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Err                            (CPF_Parm)

void U__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1::__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1(class UError* Err)
{
	static UFunction* uFn__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1 = nullptr;

	if (!uFn__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1)
	{
		uFn__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1.__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1");
	}

	U__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1_exec__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1_Params __TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1_Params;
	memcpy_s(&__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1_Params.Err, 0x8, &Err, 0x8);

	this->ProcessEvent(uFn__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1, &__TAsyncResult__Texture2DDynamic__NotifyOnResultComplete_0x1_Params, nullptr);
};

// Function ProjectX.__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1.__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void U__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1::__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1()
{
	static UFunction* uFn__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1 = nullptr;

	if (!uFn__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1)
	{
		uFn__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1 = UFunction::FindFunction("Function ProjectX.__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1.__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1");
	}

	U__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1_exec__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1_Params __TAsyncResult__Texture2DDynamic__SetResultWhen_0x1_Params;

	this->ProcessEvent(uFn__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1, &__TAsyncResult__Texture2DDynamic__SetResultWhen_0x1_Params, nullptr);
};

// Function ProjectX.__WebCache_X__DownloadData_0x1.__WebCache_X__DownloadData_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Key                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

void U__WebCache_X__DownloadData_0x1::__WebCache_X__DownloadData_0x1(class FString Key, class FString Value)
{
	static UFunction* uFn__WebCache_X__DownloadData_0x1 = nullptr;

	if (!uFn__WebCache_X__DownloadData_0x1)
	{
		uFn__WebCache_X__DownloadData_0x1 = UFunction::FindFunction("Function ProjectX.__WebCache_X__DownloadData_0x1.__WebCache_X__DownloadData_0x1");
	}

	U__WebCache_X__DownloadData_0x1_exec__WebCache_X__DownloadData_0x1_Params __WebCache_X__DownloadData_0x1_Params;
	memcpy_s(&__WebCache_X__DownloadData_0x1_Params.Key, 0x10, &Key, 0x10);
	memcpy_s(&__WebCache_X__DownloadData_0x1_Params.Value, 0x10, &Value, 0x10);

	this->ProcessEvent(uFn__WebCache_X__DownloadData_0x1, &__WebCache_X__DownloadData_0x1_Params, nullptr);
};

// Function ProjectX.WebCache_X.GetRequestDebugString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FCachedDataRequest      Request                        (CPF_Parm | CPF_NeedCtorLink)

class FString UWebCache_X::GetRequestDebugString(struct FCachedDataRequest Request)
{
	static UFunction* uFnGetRequestDebugString = nullptr;

	if (!uFnGetRequestDebugString)
	{
		uFnGetRequestDebugString = UFunction::FindFunction("Function ProjectX.WebCache_X.GetRequestDebugString");
	}

	UWebCache_X_execGetRequestDebugString_Params GetRequestDebugString_Params;
	memcpy_s(&GetRequestDebugString_Params.Request, 0x50, &Request, 0x50);

	this->ProcessEvent(uFnGetRequestDebugString, &GetRequestDebugString_Params, nullptr);

	return GetRequestDebugString_Params.ReturnValue;
};

// Function ProjectX.WebCache_X.HandleWebRequest
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           WebRequest                     (CPF_Parm)

void UWebCache_X::HandleWebRequest(class UWebRequest_X* WebRequest)
{
	static UFunction* uFnHandleWebRequest = nullptr;

	if (!uFnHandleWebRequest)
	{
		uFnHandleWebRequest = UFunction::FindFunction("Function ProjectX.WebCache_X.HandleWebRequest");
	}

	UWebCache_X_execHandleWebRequest_Params HandleWebRequest_Params;
	memcpy_s(&HandleWebRequest_Params.WebRequest, 0x8, &WebRequest, 0x8);

	this->ProcessEvent(uFnHandleWebRequest, &HandleWebRequest_Params, nullptr);
};

// Function ProjectX.WebCache_X.DownloadData
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ETag                           (CPF_Parm | CPF_NeedCtorLink)
// class UStringMap*              Headers                        (CPF_Parm | CPF_EditInline)
// unsigned long                  bZipResponse                   (CPF_Parm)

void UWebCache_X::DownloadData(class FString URL, class FString ETag, class UStringMap* Headers, unsigned long bZipResponse)
{
	static UFunction* uFnDownloadData = nullptr;

	if (!uFnDownloadData)
	{
		uFnDownloadData = UFunction::FindFunction("Function ProjectX.WebCache_X.DownloadData");
	}

	UWebCache_X_execDownloadData_Params DownloadData_Params;
	memcpy_s(&DownloadData_Params.URL, 0x10, &URL, 0x10);
	memcpy_s(&DownloadData_Params.ETag, 0x10, &ETag, 0x10);
	memcpy_s(&DownloadData_Params.Headers, 0x8, &Headers, 0x8);
	DownloadData_Params.bZipResponse = bZipResponse;

	this->ProcessEvent(uFnDownloadData, &DownloadData_Params, nullptr);
};

// Function ProjectX.WebCache_X.HandleLoadFromCache
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class ULocalCache_X*           Cache                          (CPF_Parm)
// class UCachedWebData_X*        CacheObject                    (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UWebCache_X::HandleLoadFromCache(class ULocalCache_X* Cache, class UCachedWebData_X* CacheObject, class UError* Error)
{
	static UFunction* uFnHandleLoadFromCache = nullptr;

	if (!uFnHandleLoadFromCache)
	{
		uFnHandleLoadFromCache = UFunction::FindFunction("Function ProjectX.WebCache_X.HandleLoadFromCache");
	}

	UWebCache_X_execHandleLoadFromCache_Params HandleLoadFromCache_Params;
	memcpy_s(&HandleLoadFromCache_Params.Cache, 0x8, &Cache, 0x8);
	memcpy_s(&HandleLoadFromCache_Params.CacheObject, 0x8, &CacheObject, 0x8);
	memcpy_s(&HandleLoadFromCache_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleLoadFromCache, &HandleLoadFromCache_Params, nullptr);
};

// Function ProjectX.WebCache_X.RaiseUrlEmptyError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UWebCache_X::RaiseUrlEmptyError(struct FScriptDelegate Callback)
{
	static UFunction* uFnRaiseUrlEmptyError = nullptr;

	if (!uFnRaiseUrlEmptyError)
	{
		uFnRaiseUrlEmptyError = UFunction::FindFunction("Function ProjectX.WebCache_X.RaiseUrlEmptyError");
	}

	UWebCache_X_execRaiseUrlEmptyError_Params RaiseUrlEmptyError_Params;
	memcpy_s(&RaiseUrlEmptyError_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnRaiseUrlEmptyError, &RaiseUrlEmptyError_Params, nullptr);
};

// Function ProjectX.WebCache_X.SyncDataInternal
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bZipResponse                   (CPF_Parm)
// class UStringMap*              Headers                        (CPF_Parm | CPF_EditInline)

void UWebCache_X::SyncDataInternal(class FString URL, struct FScriptDelegate Callback, unsigned long bZipResponse, class UStringMap* Headers)
{
	static UFunction* uFnSyncDataInternal = nullptr;

	if (!uFnSyncDataInternal)
	{
		uFnSyncDataInternal = UFunction::FindFunction("Function ProjectX.WebCache_X.SyncDataInternal");
	}

	UWebCache_X_execSyncDataInternal_Params SyncDataInternal_Params;
	memcpy_s(&SyncDataInternal_Params.URL, 0x10, &URL, 0x10);
	memcpy_s(&SyncDataInternal_Params.Callback, 0x18, &Callback, 0x18);
	SyncDataInternal_Params.bZipResponse = bZipResponse;
	memcpy_s(&SyncDataInternal_Params.Headers, 0x8, &Headers, 0x8);

	this->ProcessEvent(uFnSyncDataInternal, &SyncDataInternal_Params, nullptr);
};

// Function ProjectX.WebCache_X.SyncDataZipped
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// class UStringMap*              Headers                        (CPF_OptionalParm | CPF_Parm | CPF_EditInline)

void UWebCache_X::SyncDataZipped(class FString URL, struct FScriptDelegate Callback, class UStringMap* Headers)
{
	static UFunction* uFnSyncDataZipped = nullptr;

	if (!uFnSyncDataZipped)
	{
		uFnSyncDataZipped = UFunction::FindFunction("Function ProjectX.WebCache_X.SyncDataZipped");
	}

	UWebCache_X_execSyncDataZipped_Params SyncDataZipped_Params;
	memcpy_s(&SyncDataZipped_Params.URL, 0x10, &URL, 0x10);
	memcpy_s(&SyncDataZipped_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&SyncDataZipped_Params.Headers, 0x8, &Headers, 0x8);

	this->ProcessEvent(uFnSyncDataZipped, &SyncDataZipped_Params, nullptr);
};

// Function ProjectX.WebCache_X.SyncData
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// class UStringMap*              Headers                        (CPF_OptionalParm | CPF_Parm | CPF_EditInline)

void UWebCache_X::SyncData(class FString URL, struct FScriptDelegate Callback, class UStringMap* Headers)
{
	static UFunction* uFnSyncData = nullptr;

	if (!uFnSyncData)
	{
		uFnSyncData = UFunction::FindFunction("Function ProjectX.WebCache_X.SyncData");
	}

	UWebCache_X_execSyncData_Params SyncData_Params;
	memcpy_s(&SyncData_Params.URL, 0x10, &URL, 0x10);
	memcpy_s(&SyncData_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&SyncData_Params.Headers, 0x8, &Headers, 0x8);

	this->ProcessEvent(uFnSyncData, &SyncData_Params, nullptr);
};

// Function ProjectX.WebCache_X.ClearCache
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

void UWebCache_X::ClearCache(class FString URL)
{
	static UFunction* uFnClearCache = nullptr;

	if (!uFnClearCache)
	{
		uFnClearCache = UFunction::FindFunction("Function ProjectX.WebCache_X.ClearCache");
	}

	UWebCache_X_execClearCache_Params ClearCache_Params;
	memcpy_s(&ClearCache_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnClearCache, &ClearCache_Params, nullptr);
};

// Function ProjectX.WebCache_X.GetCachedPath
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

class FString UWebCache_X::GetCachedPath(class FString URL)
{
	static UFunction* uFnGetCachedPath = nullptr;

	if (!uFnGetCachedPath)
	{
		uFnGetCachedPath = UFunction::FindFunction("Function ProjectX.WebCache_X.GetCachedPath");
	}

	UWebCache_X_execGetCachedPath_Params GetCachedPath_Params;
	memcpy_s(&GetCachedPath_Params.URL, 0x10, &URL, 0x10);

	UWebCache_X::StaticClass()->ProcessEvent(uFnGetCachedPath, &GetCachedPath_Params, nullptr);

	return GetCachedPath_Params.ReturnValue;
};

// Function ProjectX.WebCache_X.CachedDataCallback
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UCachedWebData_X*        CachedData                     (CPF_Parm)

void UWebCache_X::CachedDataCallback(class UCachedWebData_X* CachedData)
{
	static UFunction* uFnCachedDataCallback = nullptr;

	if (!uFnCachedDataCallback)
	{
		uFnCachedDataCallback = UFunction::FindFunction("Function ProjectX.WebCache_X.CachedDataCallback");
	}

	UWebCache_X_execCachedDataCallback_Params CachedDataCallback_Params;
	memcpy_s(&CachedDataCallback_Params.CachedData, 0x8, &CachedData, 0x8);

	this->ProcessEvent(uFnCachedDataCallback, &CachedDataCallback_Params, nullptr);
};

// Function ProjectX.__WebImageCache_X__HandleImageData_0x1.__WebImageCache_X__HandleImageData_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  _                              (CPF_Parm | CPF_NeedCtorLink)
// struct FImageLayout            Image                          (CPF_Parm | CPF_NeedCtorLink)

void U__WebImageCache_X__HandleImageData_0x1::__WebImageCache_X__HandleImageData_0x1(class FString _, struct FImageLayout Image)
{
	static UFunction* uFn__WebImageCache_X__HandleImageData_0x1 = nullptr;

	if (!uFn__WebImageCache_X__HandleImageData_0x1)
	{
		uFn__WebImageCache_X__HandleImageData_0x1 = UFunction::FindFunction("Function ProjectX.__WebImageCache_X__HandleImageData_0x1.__WebImageCache_X__HandleImageData_0x1");
	}

	U__WebImageCache_X__HandleImageData_0x1_exec__WebImageCache_X__HandleImageData_0x1_Params __WebImageCache_X__HandleImageData_0x1_Params;
	memcpy_s(&__WebImageCache_X__HandleImageData_0x1_Params._, 0x10, &_, 0x10);
	memcpy_s(&__WebImageCache_X__HandleImageData_0x1_Params.Image, 0x18, &Image, 0x18);

	this->ProcessEvent(uFn__WebImageCache_X__HandleImageData_0x1, &__WebImageCache_X__HandleImageData_0x1_Params, nullptr);
};

// Function ProjectX.WebImageCache_X.SyncImageURL
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UWebImageCache_X::SyncImageURL(class FString URL, struct FScriptDelegate Callback)
{
	static UFunction* uFnSyncImageURL = nullptr;

	if (!uFnSyncImageURL)
	{
		uFnSyncImageURL = UFunction::FindFunction("Function ProjectX.WebImageCache_X.SyncImageURL");
	}

	UWebImageCache_X_execSyncImageURL_Params SyncImageURL_Params;
	memcpy_s(&SyncImageURL_Params.URL, 0x10, &URL, 0x10);
	memcpy_s(&SyncImageURL_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSyncImageURL, &SyncImageURL_Params, nullptr);
};

// Function ProjectX.WebImageCache_X.HandleImageDecoded
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UWebImageDownload_X*     Download                       (CPF_Parm)
// struct FImageLayout            Image                          (CPF_Parm | CPF_NeedCtorLink)

void UWebImageCache_X::HandleImageDecoded(class UWebImageDownload_X* Download, struct FImageLayout Image)
{
	static UFunction* uFnHandleImageDecoded = nullptr;

	if (!uFnHandleImageDecoded)
	{
		uFnHandleImageDecoded = UFunction::FindFunction("Function ProjectX.WebImageCache_X.HandleImageDecoded");
	}

	UWebImageCache_X_execHandleImageDecoded_Params HandleImageDecoded_Params;
	memcpy_s(&HandleImageDecoded_Params.Download, 0x8, &Download, 0x8);
	memcpy_s(&HandleImageDecoded_Params.Image, 0x18, &Image, 0x18);

	this->ProcessEvent(uFnHandleImageDecoded, &HandleImageDecoded_Params, nullptr);
};

// Function ProjectX.WebImageCache_X.SetDownloadError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UWebImageDownload_X*     Download                       (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UWebImageCache_X::SetDownloadError(class UWebImageDownload_X* Download, class UError* Error)
{
	static UFunction* uFnSetDownloadError = nullptr;

	if (!uFnSetDownloadError)
	{
		uFnSetDownloadError = UFunction::FindFunction("Function ProjectX.WebImageCache_X.SetDownloadError");
	}

	UWebImageCache_X_execSetDownloadError_Params SetDownloadError_Params;
	memcpy_s(&SetDownloadError_Params.Download, 0x8, &Download, 0x8);
	memcpy_s(&SetDownloadError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnSetDownloadError, &SetDownloadError_Params, nullptr);
};

// Function ProjectX.WebImageCache_X.HandleImageData
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UWebImageDownload_X*     Download                       (CPF_Parm)
// class UCachedWebData_X*        Data                           (CPF_Parm)

void UWebImageCache_X::HandleImageData(class UWebImageDownload_X* Download, class UCachedWebData_X* Data)
{
	static UFunction* uFnHandleImageData = nullptr;

	if (!uFnHandleImageData)
	{
		uFnHandleImageData = UFunction::FindFunction("Function ProjectX.WebImageCache_X.HandleImageData");
	}

	UWebImageCache_X_execHandleImageData_Params HandleImageData_Params;
	memcpy_s(&HandleImageData_Params.Download, 0x8, &Download, 0x8);
	memcpy_s(&HandleImageData_Params.Data, 0x8, &Data, 0x8);

	this->ProcessEvent(uFnHandleImageData, &HandleImageData_Params, nullptr);
};

// Function ProjectX.WebImageCache_X.StartSync
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UWebImageDownload_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

class UWebImageDownload_X* UWebImageCache_X::StartSync(class FString URL)
{
	static UFunction* uFnStartSync = nullptr;

	if (!uFnStartSync)
	{
		uFnStartSync = UFunction::FindFunction("Function ProjectX.WebImageCache_X.StartSync");
	}

	UWebImageCache_X_execStartSync_Params StartSync_Params;
	memcpy_s(&StartSync_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnStartSync, &StartSync_Params, nullptr);

	return StartSync_Params.ReturnValue;
};

// Function ProjectX.WebImageCache_X.HandleUncachedImageDownload
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* Task                           (CPF_Parm)
// class UTexture2DDynamic*       Texture                        (CPF_Parm)

void UWebImageCache_X::HandleUncachedImageDownload(class UTAsyncResult__Texture2DDynamic* Task, class UTexture2DDynamic* Texture)
{
	static UFunction* uFnHandleUncachedImageDownload = nullptr;

	if (!uFnHandleUncachedImageDownload)
	{
		uFnHandleUncachedImageDownload = UFunction::FindFunction("Function ProjectX.WebImageCache_X.HandleUncachedImageDownload");
	}

	UWebImageCache_X_execHandleUncachedImageDownload_Params HandleUncachedImageDownload_Params;
	memcpy_s(&HandleUncachedImageDownload_Params.Task, 0x8, &Task, 0x8);
	memcpy_s(&HandleUncachedImageDownload_Params.Texture, 0x8, &Texture, 0x8);

	this->ProcessEvent(uFnHandleUncachedImageDownload, &HandleUncachedImageDownload_Params, nullptr);
};

// Function ProjectX.WebImageCache_X.SyncUncachedImage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bSRGB                          (CPF_Parm)

class UTAsyncResult__Texture2DDynamic* UWebImageCache_X::SyncUncachedImage(class FString URL, unsigned long bSRGB)
{
	static UFunction* uFnSyncUncachedImage = nullptr;

	if (!uFnSyncUncachedImage)
	{
		uFnSyncUncachedImage = UFunction::FindFunction("Function ProjectX.WebImageCache_X.SyncUncachedImage");
	}

	UWebImageCache_X_execSyncUncachedImage_Params SyncUncachedImage_Params;
	memcpy_s(&SyncUncachedImage_Params.URL, 0x10, &URL, 0x10);
	SyncUncachedImage_Params.bSRGB = bSRGB;

	this->ProcessEvent(uFnSyncUncachedImage, &SyncUncachedImage_Params, nullptr);

	return SyncUncachedImage_Params.ReturnValue;
};

// Function ProjectX.WebImageCache_X.GetDownload
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UWebImageDownload_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

class UWebImageDownload_X* UWebImageCache_X::GetDownload(class FString URL)
{
	static UFunction* uFnGetDownload = nullptr;

	if (!uFnGetDownload)
	{
		uFnGetDownload = UFunction::FindFunction("Function ProjectX.WebImageCache_X.GetDownload");
	}

	UWebImageCache_X_execGetDownload_Params GetDownload_Params;
	memcpy_s(&GetDownload_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnGetDownload, &GetDownload_Params, nullptr);

	return GetDownload_Params.ReturnValue;
};

// Function ProjectX.WebImageCache_X.SyncImageSRGB
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__Texture2DDynamic* UWebImageCache_X::SyncImageSRGB(class FString URL)
{
	static UFunction* uFnSyncImageSRGB = nullptr;

	if (!uFnSyncImageSRGB)
	{
		uFnSyncImageSRGB = UFunction::FindFunction("Function ProjectX.WebImageCache_X.SyncImageSRGB");
	}

	UWebImageCache_X_execSyncImageSRGB_Params SyncImageSRGB_Params;
	memcpy_s(&SyncImageSRGB_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnSyncImageSRGB, &SyncImageSRGB_Params, nullptr);

	return SyncImageSRGB_Params.ReturnValue;
};

// Function ProjectX.WebImageCache_X.SyncImage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__Texture2DDynamic* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

class UTAsyncResult__Texture2DDynamic* UWebImageCache_X::SyncImage(class FString URL)
{
	static UFunction* uFnSyncImage = nullptr;

	if (!uFnSyncImage)
	{
		uFnSyncImage = UFunction::FindFunction("Function ProjectX.WebImageCache_X.SyncImage");
	}

	UWebImageCache_X_execSyncImage_Params SyncImage_Params;
	memcpy_s(&SyncImage_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnSyncImage, &SyncImage_Params, nullptr);

	return SyncImage_Params.ReturnValue;
};

// Function ProjectX.WebImageCache_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UWebImageCache_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.WebImageCache_X.Construct");
	}

	UWebImageCache_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.WebImageCache_X.ImageSyncCallback
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UTexture2DDynamic*       Texture                        (CPF_Parm)

void UWebImageCache_X::ImageSyncCallback(class UTexture2DDynamic* Texture)
{
	static UFunction* uFnImageSyncCallback = nullptr;

	if (!uFnImageSyncCallback)
	{
		uFnImageSyncCallback = UFunction::FindFunction("Function ProjectX.WebImageCache_X.ImageSyncCallback");
	}

	UWebImageCache_X_execImageSyncCallback_Params ImageSyncCallback_Params;
	memcpy_s(&ImageSyncCallback_Params.Texture, 0x8, &Texture, 0x8);

	this->ProcessEvent(uFnImageSyncCallback, &ImageSyncCallback_Params, nullptr);
};

// Function ProjectX.__WebImageCache_X__StartSync_0x1.__WebImageCache_X__StartSync_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCachedWebData_X*        Data                           (CPF_Parm)

void U__WebImageCache_X__StartSync_0x1::__WebImageCache_X__StartSync_0x1(class UCachedWebData_X* Data)
{
	static UFunction* uFn__WebImageCache_X__StartSync_0x1 = nullptr;

	if (!uFn__WebImageCache_X__StartSync_0x1)
	{
		uFn__WebImageCache_X__StartSync_0x1 = UFunction::FindFunction("Function ProjectX.__WebImageCache_X__StartSync_0x1.__WebImageCache_X__StartSync_0x1");
	}

	U__WebImageCache_X__StartSync_0x1_exec__WebImageCache_X__StartSync_0x1_Params __WebImageCache_X__StartSync_0x1_Params;
	memcpy_s(&__WebImageCache_X__StartSync_0x1_Params.Data, 0x8, &Data, 0x8);

	this->ProcessEvent(uFn__WebImageCache_X__StartSync_0x1, &__WebImageCache_X__StartSync_0x1_Params, nullptr);
};

// Function ProjectX.__WebImageCache_X__SyncUncachedImage_0x1.__WebImageCache_X__SyncUncachedImage_0x1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FOnlineImageDownload    ImageInfo                      (CPF_Parm | CPF_NeedCtorLink)

void U__WebImageCache_X__SyncUncachedImage_0x1::__WebImageCache_X__SyncUncachedImage_0x1(struct FOnlineImageDownload ImageInfo)
{
	static UFunction* uFn__WebImageCache_X__SyncUncachedImage_0x1 = nullptr;

	if (!uFn__WebImageCache_X__SyncUncachedImage_0x1)
	{
		uFn__WebImageCache_X__SyncUncachedImage_0x1 = UFunction::FindFunction("Function ProjectX.__WebImageCache_X__SyncUncachedImage_0x1.__WebImageCache_X__SyncUncachedImage_0x1");
	}

	U__WebImageCache_X__SyncUncachedImage_0x1_exec__WebImageCache_X__SyncUncachedImage_0x1_Params __WebImageCache_X__SyncUncachedImage_0x1_Params;
	memcpy_s(&__WebImageCache_X__SyncUncachedImage_0x1_Params.ImageInfo, 0x40, &ImageInfo, 0x40);

	this->ProcessEvent(uFn__WebImageCache_X__SyncUncachedImage_0x1, &__WebImageCache_X__SyncUncachedImage_0x1_Params, nullptr);
};

// Function ProjectX.ActionQueue_X.Tick
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UActionQueue_X::Tick()
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.ActionQueue_X.Tick");
	}

	UActionQueue_X_execTick_Params Tick_Params;

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.ActionQueue_X.Add
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UActionQueue_X::Add(struct FScriptDelegate Callback)
{
	static UFunction* uFnAdd = nullptr;

	if (!uFnAdd)
	{
		uFnAdd = UFunction::FindFunction("Function ProjectX.ActionQueue_X.Add");
	}

	UActionQueue_X_execAdd_Params Add_Params;
	memcpy_s(&Add_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnAdd, &Add_Params, nullptr);
};

// Function ProjectX.ActionQueue_X.ActionDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UActionQueue_X::ActionDelegate()
{
	static UFunction* uFnActionDelegate = nullptr;

	if (!uFnActionDelegate)
	{
		uFnActionDelegate = UFunction::FindFunction("Function ProjectX.ActionQueue_X.ActionDelegate");
	}

	UActionQueue_X_execActionDelegate_Params ActionDelegate_Params;

	this->ProcessEvent(uFnActionDelegate, &ActionDelegate_Params, nullptr);
};

// Function ProjectX.ActivateAnimSeriesComponent_X.SetAnimSeriesActiveInComponent
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class USkeletalMeshComponent*  SKC                            (CPF_Parm | CPF_EditInline)
// unsigned long                  bActive                        (CPF_Parm)

void UActivateAnimSeriesComponent_X::SetAnimSeriesActiveInComponent(class USkeletalMeshComponent* SKC, unsigned long bActive)
{
	static UFunction* uFnSetAnimSeriesActiveInComponent = nullptr;

	if (!uFnSetAnimSeriesActiveInComponent)
	{
		uFnSetAnimSeriesActiveInComponent = UFunction::FindFunction("Function ProjectX.ActivateAnimSeriesComponent_X.SetAnimSeriesActiveInComponent");
	}

	UActivateAnimSeriesComponent_X_execSetAnimSeriesActiveInComponent_Params SetAnimSeriesActiveInComponent_Params;
	memcpy_s(&SetAnimSeriesActiveInComponent_Params.SKC, 0x8, &SKC, 0x8);
	SetAnimSeriesActiveInComponent_Params.bActive = bActive;

	this->ProcessEvent(uFnSetAnimSeriesActiveInComponent, &SetAnimSeriesActiveInComponent_Params, nullptr);
};

// Function ProjectX.ActivateAnimSeriesComponent_X.SetAnimSeriesActive
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bActive                        (CPF_Parm)

void UActivateAnimSeriesComponent_X::SetAnimSeriesActive(unsigned long bActive)
{
	static UFunction* uFnSetAnimSeriesActive = nullptr;

	if (!uFnSetAnimSeriesActive)
	{
		uFnSetAnimSeriesActive = UFunction::FindFunction("Function ProjectX.ActivateAnimSeriesComponent_X.SetAnimSeriesActive");
	}

	UActivateAnimSeriesComponent_X_execSetAnimSeriesActive_Params SetAnimSeriesActive_Params;
	SetAnimSeriesActive_Params.bActive = bActive;

	this->ProcessEvent(uFnSetAnimSeriesActive, &SetAnimSeriesActive_Params, nullptr);
};

// Function ProjectX.ActivateAnimSeriesComponent_X.Detached
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UActivateAnimSeriesComponent_X::eventDetached()
{
	static UFunction* uFnDetached = nullptr;

	if (!uFnDetached)
	{
		uFnDetached = UFunction::FindFunction("Function ProjectX.ActivateAnimSeriesComponent_X.Detached");
	}

	UActivateAnimSeriesComponent_X_eventDetached_Params Detached_Params;

	this->ProcessEvent(uFnDetached, &Detached_Params, nullptr);
};

// Function ProjectX.ActivateAnimSeriesComponent_X.Attached
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UActivateAnimSeriesComponent_X::eventAttached()
{
	static UFunction* uFnAttached = nullptr;

	if (!uFnAttached)
	{
		uFnAttached = UFunction::FindFunction("Function ProjectX.ActivateAnimSeriesComponent_X.Attached");
	}

	UActivateAnimSeriesComponent_X_eventAttached_Params Attached_Params;

	this->ProcessEvent(uFnAttached, &Attached_Params, nullptr);
};

// Function ProjectX.AddReservationMessagePrivate_X.GetDebugString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UAddReservationMessagePrivate_X::GetDebugString()
{
	static UFunction* uFnGetDebugString = nullptr;

	if (!uFnGetDebugString)
	{
		uFnGetDebugString = UFunction::FindFunction("Function ProjectX.AddReservationMessagePrivate_X.GetDebugString");
	}

	UAddReservationMessagePrivate_X_execGetDebugString_Params GetDebugString_Params;

	this->ProcessEvent(uFnGetDebugString, &GetDebugString_Params, nullptr);

	return GetDebugString_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessagePrivate_X.SetSettings
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessagePrivate_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FCustomMatchSettings    InSettings                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UAddReservationMessagePrivate_X* UAddReservationMessagePrivate_X::SetSettings(struct FCustomMatchSettings& InSettings)
{
	static UFunction* uFnSetSettings = nullptr;

	if (!uFnSetSettings)
	{
		uFnSetSettings = UFunction::FindFunction("Function ProjectX.AddReservationMessagePrivate_X.SetSettings");
	}

	UAddReservationMessagePrivate_X_execSetSettings_Params SetSettings_Params;
	memcpy_s(&SetSettings_Params.InSettings, 0x90, &InSettings, 0x90);

	this->ProcessEvent(uFnSetSettings, &SetSettings_Params, nullptr);

	memcpy_s(&InSettings, 0x90, &SetSettings_Params.InSettings, 0x90);

	return SetSettings_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessagePublic_X.AddPlayers
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAddReservationMessage_X* UAddReservationMessagePublic_X::AddPlayers()
{
	static UFunction* uFnAddPlayers = nullptr;

	if (!uFnAddPlayers)
	{
		uFnAddPlayers = UFunction::FindFunction("Function ProjectX.AddReservationMessagePublic_X.AddPlayers");
	}

	UAddReservationMessagePublic_X_execAddPlayers_Params AddPlayers_Params;

	this->ProcessEvent(uFnAddPlayers, &AddPlayers_Params, nullptr);

	return AddPlayers_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessagePublic_X.SetPlayerPref
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UGameSettingPlaylist_X*  Playlist                       (CPF_Parm)
// class UOnlinePlayer_X*         OnlinePlayer                   (CPF_Parm)

void UAddReservationMessagePublic_X::SetPlayerPref(class UGameSettingPlaylist_X* Playlist, class UOnlinePlayer_X* OnlinePlayer)
{
	static UFunction* uFnSetPlayerPref = nullptr;

	if (!uFnSetPlayerPref)
	{
		uFnSetPlayerPref = UFunction::FindFunction("Function ProjectX.AddReservationMessagePublic_X.SetPlayerPref");
	}

	UAddReservationMessagePublic_X_execSetPlayerPref_Params SetPlayerPref_Params;
	memcpy_s(&SetPlayerPref_Params.Playlist, 0x8, &Playlist, 0x8);
	memcpy_s(&SetPlayerPref_Params.OnlinePlayer, 0x8, &OnlinePlayer, 0x8);

	this->ProcessEvent(uFnSetPlayerPref, &SetPlayerPref_Params, nullptr);
};

// Function ProjectX.AddReservationMessagePublic_X.GetPlayerMapPrefs
// [0x400420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FName>           Likes                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// TArray<struct FName>           Dislikes                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UAddReservationMessagePublic_X::GetPlayerMapPrefs(struct FUniqueNetId PlayerID, TArray<struct FName>& Likes, TArray<struct FName>& Dislikes)
{
	static UFunction* uFnGetPlayerMapPrefs = nullptr;

	if (!uFnGetPlayerMapPrefs)
	{
		uFnGetPlayerMapPrefs = UFunction::FindFunction("Function ProjectX.AddReservationMessagePublic_X.GetPlayerMapPrefs");
	}

	UAddReservationMessagePublic_X_execGetPlayerMapPrefs_Params GetPlayerMapPrefs_Params;
	memcpy_s(&GetPlayerMapPrefs_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&GetPlayerMapPrefs_Params.Likes, 0x10, &Likes, 0x10);
	memcpy_s(&GetPlayerMapPrefs_Params.Dislikes, 0x10, &Dislikes, 0x10);

	this->ProcessEvent(uFnGetPlayerMapPrefs, &GetPlayerMapPrefs_Params, nullptr);

	memcpy_s(&Likes, 0x10, &GetPlayerMapPrefs_Params.Likes, 0x10);
	memcpy_s(&Dislikes, 0x10, &GetPlayerMapPrefs_Params.Dislikes, 0x10);
};

// Function ProjectX.AddReservationMessagePublic_X.AddPlayer
// [0x400820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bRemotePlayer                  (CPF_Parm)

class UAddReservationMessage_X* UAddReservationMessagePublic_X::AddPlayer(struct FUniqueNetId PlayerID, class FString PlayerName, unsigned long bRemotePlayer)
{
	static UFunction* uFnAddPlayer = nullptr;

	if (!uFnAddPlayer)
	{
		uFnAddPlayer = UFunction::FindFunction("Function ProjectX.AddReservationMessagePublic_X.AddPlayer");
	}

	UAddReservationMessagePublic_X_execAddPlayer_Params AddPlayer_Params;
	memcpy_s(&AddPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AddPlayer_Params.PlayerName, 0x10, &PlayerName, 0x10);
	AddPlayer_Params.bRemotePlayer = bRemotePlayer;

	this->ProcessEvent(uFnAddPlayer, &AddPlayer_Params, nullptr);

	return AddPlayer_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessagePublic_X.GetDebugString
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UAddReservationMessagePublic_X::GetDebugString()
{
	static UFunction* uFnGetDebugString = nullptr;

	if (!uFnGetDebugString)
	{
		uFnGetDebugString = UFunction::FindFunction("Function ProjectX.AddReservationMessagePublic_X.GetDebugString");
	}

	UAddReservationMessagePublic_X_execGetDebugString_Params GetDebugString_Params;

	this->ProcessEvent(uFnGetDebugString, &GetDebugString_Params, nullptr);

	return GetDebugString_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessagePublic_X.GetPlayerDebugString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FReservationPlayerData  Player                         (CPF_Parm | CPF_NeedCtorLink)

class FString UAddReservationMessagePublic_X::GetPlayerDebugString(struct FReservationPlayerData Player)
{
	static UFunction* uFnGetPlayerDebugString = nullptr;

	if (!uFnGetPlayerDebugString)
	{
		uFnGetPlayerDebugString = UFunction::FindFunction("Function ProjectX.AddReservationMessagePublic_X.GetPlayerDebugString");
	}

	UAddReservationMessagePublic_X_execGetPlayerDebugString_Params GetPlayerDebugString_Params;
	memcpy_s(&GetPlayerDebugString_Params.Player, 0xA0, &Player, 0xA0);

	this->ProcessEvent(uFnGetPlayerDebugString, &GetPlayerDebugString_Params, nullptr);

	return GetPlayerDebugString_Params.ReturnValue;
};

// Function ProjectX.AddReservationMessagePublic_X.SetSettings
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UAddReservationMessagePublic_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FJoinMatchSettings      InSettings                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UAddReservationMessagePublic_X* UAddReservationMessagePublic_X::SetSettings(struct FJoinMatchSettings& InSettings)
{
	static UFunction* uFnSetSettings = nullptr;

	if (!uFnSetSettings)
	{
		uFnSetSettings = UFunction::FindFunction("Function ProjectX.AddReservationMessagePublic_X.SetSettings");
	}

	UAddReservationMessagePublic_X_execSetSettings_Params SetSettings_Params;
	memcpy_s(&SetSettings_Params.InSettings, 0x20, &InSettings, 0x20);

	this->ProcessEvent(uFnSetSettings, &SetSettings_Params, nullptr);

	memcpy_s(&InSettings, 0x20, &SetSettings_Params.InSettings, 0x20);

	return SetSettings_Params.ReturnValue;
};

// Function ProjectX.AppConfig_X.Undo
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UAppConfig_X::Undo()
{
	static UFunction* uFnUndo = nullptr;

	if (!uFnUndo)
	{
		uFnUndo = UFunction::FindFunction("Function ProjectX.AppConfig_X.Undo");
	}

	UAppConfig_X_execUndo_Params Undo_Params;

	this->ProcessEvent(uFnUndo, &Undo_Params, nullptr);
};

// Function ProjectX.AppConfig_X.Apply
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UAppConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.AppConfig_X.Apply");
	}

	UAppConfig_X_execApply_Params Apply_Params;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);
};

// Function ProjectX.AprilConfig_X.IsActive
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UAprilConfig_X::IsActive()
{
	static UFunction* uFnIsActive = nullptr;

	if (!uFnIsActive)
	{
		uFnIsActive = UFunction::FindFunction("Function ProjectX.AprilConfig_X.IsActive");
	}

	UAprilConfig_X_execIsActive_Params IsActive_Params;

	this->ProcessEvent(uFnIsActive, &IsActive_Params, nullptr);

	return IsActive_Params.ReturnValue;
};

// Function ProjectX.SeqEvent_Spawned_X.TriggerFor
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AActor*                  A                              (CPF_Parm)

void USeqEvent_Spawned_X::TriggerFor(class AActor* A)
{
	static UFunction* uFnTriggerFor = nullptr;

	if (!uFnTriggerFor)
	{
		uFnTriggerFor = UFunction::FindFunction("Function ProjectX.SeqEvent_Spawned_X.TriggerFor");
	}

	USeqEvent_Spawned_X_execTriggerFor_Params TriggerFor_Params;
	memcpy_s(&TriggerFor_Params.A, 0x8, &A, 0x8);

	USeqEvent_Spawned_X::StaticClass()->ProcessEvent(uFnTriggerFor, &TriggerFor_Params, nullptr);
};

// Function ProjectX.BanMessage_X.__BanMessage_X__Init_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:

void UBanMessage_X::__BanMessage_X__Init_0x1()
{
	static UFunction* uFn__BanMessage_X__Init_0x1 = nullptr;

	if (!uFn__BanMessage_X__Init_0x1)
	{
		uFn__BanMessage_X__Init_0x1 = UFunction::FindFunction("Function ProjectX.BanMessage_X.__BanMessage_X__Init_0x1");
	}

	UBanMessage_X_exec__BanMessage_X__Init_0x1_Params __BanMessage_X__Init_0x1_Params;

	this->ProcessEvent(uFn__BanMessage_X__Init_0x1, &__BanMessage_X__Init_0x1_Params, nullptr);
};

// Function ProjectX.BanMessage_X.IsPermanentlyBanned
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UBanMessage_X::IsPermanentlyBanned()
{
	static UFunction* uFnIsPermanentlyBanned = nullptr;

	if (!uFnIsPermanentlyBanned)
	{
		uFnIsPermanentlyBanned = UFunction::FindFunction("Function ProjectX.BanMessage_X.IsPermanentlyBanned");
	}

	UBanMessage_X_execIsPermanentlyBanned_Params IsPermanentlyBanned_Params;

	this->ProcessEvent(uFnIsPermanentlyBanned, &IsPermanentlyBanned_Params, nullptr);

	return IsPermanentlyBanned_Params.ReturnValue;
};

// Function ProjectX.BanMessage_X.IsBanned
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UBanMessage_X::IsBanned()
{
	static UFunction* uFnIsBanned = nullptr;

	if (!uFnIsBanned)
	{
		uFnIsBanned = UFunction::FindFunction("Function ProjectX.BanMessage_X.IsBanned");
	}

	UBanMessage_X_execIsBanned_Params IsBanned_Params;

	this->ProcessEvent(uFnIsBanned, &IsBanned_Params, nullptr);

	return IsBanned_Params.ReturnValue;
};

// Function ProjectX.BanMessage_X.GetMinutesRemaining
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UBanMessage_X::GetMinutesRemaining()
{
	static UFunction* uFnGetMinutesRemaining = nullptr;

	if (!uFnGetMinutesRemaining)
	{
		uFnGetMinutesRemaining = UFunction::FindFunction("Function ProjectX.BanMessage_X.GetMinutesRemaining");
	}

	UBanMessage_X_execGetMinutesRemaining_Params GetMinutesRemaining_Params;

	this->ProcessEvent(uFnGetMinutesRemaining, &GetMinutesRemaining_Params, nullptr);

	return GetMinutesRemaining_Params.ReturnValue;
};

// Function ProjectX.BanMessage_X.GetSecondsRemaining
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UBanMessage_X::GetSecondsRemaining()
{
	static UFunction* uFnGetSecondsRemaining = nullptr;

	if (!uFnGetSecondsRemaining)
	{
		uFnGetSecondsRemaining = UFunction::FindFunction("Function ProjectX.BanMessage_X.GetSecondsRemaining");
	}

	UBanMessage_X_execGetSecondsRemaining_Params GetSecondsRemaining_Params;

	this->ProcessEvent(uFnGetSecondsRemaining, &GetSecondsRemaining_Params, nullptr);

	return GetSecondsRemaining_Params.ReturnValue;
};

// Function ProjectX.BanMessage_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UBanMessage_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.BanMessage_X.Init");
	}

	UBanMessage_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.BanMessage_X.EventBanEnded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UBanMessage_X*           BanMessage                     (CPF_Parm)

void UBanMessage_X::EventBanEnded(class UBanMessage_X* BanMessage)
{
	static UFunction* uFnEventBanEnded = nullptr;

	if (!uFnEventBanEnded)
	{
		uFnEventBanEnded = UFunction::FindFunction("Function ProjectX.BanMessage_X.EventBanEnded");
	}

	UBanMessage_X_execEventBanEnded_Params EventBanEnded_Params;
	memcpy_s(&EventBanEnded_Params.BanMessage, 0x8, &BanMessage, 0x8);

	this->ProcessEvent(uFnEventBanEnded, &EventBanEnded_Params, nullptr);
};

// Function ProjectX.BlockStatusMetrics_X.BlockListDownloadTimeout
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bValidStatus                   (CPF_Parm)

void UBlockStatusMetrics_X::BlockListDownloadTimeout(unsigned long bValidStatus)
{
	static UFunction* uFnBlockListDownloadTimeout = nullptr;

	if (!uFnBlockListDownloadTimeout)
	{
		uFnBlockListDownloadTimeout = UFunction::FindFunction("Function ProjectX.BlockStatusMetrics_X.BlockListDownloadTimeout");
	}

	UBlockStatusMetrics_X_execBlockListDownloadTimeout_Params BlockListDownloadTimeout_Params;
	BlockListDownloadTimeout_Params.bValidStatus = bValidStatus;

	this->ProcessEvent(uFnBlockListDownloadTimeout, &BlockListDownloadTimeout_Params, nullptr);
};

// Function ProjectX.BlogConfig_X.__BlogConfig_X__Apply_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UBlogTile_X*             L                              (CPF_Parm)
// class UBlogTile_X*             R                              (CPF_Parm)

int32_t UBlogConfig_X::__BlogConfig_X__Apply_0x2(class UBlogTile_X* L, class UBlogTile_X* R)
{
	static UFunction* uFn__BlogConfig_X__Apply_0x2 = nullptr;

	if (!uFn__BlogConfig_X__Apply_0x2)
	{
		uFn__BlogConfig_X__Apply_0x2 = UFunction::FindFunction("Function ProjectX.BlogConfig_X.__BlogConfig_X__Apply_0x2");
	}

	UBlogConfig_X_exec__BlogConfig_X__Apply_0x2_Params __BlogConfig_X__Apply_0x2_Params;
	memcpy_s(&__BlogConfig_X__Apply_0x2_Params.L, 0x8, &L, 0x8);
	memcpy_s(&__BlogConfig_X__Apply_0x2_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__BlogConfig_X__Apply_0x2, &__BlogConfig_X__Apply_0x2_Params, nullptr);

	return __BlogConfig_X__Apply_0x2_Params.ReturnValue;
};

// Function ProjectX.BlogConfig_X.__BlogConfig_X__Apply_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UBlogTile_X*             X                              (CPF_Parm)

void UBlogConfig_X::__BlogConfig_X__Apply_0x1(class UBlogTile_X* X)
{
	static UFunction* uFn__BlogConfig_X__Apply_0x1 = nullptr;

	if (!uFn__BlogConfig_X__Apply_0x1)
	{
		uFn__BlogConfig_X__Apply_0x1 = UFunction::FindFunction("Function ProjectX.BlogConfig_X.__BlogConfig_X__Apply_0x1");
	}

	UBlogConfig_X_exec__BlogConfig_X__Apply_0x1_Params __BlogConfig_X__Apply_0x1_Params;
	memcpy_s(&__BlogConfig_X__Apply_0x1_Params.X, 0x8, &X, 0x8);

	this->ProcessEvent(uFn__BlogConfig_X__Apply_0x1, &__BlogConfig_X__Apply_0x1_Params, nullptr);
};

// Function ProjectX.BlogConfig_X.Apply
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UBlogConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.BlogConfig_X.Apply");
	}

	UBlogConfig_X_execApply_Params Apply_Params;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);
};

// Function ProjectX.BlogTile_X.GetTileID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UBlogTile_X::GetTileID()
{
	static UFunction* uFnGetTileID = nullptr;

	if (!uFnGetTileID)
	{
		uFnGetTileID = UFunction::FindFunction("Function ProjectX.BlogTile_X.GetTileID");
	}

	UBlogTile_X_execGetTileID_Params GetTileID_Params;

	this->ProcessEvent(uFnGetTileID, &GetTileID_Params, nullptr);

	return GetTileID_Params.ReturnValue;
};

// Function ProjectX.BugMetrics_X.Report
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FName                   Id                             (CPF_Parm)
// class FString                  Details                        (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Trace                          (CPF_Parm | CPF_NeedCtorLink)

void UBugMetrics_X::Report(struct FName Id, class FString Details, class FString Trace)
{
	static UFunction* uFnReport = nullptr;

	if (!uFnReport)
	{
		uFnReport = UFunction::FindFunction("Function ProjectX.BugMetrics_X.Report");
	}

	UBugMetrics_X_execReport_Params Report_Params;
	memcpy_s(&Report_Params.Id, 0x8, &Id, 0x8);
	memcpy_s(&Report_Params.Details, 0x10, &Details, 0x10);
	memcpy_s(&Report_Params.Trace, 0x10, &Trace, 0x10);

	this->ProcessEvent(uFnReport, &Report_Params, nullptr);
};

// Function ProjectX.BugMetrics_X.BugReport
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Id                             (CPF_Parm)
// class FString                  Details                        (CPF_OptionalParm | CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

void UBugMetrics_X::BugReport(struct FName Id, class FString Details)
{
	static UFunction* uFnBugReport = nullptr;

	if (!uFnBugReport)
	{
		uFnBugReport = UFunction::FindFunction("Function ProjectX.BugMetrics_X.BugReport");
	}

	UBugMetrics_X_execBugReport_Params BugReport_Params;
	memcpy_s(&BugReport_Params.Id, 0x8, &Id, 0x8);
	memcpy_s(&BugReport_Params.Details, 0x10, &Details, 0x10);

	this->ProcessEvent(uFnBugReport, &BugReport_Params, nullptr);
};

// Function ProjectX.BugMetrics_X.StaticReport
// [0x00026003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Id                             (CPF_Parm)
// class FString                  Details                        (CPF_OptionalParm | CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

void UBugMetrics_X::StaticReport(struct FName Id, class FString Details)
{
	static UFunction* uFnStaticReport = nullptr;

	if (!uFnStaticReport)
	{
		uFnStaticReport = UFunction::FindFunction("Function ProjectX.BugMetrics_X.StaticReport");
	}

	UBugMetrics_X_execStaticReport_Params StaticReport_Params;
	memcpy_s(&StaticReport_Params.Id, 0x8, &Id, 0x8);
	memcpy_s(&StaticReport_Params.Details, 0x10, &Details, 0x10);

	UBugMetrics_X::StaticClass()->ProcessEvent(uFnStaticReport, &StaticReport_Params, nullptr);
};

// Function ProjectX.CacheTimer_X.GetRandomCacheTimeoutTime
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UCacheTimer_X::GetRandomCacheTimeoutTime()
{
	static UFunction* uFnGetRandomCacheTimeoutTime = nullptr;

	if (!uFnGetRandomCacheTimeoutTime)
	{
		uFnGetRandomCacheTimeoutTime = UFunction::FindFunction("Function ProjectX.CacheTimer_X.GetRandomCacheTimeoutTime");
	}

	UCacheTimer_X_execGetRandomCacheTimeoutTime_Params GetRandomCacheTimeoutTime_Params;

	this->ProcessEvent(uFnGetRandomCacheTimeoutTime, &GetRandomCacheTimeoutTime_Params, nullptr);

	return GetRandomCacheTimeoutTime_Params.ReturnValue;
};

// Function ProjectX.CacheTimer_X.OnExpired
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UCacheTimer_X::OnExpired()
{
	static UFunction* uFnOnExpired = nullptr;

	if (!uFnOnExpired)
	{
		uFnOnExpired = UFunction::FindFunction("Function ProjectX.CacheTimer_X.OnExpired");
	}

	UCacheTimer_X_execOnExpired_Params OnExpired_Params;

	this->ProcessEvent(uFnOnExpired, &OnExpired_Params, nullptr);
};

// Function ProjectX.CacheTimer_X.OnDisabled
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UCacheTimer_X::OnDisabled()
{
	static UFunction* uFnOnDisabled = nullptr;

	if (!uFnOnDisabled)
	{
		uFnOnDisabled = UFunction::FindFunction("Function ProjectX.CacheTimer_X.OnDisabled");
	}

	UCacheTimer_X_execOnDisabled_Params OnDisabled_Params;

	this->ProcessEvent(uFnOnDisabled, &OnDisabled_Params, nullptr);
};

// Function ProjectX.CacheTimer_X.OnEnabled
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UCacheTimer_X::OnEnabled()
{
	static UFunction* uFnOnEnabled = nullptr;

	if (!uFnOnEnabled)
	{
		uFnOnEnabled = UFunction::FindFunction("Function ProjectX.CacheTimer_X.OnEnabled");
	}

	UCacheTimer_X_execOnEnabled_Params OnEnabled_Params;

	this->ProcessEvent(uFnOnEnabled, &OnEnabled_Params, nullptr);
};

// Function ProjectX.CacheTimer_X.SetEnabled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bEnableExpiration              (CPF_Parm)

void UCacheTimer_X::SetEnabled(unsigned long bEnableExpiration)
{
	static UFunction* uFnSetEnabled = nullptr;

	if (!uFnSetEnabled)
	{
		uFnSetEnabled = UFunction::FindFunction("Function ProjectX.CacheTimer_X.SetEnabled");
	}

	UCacheTimer_X_execSetEnabled_Params SetEnabled_Params;
	SetEnabled_Params.bEnableExpiration = bEnableExpiration;

	this->ProcessEvent(uFnSetEnabled, &SetEnabled_Params, nullptr);
};

// Function ProjectX.CacheTimer_X.Reset
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          TimeoutTime                    (CPF_OptionalParm | CPF_Parm)

void UCacheTimer_X::Reset(float TimeoutTime)
{
	static UFunction* uFnReset = nullptr;

	if (!uFnReset)
	{
		uFnReset = UFunction::FindFunction("Function ProjectX.CacheTimer_X.Reset");
	}

	UCacheTimer_X_execReset_Params Reset_Params;
	memcpy_s(&Reset_Params.TimeoutTime, 0x4, &TimeoutTime, 0x4);

	this->ProcessEvent(uFnReset, &Reset_Params, nullptr);
};

// Function ProjectX.CacheTimer_X.IsExpired
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCacheTimer_X::IsExpired()
{
	static UFunction* uFnIsExpired = nullptr;

	if (!uFnIsExpired)
	{
		uFnIsExpired = UFunction::FindFunction("Function ProjectX.CacheTimer_X.IsExpired");
	}

	UCacheTimer_X_execIsExpired_Params IsExpired_Params;

	this->ProcessEvent(uFnIsExpired, &IsExpired_Params, nullptr);

	return IsExpired_Params.ReturnValue;
};

// Function ProjectX.CacheTimer_X.EventExpired
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UCacheTimer_X*           Timer                          (CPF_Parm | CPF_EditInline)

void UCacheTimer_X::EventExpired(class UCacheTimer_X* Timer)
{
	static UFunction* uFnEventExpired = nullptr;

	if (!uFnEventExpired)
	{
		uFnEventExpired = UFunction::FindFunction("Function ProjectX.CacheTimer_X.EventExpired");
	}

	UCacheTimer_X_execEventExpired_Params EventExpired_Params;
	memcpy_s(&EventExpired_Params.Timer, 0x8, &Timer, 0x8);

	this->ProcessEvent(uFnEventExpired, &EventExpired_Params, nullptr);
};

// Function ProjectX.CameraStateBlender_X.IsTransitioning
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCameraStateBlender_X::IsTransitioning()
{
	static UFunction* uFnIsTransitioning = nullptr;

	if (!uFnIsTransitioning)
	{
		uFnIsTransitioning = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.IsTransitioning");
	}

	UCameraStateBlender_X_execIsTransitioning_Params IsTransitioning_Params;

	this->ProcessEvent(uFnIsTransitioning, &IsTransitioning_Params, nullptr);

	return IsTransitioning_Params.ReturnValue;
};

// Function ProjectX.CameraStateBlender_X.BlendCameraState
// [0x00480003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void UCameraStateBlender_X::BlendCameraState(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnBlendCameraState = nullptr;

	if (!uFnBlendCameraState)
	{
		uFnBlendCameraState = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.BlendCameraState");
	}

	UCameraStateBlender_X_execBlendCameraState_Params BlendCameraState_Params;
	memcpy_s(&BlendCameraState_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&BlendCameraState_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnBlendCameraState, &BlendCameraState_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &BlendCameraState_Params.OutPOV, 0x2C);
};

// Function ProjectX.CameraStateBlender_X.PostProcessPOV
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void UCameraStateBlender_X::PostProcessPOV(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnPostProcessPOV = nullptr;

	if (!uFnPostProcessPOV)
	{
		uFnPostProcessPOV = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.PostProcessPOV");
	}

	UCameraStateBlender_X_execPostProcessPOV_Params PostProcessPOV_Params;
	memcpy_s(&PostProcessPOV_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&PostProcessPOV_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnPostProcessPOV, &PostProcessPOV_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &PostProcessPOV_Params.OutPOV, 0x2C);
};

// Function ProjectX.CameraStateBlender_X.UpdatePOV
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void UCameraStateBlender_X::UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnUpdatePOV = nullptr;

	if (!uFnUpdatePOV)
	{
		uFnUpdatePOV = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.UpdatePOV");
	}

	UCameraStateBlender_X_execUpdatePOV_Params UpdatePOV_Params;
	memcpy_s(&UpdatePOV_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&UpdatePOV_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnUpdatePOV, &UpdatePOV_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &UpdatePOV_Params.OutPOV, 0x2C);
};

// Function ProjectX.CameraStateBlender_X.Tick
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UCameraStateBlender_X::Tick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.Tick");
	}

	UCameraStateBlender_X_execTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.CameraStateBlender_X.ClearTransitionDelta
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UCameraStateBlender_X::ClearTransitionDelta()
{
	static UFunction* uFnClearTransitionDelta = nullptr;

	if (!uFnClearTransitionDelta)
	{
		uFnClearTransitionDelta = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.ClearTransitionDelta");
	}

	UCameraStateBlender_X_execClearTransitionDelta_Params ClearTransitionDelta_Params;

	this->ProcessEvent(uFnClearTransitionDelta, &ClearTransitionDelta_Params, nullptr);
};

// Function ProjectX.CameraStateBlender_X.ClearTransition
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UCameraStateBlender_X::ClearTransition()
{
	static UFunction* uFnClearTransition = nullptr;

	if (!uFnClearTransition)
	{
		uFnClearTransition = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.ClearTransition");
	}

	UCameraStateBlender_X_execClearTransition_Params ClearTransition_Params;

	this->ProcessEvent(uFnClearTransition, &ClearTransition_Params, nullptr);
};

// Function ProjectX.CameraStateBlender_X.TransitionToState
// [0x00028003] (FUNC_Final | FUNC_RequiredAPI | FUNC_UbergraphFunction | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCameraState_X*          NewState                       (CPF_Parm)

bool UCameraStateBlender_X::TransitionToState(class UCameraState_X* NewState)
{
	static UFunction* uFnTransitionToState = nullptr;

	if (!uFnTransitionToState)
	{
		uFnTransitionToState = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.TransitionToState");
	}

	UCameraStateBlender_X_execTransitionToState_Params TransitionToState_Params;
	memcpy_s(&TransitionToState_Params.NewState, 0x8, &NewState, 0x8);

	this->ProcessEvent(uFnTransitionToState, &TransitionToState_Params, nullptr);

	return TransitionToState_Params.ReturnValue;
};

// Function ProjectX.CameraStateBlender_X.Snap
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCameraStateBlender_X::Snap()
{
	static UFunction* uFnSnap = nullptr;

	if (!uFnSnap)
	{
		uFnSnap = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.Snap");
	}

	UCameraStateBlender_X_execSnap_Params Snap_Params;

	this->ProcessEvent(uFnSnap, &Snap_Params, nullptr);
};

// Function ProjectX.CameraStateBlender_X.EventBlenderStateChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UCameraStateBlender_X*   CameraBender                   (CPF_Parm | CPF_EditInline)

void UCameraStateBlender_X::EventBlenderStateChanged(class UCameraStateBlender_X* CameraBender)
{
	static UFunction* uFnEventBlenderStateChanged = nullptr;

	if (!uFnEventBlenderStateChanged)
	{
		uFnEventBlenderStateChanged = UFunction::FindFunction("Function ProjectX.CameraStateBlender_X.EventBlenderStateChanged");
	}

	UCameraStateBlender_X_execEventBlenderStateChanged_Params EventBlenderStateChanged_Params;
	memcpy_s(&EventBlenderStateChanged_Params.CameraBender, 0x8, &CameraBender, 0x8);

	this->ProcessEvent(uFnEventBlenderStateChanged, &EventBlenderStateChanged_Params, nullptr);
};

// Function ProjectX.CameraState_X.OnSnap
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCameraState_X::OnSnap()
{
	static UFunction* uFnOnSnap = nullptr;

	if (!uFnOnSnap)
	{
		uFnOnSnap = UFunction::FindFunction("Function ProjectX.CameraState_X.OnSnap");
	}

	UCameraState_X_execOnSnap_Params OnSnap_Params;

	this->ProcessEvent(uFnOnSnap, &OnSnap_Params, nullptr);
};

// Function ProjectX.CameraState_X.ModifyPostProcessSettings
// [0x00420001] (FUNC_Final | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FPostProcessSettings    PP                             (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UCameraState_X::ModifyPostProcessSettings(struct FPostProcessSettings& PP)
{
	static UFunction* uFnModifyPostProcessSettings = nullptr;

	if (!uFnModifyPostProcessSettings)
	{
		uFnModifyPostProcessSettings = UFunction::FindFunction("Function ProjectX.CameraState_X.ModifyPostProcessSettings");
	}

	UCameraState_X_execModifyPostProcessSettings_Params ModifyPostProcessSettings_Params;
	memcpy_s(&ModifyPostProcessSettings_Params.PP, 0x168, &PP, 0x168);

	this->ProcessEvent(uFnModifyPostProcessSettings, &ModifyPostProcessSettings_Params, nullptr);

	memcpy_s(&PP, 0x168, &ModifyPostProcessSettings_Params.PP, 0x168);
};

// Function ProjectX.CameraState_X.ProcessViewRotation
// [0x00420001] (FUNC_Final | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FRotator                OutViewRotation                (CPF_Parm | CPF_OutParm)
// struct FRotator                OutDeltaRot                    (CPF_Parm | CPF_OutParm)

void UCameraState_X::ProcessViewRotation(float DeltaTime, struct FRotator& OutViewRotation, struct FRotator& OutDeltaRot)
{
	static UFunction* uFnProcessViewRotation = nullptr;

	if (!uFnProcessViewRotation)
	{
		uFnProcessViewRotation = UFunction::FindFunction("Function ProjectX.CameraState_X.ProcessViewRotation");
	}

	UCameraState_X_execProcessViewRotation_Params ProcessViewRotation_Params;
	memcpy_s(&ProcessViewRotation_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&ProcessViewRotation_Params.OutViewRotation, 0xC, &OutViewRotation, 0xC);
	memcpy_s(&ProcessViewRotation_Params.OutDeltaRot, 0xC, &OutDeltaRot, 0xC);

	this->ProcessEvent(uFnProcessViewRotation, &ProcessViewRotation_Params, nullptr);

	memcpy_s(&OutViewRotation, 0xC, &ProcessViewRotation_Params.OutViewRotation, 0xC);
	memcpy_s(&OutDeltaRot, 0xC, &ProcessViewRotation_Params.OutDeltaRot, 0xC);
};

// Function ProjectX.CameraState_X.UpdatePOV
// [0x00420000] (FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void UCameraState_X::UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnUpdatePOV = nullptr;

	if (!uFnUpdatePOV)
	{
		uFnUpdatePOV = UFunction::FindFunction("Function ProjectX.CameraState_X.UpdatePOV");
	}

	UCameraState_X_execUpdatePOV_Params UpdatePOV_Params;
	memcpy_s(&UpdatePOV_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&UpdatePOV_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnUpdatePOV, &UpdatePOV_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &UpdatePOV_Params.OutPOV, 0x2C);
};

// Function ProjectX.CameraState_X.Tick
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UCameraState_X::Tick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.CameraState_X.Tick");
	}

	UCameraState_X_execTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.CameraState_X.EndCameraState
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCameraState_X::EndCameraState()
{
	static UFunction* uFnEndCameraState = nullptr;

	if (!uFnEndCameraState)
	{
		uFnEndCameraState = UFunction::FindFunction("Function ProjectX.CameraState_X.EndCameraState");
	}

	UCameraState_X_execEndCameraState_Params EndCameraState_Params;

	this->ProcessEvent(uFnEndCameraState, &EndCameraState_Params, nullptr);
};

// Function ProjectX.CameraState_X.BeginCameraState
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCameraState_X::BeginCameraState()
{
	static UFunction* uFnBeginCameraState = nullptr;

	if (!uFnBeginCameraState)
	{
		uFnBeginCameraState = UFunction::FindFunction("Function ProjectX.CameraState_X.BeginCameraState");
	}

	UCameraState_X_execBeginCameraState_Params BeginCameraState_Params;

	this->ProcessEvent(uFnBeginCameraState, &BeginCameraState_Params, nullptr);
};

// Function ProjectX.CameraState_X.GetEndBlendParams
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FViewTargetTransitionParams ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCameraState_X*          NewState                       (CPF_Parm)

struct FViewTargetTransitionParams UCameraState_X::GetEndBlendParams(class UCameraState_X* NewState)
{
	static UFunction* uFnGetEndBlendParams = nullptr;

	if (!uFnGetEndBlendParams)
	{
		uFnGetEndBlendParams = UFunction::FindFunction("Function ProjectX.CameraState_X.GetEndBlendParams");
	}

	UCameraState_X_execGetEndBlendParams_Params GetEndBlendParams_Params;
	memcpy_s(&GetEndBlendParams_Params.NewState, 0x8, &NewState, 0x8);

	this->ProcessEvent(uFnGetEndBlendParams, &GetEndBlendParams_Params, nullptr);

	return GetEndBlendParams_Params.ReturnValue;
};

// Function ProjectX.CameraState_X.GetStartBlendParams
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FViewTargetTransitionParams ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCameraState_X*          PreviousState                  (CPF_Parm)

struct FViewTargetTransitionParams UCameraState_X::GetStartBlendParams(class UCameraState_X* PreviousState)
{
	static UFunction* uFnGetStartBlendParams = nullptr;

	if (!uFnGetStartBlendParams)
	{
		uFnGetStartBlendParams = UFunction::FindFunction("Function ProjectX.CameraState_X.GetStartBlendParams");
	}

	UCameraState_X_execGetStartBlendParams_Params GetStartBlendParams_Params;
	memcpy_s(&GetStartBlendParams_Params.PreviousState, 0x8, &PreviousState, 0x8);

	this->ProcessEvent(uFnGetStartBlendParams, &GetStartBlendParams_Params, nullptr);

	return GetStartBlendParams_Params.ReturnValue;
};

// Function ProjectX.CameraState_X.ShouldKeepExecuting
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCameraState_X::ShouldKeepExecuting()
{
	static UFunction* uFnShouldKeepExecuting = nullptr;

	if (!uFnShouldKeepExecuting)
	{
		uFnShouldKeepExecuting = UFunction::FindFunction("Function ProjectX.CameraState_X.ShouldKeepExecuting");
	}

	UCameraState_X_execShouldKeepExecuting_Params ShouldKeepExecuting_Params;

	this->ProcessEvent(uFnShouldKeepExecuting, &ShouldKeepExecuting_Params, nullptr);

	return ShouldKeepExecuting_Params.ReturnValue;
};

// Function ProjectX.CameraState_X.ShouldExecute
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCameraState_X::ShouldExecute()
{
	static UFunction* uFnShouldExecute = nullptr;

	if (!uFnShouldExecute)
	{
		uFnShouldExecute = UFunction::FindFunction("Function ProjectX.CameraState_X.ShouldExecute");
	}

	UCameraState_X_execShouldExecute_Params ShouldExecute_Params;

	this->ProcessEvent(uFnShouldExecute, &ShouldExecute_Params, nullptr);

	return ShouldExecute_Params.ReturnValue;
};

// Function ProjectX.CameraState_X.ShutDown
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCameraState_X::ShutDown()
{
	static UFunction* uFnShutDown = nullptr;

	if (!uFnShutDown)
	{
		uFnShutDown = UFunction::FindFunction("Function ProjectX.CameraState_X.ShutDown");
	}

	UCameraState_X_execShutDown_Params ShutDown_Params;

	this->ProcessEvent(uFnShutDown, &ShutDown_Params, nullptr);
};

// Function ProjectX.CameraState_X.Init
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ACamera_X*               InCamera                       (CPF_Parm)

void UCameraState_X::Init(class ACamera_X* InCamera)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.CameraState_X.Init");
	}

	UCameraState_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.InCamera, 0x8, &InCamera, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.CameraUtils_X.UpdateAspectRatioFOV
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          AspectRatio                    (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void UCameraUtils_X::UpdateAspectRatioFOV(float AspectRatio, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnUpdateAspectRatioFOV = nullptr;

	if (!uFnUpdateAspectRatioFOV)
	{
		uFnUpdateAspectRatioFOV = UFunction::FindFunction("Function ProjectX.CameraUtils_X.UpdateAspectRatioFOV");
	}

	UCameraUtils_X_execUpdateAspectRatioFOV_Params UpdateAspectRatioFOV_Params;
	memcpy_s(&UpdateAspectRatioFOV_Params.AspectRatio, 0x4, &AspectRatio, 0x4);
	memcpy_s(&UpdateAspectRatioFOV_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	UCameraUtils_X::StaticClass()->ProcessEvent(uFnUpdateAspectRatioFOV, &UpdateAspectRatioFOV_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &UpdateAspectRatioFOV_Params.OutPOV, 0x2C);
};

// Function ProjectX.CameraUtils_X.BlendPOVs
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FCameraOrientation      FromPOV                        (CPF_Parm)
// struct FCameraOrientation      ToPOV                          (CPF_Parm)
// float                          Percent                        (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void UCameraUtils_X::BlendPOVs(struct FCameraOrientation FromPOV, struct FCameraOrientation ToPOV, float Percent, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnBlendPOVs = nullptr;

	if (!uFnBlendPOVs)
	{
		uFnBlendPOVs = UFunction::FindFunction("Function ProjectX.CameraUtils_X.BlendPOVs");
	}

	UCameraUtils_X_execBlendPOVs_Params BlendPOVs_Params;
	memcpy_s(&BlendPOVs_Params.FromPOV, 0x2C, &FromPOV, 0x2C);
	memcpy_s(&BlendPOVs_Params.ToPOV, 0x2C, &ToPOV, 0x2C);
	memcpy_s(&BlendPOVs_Params.Percent, 0x4, &Percent, 0x4);
	memcpy_s(&BlendPOVs_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	UCameraUtils_X::StaticClass()->ProcessEvent(uFnBlendPOVs, &BlendPOVs_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &BlendPOVs_Params.OutPOV, 0x2C);
};

// Function ProjectX.CameraUtils_X.GetBlendPercent
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FViewTargetTransitionParams BlendParams                    (CPF_Parm)
// float                          Time                           (CPF_Parm)

float UCameraUtils_X::GetBlendPercent(struct FViewTargetTransitionParams BlendParams, float Time)
{
	static UFunction* uFnGetBlendPercent = nullptr;

	if (!uFnGetBlendPercent)
	{
		uFnGetBlendPercent = UFunction::FindFunction("Function ProjectX.CameraUtils_X.GetBlendPercent");
	}

	UCameraUtils_X_execGetBlendPercent_Params GetBlendPercent_Params;
	memcpy_s(&GetBlendPercent_Params.BlendParams, 0x10, &BlendParams, 0x10);
	memcpy_s(&GetBlendPercent_Params.Time, 0x4, &Time, 0x4);

	UCameraUtils_X::StaticClass()->ProcessEvent(uFnGetBlendPercent, &GetBlendPercent_Params, nullptr);

	return GetBlendPercent_Params.ReturnValue;
};

// Function ProjectX.CameraUtils_X.IsPointInView
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 Point                          (CPF_Parm)
// struct FVector                 ViewStart                      (CPF_Parm)
// struct FRotator                ViewRotation                   (CPF_Parm)
// float                          FOV                            (CPF_Parm)

bool UCameraUtils_X::IsPointInView(struct FVector Point, struct FVector ViewStart, struct FRotator ViewRotation, float FOV)
{
	static UFunction* uFnIsPointInView = nullptr;

	if (!uFnIsPointInView)
	{
		uFnIsPointInView = UFunction::FindFunction("Function ProjectX.CameraUtils_X.IsPointInView");
	}

	UCameraUtils_X_execIsPointInView_Params IsPointInView_Params;
	memcpy_s(&IsPointInView_Params.Point, 0xC, &Point, 0xC);
	memcpy_s(&IsPointInView_Params.ViewStart, 0xC, &ViewStart, 0xC);
	memcpy_s(&IsPointInView_Params.ViewRotation, 0xC, &ViewRotation, 0xC);
	memcpy_s(&IsPointInView_Params.FOV, 0x4, &FOV, 0x4);

	UCameraUtils_X::StaticClass()->ProcessEvent(uFnIsPointInView, &IsPointInView_Params, nullptr);

	return IsPointInView_Params.ReturnValue;
};

// Function ProjectX.CameraUtils_X.GetFrustumDistanceFromWidth
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          FOV                            (CPF_Parm)
// float                          Width                          (CPF_Parm)
// float                          AspectRatio                    (CPF_Parm)

float UCameraUtils_X::GetFrustumDistanceFromWidth(float FOV, float Width, float AspectRatio)
{
	static UFunction* uFnGetFrustumDistanceFromWidth = nullptr;

	if (!uFnGetFrustumDistanceFromWidth)
	{
		uFnGetFrustumDistanceFromWidth = UFunction::FindFunction("Function ProjectX.CameraUtils_X.GetFrustumDistanceFromWidth");
	}

	UCameraUtils_X_execGetFrustumDistanceFromWidth_Params GetFrustumDistanceFromWidth_Params;
	memcpy_s(&GetFrustumDistanceFromWidth_Params.FOV, 0x4, &FOV, 0x4);
	memcpy_s(&GetFrustumDistanceFromWidth_Params.Width, 0x4, &Width, 0x4);
	memcpy_s(&GetFrustumDistanceFromWidth_Params.AspectRatio, 0x4, &AspectRatio, 0x4);

	UCameraUtils_X::StaticClass()->ProcessEvent(uFnGetFrustumDistanceFromWidth, &GetFrustumDistanceFromWidth_Params, nullptr);

	return GetFrustumDistanceFromWidth_Params.ReturnValue;
};

// Function ProjectX.CameraUtils_X.GetFrustumDistanceFromHeight
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          FOV                            (CPF_Parm)
// float                          Height                         (CPF_Parm)

float UCameraUtils_X::GetFrustumDistanceFromHeight(float FOV, float Height)
{
	static UFunction* uFnGetFrustumDistanceFromHeight = nullptr;

	if (!uFnGetFrustumDistanceFromHeight)
	{
		uFnGetFrustumDistanceFromHeight = UFunction::FindFunction("Function ProjectX.CameraUtils_X.GetFrustumDistanceFromHeight");
	}

	UCameraUtils_X_execGetFrustumDistanceFromHeight_Params GetFrustumDistanceFromHeight_Params;
	memcpy_s(&GetFrustumDistanceFromHeight_Params.FOV, 0x4, &FOV, 0x4);
	memcpy_s(&GetFrustumDistanceFromHeight_Params.Height, 0x4, &Height, 0x4);

	UCameraUtils_X::StaticClass()->ProcessEvent(uFnGetFrustumDistanceFromHeight, &GetFrustumDistanceFromHeight_Params, nullptr);

	return GetFrustumDistanceFromHeight_Params.ReturnValue;
};

// Function ProjectX.CameraUtils_X.GetFrustumSize
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// float                          Dist                           (CPF_Parm)
// float                          FOV                            (CPF_Parm)
// float                          AspectRatio                    (CPF_Parm)
// float                          OutWidth                       (CPF_Parm | CPF_OutParm)
// float                          OutHeight                      (CPF_Parm | CPF_OutParm)

void UCameraUtils_X::GetFrustumSize(float Dist, float FOV, float AspectRatio, float& OutWidth, float& OutHeight)
{
	static UFunction* uFnGetFrustumSize = nullptr;

	if (!uFnGetFrustumSize)
	{
		uFnGetFrustumSize = UFunction::FindFunction("Function ProjectX.CameraUtils_X.GetFrustumSize");
	}

	UCameraUtils_X_execGetFrustumSize_Params GetFrustumSize_Params;
	memcpy_s(&GetFrustumSize_Params.Dist, 0x4, &Dist, 0x4);
	memcpy_s(&GetFrustumSize_Params.FOV, 0x4, &FOV, 0x4);
	memcpy_s(&GetFrustumSize_Params.AspectRatio, 0x4, &AspectRatio, 0x4);
	memcpy_s(&GetFrustumSize_Params.OutWidth, 0x4, &OutWidth, 0x4);
	memcpy_s(&GetFrustumSize_Params.OutHeight, 0x4, &OutHeight, 0x4);

	UCameraUtils_X::StaticClass()->ProcessEvent(uFnGetFrustumSize, &GetFrustumSize_Params, nullptr);

	memcpy_s(&OutWidth, 0x4, &GetFrustumSize_Params.OutWidth, 0x4);
	memcpy_s(&OutHeight, 0x4, &GetFrustumSize_Params.OutHeight, 0x4);
};

// Function ProjectX.CameraUtils_X.CalculateDistanceRotation
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FVector                 Focus                          (CPF_Parm)
// struct FVector                 Origin                         (CPF_Parm)
// float                          OutDistance                    (CPF_Parm | CPF_OutParm)
// struct FRotator                OutRotation                    (CPF_Parm | CPF_OutParm)

void UCameraUtils_X::CalculateDistanceRotation(struct FVector Focus, struct FVector Origin, float& OutDistance, struct FRotator& OutRotation)
{
	static UFunction* uFnCalculateDistanceRotation = nullptr;

	if (!uFnCalculateDistanceRotation)
	{
		uFnCalculateDistanceRotation = UFunction::FindFunction("Function ProjectX.CameraUtils_X.CalculateDistanceRotation");
	}

	UCameraUtils_X_execCalculateDistanceRotation_Params CalculateDistanceRotation_Params;
	memcpy_s(&CalculateDistanceRotation_Params.Focus, 0xC, &Focus, 0xC);
	memcpy_s(&CalculateDistanceRotation_Params.Origin, 0xC, &Origin, 0xC);
	memcpy_s(&CalculateDistanceRotation_Params.OutDistance, 0x4, &OutDistance, 0x4);
	memcpy_s(&CalculateDistanceRotation_Params.OutRotation, 0xC, &OutRotation, 0xC);

	UCameraUtils_X::StaticClass()->ProcessEvent(uFnCalculateDistanceRotation, &CalculateDistanceRotation_Params, nullptr);

	memcpy_s(&OutDistance, 0x4, &CalculateDistanceRotation_Params.OutDistance, 0x4);
	memcpy_s(&OutRotation, 0xC, &CalculateDistanceRotation_Params.OutRotation, 0xC);
};

// Function ProjectX.CameraModifier_CameraShake_X.ModifyCameraShakeScale
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCameraShake*            Shake                          (CPF_Parm)
// float                          NewScale                       (CPF_Parm)

void UCameraModifier_CameraShake_X::ModifyCameraShakeScale(class UCameraShake* Shake, float NewScale)
{
	static UFunction* uFnModifyCameraShakeScale = nullptr;

	if (!uFnModifyCameraShakeScale)
	{
		uFnModifyCameraShakeScale = UFunction::FindFunction("Function ProjectX.CameraModifier_CameraShake_X.ModifyCameraShakeScale");
	}

	UCameraModifier_CameraShake_X_execModifyCameraShakeScale_Params ModifyCameraShakeScale_Params;
	memcpy_s(&ModifyCameraShakeScale_Params.Shake, 0x8, &Shake, 0x8);
	memcpy_s(&ModifyCameraShakeScale_Params.NewScale, 0x4, &NewScale, 0x4);

	this->ProcessEvent(uFnModifyCameraShakeScale, &ModifyCameraShakeScale_Params, nullptr);
};

// Function ProjectX.CameraModifier_CameraShake_X.RemoveCameraShake
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UCameraShake*            Shake                          (CPF_Parm)

void UCameraModifier_CameraShake_X::RemoveCameraShake(class UCameraShake* Shake)
{
	static UFunction* uFnRemoveCameraShake = nullptr;

	if (!uFnRemoveCameraShake)
	{
		uFnRemoveCameraShake = UFunction::FindFunction("Function ProjectX.CameraModifier_CameraShake_X.RemoveCameraShake");
	}

	UCameraModifier_CameraShake_X_execRemoveCameraShake_Params RemoveCameraShake_Params;
	memcpy_s(&RemoveCameraShake_Params.Shake, 0x8, &Shake, 0x8);

	this->ProcessEvent(uFnRemoveCameraShake, &RemoveCameraShake_Params, nullptr);
};

// Function ProjectX.CameraState_CamActor_X.UpdatePOV
// [0x400C20002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void UCameraState_CamActor_X::UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnUpdatePOV = nullptr;

	if (!uFnUpdatePOV)
	{
		uFnUpdatePOV = UFunction::FindFunction("Function ProjectX.CameraState_CamActor_X.UpdatePOV");
	}

	UCameraState_CamActor_X_execUpdatePOV_Params UpdatePOV_Params;
	memcpy_s(&UpdatePOV_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&UpdatePOV_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnUpdatePOV, &UpdatePOV_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &UpdatePOV_Params.OutPOV, 0x2C);
};

// Function ProjectX.CameraState_CamActor_X.EndCameraState
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UCameraState_CamActor_X::EndCameraState()
{
	static UFunction* uFnEndCameraState = nullptr;

	if (!uFnEndCameraState)
	{
		uFnEndCameraState = UFunction::FindFunction("Function ProjectX.CameraState_CamActor_X.EndCameraState");
	}

	UCameraState_CamActor_X_execEndCameraState_Params EndCameraState_Params;

	this->ProcessEvent(uFnEndCameraState, &EndCameraState_Params, nullptr);
};

// Function ProjectX.CameraState_CamActor_X.BeginCameraState
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UCameraState_CamActor_X::BeginCameraState()
{
	static UFunction* uFnBeginCameraState = nullptr;

	if (!uFnBeginCameraState)
	{
		uFnBeginCameraState = UFunction::FindFunction("Function ProjectX.CameraState_CamActor_X.BeginCameraState");
	}

	UCameraState_CamActor_X_execBeginCameraState_Params BeginCameraState_Params;

	this->ProcessEvent(uFnBeginCameraState, &BeginCameraState_Params, nullptr);
};

// Function ProjectX.CameraState_CamActor_X.GetBlendParams
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FViewTargetTransitionParams ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCameraState_X*          PrevState                      (CPF_Parm)

struct FViewTargetTransitionParams UCameraState_CamActor_X::GetBlendParams(class UCameraState_X* PrevState)
{
	static UFunction* uFnGetBlendParams = nullptr;

	if (!uFnGetBlendParams)
	{
		uFnGetBlendParams = UFunction::FindFunction("Function ProjectX.CameraState_CamActor_X.GetBlendParams");
	}

	UCameraState_CamActor_X_execGetBlendParams_Params GetBlendParams_Params;
	memcpy_s(&GetBlendParams_Params.PrevState, 0x8, &PrevState, 0x8);

	this->ProcessEvent(uFnGetBlendParams, &GetBlendParams_Params, nullptr);

	return GetBlendParams_Params.ReturnValue;
};

// Function ProjectX.CameraState_CamActor_X.ShouldExecute
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCameraState_CamActor_X::ShouldExecute()
{
	static UFunction* uFnShouldExecute = nullptr;

	if (!uFnShouldExecute)
	{
		uFnShouldExecute = UFunction::FindFunction("Function ProjectX.CameraState_CamActor_X.ShouldExecute");
	}

	UCameraState_CamActor_X_execShouldExecute_Params ShouldExecute_Params;

	this->ProcessEvent(uFnShouldExecute, &ShouldExecute_Params, nullptr);

	return ShouldExecute_Params.ReturnValue;
};

// Function ProjectX.CameraState_CamActorCinematic_X.UpdatePOV
// [0x400420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)
// struct FCameraOrientation      OutPOV                         (CPF_Parm | CPF_OutParm)

void UCameraState_CamActorCinematic_X::UpdatePOV(float DeltaTime, struct FCameraOrientation& OutPOV)
{
	static UFunction* uFnUpdatePOV = nullptr;

	if (!uFnUpdatePOV)
	{
		uFnUpdatePOV = UFunction::FindFunction("Function ProjectX.CameraState_CamActorCinematic_X.UpdatePOV");
	}

	UCameraState_CamActorCinematic_X_execUpdatePOV_Params UpdatePOV_Params;
	memcpy_s(&UpdatePOV_Params.DeltaTime, 0x4, &DeltaTime, 0x4);
	memcpy_s(&UpdatePOV_Params.OutPOV, 0x2C, &OutPOV, 0x2C);

	this->ProcessEvent(uFnUpdatePOV, &UpdatePOV_Params, nullptr);

	memcpy_s(&OutPOV, 0x2C, &UpdatePOV_Params.OutPOV, 0x2C);
};

// Function ProjectX.CameraState_CamActorCinematic_X.EndCameraState
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UCameraState_CamActorCinematic_X::EndCameraState()
{
	static UFunction* uFnEndCameraState = nullptr;

	if (!uFnEndCameraState)
	{
		uFnEndCameraState = UFunction::FindFunction("Function ProjectX.CameraState_CamActorCinematic_X.EndCameraState");
	}

	UCameraState_CamActorCinematic_X_execEndCameraState_Params EndCameraState_Params;

	this->ProcessEvent(uFnEndCameraState, &EndCameraState_Params, nullptr);
};

// Function ProjectX.HUD_X.SetShowDebugObject
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 inObj                          (CPF_Parm)

void AHUD_X::SetShowDebugObject(class UObject* inObj)
{
	static UFunction* uFnSetShowDebugObject = nullptr;

	if (!uFnSetShowDebugObject)
	{
		uFnSetShowDebugObject = UFunction::FindFunction("Function ProjectX.HUD_X.SetShowDebugObject");
	}

	AHUD_X_execSetShowDebugObject_Params SetShowDebugObject_Params;
	memcpy_s(&SetShowDebugObject_Params.inObj, 0x8, &inObj, 0x8);

	this->ProcessEvent(uFnSetShowDebugObject, &SetShowDebugObject_Params, nullptr);
};

// Function ProjectX.HUD_X.ShowDebugInfo
// [0x400420002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          out_YL                         (CPF_Parm | CPF_OutParm)
// float                          out_YPos                       (CPF_Parm | CPF_OutParm)

void AHUD_X::ShowDebugInfo(float& out_YL, float& out_YPos)
{
	static UFunction* uFnShowDebugInfo = nullptr;

	if (!uFnShowDebugInfo)
	{
		uFnShowDebugInfo = UFunction::FindFunction("Function ProjectX.HUD_X.ShowDebugInfo");
	}

	AHUD_X_execShowDebugInfo_Params ShowDebugInfo_Params;
	memcpy_s(&ShowDebugInfo_Params.out_YL, 0x4, &out_YL, 0x4);
	memcpy_s(&ShowDebugInfo_Params.out_YPos, 0x4, &out_YPos, 0x4);

	this->ProcessEvent(uFnShowDebugInfo, &ShowDebugInfo_Params, nullptr);

	memcpy_s(&out_YL, 0x4, &ShowDebugInfo_Params.out_YL, 0x4);
	memcpy_s(&out_YPos, 0x4, &ShowDebugInfo_Params.out_YPos, 0x4);
};

// Function ProjectX.HUD_X.ShowDebug
// [0x400024202] (FUNC_RequiredAPI | FUNC_Exec | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FName                   DebugType                      (CPF_OptionalParm | CPF_Parm)

void AHUD_X::ShowDebug(struct FName DebugType)
{
	static UFunction* uFnShowDebug = nullptr;

	if (!uFnShowDebug)
	{
		uFnShowDebug = UFunction::FindFunction("Function ProjectX.HUD_X.ShowDebug");
	}

	AHUD_X_execShowDebug_Params ShowDebug_Params;
	memcpy_s(&ShowDebug_Params.DebugType, 0x8, &DebugType, 0x8);

	this->ProcessEvent(uFnShowDebug, &ShowDebug_Params, nullptr);
};

// Function ProjectX.HUD_X.DebugCategory
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   DebugType                      (CPF_Parm)

void AHUD_X::DebugCategory(struct FName DebugType)
{
	static UFunction* uFnDebugCategory = nullptr;

	if (!uFnDebugCategory)
	{
		uFnDebugCategory = UFunction::FindFunction("Function ProjectX.HUD_X.DebugCategory");
	}

	AHUD_X_execDebugCategory_Params DebugCategory_Params;
	memcpy_s(&DebugCategory_Params.DebugType, 0x8, &DebugType, 0x8);

	this->ProcessEvent(uFnDebugCategory, &DebugCategory_Params, nullptr);
};

// Function ProjectX.HUD_X.DebugCategorySwitch
// [0x00020203] (FUNC_Final | FUNC_RequiredAPI | FUNC_Exec | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bForward                       (CPF_Parm)

void AHUD_X::DebugCategorySwitch(unsigned long bForward)
{
	static UFunction* uFnDebugCategorySwitch = nullptr;

	if (!uFnDebugCategorySwitch)
	{
		uFnDebugCategorySwitch = UFunction::FindFunction("Function ProjectX.HUD_X.DebugCategorySwitch");
	}

	AHUD_X_execDebugCategorySwitch_Params DebugCategorySwitch_Params;
	DebugCategorySwitch_Params.bForward = bForward;

	this->ProcessEvent(uFnDebugCategorySwitch, &DebugCategorySwitch_Params, nullptr);
};

// Function ProjectX.HUD_X.DrawPauseScreen
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void AHUD_X::DrawPauseScreen()
{
	static UFunction* uFnDrawPauseScreen = nullptr;

	if (!uFnDrawPauseScreen)
	{
		uFnDrawPauseScreen = UFunction::FindFunction("Function ProjectX.HUD_X.DrawPauseScreen");
	}

	AHUD_X_execDrawPauseScreen_Params DrawPauseScreen_Params;

	this->ProcessEvent(uFnDrawPauseScreen, &DrawPauseScreen_Params, nullptr);
};

// Function ProjectX.HUD_X.ShouldShowConsoleMessage
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FConsoleMessage         InConsoleMessage               (CPF_Const | CPF_Parm | CPF_NeedCtorLink)

bool AHUD_X::ShouldShowConsoleMessage(struct FConsoleMessage InConsoleMessage)
{
	static UFunction* uFnShouldShowConsoleMessage = nullptr;

	if (!uFnShouldShowConsoleMessage)
	{
		uFnShouldShowConsoleMessage = UFunction::FindFunction("Function ProjectX.HUD_X.ShouldShowConsoleMessage");
	}

	AHUD_X_execShouldShowConsoleMessage_Params ShouldShowConsoleMessage_Params;
	memcpy_s(&ShouldShowConsoleMessage_Params.InConsoleMessage, 0x20, &InConsoleMessage, 0x20);

	this->ProcessEvent(uFnShouldShowConsoleMessage, &ShouldShowConsoleMessage_Params, nullptr);

	return ShouldShowConsoleMessage_Params.ReturnValue;
};

// Function ProjectX.HUD_X.DrawDebugTexture
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void AHUD_X::DrawDebugTexture()
{
	static UFunction* uFnDrawDebugTexture = nullptr;

	if (!uFnDrawDebugTexture)
	{
		uFnDrawDebugTexture = UFunction::FindFunction("Function ProjectX.HUD_X.DrawDebugTexture");
	}

	AHUD_X_execDrawDebugTexture_Params DrawDebugTexture_Params;

	this->ProcessEvent(uFnDrawDebugTexture, &DrawDebugTexture_Params, nullptr);
};

// Function ProjectX.HUD_X.DrawHUD
// [0x400020000] (FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AHUD_X::DrawHUD()
{
	static UFunction* uFnDrawHUD = nullptr;

	if (!uFnDrawHUD)
	{
		uFnDrawHUD = UFunction::FindFunction("Function ProjectX.HUD_X.DrawHUD");
	}

	AHUD_X_execDrawHUD_Params DrawHUD_Params;

	this->ProcessEvent(uFnDrawHUD, &DrawHUD_Params, nullptr);
};

// Function ProjectX.CheckReservation_X.HandleClientReservationMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UIReservationConnection_X* Connection                     (CPF_Parm)
// class UClientReservationMessage_X* Message                        (CPF_Parm)

void UCheckReservation_X::HandleClientReservationMessage(class UIReservationConnection_X* Connection, class UClientReservationMessage_X* Message)
{
	static UFunction* uFnHandleClientReservationMessage = nullptr;

	if (!uFnHandleClientReservationMessage)
	{
		uFnHandleClientReservationMessage = UFunction::FindFunction("Function ProjectX.CheckReservation_X.HandleClientReservationMessage");
	}

	UCheckReservation_X_execHandleClientReservationMessage_Params HandleClientReservationMessage_Params;
	memcpy_s(&HandleClientReservationMessage_Params.Connection, 0x10, &Connection, 0x10);
	memcpy_s(&HandleClientReservationMessage_Params.Message, 0x8, &Message, 0x8);

	this->ProcessEvent(uFnHandleClientReservationMessage, &HandleClientReservationMessage_Params, nullptr);
};

// Function ProjectX.CheckReservation_X.SendRequest
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UCheckReservation_X::SendRequest()
{
	static UFunction* uFnSendRequest = nullptr;

	if (!uFnSendRequest)
	{
		uFnSendRequest = UFunction::FindFunction("Function ProjectX.CheckReservation_X.SendRequest");
	}

	UCheckReservation_X_execSendRequest_Params SendRequest_Params;

	this->ProcessEvent(uFnSendRequest, &SendRequest_Params, nullptr);
};

// Function ProjectX.CheckReservation_X.HandlePreLoadMap
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  _                              (CPF_Parm | CPF_NeedCtorLink)

void UCheckReservation_X::HandlePreLoadMap(class FString _)
{
	static UFunction* uFnHandlePreLoadMap = nullptr;

	if (!uFnHandlePreLoadMap)
	{
		uFnHandlePreLoadMap = UFunction::FindFunction("Function ProjectX.CheckReservation_X.HandlePreLoadMap");
	}

	UCheckReservation_X_execHandlePreLoadMap_Params HandlePreLoadMap_Params;
	memcpy_s(&HandlePreLoadMap_Params._, 0x10, &_, 0x10);

	this->ProcessEvent(uFnHandlePreLoadMap, &HandlePreLoadMap_Params, nullptr);
};

// Function ProjectX.CheckReservation_X.Cancel
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UCheckReservation_X::Cancel()
{
	static UFunction* uFnCancel = nullptr;

	if (!uFnCancel)
	{
		uFnCancel = UFunction::FindFunction("Function ProjectX.CheckReservation_X.Cancel");
	}

	UCheckReservation_X_execCancel_Params Cancel_Params;

	this->ProcessEvent(uFnCancel, &Cancel_Params, nullptr);
};

// Function ProjectX.CheckReservation_X.IsSearching
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UCheckReservation_X::IsSearching()
{
	static UFunction* uFnIsSearching = nullptr;

	if (!uFnIsSearching)
	{
		uFnIsSearching = UFunction::FindFunction("Function ProjectX.CheckReservation_X.IsSearching");
	}

	UCheckReservation_X_execIsSearching_Params IsSearching_Params;

	this->ProcessEvent(uFnIsSearching, &IsSearching_Params, nullptr);

	return IsSearching_Params.ReturnValue;
};

// Function ProjectX.CheckReservation_X.StartSearch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UCheckReservation_X::StartSearch(struct FScriptDelegate Callback)
{
	static UFunction* uFnStartSearch = nullptr;

	if (!uFnStartSearch)
	{
		uFnStartSearch = UFunction::FindFunction("Function ProjectX.CheckReservation_X.StartSearch");
	}

	UCheckReservation_X_execStartSearch_Params StartSearch_Params;
	memcpy_s(&StartSearch_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnStartSearch, &StartSearch_Params, nullptr);
};

// Function ProjectX.CheckReservation_X.NotifyOnStartSearch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCheckReservation_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UCheckReservation_X* UCheckReservation_X::NotifyOnStartSearch(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnStartSearch = nullptr;

	if (!uFnNotifyOnStartSearch)
	{
		uFnNotifyOnStartSearch = UFunction::FindFunction("Function ProjectX.CheckReservation_X.NotifyOnStartSearch");
	}

	UCheckReservation_X_execNotifyOnStartSearch_Params NotifyOnStartSearch_Params;
	memcpy_s(&NotifyOnStartSearch_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnStartSearch, &NotifyOnStartSearch_Params, nullptr);

	return NotifyOnStartSearch_Params.ReturnValue;
};

// Function ProjectX.CheckReservation_X.OnFoundReservation
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)

void UCheckReservation_X::OnFoundReservation(struct FServerReservationData Reservation)
{
	static UFunction* uFnOnFoundReservation = nullptr;

	if (!uFnOnFoundReservation)
	{
		uFnOnFoundReservation = UFunction::FindFunction("Function ProjectX.CheckReservation_X.OnFoundReservation");
	}

	UCheckReservation_X_execOnFoundReservation_Params OnFoundReservation_Params;
	memcpy_s(&OnFoundReservation_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnOnFoundReservation, &OnFoundReservation_Params, nullptr);
};

// Function ProjectX.CheckReservation_X.OnStartSearch
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              Task                           (CPF_Parm)

void UCheckReservation_X::OnStartSearch(class UAsyncTask* Task)
{
	static UFunction* uFnOnStartSearch = nullptr;

	if (!uFnOnStartSearch)
	{
		uFnOnStartSearch = UFunction::FindFunction("Function ProjectX.CheckReservation_X.OnStartSearch");
	}

	UCheckReservation_X_execOnStartSearch_Params OnStartSearch_Params;
	memcpy_s(&OnStartSearch_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnOnStartSearch, &OnStartSearch_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.SendReservationRetrySuccess
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UMatchmakingMetrics_X::SendReservationRetrySuccess()
{
	static UFunction* uFnSendReservationRetrySuccess = nullptr;

	if (!uFnSendReservationRetrySuccess)
	{
		uFnSendReservationRetrySuccess = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.SendReservationRetrySuccess");
	}

	UMatchmakingMetrics_X_execSendReservationRetrySuccess_Params SendReservationRetrySuccess_Params;

	this->ProcessEvent(uFnSendReservationRetrySuccess, &SendReservationRetrySuccess_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.RankedReconnect
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerName                     (CPF_Parm | CPF_NeedCtorLink)
// struct FGuid                   MatchMakingGuid                (CPF_OptionalParm | CPF_Parm)

void UMatchmakingMetrics_X::RankedReconnect(class FString ServerName, struct FGuid MatchMakingGuid)
{
	static UFunction* uFnRankedReconnect = nullptr;

	if (!uFnRankedReconnect)
	{
		uFnRankedReconnect = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.RankedReconnect");
	}

	UMatchmakingMetrics_X_execRankedReconnect_Params RankedReconnect_Params;
	memcpy_s(&RankedReconnect_Params.ServerName, 0x10, &ServerName, 0x10);
	memcpy_s(&RankedReconnect_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);

	this->ProcessEvent(uFnRankedReconnect, &RankedReconnect_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.FoundServer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerName                     (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)
// class FString                  ReservationID                  (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bFromNotification              (CPF_Parm)
// float                          ElapsedTime                    (CPF_Parm)
// struct FGuid                   MatchMakingGuid                (CPF_Parm)
// unsigned long                  bDisableCrossPlay              (CPF_Parm)
// float                          MMR                            (CPF_Parm)
// int32_t                        Tier                           (CPF_Parm)

void UMatchmakingMetrics_X::FoundServer(class FString ServerName, int32_t Playlist, class FString ReservationID, unsigned long bFromNotification, float ElapsedTime, struct FGuid MatchMakingGuid, unsigned long bDisableCrossPlay, float MMR, int32_t Tier)
{
	static UFunction* uFnFoundServer = nullptr;

	if (!uFnFoundServer)
	{
		uFnFoundServer = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.FoundServer");
	}

	UMatchmakingMetrics_X_execFoundServer_Params FoundServer_Params;
	memcpy_s(&FoundServer_Params.ServerName, 0x10, &ServerName, 0x10);
	memcpy_s(&FoundServer_Params.Playlist, 0x4, &Playlist, 0x4);
	memcpy_s(&FoundServer_Params.ReservationID, 0x10, &ReservationID, 0x10);
	FoundServer_Params.bFromNotification = bFromNotification;
	memcpy_s(&FoundServer_Params.ElapsedTime, 0x4, &ElapsedTime, 0x4);
	memcpy_s(&FoundServer_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);
	FoundServer_Params.bDisableCrossPlay = bDisableCrossPlay;
	memcpy_s(&FoundServer_Params.MMR, 0x4, &MMR, 0x4);
	memcpy_s(&FoundServer_Params.Tier, 0x4, &Tier, 0x4);

	this->ProcessEvent(uFnFoundServer, &FoundServer_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.RecordFoundServer
// [0x00424003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bFromNotification              (CPF_Parm)
// struct FGuid                   MatchMakingGuid                (CPF_OptionalParm | CPF_Parm)
// unsigned long                  bDisableCrossPlay              (CPF_OptionalParm | CPF_Parm)
// float                          MMR                            (CPF_OptionalParm | CPF_Parm)
// int32_t                        Tier                           (CPF_OptionalParm | CPF_Parm)
// struct FServerReservationData  Reservation                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UMatchmakingMetrics_X::RecordFoundServer(unsigned long bFromNotification, struct FGuid MatchMakingGuid, unsigned long bDisableCrossPlay, float MMR, int32_t Tier, struct FServerReservationData& Reservation)
{
	static UFunction* uFnRecordFoundServer = nullptr;

	if (!uFnRecordFoundServer)
	{
		uFnRecordFoundServer = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.RecordFoundServer");
	}

	UMatchmakingMetrics_X_execRecordFoundServer_Params RecordFoundServer_Params;
	RecordFoundServer_Params.bFromNotification = bFromNotification;
	memcpy_s(&RecordFoundServer_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);
	RecordFoundServer_Params.bDisableCrossPlay = bDisableCrossPlay;
	memcpy_s(&RecordFoundServer_Params.MMR, 0x4, &MMR, 0x4);
	memcpy_s(&RecordFoundServer_Params.Tier, 0x4, &Tier, 0x4);
	memcpy_s(&RecordFoundServer_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnRecordFoundServer, &RecordFoundServer_Params, nullptr);

	memcpy_s(&Reservation, 0x70, &RecordFoundServer_Params.Reservation, 0x70);
};

// Function ProjectX.MatchmakingMetrics_X.Cancel
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// float                          ElapsedTime                    (CPF_Parm)
// struct FGuid                   MatchMakingGuid                (CPF_Parm)

void UMatchmakingMetrics_X::Cancel(float ElapsedTime, struct FGuid MatchMakingGuid)
{
	static UFunction* uFnCancel = nullptr;

	if (!uFnCancel)
	{
		uFnCancel = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.Cancel");
	}

	UMatchmakingMetrics_X_execCancel_Params Cancel_Params;
	memcpy_s(&Cancel_Params.ElapsedTime, 0x4, &ElapsedTime, 0x4);
	memcpy_s(&Cancel_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);

	this->ProcessEvent(uFnCancel, &Cancel_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.RecordCancel
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FGuid                   MatchMakingGuid                (CPF_OptionalParm | CPF_Parm)

void UMatchmakingMetrics_X::RecordCancel(struct FGuid MatchMakingGuid)
{
	static UFunction* uFnRecordCancel = nullptr;

	if (!uFnRecordCancel)
	{
		uFnRecordCancel = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.RecordCancel");
	}

	UMatchmakingMetrics_X_execRecordCancel_Params RecordCancel_Params;
	memcpy_s(&RecordCancel_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);

	this->ProcessEvent(uFnRecordCancel, &RecordCancel_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.ErrorID
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        Error                          (CPF_Parm)
// struct FGuid                   MatchMakingGuid                (CPF_Parm)

void UMatchmakingMetrics_X::ErrorID(int32_t Error, struct FGuid MatchMakingGuid)
{
	static UFunction* uFnErrorID = nullptr;

	if (!uFnErrorID)
	{
		uFnErrorID = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.ErrorID");
	}

	UMatchmakingMetrics_X_execErrorID_Params ErrorID_Params;
	memcpy_s(&ErrorID_Params.Error, 0x4, &Error, 0x4);
	memcpy_s(&ErrorID_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);

	this->ProcessEvent(uFnErrorID, &ErrorID_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.ErrorUnknown
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)
// struct FGuid                   MatchMakingGuid                (CPF_Parm)

void UMatchmakingMetrics_X::ErrorUnknown(class FString Message, struct FGuid MatchMakingGuid)
{
	static UFunction* uFnErrorUnknown = nullptr;

	if (!uFnErrorUnknown)
	{
		uFnErrorUnknown = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.ErrorUnknown");
	}

	UMatchmakingMetrics_X_execErrorUnknown_Params ErrorUnknown_Params;
	memcpy_s(&ErrorUnknown_Params.Message, 0x10, &Message, 0x10);
	memcpy_s(&ErrorUnknown_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);

	this->ProcessEvent(uFnErrorUnknown, &ErrorUnknown_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.RecordError
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Error                          (CPF_Parm | CPF_NeedCtorLink)
// struct FGuid                   MatchMakingGuid                (CPF_OptionalParm | CPF_Parm)

void UMatchmakingMetrics_X::RecordError(class FString Error, struct FGuid MatchMakingGuid)
{
	static UFunction* uFnRecordError = nullptr;

	if (!uFnRecordError)
	{
		uFnRecordError = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.RecordError");
	}

	UMatchmakingMetrics_X_execRecordError_Params RecordError_Params;
	memcpy_s(&RecordError_Params.Error, 0x10, &Error, 0x10);
	memcpy_s(&RecordError_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);

	this->ProcessEvent(uFnRecordError, &RecordError_Params, nullptr);
};

// Function ProjectX.MatchmakingMetrics_X.Start
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class URegionPing_X*>   Regions                        (CPF_Parm | CPF_NeedCtorLink)
// TArray<int32_t>                Playlists                      (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bDisableCrossPlay              (CPF_Parm)
// unsigned long                  bUseRecommendedRegions         (CPF_Parm)
// struct FGuid                   MatchMakingGuid                (CPF_Parm)
// float                          LeaderMMR                      (CPF_Parm)
// int32_t                        LeaderTier                     (CPF_Parm)

void UMatchmakingMetrics_X::Start(TArray<class URegionPing_X*> Regions, TArray<int32_t> Playlists, unsigned long bDisableCrossPlay, unsigned long bUseRecommendedRegions, struct FGuid MatchMakingGuid, float LeaderMMR, int32_t LeaderTier)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.MatchmakingMetrics_X.Start");
	}

	UMatchmakingMetrics_X_execStart_Params Start_Params;
	memcpy_s(&Start_Params.Regions, 0x10, &Regions, 0x10);
	memcpy_s(&Start_Params.Playlists, 0x10, &Playlists, 0x10);
	Start_Params.bDisableCrossPlay = bDisableCrossPlay;
	Start_Params.bUseRecommendedRegions = bUseRecommendedRegions;
	memcpy_s(&Start_Params.MatchMakingGuid, 0x10, &MatchMakingGuid, 0x10);
	memcpy_s(&Start_Params.LeaderMMR, 0x4, &LeaderMMR, 0x4);
	memcpy_s(&Start_Params.LeaderTier, 0x4, &LeaderTier, 0x4);

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.HandleRetry
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UClanforgeReservation_X::HandleRetry()
{
	static UFunction* uFnHandleRetry = nullptr;

	if (!uFnHandleRetry)
	{
		uFnHandleRetry = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.HandleRetry");
	}

	UClanforgeReservation_X_execHandleRetry_Params HandleRetry_Params;

	this->ProcessEvent(uFnHandleRetry, &HandleRetry_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.Retry
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UClanforgeReservation_X::Retry()
{
	static UFunction* uFnRetry = nullptr;

	if (!uFnRetry)
	{
		uFnRetry = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.Retry");
	}

	UClanforgeReservation_X_execRetry_Params Retry_Params;

	this->ProcessEvent(uFnRetry, &Retry_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.HandleSendComplete
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           Request                        (CPF_Parm)

void UClanforgeReservation_X::HandleSendComplete(class UWebRequest_X* Request)
{
	static UFunction* uFnHandleSendComplete = nullptr;

	if (!uFnHandleSendComplete)
	{
		uFnHandleSendComplete = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.HandleSendComplete");
	}

	UClanforgeReservation_X_execHandleSendComplete_Params HandleSendComplete_Params;
	memcpy_s(&HandleSendComplete_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFnHandleSendComplete, &HandleSendComplete_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.ProcessNextRequest
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UClanforgeReservation_X::ProcessNextRequest()
{
	static UFunction* uFnProcessNextRequest = nullptr;

	if (!uFnProcessNextRequest)
	{
		uFnProcessNextRequest = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.ProcessNextRequest");
	}

	UClanforgeReservation_X_execProcessNextRequest_Params ProcessNextRequest_Params;

	this->ProcessEvent(uFnProcessNextRequest, &ProcessNextRequest_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.Send
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  URL                            (CPF_Parm | CPF_NeedCtorLink)

void UClanforgeReservation_X::Send(class FString URL)
{
	static UFunction* uFnSend = nullptr;

	if (!uFnSend)
	{
		uFnSend = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.Send");
	}

	UClanforgeReservation_X_execSend_Params Send_Params;
	memcpy_s(&Send_Params.URL, 0x10, &URL, 0x10);

	this->ProcessEvent(uFnSend, &Send_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.SetReserveState
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// uint8_t                        NewState                       (CPF_Parm)

void UClanforgeReservation_X::SetReserveState(uint8_t NewState)
{
	static UFunction* uFnSetReserveState = nullptr;

	if (!uFnSetReserveState)
	{
		uFnSetReserveState = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.SetReserveState");
	}

	UClanforgeReservation_X_execSetReserveState_Params SetReserveState_Params;
	memcpy_s(&SetReserveState_Params.NewState, 0x1, &NewState, 0x1);

	this->ProcessEvent(uFnSetReserveState, &SetReserveState_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.HandleActivate
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)

void UClanforgeReservation_X::HandleActivate(class UOnlineGameDedicatedServer_X* Server)
{
	static UFunction* uFnHandleActivate = nullptr;

	if (!uFnHandleActivate)
	{
		uFnHandleActivate = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.HandleActivate");
	}

	UClanforgeReservation_X_execHandleActivate_Params HandleActivate_Params;
	memcpy_s(&HandleActivate_Params.Server, 0x8, &Server, 0x8);

	this->ProcessEvent(uFnHandleActivate, &HandleActivate_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.HandleInactive
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)

void UClanforgeReservation_X::HandleInactive(class UOnlineGameDedicatedServer_X* Server)
{
	static UFunction* uFnHandleInactive = nullptr;

	if (!uFnHandleInactive)
	{
		uFnHandleInactive = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.HandleInactive");
	}

	UClanforgeReservation_X_execHandleInactive_Params HandleInactive_Params;
	memcpy_s(&HandleInactive_Params.Server, 0x8, &Server, 0x8);

	this->ProcessEvent(uFnHandleInactive, &HandleInactive_Params, nullptr);
};

// Function ProjectX.ClanforgeReservation_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* Server                         (CPF_Parm)
// class FString                  ReserveURL                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  UnreserveURL                   (CPF_Parm | CPF_NeedCtorLink)

void UClanforgeReservation_X::Init(class UOnlineGameDedicatedServer_X* Server, class FString ReserveURL, class FString UnreserveURL)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.ClanforgeReservation_X.Init");
	}

	UClanforgeReservation_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.Server, 0x8, &Server, 0x8);
	memcpy_s(&Init_Params.ReserveURL, 0x10, &ReserveURL, 0x10);
	memcpy_s(&Init_Params.UnreserveURL, 0x10, &UnreserveURL, 0x10);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.ClientNetMetrics_X.__ClientNetMetrics_X__StartRecording_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UGameServerPinger_X*     _                              (CPF_Parm | CPF_EditInline)

void UClientNetMetrics_X::__ClientNetMetrics_X__StartRecording_0x2(class UGameServerPinger_X* _)
{
	static UFunction* uFn__ClientNetMetrics_X__StartRecording_0x2 = nullptr;

	if (!uFn__ClientNetMetrics_X__StartRecording_0x2)
	{
		uFn__ClientNetMetrics_X__StartRecording_0x2 = UFunction::FindFunction("Function ProjectX.ClientNetMetrics_X.__ClientNetMetrics_X__StartRecording_0x2");
	}

	UClientNetMetrics_X_exec__ClientNetMetrics_X__StartRecording_0x2_Params __ClientNetMetrics_X__StartRecording_0x2_Params;
	memcpy_s(&__ClientNetMetrics_X__StartRecording_0x2_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__ClientNetMetrics_X__StartRecording_0x2, &__ClientNetMetrics_X__StartRecording_0x2_Params, nullptr);
};

// Function ProjectX.ClientNetMetrics_X.__ClientNetMetrics_X__StartRecording_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UGameServerPinger_X*     _                              (CPF_Parm | CPF_EditInline)
// float                          DelaySeconds                   (CPF_Parm)

void UClientNetMetrics_X::__ClientNetMetrics_X__StartRecording_0x1(class UGameServerPinger_X* _, float DelaySeconds)
{
	static UFunction* uFn__ClientNetMetrics_X__StartRecording_0x1 = nullptr;

	if (!uFn__ClientNetMetrics_X__StartRecording_0x1)
	{
		uFn__ClientNetMetrics_X__StartRecording_0x1 = UFunction::FindFunction("Function ProjectX.ClientNetMetrics_X.__ClientNetMetrics_X__StartRecording_0x1");
	}

	UClientNetMetrics_X_exec__ClientNetMetrics_X__StartRecording_0x1_Params __ClientNetMetrics_X__StartRecording_0x1_Params;
	memcpy_s(&__ClientNetMetrics_X__StartRecording_0x1_Params._, 0x8, &_, 0x8);
	memcpy_s(&__ClientNetMetrics_X__StartRecording_0x1_Params.DelaySeconds, 0x4, &DelaySeconds, 0x4);

	this->ProcessEvent(uFn__ClientNetMetrics_X__StartRecording_0x1, &__ClientNetMetrics_X__StartRecording_0x1_Params, nullptr);
};

// Function ProjectX.ClientNetMetrics_X.CalcPingStats
// [0x00C40003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPingStats              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<float>                  Pings                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FPingStats UClientNetMetrics_X::CalcPingStats(TArray<float>& Pings)
{
	static UFunction* uFnCalcPingStats = nullptr;

	if (!uFnCalcPingStats)
	{
		uFnCalcPingStats = UFunction::FindFunction("Function ProjectX.ClientNetMetrics_X.CalcPingStats");
	}

	UClientNetMetrics_X_execCalcPingStats_Params CalcPingStats_Params;
	memcpy_s(&CalcPingStats_Params.Pings, 0x10, &Pings, 0x10);

	this->ProcessEvent(uFnCalcPingStats, &CalcPingStats_Params, nullptr);

	memcpy_s(&Pings, 0x10, &CalcPingStats_Params.Pings, 0x10);

	return CalcPingStats_Params.ReturnValue;
};

// Function ProjectX.ClientNetMetrics_X.Record
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void UClientNetMetrics_X::Record()
{
	static UFunction* uFnRecord = nullptr;

	if (!uFnRecord)
	{
		uFnRecord = UFunction::FindFunction("Function ProjectX.ClientNetMetrics_X.Record");
	}

	UClientNetMetrics_X_execRecord_Params Record_Params;

	this->ProcessEvent(uFnRecord, &Record_Params, nullptr);
};

// Function ProjectX.ClientNetMetrics_X.RecordTimer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UClientNetMetrics_X::RecordTimer()
{
	static UFunction* uFnRecordTimer = nullptr;

	if (!uFnRecordTimer)
	{
		uFnRecordTimer = UFunction::FindFunction("Function ProjectX.ClientNetMetrics_X.RecordTimer");
	}

	UClientNetMetrics_X_execRecordTimer_Params RecordTimer_Params;

	this->ProcessEvent(uFnRecordTimer, &RecordTimer_Params, nullptr);
};

// Function ProjectX.ClientNetMetrics_X.StopRecording
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UClientNetMetrics_X::StopRecording()
{
	static UFunction* uFnStopRecording = nullptr;

	if (!uFnStopRecording)
	{
		uFnStopRecording = UFunction::FindFunction("Function ProjectX.ClientNetMetrics_X.StopRecording");
	}

	UClientNetMetrics_X_execStopRecording_Params StopRecording_Params;

	this->ProcessEvent(uFnStopRecording, &StopRecording_Params, nullptr);
};

// Function ProjectX.ClientNetMetrics_X.StartRecording
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UClientNetMetrics_X::StartRecording()
{
	static UFunction* uFnStartRecording = nullptr;

	if (!uFnStartRecording)
	{
		uFnStartRecording = UFunction::FindFunction("Function ProjectX.ClientNetMetrics_X.StartRecording");
	}

	UClientNetMetrics_X_execStartRecording_Params StartRecording_Params;

	this->ProcessEvent(uFnStartRecording, &StartRecording_Params, nullptr);
};

// Function ProjectX.ClientNetMetrics_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UClientNetMetrics_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.ClientNetMetrics_X.Construct");
	}

	UClientNetMetrics_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.GameServerPinger_X.HandleLost
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UUdpPingBeaconClient_X*  _                              (CPF_Parm | CPF_EditInline)
// struct FName                   __                             (CPF_Parm)

void UGameServerPinger_X::HandleLost(class UUdpPingBeaconClient_X* _, struct FName __)
{
	static UFunction* uFnHandleLost = nullptr;

	if (!uFnHandleLost)
	{
		uFnHandleLost = UFunction::FindFunction("Function ProjectX.GameServerPinger_X.HandleLost");
	}

	UGameServerPinger_X_execHandleLost_Params HandleLost_Params;
	memcpy_s(&HandleLost_Params._, 0x8, &_, 0x8);
	memcpy_s(&HandleLost_Params.__, 0x8, &__, 0x8);

	this->ProcessEvent(uFnHandleLost, &HandleLost_Params, nullptr);
};

// Function ProjectX.GameServerPinger_X.HandlePong
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UUdpPingBeaconClient_X*  _                              (CPF_Parm | CPF_EditInline)
// struct FName                   __                             (CPF_Parm)
// float                          DeltaSeconds                   (CPF_Parm)

void UGameServerPinger_X::HandlePong(class UUdpPingBeaconClient_X* _, struct FName __, float DeltaSeconds)
{
	static UFunction* uFnHandlePong = nullptr;

	if (!uFnHandlePong)
	{
		uFnHandlePong = UFunction::FindFunction("Function ProjectX.GameServerPinger_X.HandlePong");
	}

	UGameServerPinger_X_execHandlePong_Params HandlePong_Params;
	memcpy_s(&HandlePong_Params._, 0x8, &_, 0x8);
	memcpy_s(&HandlePong_Params.__, 0x8, &__, 0x8);
	memcpy_s(&HandlePong_Params.DeltaSeconds, 0x4, &DeltaSeconds, 0x4);

	this->ProcessEvent(uFnHandlePong, &HandlePong_Params, nullptr);
};

// Function ProjectX.GameServerPinger_X.SendPing
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UGameServerPinger_X::SendPing()
{
	static UFunction* uFnSendPing = nullptr;

	if (!uFnSendPing)
	{
		uFnSendPing = UFunction::FindFunction("Function ProjectX.GameServerPinger_X.SendPing");
	}

	UGameServerPinger_X_execSendPing_Params SendPing_Params;

	this->ProcessEvent(uFnSendPing, &SendPing_Params, nullptr);
};

// Function ProjectX.GameServerPinger_X.StopPinging
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGameServerPinger_X::StopPinging()
{
	static UFunction* uFnStopPinging = nullptr;

	if (!uFnStopPinging)
	{
		uFnStopPinging = UFunction::FindFunction("Function ProjectX.GameServerPinger_X.StopPinging");
	}

	UGameServerPinger_X_execStopPinging_Params StopPinging_Params;

	this->ProcessEvent(uFnStopPinging, &StopPinging_Params, nullptr);
};

// Function ProjectX.GameServerPinger_X.StartPinging
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGameServerPinger_X::StartPinging()
{
	static UFunction* uFnStartPinging = nullptr;

	if (!uFnStartPinging)
	{
		uFnStartPinging = UFunction::FindFunction("Function ProjectX.GameServerPinger_X.StartPinging");
	}

	UGameServerPinger_X_execStartPinging_Params StartPinging_Params;

	this->ProcessEvent(uFnStartPinging, &StartPinging_Params, nullptr);
};

// Function ProjectX.GameServerPinger_X.SetAddress
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InAddress                      (CPF_Parm | CPF_NeedCtorLink)

void UGameServerPinger_X::SetAddress(class FString InAddress)
{
	static UFunction* uFnSetAddress = nullptr;

	if (!uFnSetAddress)
	{
		uFnSetAddress = UFunction::FindFunction("Function ProjectX.GameServerPinger_X.SetAddress");
	}

	UGameServerPinger_X_execSetAddress_Params SetAddress_Params;
	memcpy_s(&SetAddress_Params.InAddress, 0x10, &InAddress, 0x10);

	this->ProcessEvent(uFnSetAddress, &SetAddress_Params, nullptr);
};

// Function ProjectX.GameServerPinger_X.EventLost
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGameServerPinger_X*     Pinger                         (CPF_Parm | CPF_EditInline)

void UGameServerPinger_X::EventLost(class UGameServerPinger_X* Pinger)
{
	static UFunction* uFnEventLost = nullptr;

	if (!uFnEventLost)
	{
		uFnEventLost = UFunction::FindFunction("Function ProjectX.GameServerPinger_X.EventLost");
	}

	UGameServerPinger_X_execEventLost_Params EventLost_Params;
	memcpy_s(&EventLost_Params.Pinger, 0x8, &Pinger, 0x8);

	this->ProcessEvent(uFnEventLost, &EventLost_Params, nullptr);
};

// Function ProjectX.GameServerPinger_X.EventPong
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGameServerPinger_X*     Pinger                         (CPF_Parm | CPF_EditInline)
// float                          DeltaSeconds                   (CPF_Parm)

void UGameServerPinger_X::EventPong(class UGameServerPinger_X* Pinger, float DeltaSeconds)
{
	static UFunction* uFnEventPong = nullptr;

	if (!uFnEventPong)
	{
		uFnEventPong = UFunction::FindFunction("Function ProjectX.GameServerPinger_X.EventPong");
	}

	UGameServerPinger_X_execEventPong_Params EventPong_Params;
	memcpy_s(&EventPong_Params.Pinger, 0x8, &Pinger, 0x8);
	memcpy_s(&EventPong_Params.DeltaSeconds, 0x4, &DeltaSeconds, 0x4);

	this->ProcessEvent(uFnEventPong, &EventPong_Params, nullptr);
};

// Function ProjectX.InitialServerToClientMessage_X.GetDSRToken
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UInitialServerToClientMessage_X::GetDSRToken()
{
	static UFunction* uFnGetDSRToken = nullptr;

	if (!uFnGetDSRToken)
	{
		uFnGetDSRToken = UFunction::FindFunction("Function ProjectX.InitialServerToClientMessage_X.GetDSRToken");
	}

	UInitialServerToClientMessage_X_execGetDSRToken_Params GetDSRToken_Params;

	this->ProcessEvent(uFnGetDSRToken, &GetDSRToken_Params, nullptr);

	return GetDSRToken_Params.ReturnValue;
};

// Function ProjectX.InitialServerToClientMessage_X.GetReservationID
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UInitialServerToClientMessage_X::GetReservationID()
{
	static UFunction* uFnGetReservationID = nullptr;

	if (!uFnGetReservationID)
	{
		uFnGetReservationID = UFunction::FindFunction("Function ProjectX.InitialServerToClientMessage_X.GetReservationID");
	}

	UInitialServerToClientMessage_X_execGetReservationID_Params GetReservationID_Params;

	this->ProcessEvent(uFnGetReservationID, &GetReservationID_Params, nullptr);

	return GetReservationID_Params.ReturnValue;
};

// Function ProjectX.ClubServerResult_X.GetAddress
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UClubServerResult_X::GetAddress()
{
	static UFunction* uFnGetAddress = nullptr;

	if (!uFnGetAddress)
	{
		uFnGetAddress = UFunction::FindFunction("Function ProjectX.ClubServerResult_X.GetAddress");
	}

	UClubServerResult_X_execGetAddress_Params GetAddress_Params;

	this->ProcessEvent(uFnGetAddress, &GetAddress_Params, nullptr);

	return GetAddress_Params.ReturnValue;
};

// Function ProjectX.ConnectionInfoMessage_X.IsConnectionInfoValid
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FServerConnectionInfo   ServerInfo                     (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UConnectionInfoMessage_X::IsConnectionInfoValid(struct FServerConnectionInfo& ServerInfo)
{
	static UFunction* uFnIsConnectionInfoValid = nullptr;

	if (!uFnIsConnectionInfoValid)
	{
		uFnIsConnectionInfoValid = UFunction::FindFunction("Function ProjectX.ConnectionInfoMessage_X.IsConnectionInfoValid");
	}

	UConnectionInfoMessage_X_execIsConnectionInfoValid_Params IsConnectionInfoValid_Params;
	memcpy_s(&IsConnectionInfoValid_Params.ServerInfo, 0x30, &ServerInfo, 0x30);

	UConnectionInfoMessage_X::StaticClass()->ProcessEvent(uFnIsConnectionInfoValid, &IsConnectionInfoValid_Params, nullptr);

	memcpy_s(&ServerInfo, 0x30, &IsConnectionInfoValid_Params.ServerInfo, 0x30);

	return IsConnectionInfoValid_Params.ReturnValue;
};

// Function ProjectX.DebugDrawer_X.DrawHeader
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UDebugDrawer_X::DrawHeader()
{
	static UFunction* uFnDrawHeader = nullptr;

	if (!uFnDrawHeader)
	{
		uFnDrawHeader = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.DrawHeader");
	}

	UDebugDrawer_X_execDrawHeader_Params DrawHeader_Params;

	this->ProcessEvent(uFnDrawHeader, &DrawHeader_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.DrawSpacer
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          Height                         (CPF_OptionalParm | CPF_Parm)

void UDebugDrawer_X::DrawSpacer(float Height)
{
	static UFunction* uFnDrawSpacer = nullptr;

	if (!uFnDrawSpacer)
	{
		uFnDrawSpacer = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.DrawSpacer");
	}

	UDebugDrawer_X_execDrawSpacer_Params DrawSpacer_Params;
	memcpy_s(&DrawSpacer_Params.Height, 0x4, &Height, 0x4);

	this->ProcessEvent(uFnDrawSpacer, &DrawSpacer_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.DrawBackground
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// float                          Width                          (CPF_Parm)
// float                          Height                         (CPF_Parm)

void UDebugDrawer_X::DrawBackground(float Width, float Height)
{
	static UFunction* uFnDrawBackground = nullptr;

	if (!uFnDrawBackground)
	{
		uFnDrawBackground = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.DrawBackground");
	}

	UDebugDrawer_X_execDrawBackground_Params DrawBackground_Params;
	memcpy_s(&DrawBackground_Params.Width, 0x4, &Width, 0x4);
	memcpy_s(&DrawBackground_Params.Height, 0x4, &Height, 0x4);

	this->ProcessEvent(uFnDrawBackground, &DrawBackground_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.FinishDrawDebug
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UDebugDrawer_X::FinishDrawDebug()
{
	static UFunction* uFnFinishDrawDebug = nullptr;

	if (!uFnFinishDrawDebug)
	{
		uFnFinishDrawDebug = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.FinishDrawDebug");
	}

	UDebugDrawer_X_execFinishDrawDebug_Params FinishDrawDebug_Params;

	this->ProcessEvent(uFnFinishDrawDebug, &FinishDrawDebug_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.StartDrawDebug
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UCanvas*                 C                              (CPF_Parm)

void UDebugDrawer_X::StartDrawDebug(class UCanvas* C)
{
	static UFunction* uFnStartDrawDebug = nullptr;

	if (!uFnStartDrawDebug)
	{
		uFnStartDrawDebug = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.StartDrawDebug");
	}

	UDebugDrawer_X_execStartDrawDebug_Params StartDrawDebug_Params;
	memcpy_s(&StartDrawDebug_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnStartDrawDebug, &StartDrawDebug_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.PrintText
// [0x400024002] (FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  Text                           (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)
// struct FColor                  InColor                        (CPF_OptionalParm | CPF_Parm)

void UDebugDrawer_X::PrintText(class FString Text, struct FColor InColor)
{
	static UFunction* uFnPrintText = nullptr;

	if (!uFnPrintText)
	{
		uFnPrintText = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.PrintText");
	}

	UDebugDrawer_X_execPrintText_Params PrintText_Params;
	memcpy_s(&PrintText_Params.Text, 0x10, &Text, 0x10);
	memcpy_s(&PrintText_Params.InColor, 0x4, &InColor, 0x4);

	this->ProcessEvent(uFnPrintText, &PrintText_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.PrintProperty
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  PropertyName                   (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

void UDebugDrawer_X::PrintProperty(class FString PropertyName, class FString Value)
{
	static UFunction* uFnPrintProperty = nullptr;

	if (!uFnPrintProperty)
	{
		uFnPrintProperty = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.PrintProperty");
	}

	UDebugDrawer_X_execPrintProperty_Params PrintProperty_Params;
	memcpy_s(&PrintProperty_Params.PropertyName, 0x10, &PropertyName, 0x10);
	memcpy_s(&PrintProperty_Params.Value, 0x10, &Value, 0x10);

	this->ProcessEvent(uFnPrintProperty, &PrintProperty_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.PrintSeperater
// [0x400020000] (FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UDebugDrawer_X::PrintSeperater()
{
	static UFunction* uFnPrintSeperater = nullptr;

	if (!uFnPrintSeperater)
	{
		uFnPrintSeperater = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.PrintSeperater");
	}

	UDebugDrawer_X_execPrintSeperater_Params PrintSeperater_Params;

	this->ProcessEvent(uFnPrintSeperater, &PrintSeperater_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.UpdateCanvasIndentation
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UDebugDrawer_X::UpdateCanvasIndentation()
{
	static UFunction* uFnUpdateCanvasIndentation = nullptr;

	if (!uFnUpdateCanvasIndentation)
	{
		uFnUpdateCanvasIndentation = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.UpdateCanvasIndentation");
	}

	UDebugDrawer_X_execUpdateCanvasIndentation_Params UpdateCanvasIndentation_Params;

	this->ProcessEvent(uFnUpdateCanvasIndentation, &UpdateCanvasIndentation_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.EndSection
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UDebugDrawer_X::EndSection()
{
	static UFunction* uFnEndSection = nullptr;

	if (!uFnEndSection)
	{
		uFnEndSection = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.EndSection");
	}

	UDebugDrawer_X_execEndSection_Params EndSection_Params;

	this->ProcessEvent(uFnEndSection, &EndSection_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.StartSection
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UDebugDrawer_X::StartSection()
{
	static UFunction* uFnStartSection = nullptr;

	if (!uFnStartSection)
	{
		uFnStartSection = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.StartSection");
	}

	UDebugDrawer_X_execStartSection_Params StartSection_Params;

	this->ProcessEvent(uFnStartSection, &StartSection_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.SetPos
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          X                              (CPF_Parm)
// float                          Y                              (CPF_Parm)

void UDebugDrawer_X::SetPos(float X, float Y)
{
	static UFunction* uFnSetPos = nullptr;

	if (!uFnSetPos)
	{
		uFnSetPos = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.SetPos");
	}

	UDebugDrawer_X_execSetPos_Params SetPos_Params;
	memcpy_s(&SetPos_Params.X, 0x4, &X, 0x4);
	memcpy_s(&SetPos_Params.Y, 0x4, &Y, 0x4);

	this->ProcessEvent(uFnSetPos, &SetPos_Params, nullptr);
};

// Function ProjectX.DebugDrawer_X.ShouldDisplayDebug
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   Category                       (CPF_Parm)

bool UDebugDrawer_X::ShouldDisplayDebug(struct FName Category)
{
	static UFunction* uFnShouldDisplayDebug = nullptr;

	if (!uFnShouldDisplayDebug)
	{
		uFnShouldDisplayDebug = UFunction::FindFunction("Function ProjectX.DebugDrawer_X.ShouldDisplayDebug");
	}

	UDebugDrawer_X_execShouldDisplayDebug_Params ShouldDisplayDebug_Params;
	memcpy_s(&ShouldDisplayDebug_Params.Category, 0x8, &Category, 0x8);

	this->ProcessEvent(uFnShouldDisplayDebug, &ShouldDisplayDebug_Params, nullptr);

	return ShouldDisplayDebug_Params.ReturnValue;
};

// Function ProjectX.DecodeObject_X.Decode
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UObject*                 OutObj                         (CPF_Parm)

void UDecodeObject_X::Decode(class UObject* OutObj)
{
	static UFunction* uFnDecode = nullptr;

	if (!uFnDecode)
	{
		uFnDecode = UFunction::FindFunction("Function ProjectX.DecodeObject_X.Decode");
	}

	UDecodeObject_X_execDecode_Params Decode_Params;
	memcpy_s(&Decode_Params.OutObj, 0x8, &OutObj, 0x8);

	this->ProcessEvent(uFnDecode, &Decode_Params, nullptr);
};

// Function ProjectX.DecodeObjectJson_X.Decode
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 OutObj                         (CPF_Parm)

void UDecodeObjectJson_X::Decode(class UObject* OutObj)
{
	static UFunction* uFnDecode = nullptr;

	if (!uFnDecode)
	{
		uFnDecode = UFunction::FindFunction("Function ProjectX.DecodeObjectJson_X.Decode");
	}

	UDecodeObjectJson_X_execDecode_Params Decode_Params;
	memcpy_s(&Decode_Params.OutObj, 0x8, &OutObj, 0x8);

	this->ProcessEvent(uFnDecode, &Decode_Params, nullptr);
};

// Function ProjectX.DecodeObjectJson_X.SetStream
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UDecodeObjectJson_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InStream                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UDecodeObjectJson_X* UDecodeObjectJson_X::SetStream(class FString& InStream)
{
	static UFunction* uFnSetStream = nullptr;

	if (!uFnSetStream)
	{
		uFnSetStream = UFunction::FindFunction("Function ProjectX.DecodeObjectJson_X.SetStream");
	}

	UDecodeObjectJson_X_execSetStream_Params SetStream_Params;
	memcpy_s(&SetStream_Params.InStream, 0x10, &InStream, 0x10);

	this->ProcessEvent(uFnSetStream, &SetStream_Params, nullptr);

	memcpy_s(&InStream, 0x10, &SetStream_Params.InStream, 0x10);

	return SetStream_Params.ReturnValue;
};

// Function ProjectX.DecodeObjectUObject_X.Decode
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 OutObj                         (CPF_Parm)

void UDecodeObjectUObject_X::Decode(class UObject* OutObj)
{
	static UFunction* uFnDecode = nullptr;

	if (!uFnDecode)
	{
		uFnDecode = UFunction::FindFunction("Function ProjectX.DecodeObjectUObject_X.Decode");
	}

	UDecodeObjectUObject_X_execDecode_Params Decode_Params;
	memcpy_s(&Decode_Params.OutObj, 0x8, &OutObj, 0x8);

	this->ProcessEvent(uFnDecode, &Decode_Params, nullptr);
};

// Function ProjectX.DecodeObjectUObject_X.SetStream
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UDecodeObjectUObject_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        RequestChecksum                (CPF_Parm)
// class FString                  InStream                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UDecodeObjectUObject_X* UDecodeObjectUObject_X::SetStream(int32_t RequestChecksum, class FString& InStream)
{
	static UFunction* uFnSetStream = nullptr;

	if (!uFnSetStream)
	{
		uFnSetStream = UFunction::FindFunction("Function ProjectX.DecodeObjectUObject_X.SetStream");
	}

	UDecodeObjectUObject_X_execSetStream_Params SetStream_Params;
	memcpy_s(&SetStream_Params.RequestChecksum, 0x4, &RequestChecksum, 0x4);
	memcpy_s(&SetStream_Params.InStream, 0x10, &InStream, 0x10);

	this->ProcessEvent(uFnSetStream, &SetStream_Params, nullptr);

	memcpy_s(&InStream, 0x10, &SetStream_Params.InStream, 0x10);

	return SetStream_Params.ReturnValue;
};

// Function ProjectX.DynamicValue_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UDynamicValue_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.DynamicValue_X.PrintDebugInfo");
	}

	UDynamicValue_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.DynamicValue_X.GetDebugValue
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UDynamicValue_X::GetDebugValue()
{
	static UFunction* uFnGetDebugValue = nullptr;

	if (!uFnGetDebugValue)
	{
		uFnGetDebugValue = UFunction::FindFunction("Function ProjectX.DynamicValue_X.GetDebugValue");
	}

	UDynamicValue_X_execGetDebugValue_Params GetDebugValue_Params;

	this->ProcessEvent(uFnGetDebugValue, &GetDebugValue_Params, nullptr);

	return GetDebugValue_Params.ReturnValue;
};

// Function ProjectX.DynamicValue_X.GetValue
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UDynamicValue_X::GetValue()
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function ProjectX.DynamicValue_X.GetValue");
	}

	UDynamicValue_X_execGetValue_Params GetValue_Params;

	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);

	return GetValue_Params.ReturnValue;
};

// Function ProjectX.DynamicValue_X.Tick
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UDynamicValue_X::Tick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.DynamicValue_X.Tick");
	}

	UDynamicValue_X_execTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.DynamicValue_X.RemoveAllModifiers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UDynamicValue_X::RemoveAllModifiers()
{
	static UFunction* uFnRemoveAllModifiers = nullptr;

	if (!uFnRemoveAllModifiers)
	{
		uFnRemoveAllModifiers = UFunction::FindFunction("Function ProjectX.DynamicValue_X.RemoveAllModifiers");
	}

	UDynamicValue_X_execRemoveAllModifiers_Params RemoveAllModifiers_Params;

	this->ProcessEvent(uFnRemoveAllModifiers, &RemoveAllModifiers_Params, nullptr);
};

// Function ProjectX.DynamicValue_X.RemoveModifier
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UDynamicValueModifier_X* Mod                            (CPF_Parm)

void UDynamicValue_X::RemoveModifier(class UDynamicValueModifier_X* Mod)
{
	static UFunction* uFnRemoveModifier = nullptr;

	if (!uFnRemoveModifier)
	{
		uFnRemoveModifier = UFunction::FindFunction("Function ProjectX.DynamicValue_X.RemoveModifier");
	}

	UDynamicValue_X_execRemoveModifier_Params RemoveModifier_Params;
	memcpy_s(&RemoveModifier_Params.Mod, 0x8, &Mod, 0x8);

	this->ProcessEvent(uFnRemoveModifier, &RemoveModifier_Params, nullptr);
};

// Function ProjectX.DynamicValue_X.AddModifier
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UDynamicValueModifier_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UDynamicValueModifier_X* Mod                            (CPF_Parm)

class UDynamicValueModifier_X* UDynamicValue_X::AddModifier(class UDynamicValueModifier_X* Mod)
{
	static UFunction* uFnAddModifier = nullptr;

	if (!uFnAddModifier)
	{
		uFnAddModifier = UFunction::FindFunction("Function ProjectX.DynamicValue_X.AddModifier");
	}

	UDynamicValue_X_execAddModifier_Params AddModifier_Params;
	memcpy_s(&AddModifier_Params.Mod, 0x8, &Mod, 0x8);

	this->ProcessEvent(uFnAddModifier, &AddModifier_Params, nullptr);

	return AddModifier_Params.ReturnValue;
};

// Function ProjectX.DynamicValue_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UDynamicValue_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.DynamicValue_X.Construct");
	}

	UDynamicValue_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.DynamicValueModifier_X.GetDebugValue
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UDynamicValueModifier_X::GetDebugValue()
{
	static UFunction* uFnGetDebugValue = nullptr;

	if (!uFnGetDebugValue)
	{
		uFnGetDebugValue = UFunction::FindFunction("Function ProjectX.DynamicValueModifier_X.GetDebugValue");
	}

	UDynamicValueModifier_X_execGetDebugValue_Params GetDebugValue_Params;

	this->ProcessEvent(uFnGetDebugValue, &GetDebugValue_Params, nullptr);

	return GetDebugValue_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifier_X.GetDebugString
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UDynamicValueModifier_X::GetDebugString()
{
	static UFunction* uFnGetDebugString = nullptr;

	if (!uFnGetDebugString)
	{
		uFnGetDebugString = UFunction::FindFunction("Function ProjectX.DynamicValueModifier_X.GetDebugString");
	}

	UDynamicValueModifier_X_execGetDebugString_Params GetDebugString_Params;

	this->ProcessEvent(uFnGetDebugString, &GetDebugString_Params, nullptr);

	return GetDebugString_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifier_X.Expired
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UDynamicValueModifier_X::Expired()
{
	static UFunction* uFnExpired = nullptr;

	if (!uFnExpired)
	{
		uFnExpired = UFunction::FindFunction("Function ProjectX.DynamicValueModifier_X.Expired");
	}

	UDynamicValueModifier_X_execExpired_Params Expired_Params;

	this->ProcessEvent(uFnExpired, &Expired_Params, nullptr);

	return Expired_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifier_X.GetValue
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UDynamicValueModifier_X::GetValue()
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function ProjectX.DynamicValueModifier_X.GetValue");
	}

	UDynamicValueModifier_X_execGetValue_Params GetValue_Params;

	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);

	return GetValue_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifier_X.Tick
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UDynamicValueModifier_X::Tick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.DynamicValueModifier_X.Tick");
	}

	UDynamicValueModifier_X_execTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.DynamicValueModifierCurve_X.GetDebugValue
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UDynamicValueModifierCurve_X::GetDebugValue()
{
	static UFunction* uFnGetDebugValue = nullptr;

	if (!uFnGetDebugValue)
	{
		uFnGetDebugValue = UFunction::FindFunction("Function ProjectX.DynamicValueModifierCurve_X.GetDebugValue");
	}

	UDynamicValueModifierCurve_X_execGetDebugValue_Params GetDebugValue_Params;

	this->ProcessEvent(uFnGetDebugValue, &GetDebugValue_Params, nullptr);

	return GetDebugValue_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifierCurve_X.GetValue
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UDynamicValueModifierCurve_X::GetValue()
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function ProjectX.DynamicValueModifierCurve_X.GetValue");
	}

	UDynamicValueModifierCurve_X_execGetValue_Params GetValue_Params;

	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);

	return GetValue_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifierCurve_X.GetValueDelegate
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UDynamicValueModifierCurve_X::GetValueDelegate()
{
	static UFunction* uFnGetValueDelegate = nullptr;

	if (!uFnGetValueDelegate)
	{
		uFnGetValueDelegate = UFunction::FindFunction("Function ProjectX.DynamicValueModifierCurve_X.GetValueDelegate");
	}

	UDynamicValueModifierCurve_X_execGetValueDelegate_Params GetValueDelegate_Params;

	this->ProcessEvent(uFnGetValueDelegate, &GetValueDelegate_Params, nullptr);

	return GetValueDelegate_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifierDuration_X.GetDebugString
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UDynamicValueModifierDuration_X::GetDebugString()
{
	static UFunction* uFnGetDebugString = nullptr;

	if (!uFnGetDebugString)
	{
		uFnGetDebugString = UFunction::FindFunction("Function ProjectX.DynamicValueModifierDuration_X.GetDebugString");
	}

	UDynamicValueModifierDuration_X_execGetDebugString_Params GetDebugString_Params;

	this->ProcessEvent(uFnGetDebugString, &GetDebugString_Params, nullptr);

	return GetDebugString_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifierDuration_X.GetValue
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float UDynamicValueModifierDuration_X::GetValue()
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function ProjectX.DynamicValueModifierDuration_X.GetValue");
	}

	UDynamicValueModifierDuration_X_execGetValue_Params GetValue_Params;

	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);

	return GetValue_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifierDuration_X.Expired
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UDynamicValueModifierDuration_X::Expired()
{
	static UFunction* uFnExpired = nullptr;

	if (!uFnExpired)
	{
		uFnExpired = UFunction::FindFunction("Function ProjectX.DynamicValueModifierDuration_X.Expired");
	}

	UDynamicValueModifierDuration_X_execExpired_Params Expired_Params;

	this->ProcessEvent(uFnExpired, &Expired_Params, nullptr);

	return Expired_Params.ReturnValue;
};

// Function ProjectX.DynamicValueModifierDuration_X.Tick
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void UDynamicValueModifierDuration_X::Tick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.DynamicValueModifierDuration_X.Tick");
	}

	UDynamicValueModifierDuration_X_execTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.EncodeObjectFactory_X.DecodeObject
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class UDecodeObject_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Encoding                       (CPF_Parm)
// int32_t                        RequestChecksum                (CPF_Parm)
// class FString                  Stream                         (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class UDecodeObject_X* UEncodeObjectFactory_X::DecodeObject(uint8_t Encoding, int32_t RequestChecksum, class FString& Stream)
{
	static UFunction* uFnDecodeObject = nullptr;

	if (!uFnDecodeObject)
	{
		uFnDecodeObject = UFunction::FindFunction("Function ProjectX.EncodeObjectFactory_X.DecodeObject");
	}

	UEncodeObjectFactory_X_execDecodeObject_Params DecodeObject_Params;
	memcpy_s(&DecodeObject_Params.Encoding, 0x1, &Encoding, 0x1);
	memcpy_s(&DecodeObject_Params.RequestChecksum, 0x4, &RequestChecksum, 0x4);
	memcpy_s(&DecodeObject_Params.Stream, 0x10, &Stream, 0x10);

	UEncodeObjectFactory_X::StaticClass()->ProcessEvent(uFnDecodeObject, &DecodeObject_Params, nullptr);

	memcpy_s(&Stream, 0x10, &DecodeObject_Params.Stream, 0x10);

	return DecodeObject_Params.ReturnValue;
};

// Function ProjectX.EncodeObjectFactory_X.EncodeObject
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEncodeObject_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Encoding                       (CPF_Parm)
// class UObject*                 Target                         (CPF_Parm)

class UEncodeObject_X* UEncodeObjectFactory_X::EncodeObject(uint8_t Encoding, class UObject* Target)
{
	static UFunction* uFnEncodeObject = nullptr;

	if (!uFnEncodeObject)
	{
		uFnEncodeObject = UFunction::FindFunction("Function ProjectX.EncodeObjectFactory_X.EncodeObject");
	}

	UEncodeObjectFactory_X_execEncodeObject_Params EncodeObject_Params;
	memcpy_s(&EncodeObject_Params.Encoding, 0x1, &Encoding, 0x1);
	memcpy_s(&EncodeObject_Params.Target, 0x8, &Target, 0x8);

	UEncodeObjectFactory_X::StaticClass()->ProcessEvent(uFnEncodeObject, &EncodeObject_Params, nullptr);

	return EncodeObject_Params.ReturnValue;
};

// Function ProjectX.EncodeObjectUObject_X.Encode
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEncodeObject_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 inObj                          (CPF_Parm)

class UEncodeObject_X* UEncodeObjectUObject_X::Encode(class UObject* inObj)
{
	static UFunction* uFnEncode = nullptr;

	if (!uFnEncode)
	{
		uFnEncode = UFunction::FindFunction("Function ProjectX.EncodeObjectUObject_X.Encode");
	}

	UEncodeObjectUObject_X_execEncode_Params Encode_Params;
	memcpy_s(&Encode_Params.inObj, 0x8, &inObj, 0x8);

	this->ProcessEvent(uFnEncode, &Encode_Params, nullptr);

	return Encode_Params.ReturnValue;
};

// Function ProjectX.EncodeObjectJson_X.Encode
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UEncodeObject_X*         ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 inObj                          (CPF_Parm)

class UEncodeObject_X* UEncodeObjectJson_X::Encode(class UObject* inObj)
{
	static UFunction* uFnEncode = nullptr;

	if (!uFnEncode)
	{
		uFnEncode = UFunction::FindFunction("Function ProjectX.EncodeObjectJson_X.Encode");
	}

	UEncodeObjectJson_X_execEncode_Params Encode_Params;
	memcpy_s(&Encode_Params.inObj, 0x8, &inObj, 0x8);

	this->ProcessEvent(uFnEncode, &Encode_Params, nullptr);

	return Encode_Params.ReturnValue;
};

// Function ProjectX.Explosion_X.Destroyed
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AExplosion_X::eventDestroyed()
{
	static UFunction* uFnDestroyed = nullptr;

	if (!uFnDestroyed)
	{
		uFnDestroyed = UFunction::FindFunction("Function ProjectX.Explosion_X.Destroyed");
	}

	AExplosion_X_eventDestroyed_Params Destroyed_Params;

	this->ProcessEvent(uFnDestroyed, &Destroyed_Params, nullptr);
};

// Function ProjectX.Explosion_X.ForceNetRelevant
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AExplosion_X::eventForceNetRelevant()
{
	static UFunction* uFnForceNetRelevant = nullptr;

	if (!uFnForceNetRelevant)
	{
		uFnForceNetRelevant = UFunction::FindFunction("Function ProjectX.Explosion_X.ForceNetRelevant");
	}

	AExplosion_X_eventForceNetRelevant_Params ForceNetRelevant_Params;

	this->ProcessEvent(uFnForceNetRelevant, &ForceNetRelevant_Params, nullptr);
};

// Function ProjectX.Explosion_X.SetFXActorArchetype
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class AFXActor_X*              A                              (CPF_Parm)

void AExplosion_X::SetFXActorArchetype(class AFXActor_X* A)
{
	static UFunction* uFnSetFXActorArchetype = nullptr;

	if (!uFnSetFXActorArchetype)
	{
		uFnSetFXActorArchetype = UFunction::FindFunction("Function ProjectX.Explosion_X.SetFXActorArchetype");
	}

	AExplosion_X_execSetFXActorArchetype_Params SetFXActorArchetype_Params;
	memcpy_s(&SetFXActorArchetype_Params.A, 0x8, &A, 0x8);

	this->ProcessEvent(uFnSetFXActorArchetype, &SetFXActorArchetype_Params, nullptr);
};

// Function ProjectX.Explosion_X.SpawnFX
// [0x04080103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Protected | FUNC_BlueprintCallable | FUNC_AllFlags)
// Parameter info:

void AExplosion_X::SpawnFX()
{
	static UFunction* uFnSpawnFX = nullptr;

	if (!uFnSpawnFX)
	{
		uFnSpawnFX = UFunction::FindFunction("Function ProjectX.Explosion_X.SpawnFX");
	}

	AExplosion_X_execSpawnFX_Params SpawnFX_Params;

	this->ProcessEvent(uFnSpawnFX, &SpawnFX_Params, nullptr);
};

// Function ProjectX.Explosion_X.SetExplosionHandler
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class UExplosionHitHandler_X*> InExplosionHandlers            (CPF_Const | CPF_Parm | CPF_NeedCtorLink | CPF_EditInline)
// struct FBox                    GoalBox                        (CPF_Parm)
// class UActorComponent_X*       ExplosionGoal                  (CPF_Parm | CPF_EditInline)

void AExplosion_X::SetExplosionHandler(TArray<class UExplosionHitHandler_X*> InExplosionHandlers, struct FBox GoalBox, class UActorComponent_X* ExplosionGoal)
{
	static UFunction* uFnSetExplosionHandler = nullptr;

	if (!uFnSetExplosionHandler)
	{
		uFnSetExplosionHandler = UFunction::FindFunction("Function ProjectX.Explosion_X.SetExplosionHandler");
	}

	AExplosion_X_execSetExplosionHandler_Params SetExplosionHandler_Params;
	memcpy_s(&SetExplosionHandler_Params.InExplosionHandlers, 0x10, &InExplosionHandlers, 0x10);
	memcpy_s(&SetExplosionHandler_Params.GoalBox, 0x1C, &GoalBox, 0x1C);
	memcpy_s(&SetExplosionHandler_Params.ExplosionGoal, 0x8, &ExplosionGoal, 0x8);

	this->ProcessEvent(uFnSetExplosionHandler, &SetExplosionHandler_Params, nullptr);
};

// Function ProjectX.Explosion_X.PostBeginPlay
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void AExplosion_X::eventPostBeginPlay()
{
	static UFunction* uFnPostBeginPlay = nullptr;

	if (!uFnPostBeginPlay)
	{
		uFnPostBeginPlay = UFunction::FindFunction("Function ProjectX.Explosion_X.PostBeginPlay");
	}

	AExplosion_X_eventPostBeginPlay_Params PostBeginPlay_Params;

	this->ProcessEvent(uFnPostBeginPlay, &PostBeginPlay_Params, nullptr);
};

// Function ProjectX.Explosion_X.ReplicatedEvent
// [0x400020902] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FName                   VarName                        (CPF_Parm)

void AExplosion_X::eventReplicatedEvent(struct FName VarName)
{
	static UFunction* uFnReplicatedEvent = nullptr;

	if (!uFnReplicatedEvent)
	{
		uFnReplicatedEvent = UFunction::FindFunction("Function ProjectX.Explosion_X.ReplicatedEvent");
	}

	AExplosion_X_eventReplicatedEvent_Params ReplicatedEvent_Params;
	memcpy_s(&ReplicatedEvent_Params.VarName, 0x8, &VarName, 0x8);

	this->ProcessEvent(uFnReplicatedEvent, &ReplicatedEvent_Params, nullptr);
};

// Function ProjectX.IOnlineGameHost_X.GetCustomMatchOwner
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FUniqueNetId UIOnlineGameHost_X::GetCustomMatchOwner()
{
	static UFunction* uFnGetCustomMatchOwner = nullptr;

	if (!uFnGetCustomMatchOwner)
	{
		uFnGetCustomMatchOwner = UFunction::FindFunction("Function ProjectX.IOnlineGameHost_X.GetCustomMatchOwner");
	}

	UIOnlineGameHost_X_execGetCustomMatchOwner_Params GetCustomMatchOwner_Params;

	this->ProcessEvent(uFnGetCustomMatchOwner, &GetCustomMatchOwner_Params, nullptr);

	return GetCustomMatchOwner_Params.ReturnValue;
};

// Function ProjectX.IOnlineGameHost_X.GetCustomMatchSettings
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FCustomMatchSettings    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FCustomMatchSettings UIOnlineGameHost_X::GetCustomMatchSettings()
{
	static UFunction* uFnGetCustomMatchSettings = nullptr;

	if (!uFnGetCustomMatchSettings)
	{
		uFnGetCustomMatchSettings = UFunction::FindFunction("Function ProjectX.IOnlineGameHost_X.GetCustomMatchSettings");
	}

	UIOnlineGameHost_X_execGetCustomMatchSettings_Params GetCustomMatchSettings_Params;

	this->ProcessEvent(uFnGetCustomMatchSettings, &GetCustomMatchSettings_Params, nullptr);

	return GetCustomMatchSettings_Params.ReturnValue;
};

// Function ProjectX.IOnlineGameHost_X.AllowSplitscreenJoin
// [0x00420000] (FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PrimaryPlayerId                (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  PlayerName                     (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Error                          (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UIOnlineGameHost_X::AllowSplitscreenJoin(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId PlayerID, class FString PlayerName, class FString& Error)
{
	static UFunction* uFnAllowSplitscreenJoin = nullptr;

	if (!uFnAllowSplitscreenJoin)
	{
		uFnAllowSplitscreenJoin = UFunction::FindFunction("Function ProjectX.IOnlineGameHost_X.AllowSplitscreenJoin");
	}

	UIOnlineGameHost_X_execAllowSplitscreenJoin_Params AllowSplitscreenJoin_Params;
	memcpy_s(&AllowSplitscreenJoin_Params.PrimaryPlayerId, 0x48, &PrimaryPlayerId, 0x48);
	memcpy_s(&AllowSplitscreenJoin_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AllowSplitscreenJoin_Params.PlayerName, 0x10, &PlayerName, 0x10);
	memcpy_s(&AllowSplitscreenJoin_Params.Error, 0x10, &Error, 0x10);

	this->ProcessEvent(uFnAllowSplitscreenJoin, &AllowSplitscreenJoin_Params, nullptr);

	memcpy_s(&Error, 0x10, &AllowSplitscreenJoin_Params.Error, 0x10);

	return AllowSplitscreenJoin_Params.ReturnValue;
};

// Function ProjectX.IOnlineGameHost_X.PlayerLoggedOut
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

void UIOnlineGameHost_X::PlayerLoggedOut(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnPlayerLoggedOut = nullptr;

	if (!uFnPlayerLoggedOut)
	{
		uFnPlayerLoggedOut = UFunction::FindFunction("Function ProjectX.IOnlineGameHost_X.PlayerLoggedOut");
	}

	UIOnlineGameHost_X_execPlayerLoggedOut_Params PlayerLoggedOut_Params;
	memcpy_s(&PlayerLoggedOut_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnPlayerLoggedOut, &PlayerLoggedOut_Params, nullptr);
};

// Function ProjectX.IOnlineGameHost_X.PlayerLoggedIn
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

void UIOnlineGameHost_X::PlayerLoggedIn(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnPlayerLoggedIn = nullptr;

	if (!uFnPlayerLoggedIn)
	{
		uFnPlayerLoggedIn = UFunction::FindFunction("Function ProjectX.IOnlineGameHost_X.PlayerLoggedIn");
	}

	UIOnlineGameHost_X_execPlayerLoggedIn_Params PlayerLoggedIn_Params;
	memcpy_s(&PlayerLoggedIn_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnPlayerLoggedIn, &PlayerLoggedIn_Params, nullptr);
};

// Function ProjectX.IOnlineGameHost_X.AllowPlayerLogin
// [0x00420000] (FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  ErrorMessage                   (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UIOnlineGameHost_X::AllowPlayerLogin(class FString Options, struct FUniqueNetId PlayerID, class FString& ErrorMessage)
{
	static UFunction* uFnAllowPlayerLogin = nullptr;

	if (!uFnAllowPlayerLogin)
	{
		uFnAllowPlayerLogin = UFunction::FindFunction("Function ProjectX.IOnlineGameHost_X.AllowPlayerLogin");
	}

	UIOnlineGameHost_X_execAllowPlayerLogin_Params AllowPlayerLogin_Params;
	memcpy_s(&AllowPlayerLogin_Params.Options, 0x10, &Options, 0x10);
	memcpy_s(&AllowPlayerLogin_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AllowPlayerLogin_Params.ErrorMessage, 0x10, &ErrorMessage, 0x10);

	this->ProcessEvent(uFnAllowPlayerLogin, &AllowPlayerLogin_Params, nullptr);

	memcpy_s(&ErrorMessage, 0x10, &AllowPlayerLogin_Params.ErrorMessage, 0x10);
};

// Function ProjectX.GameInfo_MapProfiler_X.GenericPlayerInitialization
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AController*             C                              (CPF_Parm)

void AGameInfo_MapProfiler_X::GenericPlayerInitialization(class AController* C)
{
	static UFunction* uFnGenericPlayerInitialization = nullptr;

	if (!uFnGenericPlayerInitialization)
	{
		uFnGenericPlayerInitialization = UFunction::FindFunction("Function ProjectX.GameInfo_MapProfiler_X.GenericPlayerInitialization");
	}

	AGameInfo_MapProfiler_X_execGenericPlayerInitialization_Params GenericPlayerInitialization_Params;
	memcpy_s(&GenericPlayerInitialization_Params.C, 0x8, &C, 0x8);

	this->ProcessEvent(uFnGenericPlayerInitialization, &GenericPlayerInitialization_Params, nullptr);
};

// Function ProjectX.GameInfo_MapProfiler_X.SpawnPlayerController
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class APlayerController*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 SpawnLocation                  (CPF_Parm)
// struct FRotator                SpawnRotation                  (CPF_Parm)

class APlayerController* AGameInfo_MapProfiler_X::SpawnPlayerController(struct FVector SpawnLocation, struct FRotator SpawnRotation)
{
	static UFunction* uFnSpawnPlayerController = nullptr;

	if (!uFnSpawnPlayerController)
	{
		uFnSpawnPlayerController = UFunction::FindFunction("Function ProjectX.GameInfo_MapProfiler_X.SpawnPlayerController");
	}

	AGameInfo_MapProfiler_X_execSpawnPlayerController_Params SpawnPlayerController_Params;
	memcpy_s(&SpawnPlayerController_Params.SpawnLocation, 0xC, &SpawnLocation, 0xC);
	memcpy_s(&SpawnPlayerController_Params.SpawnRotation, 0xC, &SpawnRotation, 0xC);

	this->ProcessEvent(uFnSpawnPlayerController, &SpawnPlayerController_Params, nullptr);

	return SpawnPlayerController_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.__OnlineGameDedicatedServerRegistration_X__OnInit_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  _                              (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameDedicatedServerRegistration_X::__OnlineGameDedicatedServerRegistration_X__OnInit_0x1(class FString _)
{
	static UFunction* uFn__OnlineGameDedicatedServerRegistration_X__OnInit_0x1 = nullptr;

	if (!uFn__OnlineGameDedicatedServerRegistration_X__OnInit_0x1)
	{
		uFn__OnlineGameDedicatedServerRegistration_X__OnInit_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.__OnlineGameDedicatedServerRegistration_X__OnInit_0x1");
	}

	UOnlineGameDedicatedServerRegistration_X_exec__OnlineGameDedicatedServerRegistration_X__OnInit_0x1_Params __OnlineGameDedicatedServerRegistration_X__OnInit_0x1_Params;
	memcpy_s(&__OnlineGameDedicatedServerRegistration_X__OnInit_0x1_Params._, 0x10, &_, 0x10);

	this->ProcessEvent(uFn__OnlineGameDedicatedServerRegistration_X__OnInit_0x1, &__OnlineGameDedicatedServerRegistration_X__OnInit_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UCacheTimer_X*           Timer                          (CPF_Parm | CPF_EditInline)

void UOnlineGameDedicatedServerRegistration_X::__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1(class UCacheTimer_X* Timer)
{
	static UFunction* uFn__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1 = nullptr;

	if (!uFn__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1)
	{
		uFn__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1");
	}

	UOnlineGameDedicatedServerRegistration_X_exec__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1_Params __OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1_Params;
	memcpy_s(&__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1_Params.Timer, 0x8, &Timer, 0x8);

	this->ProcessEvent(uFn__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1, &__OnlineGameDedicatedServerRegistration_X__HandleCreateServerSucces_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleCrashed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::HandleCrashed()
{
	static UFunction* uFnHandleCrashed = nullptr;

	if (!uFnHandleCrashed)
	{
		uFnHandleCrashed = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleCrashed");
	}

	UOnlineGameDedicatedServerRegistration_X_execHandleCrashed_Params HandleCrashed_Params;

	this->ProcessEvent(uFnHandleCrashed, &HandleCrashed_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetServerMetrics
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UServerMetrics_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_EditInline)

class UServerMetrics_X* UOnlineGameDedicatedServerRegistration_X::GetServerMetrics()
{
	static UFunction* uFnGetServerMetrics = nullptr;

	if (!uFnGetServerMetrics)
	{
		uFnGetServerMetrics = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetServerMetrics");
	}

	UOnlineGameDedicatedServerRegistration_X_execGetServerMetrics_Params GetServerMetrics_Params;

	this->ProcessEvent(uFnGetServerMetrics, &GetServerMetrics_Params, nullptr);

	return GetServerMetrics_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetExclusivePlatformString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// uint8_t                        Platform                       (CPF_Parm)

class FString UOnlineGameDedicatedServerRegistration_X::GetExclusivePlatformString(uint8_t Platform)
{
	static UFunction* uFnGetExclusivePlatformString = nullptr;

	if (!uFnGetExclusivePlatformString)
	{
		uFnGetExclusivePlatformString = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetExclusivePlatformString");
	}

	UOnlineGameDedicatedServerRegistration_X_execGetExclusivePlatformString_Params GetExclusivePlatformString_Params;
	memcpy_s(&GetExclusivePlatformString_Params.Platform, 0x1, &Platform, 0x1);

	this->ProcessEvent(uFnGetExclusivePlatformString, &GetExclusivePlatformString_Params, nullptr);

	return GetExclusivePlatformString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.UpdateGameTime
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        TimeSeconds                    (CPF_Parm)

void UOnlineGameDedicatedServerRegistration_X::UpdateGameTime(int32_t TimeSeconds)
{
	static UFunction* uFnUpdateGameTime = nullptr;

	if (!uFnUpdateGameTime)
	{
		uFnUpdateGameTime = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.UpdateGameTime");
	}

	UOnlineGameDedicatedServerRegistration_X_execUpdateGameTime_Params UpdateGameTime_Params;
	memcpy_s(&UpdateGameTime_Params.TimeSeconds, 0x4, &TimeSeconds, 0x4);

	this->ProcessEvent(uFnUpdateGameTime, &UpdateGameTime_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.ShouldShutdownWhenEmpty
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServerRegistration_X::ShouldShutdownWhenEmpty()
{
	static UFunction* uFnShouldShutdownWhenEmpty = nullptr;

	if (!uFnShouldShutdownWhenEmpty)
	{
		uFnShouldShutdownWhenEmpty = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.ShouldShutdownWhenEmpty");
	}

	UOnlineGameDedicatedServerRegistration_X_execShouldShutdownWhenEmpty_Params ShouldShutdownWhenEmpty_Params;

	this->ProcessEvent(uFnShouldShutdownWhenEmpty, &ShouldShutdownWhenEmpty_Params, nullptr);

	return ShouldShutdownWhenEmpty_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.TimerShutdownWhenEmpty
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::TimerShutdownWhenEmpty()
{
	static UFunction* uFnTimerShutdownWhenEmpty = nullptr;

	if (!uFnTimerShutdownWhenEmpty)
	{
		uFnTimerShutdownWhenEmpty = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.TimerShutdownWhenEmpty");
	}

	UOnlineGameDedicatedServerRegistration_X_execTimerShutdownWhenEmpty_Params TimerShutdownWhenEmpty_Params;

	this->ProcessEvent(uFnTimerShutdownWhenEmpty, &TimerShutdownWhenEmpty_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleUpdateServerFailed
// [0x20080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* RPC                            (CPF_Parm)

void UOnlineGameDedicatedServerRegistration_X::HandleUpdateServerFailed(class URPC_UpdateGameServer_X* RPC)
{
	static UFunction* uFnHandleUpdateServerFailed = nullptr;

	if (!uFnHandleUpdateServerFailed)
	{
		uFnHandleUpdateServerFailed = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleUpdateServerFailed");
	}

	UOnlineGameDedicatedServerRegistration_X_execHandleUpdateServerFailed_Params HandleUpdateServerFailed_Params;
	memcpy_s(&HandleUpdateServerFailed_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleUpdateServerFailed, &HandleUpdateServerFailed_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleUpdateServerSucces
// [0x20080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* RPC                            (CPF_Parm)

void UOnlineGameDedicatedServerRegistration_X::HandleUpdateServerSucces(class URPC_UpdateGameServer_X* RPC)
{
	static UFunction* uFnHandleUpdateServerSucces = nullptr;

	if (!uFnHandleUpdateServerSucces)
	{
		uFnHandleUpdateServerSucces = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleUpdateServerSucces");
	}

	UOnlineGameDedicatedServerRegistration_X_execHandleUpdateServerSucces_Params HandleUpdateServerSucces_Params;
	memcpy_s(&HandleUpdateServerSucces_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleUpdateServerSucces, &HandleUpdateServerSucces_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleCreateServerFailed
// [0x20080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* RPC                            (CPF_Parm)

void UOnlineGameDedicatedServerRegistration_X::HandleCreateServerFailed(class URPC_CreateGameServer_X* RPC)
{
	static UFunction* uFnHandleCreateServerFailed = nullptr;

	if (!uFnHandleCreateServerFailed)
	{
		uFnHandleCreateServerFailed = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleCreateServerFailed");
	}

	UOnlineGameDedicatedServerRegistration_X_execHandleCreateServerFailed_Params HandleCreateServerFailed_Params;
	memcpy_s(&HandleCreateServerFailed_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleCreateServerFailed, &HandleCreateServerFailed_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandlePerConDisconnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     _                              (CPF_Parm)

void UOnlineGameDedicatedServerRegistration_X::HandlePerConDisconnect(class UPsyNetConnection_X* _)
{
	static UFunction* uFnHandlePerConDisconnect = nullptr;

	if (!uFnHandlePerConDisconnect)
	{
		uFnHandlePerConDisconnect = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandlePerConDisconnect");
	}

	UOnlineGameDedicatedServerRegistration_X_execHandlePerConDisconnect_Params HandlePerConDisconnect_Params;
	memcpy_s(&HandlePerConDisconnect_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFnHandlePerConDisconnect, &HandlePerConDisconnect_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandlePerConConnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetConnection_X*     Connection                     (CPF_Parm)

void UOnlineGameDedicatedServerRegistration_X::HandlePerConConnect(class UPsyNetConnection_X* Connection)
{
	static UFunction* uFnHandlePerConConnect = nullptr;

	if (!uFnHandlePerConConnect)
	{
		uFnHandlePerConConnect = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandlePerConConnect");
	}

	UOnlineGameDedicatedServerRegistration_X_execHandlePerConConnect_Params HandlePerConConnect_Params;
	memcpy_s(&HandlePerConConnect_Params.Connection, 0x8, &Connection, 0x8);

	this->ProcessEvent(uFnHandlePerConConnect, &HandlePerConConnect_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.ConnectToPerCon
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::ConnectToPerCon()
{
	static UFunction* uFnConnectToPerCon = nullptr;

	if (!uFnConnectToPerCon)
	{
		uFnConnectToPerCon = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.ConnectToPerCon");
	}

	UOnlineGameDedicatedServerRegistration_X_execConnectToPerCon_Params ConnectToPerCon_Params;

	this->ProcessEvent(uFnConnectToPerCon, &ConnectToPerCon_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleCreateServerSucces
// [0x20880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* RPC                            (CPF_Parm)

void UOnlineGameDedicatedServerRegistration_X::HandleCreateServerSucces(class URPC_CreateGameServer_X* RPC)
{
	static UFunction* uFnHandleCreateServerSucces = nullptr;

	if (!uFnHandleCreateServerSucces)
	{
		uFnHandleCreateServerSucces = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleCreateServerSucces");
	}

	UOnlineGameDedicatedServerRegistration_X_execHandleCreateServerSucces_Params HandleCreateServerSucces_Params;
	memcpy_s(&HandleCreateServerSucces_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleCreateServerSucces, &HandleCreateServerSucces_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.SetServerNotJoinable
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::SetServerNotJoinable()
{
	static UFunction* uFnSetServerNotJoinable = nullptr;

	if (!uFnSetServerNotJoinable)
	{
		uFnSetServerNotJoinable = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.SetServerNotJoinable");
	}

	UOnlineGameDedicatedServerRegistration_X_execSetServerNotJoinable_Params SetServerNotJoinable_Params;

	this->ProcessEvent(uFnSetServerNotJoinable, &SetServerNotJoinable_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HasBackfillPolicy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameDedicatedServerRegistration_X::HasBackfillPolicy()
{
	static UFunction* uFnHasBackfillPolicy = nullptr;

	if (!uFnHasBackfillPolicy)
	{
		uFnHasBackfillPolicy = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HasBackfillPolicy");
	}

	UOnlineGameDedicatedServerRegistration_X_execHasBackfillPolicy_Params HasBackfillPolicy_Params;

	this->ProcessEvent(uFnHasBackfillPolicy, &HasBackfillPolicy_Params, nullptr);

	return HasBackfillPolicy_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetBackfillAmount
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        BackfillTeam1                  (CPF_Parm | CPF_OutParm)
// int32_t                        BackfillTeam2                  (CPF_Parm | CPF_OutParm)

void UOnlineGameDedicatedServerRegistration_X::GetBackfillAmount(int32_t& BackfillTeam1, int32_t& BackfillTeam2)
{
	static UFunction* uFnGetBackfillAmount = nullptr;

	if (!uFnGetBackfillAmount)
	{
		uFnGetBackfillAmount = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetBackfillAmount");
	}

	UOnlineGameDedicatedServerRegistration_X_execGetBackfillAmount_Params GetBackfillAmount_Params;
	memcpy_s(&GetBackfillAmount_Params.BackfillTeam1, 0x4, &BackfillTeam1, 0x4);
	memcpy_s(&GetBackfillAmount_Params.BackfillTeam2, 0x4, &BackfillTeam2, 0x4);

	this->ProcessEvent(uFnGetBackfillAmount, &GetBackfillAmount_Params, nullptr);

	memcpy_s(&BackfillTeam1, 0x4, &GetBackfillAmount_Params.BackfillTeam1, 0x4);
	memcpy_s(&BackfillTeam2, 0x4, &GetBackfillAmount_Params.BackfillTeam2, 0x4);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendUpdateServerRPC
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::SendUpdateServerRPC()
{
	static UFunction* uFnSendUpdateServerRPC = nullptr;

	if (!uFnSendUpdateServerRPC)
	{
		uFnSendUpdateServerRPC = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendUpdateServerRPC");
	}

	UOnlineGameDedicatedServerRegistration_X_execSendUpdateServerRPC_Params SendUpdateServerRPC_Params;

	this->ProcessEvent(uFnSendUpdateServerRPC, &SendUpdateServerRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetServerType
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameDedicatedServerRegistration_X::GetServerType()
{
	static UFunction* uFnGetServerType = nullptr;

	if (!uFnGetServerType)
	{
		uFnGetServerType = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.GetServerType");
	}

	UOnlineGameDedicatedServerRegistration_X_execGetServerType_Params GetServerType_Params;

	this->ProcessEvent(uFnGetServerType, &GetServerType_Params, nullptr);

	return GetServerType_Params.ReturnValue;
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendCreateServerRPC
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::SendCreateServerRPC()
{
	static UFunction* uFnSendCreateServerRPC = nullptr;

	if (!uFnSendCreateServerRPC)
	{
		uFnSendCreateServerRPC = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendCreateServerRPC");
	}

	UOnlineGameDedicatedServerRegistration_X_execSendCreateServerRPC_Params SendCreateServerRPC_Params;

	this->ProcessEvent(uFnSendCreateServerRPC, &SendCreateServerRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendUpdateRequest
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::SendUpdateRequest()
{
	static UFunction* uFnSendUpdateRequest = nullptr;

	if (!uFnSendUpdateRequest)
	{
		uFnSendUpdateRequest = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.SendUpdateRequest");
	}

	UOnlineGameDedicatedServerRegistration_X_execSendUpdateRequest_Params SendUpdateRequest_Params;

	this->ProcessEvent(uFnSendUpdateRequest, &SendUpdateRequest_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.UpdateServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::UpdateServer()
{
	static UFunction* uFnUpdateServer = nullptr;

	if (!uFnUpdateServer)
	{
		uFnUpdateServer = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.UpdateServer");
	}

	UOnlineGameDedicatedServerRegistration_X_execUpdateServer_Params UpdateServer_Params;

	this->ProcessEvent(uFnUpdateServer, &UpdateServer_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.ForceUpdateServer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::ForceUpdateServer()
{
	static UFunction* uFnForceUpdateServer = nullptr;

	if (!uFnForceUpdateServer)
	{
		uFnForceUpdateServer = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.ForceUpdateServer");
	}

	UOnlineGameDedicatedServerRegistration_X_execForceUpdateServer_Params ForceUpdateServer_Params;

	this->ProcessEvent(uFnForceUpdateServer, &ForceUpdateServer_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleConfigUpdate
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::HandleConfigUpdate()
{
	static UFunction* uFnHandleConfigUpdate = nullptr;

	if (!uFnHandleConfigUpdate)
	{
		uFnHandleConfigUpdate = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.HandleConfigUpdate");
	}

	UOnlineGameDedicatedServerRegistration_X_execHandleConfigUpdate_Params HandleConfigUpdate_Params;

	this->ProcessEvent(uFnHandleConfigUpdate, &HandleConfigUpdate_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.UnregisterServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::UnregisterServer()
{
	static UFunction* uFnUnregisterServer = nullptr;

	if (!uFnUnregisterServer)
	{
		uFnUnregisterServer = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.UnregisterServer");
	}

	UOnlineGameDedicatedServerRegistration_X_execUnregisterServer_Params UnregisterServer_Params;

	this->ProcessEvent(uFnUnregisterServer, &UnregisterServer_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.RegisterServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::RegisterServer()
{
	static UFunction* uFnRegisterServer = nullptr;

	if (!uFnRegisterServer)
	{
		uFnRegisterServer = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.RegisterServer");
	}

	UOnlineGameDedicatedServerRegistration_X_execRegisterServer_Params RegisterServer_Params;

	this->ProcessEvent(uFnRegisterServer, &RegisterServer_Params, nullptr);
};

// Function ProjectX.OnlineGameDedicatedServerRegistration_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameDedicatedServerRegistration_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameDedicatedServerRegistration_X.OnInit");
	}

	UOnlineGameDedicatedServerRegistration_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.GFxModal_X.NotifyOnClosed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UGFxModal_X* UGFxModal_X::NotifyOnClosed(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyOnClosed = nullptr;

	if (!uFnNotifyOnClosed)
	{
		uFnNotifyOnClosed = UFunction::FindFunction("Function ProjectX.GFxModal_X.NotifyOnClosed");
	}

	UGFxModal_X_execNotifyOnClosed_Params NotifyOnClosed_Params;
	memcpy_s(&NotifyOnClosed_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyOnClosed, &NotifyOnClosed_Params, nullptr);

	return NotifyOnClosed_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.Close
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UGFxModal_X::Close()
{
	static UFunction* uFnClose = nullptr;

	if (!uFnClose)
	{
		uFnClose = UFunction::FindFunction("Function ProjectX.GFxModal_X.Close");
	}

	UGFxModal_X_execClose_Params Close_Params;

	this->ProcessEvent(uFnClose, &Close_Params, nullptr);
};

// Function ProjectX.GFxModal_X.FlashAddButton
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class FString                  Label                          (CPF_Parm | CPF_NeedCtorLink)

void UGFxModal_X::FlashAddButton(class FString Label)
{
	static UFunction* uFnFlashAddButton = nullptr;

	if (!uFnFlashAddButton)
	{
		uFnFlashAddButton = UFunction::FindFunction("Function ProjectX.GFxModal_X.FlashAddButton");
	}

	UGFxModal_X_execFlashAddButton_Params FlashAddButton_Params;
	memcpy_s(&FlashAddButton_Params.Label, 0x10, &Label, 0x10);

	this->ProcessEvent(uFnFlashAddButton, &FlashAddButton_Params, nullptr);
};

// Function ProjectX.GFxModal_X.FlashAddCancelButton
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  LocalizedText                  (CPF_Parm | CPF_NeedCtorLink)

void UGFxModal_X::FlashAddCancelButton(class FString LocalizedText)
{
	static UFunction* uFnFlashAddCancelButton = nullptr;

	if (!uFnFlashAddCancelButton)
	{
		uFnFlashAddCancelButton = UFunction::FindFunction("Function ProjectX.GFxModal_X.FlashAddCancelButton");
	}

	UGFxModal_X_execFlashAddCancelButton_Params FlashAddCancelButton_Params;
	memcpy_s(&FlashAddCancelButton_Params.LocalizedText, 0x10, &LocalizedText, 0x10);

	this->ProcessEvent(uFnFlashAddCancelButton, &FlashAddCancelButton_Params, nullptr);
};

// Function ProjectX.GFxModal_X.HandleButtonClicked
// [0x00088002] (FUNC_RequiredAPI | FUNC_UbergraphFunction | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        Index                          (CPF_Parm)

void UGFxModal_X::HandleButtonClicked(int32_t Index)
{
	static UFunction* uFnHandleButtonClicked = nullptr;

	if (!uFnHandleButtonClicked)
	{
		uFnHandleButtonClicked = UFunction::FindFunction("Function ProjectX.GFxModal_X.HandleButtonClicked");
	}

	UGFxModal_X_execHandleButtonClicked_Params HandleButtonClicked_Params;
	memcpy_s(&HandleButtonClicked_Params.Index, 0x4, &Index, 0x4);

	this->ProcessEvent(uFnHandleButtonClicked, &HandleButtonClicked_Params, nullptr);
};

// Function ProjectX.GFxModal_X.AddButtonCallback
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Index                          (CPF_Parm)
// struct FScriptDelegate         OnClick                        (CPF_Parm | CPF_NeedCtorLink)

class UGFxModal_X* UGFxModal_X::AddButtonCallback(int32_t Index, struct FScriptDelegate OnClick)
{
	static UFunction* uFnAddButtonCallback = nullptr;

	if (!uFnAddButtonCallback)
	{
		uFnAddButtonCallback = UFunction::FindFunction("Function ProjectX.GFxModal_X.AddButtonCallback");
	}

	UGFxModal_X_execAddButtonCallback_Params AddButtonCallback_Params;
	memcpy_s(&AddButtonCallback_Params.Index, 0x4, &Index, 0x4);
	memcpy_s(&AddButtonCallback_Params.OnClick, 0x18, &OnClick, 0x18);

	this->ProcessEvent(uFnAddButtonCallback, &AddButtonCallback_Params, nullptr);

	return AddButtonCallback_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.AddButton
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Label                          (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnClick                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class UGFxModal_X* UGFxModal_X::AddButton(class FString Label, struct FScriptDelegate OnClick)
{
	static UFunction* uFnAddButton = nullptr;

	if (!uFnAddButton)
	{
		uFnAddButton = UFunction::FindFunction("Function ProjectX.GFxModal_X.AddButton");
	}

	UGFxModal_X_execAddButton_Params AddButton_Params;
	memcpy_s(&AddButton_Params.Label, 0x10, &Label, 0x10);
	memcpy_s(&AddButton_Params.OnClick, 0x18, &OnClick, 0x18);

	this->ProcessEvent(uFnAddButton, &AddButton_Params, nullptr);

	return AddButton_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.AddCancelButton
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  LocalizedText                  (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         OnClick                        (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class UGFxModal_X* UGFxModal_X::AddCancelButton(class FString LocalizedText, struct FScriptDelegate OnClick)
{
	static UFunction* uFnAddCancelButton = nullptr;

	if (!uFnAddCancelButton)
	{
		uFnAddCancelButton = UFunction::FindFunction("Function ProjectX.GFxModal_X.AddCancelButton");
	}

	UGFxModal_X_execAddCancelButton_Params AddCancelButton_Params;
	memcpy_s(&AddCancelButton_Params.LocalizedText, 0x10, &LocalizedText, 0x10);
	memcpy_s(&AddCancelButton_Params.OnClick, 0x18, &OnClick, 0x18);

	this->ProcessEvent(uFnAddCancelButton, &AddCancelButton_Params, nullptr);

	return AddCancelButton_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.SetCancellable
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bCancellable                   (CPF_Parm)

class UGFxModal_X* UGFxModal_X::SetCancellable(unsigned long bCancellable)
{
	static UFunction* uFnSetCancellable = nullptr;

	if (!uFnSetCancellable)
	{
		uFnSetCancellable = UFunction::FindFunction("Function ProjectX.GFxModal_X.SetCancellable");
	}

	UGFxModal_X_execSetCancellable_Params SetCancellable_Params;
	SetCancellable_Params.bCancellable = bCancellable;

	this->ProcessEvent(uFnSetCancellable, &SetCancellable_Params, nullptr);

	return SetCancellable_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.SetDefaultSelectedButtonIndex
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        buttonIndex                    (CPF_Parm)

class UGFxModal_X* UGFxModal_X::SetDefaultSelectedButtonIndex(int32_t buttonIndex)
{
	static UFunction* uFnSetDefaultSelectedButtonIndex = nullptr;

	if (!uFnSetDefaultSelectedButtonIndex)
	{
		uFnSetDefaultSelectedButtonIndex = UFunction::FindFunction("Function ProjectX.GFxModal_X.SetDefaultSelectedButtonIndex");
	}

	UGFxModal_X_execSetDefaultSelectedButtonIndex_Params SetDefaultSelectedButtonIndex_Params;
	memcpy_s(&SetDefaultSelectedButtonIndex_Params.buttonIndex, 0x4, &buttonIndex, 0x4);

	this->ProcessEvent(uFnSetDefaultSelectedButtonIndex, &SetDefaultSelectedButtonIndex_Params, nullptr);

	return SetDefaultSelectedButtonIndex_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.SetIcon
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  IconName                       (CPF_Parm | CPF_NeedCtorLink)

class UGFxModal_X* UGFxModal_X::SetIcon(class FString IconName)
{
	static UFunction* uFnSetIcon = nullptr;

	if (!uFnSetIcon)
	{
		uFnSetIcon = UFunction::FindFunction("Function ProjectX.GFxModal_X.SetIcon");
	}

	UGFxModal_X_execSetIcon_Params SetIcon_Params;
	memcpy_s(&SetIcon_Params.IconName, 0x10, &IconName, 0x10);

	this->ProcessEvent(uFnSetIcon, &SetIcon_Params, nullptr);

	return SetIcon_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.SetBody
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  LocalizedText                  (CPF_Parm | CPF_NeedCtorLink)

class UGFxModal_X* UGFxModal_X::SetBody(class FString LocalizedText)
{
	static UFunction* uFnSetBody = nullptr;

	if (!uFnSetBody)
	{
		uFnSetBody = UFunction::FindFunction("Function ProjectX.GFxModal_X.SetBody");
	}

	UGFxModal_X_execSetBody_Params SetBody_Params;
	memcpy_s(&SetBody_Params.LocalizedText, 0x10, &LocalizedText, 0x10);

	this->ProcessEvent(uFnSetBody, &SetBody_Params, nullptr);

	return SetBody_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.SetTitle
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  LocalizedText                  (CPF_Parm | CPF_NeedCtorLink)

class UGFxModal_X* UGFxModal_X::SetTitle(class FString LocalizedText)
{
	static UFunction* uFnSetTitle = nullptr;

	if (!uFnSetTitle)
	{
		uFnSetTitle = UFunction::FindFunction("Function ProjectX.GFxModal_X.SetTitle");
	}

	UGFxModal_X_execSetTitle_Params SetTitle_Params;
	memcpy_s(&SetTitle_Params.LocalizedText, 0x10, &LocalizedText, 0x10);

	this->ProcessEvent(uFnSetTitle, &SetTitle_Params, nullptr);

	return SetTitle_Params.ReturnValue;
};

// Function ProjectX.GFxModal_X.SetGFxObject
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UGFxObject*              Obj                            (CPF_Parm)

void UGFxModal_X::SetGFxObject(class UGFxObject* Obj)
{
	static UFunction* uFnSetGFxObject = nullptr;

	if (!uFnSetGFxObject)
	{
		uFnSetGFxObject = UFunction::FindFunction("Function ProjectX.GFxModal_X.SetGFxObject");
	}

	UGFxModal_X_execSetGFxObject_Params SetGFxObject_Params;
	memcpy_s(&SetGFxObject_Params.Obj, 0x8, &Obj, 0x8);

	this->ProcessEvent(uFnSetGFxObject, &SetGFxObject_Params, nullptr);
};

// Function ProjectX.GFxModal_X.EventClosed
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             Modal                          (CPF_Parm)

void UGFxModal_X::EventClosed(class UGFxModal_X* Modal)
{
	static UFunction* uFnEventClosed = nullptr;

	if (!uFnEventClosed)
	{
		uFnEventClosed = UFunction::FindFunction("Function ProjectX.GFxModal_X.EventClosed");
	}

	UGFxModal_X_execEventClosed_Params EventClosed_Params;
	memcpy_s(&EventClosed_Params.Modal, 0x8, &Modal, 0x8);

	this->ProcessEvent(uFnEventClosed, &EventClosed_Params, nullptr);
};

// Function ProjectX.GFxModal_X.ClickDelegate
// [0x00180001] (FUNC_Final | FUNC_Protected | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UGFxModal_X*             Modal                          (CPF_Parm)

void UGFxModal_X::ClickDelegate(class UGFxModal_X* Modal)
{
	static UFunction* uFnClickDelegate = nullptr;

	if (!uFnClickDelegate)
	{
		uFnClickDelegate = UFunction::FindFunction("Function ProjectX.GFxModal_X.ClickDelegate");
	}

	UGFxModal_X_execClickDelegate_Params ClickDelegate_Params;
	memcpy_s(&ClickDelegate_Params.Modal, 0x8, &Modal, 0x8);

	this->ProcessEvent(uFnClickDelegate, &ClickDelegate_Params, nullptr);
};

// Function ProjectX.ICabinedOrGuest.IsInCabinedModeOrGuest
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UICabinedOrGuest::IsInCabinedModeOrGuest()
{
	static UFunction* uFnIsInCabinedModeOrGuest = nullptr;

	if (!uFnIsInCabinedModeOrGuest)
	{
		uFnIsInCabinedModeOrGuest = UFunction::FindFunction("Function ProjectX.ICabinedOrGuest.IsInCabinedModeOrGuest");
	}

	UICabinedOrGuest_execIsInCabinedModeOrGuest_Params IsInCabinedModeOrGuest_Params;

	this->ProcessEvent(uFnIsInCabinedModeOrGuest, &IsInCabinedModeOrGuest_Params, nullptr);

	return IsInCabinedModeOrGuest_Params.ReturnValue;
};

// Function ProjectX.IOnlineGamePlaylists_X.IsNonStandardPlaylistName
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

bool UIOnlineGamePlaylists_X::IsNonStandardPlaylistName(struct FName PlaylistName)
{
	static UFunction* uFnIsNonStandardPlaylistName = nullptr;

	if (!uFnIsNonStandardPlaylistName)
	{
		uFnIsNonStandardPlaylistName = UFunction::FindFunction("Function ProjectX.IOnlineGamePlaylists_X.IsNonStandardPlaylistName");
	}

	UIOnlineGamePlaylists_X_execIsNonStandardPlaylistName_Params IsNonStandardPlaylistName_Params;
	memcpy_s(&IsNonStandardPlaylistName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnIsNonStandardPlaylistName, &IsNonStandardPlaylistName_Params, nullptr);

	return IsNonStandardPlaylistName_Params.ReturnValue;
};

// Function ProjectX.IOnlineGamePlaylists_X.IsStandardPlaylistName
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

bool UIOnlineGamePlaylists_X::IsStandardPlaylistName(struct FName PlaylistName)
{
	static UFunction* uFnIsStandardPlaylistName = nullptr;

	if (!uFnIsStandardPlaylistName)
	{
		uFnIsStandardPlaylistName = UFunction::FindFunction("Function ProjectX.IOnlineGamePlaylists_X.IsStandardPlaylistName");
	}

	UIOnlineGamePlaylists_X_execIsStandardPlaylistName_Params IsStandardPlaylistName_Params;
	memcpy_s(&IsStandardPlaylistName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnIsStandardPlaylistName, &IsStandardPlaylistName_Params, nullptr);

	return IsStandardPlaylistName_Params.ReturnValue;
};

// Function ProjectX.IOnlineGamePlaylists_X.IsUnrankedPlaylistName
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

bool UIOnlineGamePlaylists_X::IsUnrankedPlaylistName(struct FName PlaylistName)
{
	static UFunction* uFnIsUnrankedPlaylistName = nullptr;

	if (!uFnIsUnrankedPlaylistName)
	{
		uFnIsUnrankedPlaylistName = UFunction::FindFunction("Function ProjectX.IOnlineGamePlaylists_X.IsUnrankedPlaylistName");
	}

	UIOnlineGamePlaylists_X_execIsUnrankedPlaylistName_Params IsUnrankedPlaylistName_Params;
	memcpy_s(&IsUnrankedPlaylistName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnIsUnrankedPlaylistName, &IsUnrankedPlaylistName_Params, nullptr);

	return IsUnrankedPlaylistName_Params.ReturnValue;
};

// Function ProjectX.IOnlineGamePlaylists_X.IsRankedPlaylistName
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

bool UIOnlineGamePlaylists_X::IsRankedPlaylistName(struct FName PlaylistName)
{
	static UFunction* uFnIsRankedPlaylistName = nullptr;

	if (!uFnIsRankedPlaylistName)
	{
		uFnIsRankedPlaylistName = UFunction::FindFunction("Function ProjectX.IOnlineGamePlaylists_X.IsRankedPlaylistName");
	}

	UIOnlineGamePlaylists_X_execIsRankedPlaylistName_Params IsRankedPlaylistName_Params;
	memcpy_s(&IsRankedPlaylistName_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnIsRankedPlaylistName, &IsRankedPlaylistName_Params, nullptr);

	return IsRankedPlaylistName_Params.ReturnValue;
};

// Function ProjectX.IOnlineGamePlaylists_X.IdToName
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        PlaylistId                     (CPF_Parm)

struct FName UIOnlineGamePlaylists_X::IdToName(int32_t PlaylistId)
{
	static UFunction* uFnIdToName = nullptr;

	if (!uFnIdToName)
	{
		uFnIdToName = UFunction::FindFunction("Function ProjectX.IOnlineGamePlaylists_X.IdToName");
	}

	UIOnlineGamePlaylists_X_execIdToName_Params IdToName_Params;
	memcpy_s(&IdToName_Params.PlaylistId, 0x4, &PlaylistId, 0x4);

	this->ProcessEvent(uFnIdToName, &IdToName_Params, nullptr);

	return IdToName_Params.ReturnValue;
};

// Function ProjectX.IOnlineGamePlaylists_X.NameToId
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PlaylistName                   (CPF_Parm)

int32_t UIOnlineGamePlaylists_X::NameToId(struct FName PlaylistName)
{
	static UFunction* uFnNameToId = nullptr;

	if (!uFnNameToId)
	{
		uFnNameToId = UFunction::FindFunction("Function ProjectX.IOnlineGamePlaylists_X.NameToId");
	}

	UIOnlineGamePlaylists_X_execNameToId_Params NameToId_Params;
	memcpy_s(&NameToId_Params.PlaylistName, 0x8, &PlaylistName, 0x8);

	this->ProcessEvent(uFnNameToId, &NameToId_Params, nullptr);

	return NameToId_Params.ReturnValue;
};

// Function ProjectX.IOnlineGamePlaylists_X.GetAccessiblePlaylists
// [0x00420000] (FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FName>           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// TArray<struct FName>           SelectedPlaylists              (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

TArray<struct FName> UIOnlineGamePlaylists_X::GetAccessiblePlaylists(TArray<struct FName>& SelectedPlaylists)
{
	static UFunction* uFnGetAccessiblePlaylists = nullptr;

	if (!uFnGetAccessiblePlaylists)
	{
		uFnGetAccessiblePlaylists = UFunction::FindFunction("Function ProjectX.IOnlineGamePlaylists_X.GetAccessiblePlaylists");
	}

	UIOnlineGamePlaylists_X_execGetAccessiblePlaylists_Params GetAccessiblePlaylists_Params;
	memcpy_s(&GetAccessiblePlaylists_Params.SelectedPlaylists, 0x10, &SelectedPlaylists, 0x10);

	this->ProcessEvent(uFnGetAccessiblePlaylists, &GetAccessiblePlaylists_Params, nullptr);

	memcpy_s(&SelectedPlaylists, 0x10, &GetAccessiblePlaylists_Params.SelectedPlaylists, 0x10);

	return GetAccessiblePlaylists_Params.ReturnValue;
};

// Function ProjectX.LanMessage_X.Broadcast
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool ULanMessage_X::Broadcast()
{
	static UFunction* uFnBroadcast = nullptr;

	if (!uFnBroadcast)
	{
		uFnBroadcast = UFunction::FindFunction("Function ProjectX.LanMessage_X.Broadcast");
	}

	ULanMessage_X_execBroadcast_Params Broadcast_Params;

	this->ProcessEvent(uFnBroadcast, &Broadcast_Params, nullptr);

	return Broadcast_Params.ReturnValue;
};

// Function ProjectX.LanMessage_X.SetNonce
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULanMessage_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       InNonce                        (CPF_Parm)

class ULanMessage_X* ULanMessage_X::SetNonce(uint64_t InNonce)
{
	static UFunction* uFnSetNonce = nullptr;

	if (!uFnSetNonce)
	{
		uFnSetNonce = UFunction::FindFunction("Function ProjectX.LanMessage_X.SetNonce");
	}

	ULanMessage_X_execSetNonce_Params SetNonce_Params;
	SetNonce_Params.InNonce = InNonce;

	this->ProcessEvent(uFnSetNonce, &SetNonce_Params, nullptr);

	return SetNonce_Params.ReturnValue;
};

// Function ProjectX.LanMessage_HostQuery_X.SetHost
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULanMessage_HostQuery_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bValue                         (CPF_Parm)

class ULanMessage_HostQuery_X* ULanMessage_HostQuery_X::SetHost(unsigned long bValue)
{
	static UFunction* uFnSetHost = nullptr;

	if (!uFnSetHost)
	{
		uFnSetHost = UFunction::FindFunction("Function ProjectX.LanMessage_HostQuery_X.SetHost");
	}

	ULanMessage_HostQuery_X_execSetHost_Params SetHost_Params;
	SetHost_Params.bValue = bValue;

	this->ProcessEvent(uFnSetHost, &SetHost_Params, nullptr);

	return SetHost_Params.ReturnValue;
};

// Function ProjectX.LanMessage_HostQuery_X.SetBuildID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULanMessage_HostQuery_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InBuildID                      (CPF_Parm)

class ULanMessage_HostQuery_X* ULanMessage_HostQuery_X::SetBuildID(int32_t InBuildID)
{
	static UFunction* uFnSetBuildID = nullptr;

	if (!uFnSetBuildID)
	{
		uFnSetBuildID = UFunction::FindFunction("Function ProjectX.LanMessage_HostQuery_X.SetBuildID");
	}

	ULanMessage_HostQuery_X_execSetBuildID_Params SetBuildID_Params;
	memcpy_s(&SetBuildID_Params.InBuildID, 0x4, &InBuildID, 0x4);

	this->ProcessEvent(uFnSetBuildID, &SetBuildID_Params, nullptr);

	return SetBuildID_Params.ReturnValue;
};

// Function ProjectX.LanMessage_HostQuery_X.SetFilter
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULanMessage_HostQuery_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FCustomMatchSettings    InFilter                       (CPF_Parm | CPF_NeedCtorLink)

class ULanMessage_HostQuery_X* ULanMessage_HostQuery_X::SetFilter(struct FCustomMatchSettings InFilter)
{
	static UFunction* uFnSetFilter = nullptr;

	if (!uFnSetFilter)
	{
		uFnSetFilter = UFunction::FindFunction("Function ProjectX.LanMessage_HostQuery_X.SetFilter");
	}

	ULanMessage_HostQuery_X_execSetFilter_Params SetFilter_Params;
	memcpy_s(&SetFilter_Params.InFilter, 0x90, &InFilter, 0x90);

	this->ProcessEvent(uFnSetFilter, &SetFilter_Params, nullptr);

	return SetFilter_Params.ReturnValue;
};

// Function ProjectX.LanMessage_HostResponse_X.GetDebugString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString ULanMessage_HostResponse_X::GetDebugString()
{
	static UFunction* uFnGetDebugString = nullptr;

	if (!uFnGetDebugString)
	{
		uFnGetDebugString = UFunction::FindFunction("Function ProjectX.LanMessage_HostResponse_X.GetDebugString");
	}

	ULanMessage_HostResponse_X_execGetDebugString_Params GetDebugString_Params;

	this->ProcessEvent(uFnGetDebugString, &GetDebugString_Params, nullptr);

	return GetDebugString_Params.ReturnValue;
};

// Function ProjectX.LanMessage_HostResponse_X.SetMetaData
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULanMessage_HostResponse_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMetaData                     (CPF_Parm | CPF_NeedCtorLink)

class ULanMessage_HostResponse_X* ULanMessage_HostResponse_X::SetMetaData(class FString InMetaData)
{
	static UFunction* uFnSetMetaData = nullptr;

	if (!uFnSetMetaData)
	{
		uFnSetMetaData = UFunction::FindFunction("Function ProjectX.LanMessage_HostResponse_X.SetMetaData");
	}

	ULanMessage_HostResponse_X_execSetMetaData_Params SetMetaData_Params;
	memcpy_s(&SetMetaData_Params.InMetaData, 0x10, &InMetaData, 0x10);

	this->ProcessEvent(uFnSetMetaData, &SetMetaData_Params, nullptr);

	return SetMetaData_Params.ReturnValue;
};

// Function ProjectX.LanMessage_HostResponse_X.SetServerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULanMessage_HostResponse_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerID                     (CPF_Parm | CPF_NeedCtorLink)

class ULanMessage_HostResponse_X* ULanMessage_HostResponse_X::SetServerID(class FString InServerID)
{
	static UFunction* uFnSetServerID = nullptr;

	if (!uFnSetServerID)
	{
		uFnSetServerID = UFunction::FindFunction("Function ProjectX.LanMessage_HostResponse_X.SetServerID");
	}

	ULanMessage_HostResponse_X_execSetServerID_Params SetServerID_Params;
	memcpy_s(&SetServerID_Params.InServerID, 0x10, &InServerID, 0x10);

	this->ProcessEvent(uFnSetServerID, &SetServerID_Params, nullptr);

	return SetServerID_Params.ReturnValue;
};

// Function ProjectX.LanMessage_HostResponse_X.SetResult
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class ULanMessage_HostResponse_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FServerResult           InResult                       (CPF_Parm | CPF_NeedCtorLink)

class ULanMessage_HostResponse_X* ULanMessage_HostResponse_X::SetResult(struct FServerResult InResult)
{
	static UFunction* uFnSetResult = nullptr;

	if (!uFnSetResult)
	{
		uFnSetResult = UFunction::FindFunction("Function ProjectX.LanMessage_HostResponse_X.SetResult");
	}

	ULanMessage_HostResponse_X_execSetResult_Params SetResult_Params;
	memcpy_s(&SetResult_Params.InResult, 0xB0, &InResult, 0xB0);

	this->ProcessEvent(uFnSetResult, &SetResult_Params, nullptr);

	return SetResult_Params.ReturnValue;
};

// Function ProjectX.LocalCacheTests_X.HandleLocalCacheImported
// [0x00042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class ULocalCache_X*           Cache                          (CPF_Parm)
// class UObject*                 CacheObject                    (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void ULocalCacheTests_X::HandleLocalCacheImported(class ULocalCache_X* Cache, class UObject* CacheObject, class UError* Error)
{
	static UFunction* uFnHandleLocalCacheImported = nullptr;

	if (!uFnHandleLocalCacheImported)
	{
		uFnHandleLocalCacheImported = UFunction::FindFunction("Function ProjectX.LocalCacheTests_X.HandleLocalCacheImported");
	}

	ULocalCacheTests_X_execHandleLocalCacheImported_Params HandleLocalCacheImported_Params;
	memcpy_s(&HandleLocalCacheImported_Params.Cache, 0x8, &Cache, 0x8);
	memcpy_s(&HandleLocalCacheImported_Params.CacheObject, 0x8, &CacheObject, 0x8);
	memcpy_s(&HandleLocalCacheImported_Params.Error, 0x8, &Error, 0x8);

	ULocalCacheTests_X::StaticClass()->ProcessEvent(uFnHandleLocalCacheImported, &HandleLocalCacheImported_Params, nullptr);
};

// Function ProjectX.LocalCacheTests_X.ImportTest
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void ULocalCacheTests_X::ImportTest()
{
	static UFunction* uFnImportTest = nullptr;

	if (!uFnImportTest)
	{
		uFnImportTest = UFunction::FindFunction("Function ProjectX.LocalCacheTests_X.ImportTest");
	}

	ULocalCacheTests_X_execImportTest_Params ImportTest_Params;

	ULocalCacheTests_X::StaticClass()->ProcessEvent(uFnImportTest, &ImportTest_Params, nullptr);
};

// Function ProjectX.LocalCacheTests_X.HandleLocalCacheExported
// [0x00042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class ULocalCache_X*           Cache                          (CPF_Parm)
// class UObject*                 CacheObject                    (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void ULocalCacheTests_X::HandleLocalCacheExported(class ULocalCache_X* Cache, class UObject* CacheObject, class UError* Error)
{
	static UFunction* uFnHandleLocalCacheExported = nullptr;

	if (!uFnHandleLocalCacheExported)
	{
		uFnHandleLocalCacheExported = UFunction::FindFunction("Function ProjectX.LocalCacheTests_X.HandleLocalCacheExported");
	}

	ULocalCacheTests_X_execHandleLocalCacheExported_Params HandleLocalCacheExported_Params;
	memcpy_s(&HandleLocalCacheExported_Params.Cache, 0x8, &Cache, 0x8);
	memcpy_s(&HandleLocalCacheExported_Params.CacheObject, 0x8, &CacheObject, 0x8);
	memcpy_s(&HandleLocalCacheExported_Params.Error, 0x8, &Error, 0x8);

	ULocalCacheTests_X::StaticClass()->ProcessEvent(uFnHandleLocalCacheExported, &HandleLocalCacheExported_Params, nullptr);
};

// Function ProjectX.LocalCacheTests_X.ToCacheAndBack
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        RandomSeed                     (CPF_Parm)

void ULocalCacheTests_X::ToCacheAndBack(int32_t RandomSeed)
{
	static UFunction* uFnToCacheAndBack = nullptr;

	if (!uFnToCacheAndBack)
	{
		uFnToCacheAndBack = UFunction::FindFunction("Function ProjectX.LocalCacheTests_X.ToCacheAndBack");
	}

	ULocalCacheTests_X_execToCacheAndBack_Params ToCacheAndBack_Params;
	memcpy_s(&ToCacheAndBack_Params.RandomSeed, 0x4, &RandomSeed, 0x4);

	ULocalCacheTests_X::StaticClass()->ProcessEvent(uFnToCacheAndBack, &ToCacheAndBack_Params, nullptr);
};

// Function ProjectX.MatchInfoMessage_X.GetReservation
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPsyNetBeaconReservation ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FPsyNetBeaconReservation UMatchInfoMessage_X::GetReservation()
{
	static UFunction* uFnGetReservation = nullptr;

	if (!uFnGetReservation)
	{
		uFnGetReservation = UFunction::FindFunction("Function ProjectX.MatchInfoMessage_X.GetReservation");
	}

	UMatchInfoMessage_X_execGetReservation_Params GetReservation_Params;

	this->ProcessEvent(uFnGetReservation, &GetReservation_Params, nullptr);

	return GetReservation_Params.ReturnValue;
};

// Function ProjectX.MatchLog_X.ConditionalSendWebRequest
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UMatchLog_X::ConditionalSendWebRequest()
{
	static UFunction* uFnConditionalSendWebRequest = nullptr;

	if (!uFnConditionalSendWebRequest)
	{
		uFnConditionalSendWebRequest = UFunction::FindFunction("Function ProjectX.MatchLog_X.ConditionalSendWebRequest");
	}

	UMatchLog_X_execConditionalSendWebRequest_Params ConditionalSendWebRequest_Params;

	this->ProcessEvent(uFnConditionalSendWebRequest, &ConditionalSendWebRequest_Params, nullptr);
};

// Function ProjectX.MatchLog_X.End
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        MaxSize                        (CPF_OptionalParm | CPF_Parm)

void UMatchLog_X::End(int32_t MaxSize)
{
	static UFunction* uFnEnd = nullptr;

	if (!uFnEnd)
	{
		uFnEnd = UFunction::FindFunction("Function ProjectX.MatchLog_X.End");
	}

	UMatchLog_X_execEnd_Params End_Params;
	memcpy_s(&End_Params.MaxSize, 0x4, &MaxSize, 0x4);

	this->ProcessEvent(uFnEnd, &End_Params, nullptr);
};

// Function ProjectX.MatchLog_X.SetURL
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  InURL                          (CPF_Parm | CPF_NeedCtorLink)

void UMatchLog_X::SetURL(class FString InURL)
{
	static UFunction* uFnSetURL = nullptr;

	if (!uFnSetURL)
	{
		uFnSetURL = UFunction::FindFunction("Function ProjectX.MatchLog_X.SetURL");
	}

	UMatchLog_X_execSetURL_Params SetURL_Params;
	memcpy_s(&SetURL_Params.InURL, 0x10, &InURL, 0x10);

	this->ProcessEvent(uFnSetURL, &SetURL_Params, nullptr);
};

// Function ProjectX.MatchLog_X.GetLogFileName
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UMatchLog_X::GetLogFileName()
{
	static UFunction* uFnGetLogFileName = nullptr;

	if (!uFnGetLogFileName)
	{
		uFnGetLogFileName = UFunction::FindFunction("Function ProjectX.MatchLog_X.GetLogFileName");
	}

	UMatchLog_X_execGetLogFileName_Params GetLogFileName_Params;

	this->ProcessEvent(uFnGetLogFileName, &GetLogFileName_Params, nullptr);

	return GetLogFileName_Params.ReturnValue;
};

// Function ProjectX.MatchLog_X.GetLogFileSize
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UMatchLog_X::GetLogFileSize()
{
	static UFunction* uFnGetLogFileSize = nullptr;

	if (!uFnGetLogFileSize)
	{
		uFnGetLogFileSize = UFunction::FindFunction("Function ProjectX.MatchLog_X.GetLogFileSize");
	}

	UMatchLog_X_execGetLogFileSize_Params GetLogFileSize_Params;

	this->ProcessEvent(uFnGetLogFileSize, &GetLogFileSize_Params, nullptr);

	return GetLogFileSize_Params.ReturnValue;
};

// Function ProjectX.MatchLog_X.Start
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UMatchLog_X::Start()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.MatchLog_X.Start");
	}

	UMatchLog_X_execStart_Params Start_Params;

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.GetActiveEffects
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UMaterialEffect_X::GetActiveEffects()
{
	static UFunction* uFnGetActiveEffects = nullptr;

	if (!uFnGetActiveEffects)
	{
		uFnGetActiveEffects = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.GetActiveEffects");
	}

	UMaterialEffect_X_execGetActiveEffects_Params GetActiveEffects_Params;

	this->ProcessEvent(uFnGetActiveEffects, &GetActiveEffects_Params, nullptr);

	return GetActiveEffects_Params.ReturnValue;
};

// Function ProjectX.MaterialEffect_X.HasAnyEffectsActive
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UMaterialEffect_X::HasAnyEffectsActive()
{
	static UFunction* uFnHasAnyEffectsActive = nullptr;

	if (!uFnHasAnyEffectsActive)
	{
		uFnHasAnyEffectsActive = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.HasAnyEffectsActive");
	}

	UMaterialEffect_X_execHasAnyEffectsActive_Params HasAnyEffectsActive_Params;

	this->ProcessEvent(uFnHasAnyEffectsActive, &HasAnyEffectsActive_Params, nullptr);

	return HasAnyEffectsActive_Params.ReturnValue;
};

// Function ProjectX.MaterialEffect_X.GetMaterialParameterValue
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   MaterialParamName              (CPF_Parm)

float UMaterialEffect_X::GetMaterialParameterValue(struct FName MaterialParamName)
{
	static UFunction* uFnGetMaterialParameterValue = nullptr;

	if (!uFnGetMaterialParameterValue)
	{
		uFnGetMaterialParameterValue = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.GetMaterialParameterValue");
	}

	UMaterialEffect_X_execGetMaterialParameterValue_Params GetMaterialParameterValue_Params;
	memcpy_s(&GetMaterialParameterValue_Params.MaterialParamName, 0x8, &MaterialParamName, 0x8);

	this->ProcessEvent(uFnGetMaterialParameterValue, &GetMaterialParameterValue_Params, nullptr);

	return GetMaterialParameterValue_Params.ReturnValue;
};

// Function ProjectX.MaterialEffect_X.SetMaterialParameterLinearColorValue
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   MaterialParamName              (CPF_Parm)
// struct FLinearColor            NewValue                       (CPF_Parm)

void UMaterialEffect_X::SetMaterialParameterLinearColorValue(struct FName MaterialParamName, struct FLinearColor NewValue)
{
	static UFunction* uFnSetMaterialParameterLinearColorValue = nullptr;

	if (!uFnSetMaterialParameterLinearColorValue)
	{
		uFnSetMaterialParameterLinearColorValue = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.SetMaterialParameterLinearColorValue");
	}

	UMaterialEffect_X_execSetMaterialParameterLinearColorValue_Params SetMaterialParameterLinearColorValue_Params;
	memcpy_s(&SetMaterialParameterLinearColorValue_Params.MaterialParamName, 0x8, &MaterialParamName, 0x8);
	memcpy_s(&SetMaterialParameterLinearColorValue_Params.NewValue, 0x10, &NewValue, 0x10);

	this->ProcessEvent(uFnSetMaterialParameterLinearColorValue, &SetMaterialParameterLinearColorValue_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.SetMaterialParameterValue
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   MaterialParamName              (CPF_Parm)
// float                          NewValue                       (CPF_Parm)

void UMaterialEffect_X::SetMaterialParameterValue(struct FName MaterialParamName, float NewValue)
{
	static UFunction* uFnSetMaterialParameterValue = nullptr;

	if (!uFnSetMaterialParameterValue)
	{
		uFnSetMaterialParameterValue = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.SetMaterialParameterValue");
	}

	UMaterialEffect_X_execSetMaterialParameterValue_Params SetMaterialParameterValue_Params;
	memcpy_s(&SetMaterialParameterValue_Params.MaterialParamName, 0x8, &MaterialParamName, 0x8);
	memcpy_s(&SetMaterialParameterValue_Params.NewValue, 0x4, &NewValue, 0x4);

	this->ProcessEvent(uFnSetMaterialParameterValue, &SetMaterialParameterValue_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.HandleParametersChanged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UMaterialEffect_X::HandleParametersChanged()
{
	static UFunction* uFnHandleParametersChanged = nullptr;

	if (!uFnHandleParametersChanged)
	{
		uFnHandleParametersChanged = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.HandleParametersChanged");
	}

	UMaterialEffect_X_execHandleParametersChanged_Params HandleParametersChanged_Params;

	this->ProcessEvent(uFnHandleParametersChanged, &HandleParametersChanged_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.UpdateFade
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// float                          Alpha                          (CPF_Parm)

void UMaterialEffect_X::UpdateFade(float Alpha)
{
	static UFunction* uFnUpdateFade = nullptr;

	if (!uFnUpdateFade)
	{
		uFnUpdateFade = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.UpdateFade");
	}

	UMaterialEffect_X_execUpdateFade_Params UpdateFade_Params;
	memcpy_s(&UpdateFade_Params.Alpha, 0x4, &Alpha, 0x4);

	this->ProcessEvent(uFnUpdateFade, &UpdateFade_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.SetStage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// uint8_t                        NewStage                       (CPF_Parm)

void UMaterialEffect_X::SetStage(uint8_t NewStage)
{
	static UFunction* uFnSetStage = nullptr;

	if (!uFnSetStage)
	{
		uFnSetStage = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.SetStage");
	}

	UMaterialEffect_X_execSetStage_Params SetStage_Params;
	memcpy_s(&SetStage_Params.NewStage, 0x1, &NewStage, 0x1);

	this->ProcessEvent(uFnSetStage, &SetStage_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.Tick
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          dt                             (CPF_Parm)

bool UMaterialEffect_X::Tick(float dt)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.Tick");
	}

	UMaterialEffect_X_execTick_Params Tick_Params;
	memcpy_s(&Tick_Params.dt, 0x4, &dt, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);

	return Tick_Params.ReturnValue;
};

// Function ProjectX.MaterialEffect_X.End
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UMaterialEffect_X::End()
{
	static UFunction* uFnEnd = nullptr;

	if (!uFnEnd)
	{
		uFnEnd = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.End");
	}

	UMaterialEffect_X_execEnd_Params End_Params;

	this->ProcessEvent(uFnEnd, &End_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.Start
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UMaterialEffect_X::Start()
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.Start");
	}

	UMaterialEffect_X_execStart_Params Start_Params;

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UMaterialEffect_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.Init");
	}

	UMaterialEffect_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.MaterialEffect_X.IsInitialized
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UMaterialEffect_X::IsInitialized()
{
	static UFunction* uFnIsInitialized = nullptr;

	if (!uFnIsInitialized)
	{
		uFnIsInitialized = UFunction::FindFunction("Function ProjectX.MaterialEffect_X.IsInitialized");
	}

	UMaterialEffect_X_execIsInitialized_Params IsInitialized_Params;

	this->ProcessEvent(uFnIsInitialized, &IsInitialized_Params, nullptr);

	return IsInitialized_Params.ReturnValue;
};

// Function ProjectX.MirrorUtils_X.MirrorRotatorYaw
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FRotator                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FRotator                InRotator                      (CPF_Parm)
// struct FRotator                InMirrorAngle                  (CPF_Parm)

struct FRotator UMirrorUtils_X::MirrorRotatorYaw(struct FRotator InRotator, struct FRotator InMirrorAngle)
{
	static UFunction* uFnMirrorRotatorYaw = nullptr;

	if (!uFnMirrorRotatorYaw)
	{
		uFnMirrorRotatorYaw = UFunction::FindFunction("Function ProjectX.MirrorUtils_X.MirrorRotatorYaw");
	}

	UMirrorUtils_X_execMirrorRotatorYaw_Params MirrorRotatorYaw_Params;
	memcpy_s(&MirrorRotatorYaw_Params.InRotator, 0xC, &InRotator, 0xC);
	memcpy_s(&MirrorRotatorYaw_Params.InMirrorAngle, 0xC, &InMirrorAngle, 0xC);

	UMirrorUtils_X::StaticClass()->ProcessEvent(uFnMirrorRotatorYaw, &MirrorRotatorYaw_Params, nullptr);

	return MirrorRotatorYaw_Params.ReturnValue;
};

// Function ProjectX.MirrorUtils_X.MirrorVectorXY
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FVector                 InVectorToMirror               (CPF_Parm)
// struct FVector                 InMirrorPoint                  (CPF_Parm)
// struct FVector                 InMirrorNormal                 (CPF_Parm)

struct FVector UMirrorUtils_X::MirrorVectorXY(struct FVector InVectorToMirror, struct FVector InMirrorPoint, struct FVector InMirrorNormal)
{
	static UFunction* uFnMirrorVectorXY = nullptr;

	if (!uFnMirrorVectorXY)
	{
		uFnMirrorVectorXY = UFunction::FindFunction("Function ProjectX.MirrorUtils_X.MirrorVectorXY");
	}

	UMirrorUtils_X_execMirrorVectorXY_Params MirrorVectorXY_Params;
	memcpy_s(&MirrorVectorXY_Params.InVectorToMirror, 0xC, &InVectorToMirror, 0xC);
	memcpy_s(&MirrorVectorXY_Params.InMirrorPoint, 0xC, &InMirrorPoint, 0xC);
	memcpy_s(&MirrorVectorXY_Params.InMirrorNormal, 0xC, &InMirrorNormal, 0xC);

	UMirrorUtils_X::StaticClass()->ProcessEvent(uFnMirrorVectorXY, &MirrorVectorXY_Params, nullptr);

	return MirrorVectorXY_Params.ReturnValue;
};

// Function ProjectX.MirrorUtils_X.CalculateMirrorLocationNormal
// [0x00822003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FVector                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FRotator                InMirrorAngle                  (CPF_Parm)

struct FVector UMirrorUtils_X::CalculateMirrorLocationNormal(struct FRotator InMirrorAngle)
{
	static UFunction* uFnCalculateMirrorLocationNormal = nullptr;

	if (!uFnCalculateMirrorLocationNormal)
	{
		uFnCalculateMirrorLocationNormal = UFunction::FindFunction("Function ProjectX.MirrorUtils_X.CalculateMirrorLocationNormal");
	}

	UMirrorUtils_X_execCalculateMirrorLocationNormal_Params CalculateMirrorLocationNormal_Params;
	memcpy_s(&CalculateMirrorLocationNormal_Params.InMirrorAngle, 0xC, &InMirrorAngle, 0xC);

	UMirrorUtils_X::StaticClass()->ProcessEvent(uFnCalculateMirrorLocationNormal, &CalculateMirrorLocationNormal_Params, nullptr);

	return CalculateMirrorLocationNormal_Params.ReturnValue;
};

// Function ProjectX.NetMetricsSystem_X.Exit
// [0x100042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UPreExitEvent_X*         Event                          (CPF_Parm)
// class UClientNetMetrics_X*     Metrics                        (CPF_Parm)

void UNetMetricsSystem_X::Exit(class UPreExitEvent_X* Event, class UClientNetMetrics_X* Metrics)
{
	static UFunction* uFnExit = nullptr;

	if (!uFnExit)
	{
		uFnExit = UFunction::FindFunction("Function ProjectX.NetMetricsSystem_X.Exit");
	}

	UNetMetricsSystem_X_execExit_Params Exit_Params;
	memcpy_s(&Exit_Params.Event, 0x8, &Event, 0x8);
	memcpy_s(&Exit_Params.Metrics, 0x8, &Metrics, 0x8);

	UNetMetricsSystem_X::StaticClass()->ProcessEvent(uFnExit, &Exit_Params, nullptr);
};

// Function ProjectX.NetMetricsSystem_X.RecordGamePing
// [0x100042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UNetworkPingEvent_X*     Ping                           (CPF_Parm)
// class UClientNetMetrics_X*     Metrics                        (CPF_Parm)

void UNetMetricsSystem_X::RecordGamePing(class UNetworkPingEvent_X* Ping, class UClientNetMetrics_X* Metrics)
{
	static UFunction* uFnRecordGamePing = nullptr;

	if (!uFnRecordGamePing)
	{
		uFnRecordGamePing = UFunction::FindFunction("Function ProjectX.NetMetricsSystem_X.RecordGamePing");
	}

	UNetMetricsSystem_X_execRecordGamePing_Params RecordGamePing_Params;
	memcpy_s(&RecordGamePing_Params.Ping, 0x8, &Ping, 0x8);
	memcpy_s(&RecordGamePing_Params.Metrics, 0x8, &Metrics, 0x8);

	UNetMetricsSystem_X::StaticClass()->ProcessEvent(uFnRecordGamePing, &RecordGamePing_Params, nullptr);
};

// Function ProjectX.NetMetricsSystem_X.PlayerRemoved
// [0x200042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UClientNetMetrics_X*     Metrics                        (CPF_Parm)

void UNetMetricsSystem_X::PlayerRemoved(class UClientNetMetrics_X* Metrics)
{
	static UFunction* uFnPlayerRemoved = nullptr;

	if (!uFnPlayerRemoved)
	{
		uFnPlayerRemoved = UFunction::FindFunction("Function ProjectX.NetMetricsSystem_X.PlayerRemoved");
	}

	UNetMetricsSystem_X_execPlayerRemoved_Params PlayerRemoved_Params;
	memcpy_s(&PlayerRemoved_Params.Metrics, 0x8, &Metrics, 0x8);

	UNetMetricsSystem_X::StaticClass()->ProcessEvent(uFnPlayerRemoved, &PlayerRemoved_Params, nullptr);
};

// Function ProjectX.NetMetricsSystem_X.PlayerAdded
// [0x100042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UPrimaryPlayer*          PP                             (CPF_Parm)
// class UNetMode_DedicatedClient* NetMode                        (CPF_Parm)
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

void UNetMetricsSystem_X::PlayerAdded(class UPrimaryPlayer* PP, class UNetMode_DedicatedClient* NetMode, class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnPlayerAdded = nullptr;

	if (!uFnPlayerAdded)
	{
		uFnPlayerAdded = UFunction::FindFunction("Function ProjectX.NetMetricsSystem_X.PlayerAdded");
	}

	UNetMetricsSystem_X_execPlayerAdded_Params PlayerAdded_Params;
	memcpy_s(&PlayerAdded_Params.PP, 0x8, &PP, 0x8);
	memcpy_s(&PlayerAdded_Params.NetMode, 0x8, &NetMode, 0x8);
	memcpy_s(&PlayerAdded_Params.PRI, 0x8, &PRI, 0x8);

	UNetMetricsSystem_X::StaticClass()->ProcessEvent(uFnPlayerAdded, &PlayerAdded_Params, nullptr);
};

// Function ProjectX.NetModeSystem_X.AddModes
// [0x00442003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class UClass*>          NetModes                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UNetModeSystem_X::AddModes(TArray<class UClass*>& NetModes)
{
	static UFunction* uFnAddModes = nullptr;

	if (!uFnAddModes)
	{
		uFnAddModes = UFunction::FindFunction("Function ProjectX.NetModeSystem_X.AddModes");
	}

	UNetModeSystem_X_execAddModes_Params AddModes_Params;
	memcpy_s(&AddModes_Params.NetModes, 0x10, &NetModes, 0x10);

	UNetModeSystem_X::StaticClass()->ProcessEvent(uFnAddModes, &AddModes_Params, nullptr);

	memcpy_s(&NetModes, 0x10, &AddModes_Params.NetModes, 0x10);
};

// Function ProjectX.NetModeSystem_X.HandleDedicatedClient
// [0x100042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class ANetModeReplicator_X*    _                              (CPF_Parm)
// class UNetMode_Client*         NetMode                        (CPF_Parm)

void UNetModeSystem_X::HandleDedicatedClient(class ANetModeReplicator_X* _, class UNetMode_Client* NetMode)
{
	static UFunction* uFnHandleDedicatedClient = nullptr;

	if (!uFnHandleDedicatedClient)
	{
		uFnHandleDedicatedClient = UFunction::FindFunction("Function ProjectX.NetModeSystem_X.HandleDedicatedClient");
	}

	UNetModeSystem_X_execHandleDedicatedClient_Params HandleDedicatedClient_Params;
	memcpy_s(&HandleDedicatedClient_Params._, 0x8, &_, 0x8);
	memcpy_s(&HandleDedicatedClient_Params.NetMode, 0x8, &NetMode, 0x8);

	UNetModeSystem_X::StaticClass()->ProcessEvent(uFnHandleDedicatedClient, &HandleDedicatedClient_Params, nullptr);
};

// Function ProjectX.NetModeSystem_X.LevelUnloaded
// [0x200042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AWorldInfo*              WorldInfo                      (CPF_Parm)

void UNetModeSystem_X::LevelUnloaded(class AWorldInfo* WorldInfo)
{
	static UFunction* uFnLevelUnloaded = nullptr;

	if (!uFnLevelUnloaded)
	{
		uFnLevelUnloaded = UFunction::FindFunction("Function ProjectX.NetModeSystem_X.LevelUnloaded");
	}

	UNetModeSystem_X_execLevelUnloaded_Params LevelUnloaded_Params;
	memcpy_s(&LevelUnloaded_Params.WorldInfo, 0x8, &WorldInfo, 0x8);

	UNetModeSystem_X::StaticClass()->ProcessEvent(uFnLevelUnloaded, &LevelUnloaded_Params, nullptr);
};

// Function ProjectX.NetModeSystem_X.LevelLoaded
// [0x100042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class AWorldInfo*              WorldInfo                      (CPF_Parm)

void UNetModeSystem_X::LevelLoaded(class AWorldInfo* WorldInfo)
{
	static UFunction* uFnLevelLoaded = nullptr;

	if (!uFnLevelLoaded)
	{
		uFnLevelLoaded = UFunction::FindFunction("Function ProjectX.NetModeSystem_X.LevelLoaded");
	}

	UNetModeSystem_X_execLevelLoaded_Params LevelLoaded_Params;
	memcpy_s(&LevelLoaded_Params.WorldInfo, 0x8, &WorldInfo, 0x8);

	UNetModeSystem_X::StaticClass()->ProcessEvent(uFnLevelLoaded, &LevelLoaded_Params, nullptr);
};

// Function ProjectX.RPC_CreateClub_X.OverrideErrorType
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UErrorType*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UErrorType*              ErrorType                      (CPF_Parm)

class UErrorType* URPC_CreateClub_X::eventOverrideErrorType(class UErrorType* ErrorType)
{
	static UFunction* uFnOverrideErrorType = nullptr;

	if (!uFnOverrideErrorType)
	{
		uFnOverrideErrorType = UFunction::FindFunction("Function ProjectX.RPC_CreateClub_X.OverrideErrorType");
	}

	URPC_CreateClub_X_eventOverrideErrorType_Params OverrideErrorType_Params;
	memcpy_s(&OverrideErrorType_Params.ErrorType, 0x8, &ErrorType, 0x8);

	this->ProcessEvent(uFnOverrideErrorType, &OverrideErrorType_Params, nullptr);

	return OverrideErrorType_Params.ReturnValue;
};

// Function ProjectX.RPC_CreateClub_X.SetSettings
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateClub_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UClubSettings_X*         Settings                       (CPF_Parm)

class URPC_CreateClub_X* URPC_CreateClub_X::SetSettings(class UClubSettings_X* Settings)
{
	static UFunction* uFnSetSettings = nullptr;

	if (!uFnSetSettings)
	{
		uFnSetSettings = UFunction::FindFunction("Function ProjectX.RPC_CreateClub_X.SetSettings");
	}

	URPC_CreateClub_X_execSetSettings_Params SetSettings_Params;
	memcpy_s(&SetSettings_Params.Settings, 0x8, &Settings, 0x8);

	this->ProcessEvent(uFnSetSettings, &SetSettings_Params, nullptr);

	return SetSettings_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateClubName_X.OverrideErrorType
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UErrorType*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UErrorType*              ErrorType                      (CPF_Parm)

class UErrorType* URPC_UpdateClubName_X::eventOverrideErrorType(class UErrorType* ErrorType)
{
	static UFunction* uFnOverrideErrorType = nullptr;

	if (!uFnOverrideErrorType)
	{
		uFnOverrideErrorType = UFunction::FindFunction("Function ProjectX.RPC_UpdateClubName_X.OverrideErrorType");
	}

	URPC_UpdateClubName_X_eventOverrideErrorType_Params OverrideErrorType_Params;
	memcpy_s(&OverrideErrorType_Params.ErrorType, 0x8, &ErrorType, 0x8);

	this->ProcessEvent(uFnOverrideErrorType, &OverrideErrorType_Params, nullptr);

	return OverrideErrorType_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateClubName_X.SetName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateClubName_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InName                         (CPF_Parm | CPF_NeedCtorLink)
// class FString                  InTag                          (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateClubName_X* URPC_UpdateClubName_X::SetName(class FString InName, class FString InTag)
{
	static UFunction* uFnSetName = nullptr;

	if (!uFnSetName)
	{
		uFnSetName = UFunction::FindFunction("Function ProjectX.RPC_UpdateClubName_X.SetName");
	}

	URPC_UpdateClubName_X_execSetName_Params SetName_Params;
	memcpy_s(&SetName_Params.InName, 0x10, &InName, 0x10);
	memcpy_s(&SetName_Params.InTag, 0x10, &InTag, 0x10);

	this->ProcessEvent(uFnSetName, &SetName_Params, nullptr);

	return SetName_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateClubColors_X.SetColors
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateClubColors_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPrimary                      (CPF_Parm)
// int32_t                        InAccent                       (CPF_Parm)

class URPC_UpdateClubColors_X* URPC_UpdateClubColors_X::SetColors(int32_t InPrimary, int32_t InAccent)
{
	static UFunction* uFnSetColors = nullptr;

	if (!uFnSetColors)
	{
		uFnSetColors = UFunction::FindFunction("Function ProjectX.RPC_UpdateClubColors_X.SetColors");
	}

	URPC_UpdateClubColors_X_execSetColors_Params SetColors_Params;
	memcpy_s(&SetColors_Params.InPrimary, 0x4, &InPrimary, 0x4);
	memcpy_s(&SetColors_Params.InAccent, 0x4, &InAccent, 0x4);

	this->ProcessEvent(uFnSetColors, &SetColors_Params, nullptr);

	return SetColors_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateClubMotD_X.OverrideErrorType
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UErrorType*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UErrorType*              ErrorType                      (CPF_Parm)

class UErrorType* URPC_UpdateClubMotD_X::eventOverrideErrorType(class UErrorType* ErrorType)
{
	static UFunction* uFnOverrideErrorType = nullptr;

	if (!uFnOverrideErrorType)
	{
		uFnOverrideErrorType = UFunction::FindFunction("Function ProjectX.RPC_UpdateClubMotD_X.OverrideErrorType");
	}

	URPC_UpdateClubMotD_X_eventOverrideErrorType_Params OverrideErrorType_Params;
	memcpy_s(&OverrideErrorType_Params.ErrorType, 0x8, &ErrorType, 0x8);

	this->ProcessEvent(uFnOverrideErrorType, &OverrideErrorType_Params, nullptr);

	return OverrideErrorType_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateClubMotD_X.SetMotD
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateClubMotD_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMotD                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateClubMotD_X* URPC_UpdateClubMotD_X::SetMotD(class FString InMotD)
{
	static UFunction* uFnSetMotD = nullptr;

	if (!uFnSetMotD)
	{
		uFnSetMotD = UFunction::FindFunction("Function ProjectX.RPC_UpdateClubMotD_X.SetMotD");
	}

	URPC_UpdateClubMotD_X_execSetMotD_Params SetMotD_Params;
	memcpy_s(&SetMotD_Params.InMotD, 0x10, &InMotD, 0x10);

	this->ProcessEvent(uFnSetMotD, &SetMotD_Params, nullptr);

	return SetMotD_Params.ReturnValue;
};

// Function ProjectX.RPC_InviteToClub_X.OverrideErrorType
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UErrorType*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UErrorType*              ErrorType                      (CPF_Parm)

class UErrorType* URPC_InviteToClub_X::eventOverrideErrorType(class UErrorType* ErrorType)
{
	static UFunction* uFnOverrideErrorType = nullptr;

	if (!uFnOverrideErrorType)
	{
		uFnOverrideErrorType = UFunction::FindFunction("Function ProjectX.RPC_InviteToClub_X.OverrideErrorType");
	}

	URPC_InviteToClub_X_eventOverrideErrorType_Params OverrideErrorType_Params;
	memcpy_s(&OverrideErrorType_Params.ErrorType, 0x8, &ErrorType, 0x8);

	this->ProcessEvent(uFnOverrideErrorType, &OverrideErrorType_Params, nullptr);

	return OverrideErrorType_Params.ReturnValue;
};

// Function ProjectX.RPC_InviteToClub_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_InviteToClub_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_InviteToClub_X* URPC_InviteToClub_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_InviteToClub_X.SetPlayerID");
	}

	URPC_InviteToClub_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_RemoveFromClub_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RemoveFromClub_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_RemoveFromClub_X* URPC_RemoveFromClub_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_RemoveFromClub_X.SetPlayerID");
	}

	URPC_RemoveFromClub_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_SetClubOwner_X.SetNewOwner
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetClubOwner_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_SetClubOwner_X* URPC_SetClubOwner_X::SetNewOwner(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetNewOwner = nullptr;

	if (!uFnSetNewOwner)
	{
		uFnSetNewOwner = UFunction::FindFunction("Function ProjectX.RPC_SetClubOwner_X.SetNewOwner");
	}

	URPC_SetClubOwner_X_execSetNewOwner_Params SetNewOwner_Params;
	memcpy_s(&SetNewOwner_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetNewOwner, &SetNewOwner_Params, nullptr);

	return SetNewOwner_Params.ReturnValue;
};

// Function ProjectX.RPC_GetClubInvites_X.__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// TArray<class UClubInvite_X*>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<class UClubInvite_X*> URPC_GetClubInvites_X::__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1()
{
	static UFunction* uFn__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1 = nullptr;

	if (!uFn__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1)
	{
		uFn__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1 = UFunction::FindFunction("Function ProjectX.RPC_GetClubInvites_X.__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1");
	}

	URPC_GetClubInvites_X_exec__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1_Params __RPC_GetClubInvites_X__CreateClubInvitesTask_0x1_Params;

	this->ProcessEvent(uFn__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1, &__RPC_GetClubInvites_X__CreateClubInvitesTask_0x1_Params, nullptr);

	return __RPC_GetClubInvites_X__CreateClubInvitesTask_0x1_Params.ReturnValue;
};

// Function ProjectX.RPC_GetClubInvites_X.CreateClubInvitesTask
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_ClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__array_ClubInvite_X* URPC_GetClubInvites_X::CreateClubInvitesTask()
{
	static UFunction* uFnCreateClubInvitesTask = nullptr;

	if (!uFnCreateClubInvitesTask)
	{
		uFnCreateClubInvitesTask = UFunction::FindFunction("Function ProjectX.RPC_GetClubInvites_X.CreateClubInvitesTask");
	}

	URPC_GetClubInvites_X_execCreateClubInvitesTask_Params CreateClubInvitesTask_Params;

	this->ProcessEvent(uFnCreateClubInvitesTask, &CreateClubInvitesTask_Params, nullptr);

	return CreateClubInvitesTask_Params.ReturnValue;
};

// Function ProjectX.RPC_AcceptClubInvite_X.SetClubID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_AcceptClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       InClubID                       (CPF_Parm)

class URPC_AcceptClubInvite_X* URPC_AcceptClubInvite_X::SetClubID(uint64_t InClubID)
{
	static UFunction* uFnSetClubID = nullptr;

	if (!uFnSetClubID)
	{
		uFnSetClubID = UFunction::FindFunction("Function ProjectX.RPC_AcceptClubInvite_X.SetClubID");
	}

	URPC_AcceptClubInvite_X_execSetClubID_Params SetClubID_Params;
	SetClubID_Params.InClubID = InClubID;

	this->ProcessEvent(uFnSetClubID, &SetClubID_Params, nullptr);

	return SetClubID_Params.ReturnValue;
};

// Function ProjectX.RPC_RejectClubInvite_X.SetClubID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RejectClubInvite_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       InClubID                       (CPF_Parm)

class URPC_RejectClubInvite_X* URPC_RejectClubInvite_X::SetClubID(uint64_t InClubID)
{
	static UFunction* uFnSetClubID = nullptr;

	if (!uFnSetClubID)
	{
		uFnSetClubID = UFunction::FindFunction("Function ProjectX.RPC_RejectClubInvite_X.SetClubID");
	}

	URPC_RejectClubInvite_X_execSetClubID_Params SetClubID_Params;
	SetClubID_Params.InClubID = InClubID;

	this->ProcessEvent(uFnSetClubID, &SetClubID_Params, nullptr);

	return SetClubID_Params.ReturnValue;
};

// Function ProjectX.OnlineClubServerList_X.__OnlineClubServerList_X__Refresh_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  _                              (CPF_Parm)

void UOnlineClubServerList_X::__OnlineClubServerList_X__Refresh_0x3(class URPC_X* _)
{
	static UFunction* uFn__OnlineClubServerList_X__Refresh_0x3 = nullptr;

	if (!uFn__OnlineClubServerList_X__Refresh_0x3)
	{
		uFn__OnlineClubServerList_X__Refresh_0x3 = UFunction::FindFunction("Function ProjectX.OnlineClubServerList_X.__OnlineClubServerList_X__Refresh_0x3");
	}

	UOnlineClubServerList_X_exec__OnlineClubServerList_X__Refresh_0x3_Params __OnlineClubServerList_X__Refresh_0x3_Params;
	memcpy_s(&__OnlineClubServerList_X__Refresh_0x3_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__OnlineClubServerList_X__Refresh_0x3, &__OnlineClubServerList_X__Refresh_0x3_Params, nullptr);
};

// Function ProjectX.OnlineClubServerList_X.__OnlineClubServerList_X__Refresh_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  _                              (CPF_Parm)

void UOnlineClubServerList_X::__OnlineClubServerList_X__Refresh_0x2(class URPC_X* _)
{
	static UFunction* uFn__OnlineClubServerList_X__Refresh_0x2 = nullptr;

	if (!uFn__OnlineClubServerList_X__Refresh_0x2)
	{
		uFn__OnlineClubServerList_X__Refresh_0x2 = UFunction::FindFunction("Function ProjectX.OnlineClubServerList_X.__OnlineClubServerList_X__Refresh_0x2");
	}

	UOnlineClubServerList_X_exec__OnlineClubServerList_X__Refresh_0x2_Params __OnlineClubServerList_X__Refresh_0x2_Params;
	memcpy_s(&__OnlineClubServerList_X__Refresh_0x2_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__OnlineClubServerList_X__Refresh_0x2, &__OnlineClubServerList_X__Refresh_0x2_Params, nullptr);
};

// Function ProjectX.OnlineClubServerList_X.__OnlineClubServerList_X__Refresh_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_X*                  _                              (CPF_Parm)

void UOnlineClubServerList_X::__OnlineClubServerList_X__Refresh_0x1(class URPC_X* _)
{
	static UFunction* uFn__OnlineClubServerList_X__Refresh_0x1 = nullptr;

	if (!uFn__OnlineClubServerList_X__Refresh_0x1)
	{
		uFn__OnlineClubServerList_X__Refresh_0x1 = UFunction::FindFunction("Function ProjectX.OnlineClubServerList_X.__OnlineClubServerList_X__Refresh_0x1");
	}

	UOnlineClubServerList_X_exec__OnlineClubServerList_X__Refresh_0x1_Params __OnlineClubServerList_X__Refresh_0x1_Params;
	memcpy_s(&__OnlineClubServerList_X__Refresh_0x1_Params._, 0x8, &_, 0x8);

	this->ProcessEvent(uFn__OnlineClubServerList_X__Refresh_0x1, &__OnlineClubServerList_X__Refresh_0x1_Params, nullptr);
};

// Function ProjectX.OnlineClubServerList_X.Refresh
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UAsyncTask* UOnlineClubServerList_X::Refresh()
{
	static UFunction* uFnRefresh = nullptr;

	if (!uFnRefresh)
	{
		uFnRefresh = UFunction::FindFunction("Function ProjectX.OnlineClubServerList_X.Refresh");
	}

	UOnlineClubServerList_X_execRefresh_Params Refresh_Params;

	this->ProcessEvent(uFnRefresh, &Refresh_Params, nullptr);

	return Refresh_Params.ReturnValue;
};

// Function ProjectX.OnlineConfigDispatcher_X.GetDebugString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UOnlineConfig_X*         Config                         (CPF_Parm)

class FString UOnlineConfigDispatcher_X::GetDebugString(class UOnlineConfig_X* Config)
{
	static UFunction* uFnGetDebugString = nullptr;

	if (!uFnGetDebugString)
	{
		uFnGetDebugString = UFunction::FindFunction("Function ProjectX.OnlineConfigDispatcher_X.GetDebugString");
	}

	UOnlineConfigDispatcher_X_execGetDebugString_Params GetDebugString_Params;
	memcpy_s(&GetDebugString_Params.Config, 0x8, &Config, 0x8);

	this->ProcessEvent(uFnGetDebugString, &GetDebugString_Params, nullptr);

	return GetDebugString_Params.ReturnValue;
};

// Function ProjectX.OnlineConfigDispatcher_X.UndoConfigObject
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineConfig_X*         Config                         (CPF_Parm)

void UOnlineConfigDispatcher_X::UndoConfigObject(class UOnlineConfig_X* Config)
{
	static UFunction* uFnUndoConfigObject = nullptr;

	if (!uFnUndoConfigObject)
	{
		uFnUndoConfigObject = UFunction::FindFunction("Function ProjectX.OnlineConfigDispatcher_X.UndoConfigObject");
	}

	UOnlineConfigDispatcher_X_execUndoConfigObject_Params UndoConfigObject_Params;
	memcpy_s(&UndoConfigObject_Params.Config, 0x8, &Config, 0x8);

	this->ProcessEvent(uFnUndoConfigObject, &UndoConfigObject_Params, nullptr);
};

// Function ProjectX.OnlineConfigDispatcher_X.ApplyConfigObject
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineConfig_X*         Config                         (CPF_Parm)

void UOnlineConfigDispatcher_X::ApplyConfigObject(class UOnlineConfig_X* Config)
{
	static UFunction* uFnApplyConfigObject = nullptr;

	if (!uFnApplyConfigObject)
	{
		uFnApplyConfigObject = UFunction::FindFunction("Function ProjectX.OnlineConfigDispatcher_X.ApplyConfigObject");
	}

	UOnlineConfigDispatcher_X_execApplyConfigObject_Params ApplyConfigObject_Params;
	memcpy_s(&ApplyConfigObject_Params.Config, 0x8, &Config, 0x8);

	this->ProcessEvent(uFnApplyConfigObject, &ApplyConfigObject_Params, nullptr);
};

// Function ProjectX.OnlineConfigDispatcher_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineConfigDispatcher_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.OnlineConfigDispatcher_X.Construct");
	}

	UOnlineConfigDispatcher_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.OnlineGameVersion_X.__OnlineGameVersion_X__OnInit_0x4
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameServerBrowser_X* _                              (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameVersion_X::__OnlineGameVersion_X__OnInit_0x4(class UOnlineGameServerBrowser_X* _, class UError* Error)
{
	static UFunction* uFn__OnlineGameVersion_X__OnInit_0x4 = nullptr;

	if (!uFn__OnlineGameVersion_X__OnInit_0x4)
	{
		uFn__OnlineGameVersion_X__OnInit_0x4 = UFunction::FindFunction("Function ProjectX.OnlineGameVersion_X.__OnlineGameVersion_X__OnInit_0x4");
	}

	UOnlineGameVersion_X_exec__OnlineGameVersion_X__OnInit_0x4_Params __OnlineGameVersion_X__OnInit_0x4_Params;
	memcpy_s(&__OnlineGameVersion_X__OnInit_0x4_Params._, 0x8, &_, 0x8);
	memcpy_s(&__OnlineGameVersion_X__OnInit_0x4_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__OnlineGameVersion_X__OnInit_0x4, &__OnlineGameVersion_X__OnInit_0x4_Params, nullptr);
};

// Function ProjectX.OnlineGameVersion_X.__OnlineGameVersion_X__OnInit_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UOnlineGamePrivateMatch_X* _                              (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameVersion_X::__OnlineGameVersion_X__OnInit_0x3(class UOnlineGamePrivateMatch_X* _, class UError* Error)
{
	static UFunction* uFn__OnlineGameVersion_X__OnInit_0x3 = nullptr;

	if (!uFn__OnlineGameVersion_X__OnInit_0x3)
	{
		uFn__OnlineGameVersion_X__OnInit_0x3 = UFunction::FindFunction("Function ProjectX.OnlineGameVersion_X.__OnlineGameVersion_X__OnInit_0x3");
	}

	UOnlineGameVersion_X_exec__OnlineGameVersion_X__OnInit_0x3_Params __OnlineGameVersion_X__OnInit_0x3_Params;
	memcpy_s(&__OnlineGameVersion_X__OnInit_0x3_Params._, 0x8, &_, 0x8);
	memcpy_s(&__OnlineGameVersion_X__OnInit_0x3_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__OnlineGameVersion_X__OnInit_0x3, &__OnlineGameVersion_X__OnInit_0x3_Params, nullptr);
};

// Function ProjectX.OnlineGameVersion_X.__OnlineGameVersion_X__OnInit_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameRegions_X*    _                              (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameVersion_X::__OnlineGameVersion_X__OnInit_0x2(class UOnlineGameRegions_X* _, class UError* Error)
{
	static UFunction* uFn__OnlineGameVersion_X__OnInit_0x2 = nullptr;

	if (!uFn__OnlineGameVersion_X__OnInit_0x2)
	{
		uFn__OnlineGameVersion_X__OnInit_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameVersion_X.__OnlineGameVersion_X__OnInit_0x2");
	}

	UOnlineGameVersion_X_exec__OnlineGameVersion_X__OnInit_0x2_Params __OnlineGameVersion_X__OnInit_0x2_Params;
	memcpy_s(&__OnlineGameVersion_X__OnInit_0x2_Params._, 0x8, &_, 0x8);
	memcpy_s(&__OnlineGameVersion_X__OnInit_0x2_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__OnlineGameVersion_X__OnInit_0x2, &__OnlineGameVersion_X__OnInit_0x2_Params, nullptr);
};

// Function ProjectX.OnlineGameVersion_X.__OnlineGameVersion_X__OnInit_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameMatchmaking_X* _                              (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameVersion_X::__OnlineGameVersion_X__OnInit_0x1(class UOnlineGameMatchmaking_X* _, class UError* Error)
{
	static UFunction* uFn__OnlineGameVersion_X__OnInit_0x1 = nullptr;

	if (!uFn__OnlineGameVersion_X__OnInit_0x1)
	{
		uFn__OnlineGameVersion_X__OnInit_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameVersion_X.__OnlineGameVersion_X__OnInit_0x1");
	}

	UOnlineGameVersion_X_exec__OnlineGameVersion_X__OnInit_0x1_Params __OnlineGameVersion_X__OnInit_0x1_Params;
	memcpy_s(&__OnlineGameVersion_X__OnInit_0x1_Params._, 0x8, &_, 0x8);
	memcpy_s(&__OnlineGameVersion_X__OnInit_0x1_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__OnlineGameVersion_X__OnInit_0x1, &__OnlineGameVersion_X__OnInit_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameVersion_X.HandleError
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameVersion_X::HandleError(class UError* Error)
{
	static UFunction* uFnHandleError = nullptr;

	if (!uFnHandleError)
	{
		uFnHandleError = UFunction::FindFunction("Function ProjectX.OnlineGameVersion_X.HandleError");
	}

	UOnlineGameVersion_X_execHandleError_Params HandleError_Params;
	memcpy_s(&HandleError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleError, &HandleError_Params, nullptr);
};

// Function ProjectX.OnlineGameVersion_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameVersion_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameVersion_X.OnInit");
	}

	UOnlineGameVersion_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameWordFilterProcessor_X.TriggerCallbacks
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        Index                          (CPF_Parm)

void UOnlineGameWordFilterProcessor_X::TriggerCallbacks(int32_t Index)
{
	static UFunction* uFnTriggerCallbacks = nullptr;

	if (!uFnTriggerCallbacks)
	{
		uFnTriggerCallbacks = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilterProcessor_X.TriggerCallbacks");
	}

	UOnlineGameWordFilterProcessor_X_execTriggerCallbacks_Params TriggerCallbacks_Params;
	memcpy_s(&TriggerCallbacks_Params.Index, 0x4, &Index, 0x4);

	this->ProcessEvent(uFnTriggerCallbacks, &TriggerCallbacks_Params, nullptr);
};

// Function ProjectX.OnlineGameWordFilterProcessor_X.ProcessSanitizedDelayed
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameWordFilterProcessor_X::ProcessSanitizedDelayed()
{
	static UFunction* uFnProcessSanitizedDelayed = nullptr;

	if (!uFnProcessSanitizedDelayed)
	{
		uFnProcessSanitizedDelayed = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilterProcessor_X.ProcessSanitizedDelayed");
	}

	UOnlineGameWordFilterProcessor_X_execProcessSanitizedDelayed_Params ProcessSanitizedDelayed_Params;

	this->ProcessEvent(uFnProcessSanitizedDelayed, &ProcessSanitizedDelayed_Params, nullptr);
};

// Function ProjectX.OnlineGameWordFilterProcessor_X.HandleWordSanitized
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UWebRequest_X*           Request                        (CPF_Parm)

void UOnlineGameWordFilterProcessor_X::HandleWordSanitized(class UWebRequest_X* Request)
{
	static UFunction* uFnHandleWordSanitized = nullptr;

	if (!uFnHandleWordSanitized)
	{
		uFnHandleWordSanitized = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilterProcessor_X.HandleWordSanitized");
	}

	UOnlineGameWordFilterProcessor_X_execHandleWordSanitized_Params HandleWordSanitized_Params;
	memcpy_s(&HandleWordSanitized_Params.Request, 0x8, &Request, 0x8);

	this->ProcessEvent(uFnHandleWordSanitized, &HandleWordSanitized_Params, nullptr);
};

// Function ProjectX.OnlineGameWordFilterProcessor_X.SanitizeString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Comment                        (CPF_Const | CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         SanitizeDelegate               (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameWordFilterProcessor_X::SanitizeString(class FString Comment, struct FScriptDelegate SanitizeDelegate)
{
	static UFunction* uFnSanitizeString = nullptr;

	if (!uFnSanitizeString)
	{
		uFnSanitizeString = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilterProcessor_X.SanitizeString");
	}

	UOnlineGameWordFilterProcessor_X_execSanitizeString_Params SanitizeString_Params;
	memcpy_s(&SanitizeString_Params.Comment, 0x10, &Comment, 0x10);
	memcpy_s(&SanitizeString_Params.SanitizeDelegate, 0x18, &SanitizeDelegate, 0x18);

	this->ProcessEvent(uFnSanitizeString, &SanitizeString_Params, nullptr);

	return SanitizeString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameWordFilterProcessor_X.OnSanitizeStringComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  Original                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Sanitized                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameWordFilterProcessor_X::OnSanitizeStringComplete(class FString Original, class FString Sanitized)
{
	static UFunction* uFnOnSanitizeStringComplete = nullptr;

	if (!uFnOnSanitizeStringComplete)
	{
		uFnOnSanitizeStringComplete = UFunction::FindFunction("Function ProjectX.OnlineGameWordFilterProcessor_X.OnSanitizeStringComplete");
	}

	UOnlineGameWordFilterProcessor_X_execOnSanitizeStringComplete_Params OnSanitizeStringComplete_Params;
	memcpy_s(&OnSanitizeStringComplete_Params.Original, 0x10, &Original, 0x10);
	memcpy_s(&OnSanitizeStringComplete_Params.Sanitized, 0x10, &Sanitized, 0x10);

	this->ProcessEvent(uFnOnSanitizeStringComplete, &OnSanitizeStringComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class URegionPing_X*           R                              (CPF_Parm)

class FString UOnlineGameRegions_X::__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4 = nullptr;

	if (!uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4)
	{
		uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4 = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4");
	}

	UOnlineGameRegions_X_exec__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4_Params __OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4_Params;
	memcpy_s(&__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4, &__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4_Params, nullptr);

	return __OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x4_Params.ReturnValue;
};

// Function ProjectX.OnlineGameRegions_X.__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URegionPing_X*           R                              (CPF_Parm)

bool UOnlineGameRegions_X::__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3(class URegionPing_X* R)
{
	static UFunction* uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3 = nullptr;

	if (!uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3)
	{
		uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3 = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3");
	}

	UOnlineGameRegions_X_exec__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3_Params __OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3_Params;
	memcpy_s(&__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3_Params.R, 0x8, &R, 0x8);

	this->ProcessEvent(uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3, &__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3_Params, nullptr);

	return __OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x3_Params.ReturnValue;
};

// Function ProjectX.OnlineGameRegions_X.__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// struct FGetGameServerPingListData Server                         (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameRegions_X::__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2(struct FGetGameServerPingListData Server)
{
	static UFunction* uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2 = nullptr;

	if (!uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2)
	{
		uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2");
	}

	UOnlineGameRegions_X_exec__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2_Params __OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2_Params;
	memcpy_s(&__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2_Params.Server, 0x48, &Server, 0x48);

	this->ProcessEvent(uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2, &__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x2_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URegionPing_X*           RegionPing                     (CPF_Parm)

void UOnlineGameRegions_X::__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1(class URegionPing_X* RegionPing)
{
	static UFunction* uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1 = nullptr;

	if (!uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1)
	{
		uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1");
	}

	UOnlineGameRegions_X_exec__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1_Params __OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1_Params;
	memcpy_s(&__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1_Params.RegionPing, 0x8, &RegionPing, 0x8);

	this->ProcessEvent(uFn__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1, &__OnlineGameRegions_X__HandleGetPingRegionPingsRPC_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.GetLocalizedName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class FString                  RegionID                       (CPF_Parm | CPF_NeedCtorLink)

class FString UOnlineGameRegions_X::GetLocalizedName(class FString RegionID)
{
	static UFunction* uFnGetLocalizedName = nullptr;

	if (!uFnGetLocalizedName)
	{
		uFnGetLocalizedName = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.GetLocalizedName");
	}

	UOnlineGameRegions_X_execGetLocalizedName_Params GetLocalizedName_Params;
	memcpy_s(&GetLocalizedName_Params.RegionID, 0x10, &RegionID, 0x10);

	this->ProcessEvent(uFnGetLocalizedName, &GetLocalizedName_Params, nullptr);

	return GetLocalizedName_Params.ReturnValue;
};

// Function ProjectX.OnlineGameRegions_X.Exists
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  RegionID                       (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameRegions_X::Exists(class FString RegionID)
{
	static UFunction* uFnExists = nullptr;

	if (!uFnExists)
	{
		uFnExists = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.Exists");
	}

	UOnlineGameRegions_X_execExists_Params Exists_Params;
	memcpy_s(&Exists_Params.RegionID, 0x10, &RegionID, 0x10);

	this->ProcessEvent(uFnExists, &Exists_Params, nullptr);

	return Exists_Params.ReturnValue;
};

// Function ProjectX.OnlineGameRegions_X.SetCachedRegionPings
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FCachedRegionPing> InCachedRegionPings            (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameRegions_X::SetCachedRegionPings(TArray<struct FCachedRegionPing>& InCachedRegionPings)
{
	static UFunction* uFnSetCachedRegionPings = nullptr;

	if (!uFnSetCachedRegionPings)
	{
		uFnSetCachedRegionPings = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.SetCachedRegionPings");
	}

	UOnlineGameRegions_X_execSetCachedRegionPings_Params SetCachedRegionPings_Params;
	memcpy_s(&SetCachedRegionPings_Params.InCachedRegionPings, 0x10, &InCachedRegionPings, 0x10);

	this->ProcessEvent(uFnSetCachedRegionPings, &SetCachedRegionPings_Params, nullptr);

	memcpy_s(&InCachedRegionPings, 0x10, &SetCachedRegionPings_Params.InCachedRegionPings, 0x10);
};

// Function ProjectX.OnlineGameRegions_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UOnlineGameRegions_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.PrintDebugInfo");
	}

	UOnlineGameRegions_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.NotifyWhenSynced
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameRegions_X::NotifyWhenSynced(struct FScriptDelegate Callback)
{
	static UFunction* uFnNotifyWhenSynced = nullptr;

	if (!uFnNotifyWhenSynced)
	{
		uFnNotifyWhenSynced = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.NotifyWhenSynced");
	}

	UOnlineGameRegions_X_execNotifyWhenSynced_Params NotifyWhenSynced_Params;
	memcpy_s(&NotifyWhenSynced_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnNotifyWhenSynced, &NotifyWhenSynced_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.GetRegionDebugString
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class URegionPing_X*           RegionPing                     (CPF_Parm)

class FString UOnlineGameRegions_X::GetRegionDebugString(class URegionPing_X* RegionPing)
{
	static UFunction* uFnGetRegionDebugString = nullptr;

	if (!uFnGetRegionDebugString)
	{
		uFnGetRegionDebugString = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.GetRegionDebugString");
	}

	UOnlineGameRegions_X_execGetRegionDebugString_Params GetRegionDebugString_Params;
	memcpy_s(&GetRegionDebugString_Params.RegionPing, 0x8, &RegionPing, 0x8);

	this->ProcessEvent(uFnGetRegionDebugString, &GetRegionDebugString_Params, nullptr);

	return GetRegionDebugString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameRegions_X.GetRegionsDebugString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameRegions_X::GetRegionsDebugString()
{
	static UFunction* uFnGetRegionsDebugString = nullptr;

	if (!uFnGetRegionsDebugString)
	{
		uFnGetRegionsDebugString = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.GetRegionsDebugString");
	}

	UOnlineGameRegions_X_execGetRegionsDebugString_Params GetRegionsDebugString_Params;

	this->ProcessEvent(uFnGetRegionsDebugString, &GetRegionsDebugString_Params, nullptr);

	return GetRegionsDebugString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameRegions_X.SortRegionDelegate
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class URegionPing_X*           A                              (CPF_Parm)
// class URegionPing_X*           B                              (CPF_Parm)

int32_t UOnlineGameRegions_X::SortRegionDelegate(class URegionPing_X* A, class URegionPing_X* B)
{
	static UFunction* uFnSortRegionDelegate = nullptr;

	if (!uFnSortRegionDelegate)
	{
		uFnSortRegionDelegate = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.SortRegionDelegate");
	}

	UOnlineGameRegions_X_execSortRegionDelegate_Params SortRegionDelegate_Params;
	memcpy_s(&SortRegionDelegate_Params.A, 0x8, &A, 0x8);
	memcpy_s(&SortRegionDelegate_Params.B, 0x8, &B, 0x8);

	this->ProcessEvent(uFnSortRegionDelegate, &SortRegionDelegate_Params, nullptr);

	return SortRegionDelegate_Params.ReturnValue;
};

// Function ProjectX.OnlineGameRegions_X.FinalizeRegionPing
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URegionPing_X*           RegionPing                     (CPF_Parm)

void UOnlineGameRegions_X::FinalizeRegionPing(class URegionPing_X* RegionPing)
{
	static UFunction* uFnFinalizeRegionPing = nullptr;

	if (!uFnFinalizeRegionPing)
	{
		uFnFinalizeRegionPing = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.FinalizeRegionPing");
	}

	UOnlineGameRegions_X_execFinalizeRegionPing_Params FinalizeRegionPing_Params;
	memcpy_s(&FinalizeRegionPing_Params.RegionPing, 0x8, &RegionPing, 0x8);

	this->ProcessEvent(uFnFinalizeRegionPing, &FinalizeRegionPing_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.OnAllRegionsPinged
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameRegions_X::OnAllRegionsPinged()
{
	static UFunction* uFnOnAllRegionsPinged = nullptr;

	if (!uFnOnAllRegionsPinged)
	{
		uFnOnAllRegionsPinged = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.OnAllRegionsPinged");
	}

	UOnlineGameRegions_X_execOnAllRegionsPinged_Params OnAllRegionsPinged_Params;

	this->ProcessEvent(uFnOnAllRegionsPinged, &OnAllRegionsPinged_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.HandleRegionPinged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URegionPingData_X*       Data                           (CPF_Parm)

void UOnlineGameRegions_X::HandleRegionPinged(class URegionPingData_X* Data)
{
	static UFunction* uFnHandleRegionPinged = nullptr;

	if (!uFnHandleRegionPinged)
	{
		uFnHandleRegionPinged = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.HandleRegionPinged");
	}

	UOnlineGameRegions_X_execHandleRegionPinged_Params HandleRegionPinged_Params;
	memcpy_s(&HandleRegionPinged_Params.Data, 0x8, &Data, 0x8);

	this->ProcessEvent(uFnHandleRegionPinged, &HandleRegionPinged_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.HandleRegionsPinged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URegionPinger_X*         Pinger                         (CPF_Parm | CPF_EditInline)

void UOnlineGameRegions_X::HandleRegionsPinged(class URegionPinger_X* Pinger)
{
	static UFunction* uFnHandleRegionsPinged = nullptr;

	if (!uFnHandleRegionsPinged)
	{
		uFnHandleRegionsPinged = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.HandleRegionsPinged");
	}

	UOnlineGameRegions_X_execHandleRegionsPinged_Params HandleRegionsPinged_Params;
	memcpy_s(&HandleRegionsPinged_Params.Pinger, 0x8, &Pinger, 0x8);

	this->ProcessEvent(uFnHandleRegionsPinged, &HandleRegionsPinged_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.HandleGetPingRegionPingsRPC
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_GetGameServerPingList_X* RPC                            (CPF_Parm)

void UOnlineGameRegions_X::HandleGetPingRegionPingsRPC(class URPC_GetGameServerPingList_X* RPC)
{
	static UFunction* uFnHandleGetPingRegionPingsRPC = nullptr;

	if (!uFnHandleGetPingRegionPingsRPC)
	{
		uFnHandleGetPingRegionPingsRPC = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.HandleGetPingRegionPingsRPC");
	}

	UOnlineGameRegions_X_execHandleGetPingRegionPingsRPC_Params HandleGetPingRegionPingsRPC_Params;
	memcpy_s(&HandleGetPingRegionPingsRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleGetPingRegionPingsRPC, &HandleGetPingRegionPingsRPC_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.PingRegions
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameRegions_X::PingRegions(struct FScriptDelegate Callback)
{
	static UFunction* uFnPingRegions = nullptr;

	if (!uFnPingRegions)
	{
		uFnPingRegions = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.PingRegions");
	}

	UOnlineGameRegions_X_execPingRegions_Params PingRegions_Params;
	memcpy_s(&PingRegions_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnPingRegions, &PingRegions_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.UpdateRegionPings
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameRegions_X::UpdateRegionPings()
{
	static UFunction* uFnUpdateRegionPings = nullptr;

	if (!uFnUpdateRegionPings)
	{
		uFnUpdateRegionPings = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.UpdateRegionPings");
	}

	UOnlineGameRegions_X_execUpdateRegionPings_Params UpdateRegionPings_Params;

	this->ProcessEvent(uFnUpdateRegionPings, &UpdateRegionPings_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.OnRegionsSynced
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineGameRegions_X::OnRegionsSynced()
{
	static UFunction* uFnOnRegionsSynced = nullptr;

	if (!uFnOnRegionsSynced)
	{
		uFnOnRegionsSynced = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.OnRegionsSynced");
	}

	UOnlineGameRegions_X_execOnRegionsSynced_Params OnRegionsSynced_Params;

	this->ProcessEvent(uFnOnRegionsSynced, &OnRegionsSynced_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.AddRegionPing
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URegion_X*               Region                         (CPF_Parm)

void UOnlineGameRegions_X::AddRegionPing(class URegion_X* Region)
{
	static UFunction* uFnAddRegionPing = nullptr;

	if (!uFnAddRegionPing)
	{
		uFnAddRegionPing = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.AddRegionPing");
	}

	UOnlineGameRegions_X_execAddRegionPing_Params AddRegionPing_Params;
	memcpy_s(&AddRegionPing_Params.Region, 0x8, &Region, 0x8);

	this->ProcessEvent(uFnAddRegionPing, &AddRegionPing_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.GetRegionPing
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URegionPing_X*           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  RegionID                       (CPF_Parm | CPF_NeedCtorLink)

class URegionPing_X* UOnlineGameRegions_X::GetRegionPing(class FString RegionID)
{
	static UFunction* uFnGetRegionPing = nullptr;

	if (!uFnGetRegionPing)
	{
		uFnGetRegionPing = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.GetRegionPing");
	}

	UOnlineGameRegions_X_execGetRegionPing_Params GetRegionPing_Params;
	memcpy_s(&GetRegionPing_Params.RegionID, 0x10, &RegionID, 0x10);

	this->ProcessEvent(uFnGetRegionPing, &GetRegionPing_Params, nullptr);

	return GetRegionPing_Params.ReturnValue;
};

// Function ProjectX.OnlineGameRegions_X.EventRegionsError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameRegions_X*    RegionsObj                     (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameRegions_X::EventRegionsError(class UOnlineGameRegions_X* RegionsObj, class UError* Error)
{
	static UFunction* uFnEventRegionsError = nullptr;

	if (!uFnEventRegionsError)
	{
		uFnEventRegionsError = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.EventRegionsError");
	}

	UOnlineGameRegions_X_execEventRegionsError_Params EventRegionsError_Params;
	memcpy_s(&EventRegionsError_Params.RegionsObj, 0x8, &RegionsObj, 0x8);
	memcpy_s(&EventRegionsError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventRegionsError, &EventRegionsError_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.EventRegionsPinged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameRegions_X*    RegionsObj                     (CPF_Parm)

void UOnlineGameRegions_X::EventRegionsPinged(class UOnlineGameRegions_X* RegionsObj)
{
	static UFunction* uFnEventRegionsPinged = nullptr;

	if (!uFnEventRegionsPinged)
	{
		uFnEventRegionsPinged = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.EventRegionsPinged");
	}

	UOnlineGameRegions_X_execEventRegionsPinged_Params EventRegionsPinged_Params;
	memcpy_s(&EventRegionsPinged_Params.RegionsObj, 0x8, &RegionsObj, 0x8);

	this->ProcessEvent(uFnEventRegionsPinged, &EventRegionsPinged_Params, nullptr);
};

// Function ProjectX.OnlineGameRegions_X.EventRegionsSynced
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameRegions_X*    RegionsObj                     (CPF_Parm)

void UOnlineGameRegions_X::EventRegionsSynced(class UOnlineGameRegions_X* RegionsObj)
{
	static UFunction* uFnEventRegionsSynced = nullptr;

	if (!uFnEventRegionsSynced)
	{
		uFnEventRegionsSynced = UFunction::FindFunction("Function ProjectX.OnlineGameRegions_X.EventRegionsSynced");
	}

	UOnlineGameRegions_X_execEventRegionsSynced_Params EventRegionsSynced_Params;
	memcpy_s(&EventRegionsSynced_Params.RegionsObj, 0x8, &RegionsObj, 0x8);

	this->ProcessEvent(uFnEventRegionsSynced, &EventRegionsSynced_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.HandleJoinGameComplete
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  FailReason                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameInvite_X::HandleJoinGameComplete(unsigned long bSuccess, class FString FailReason)
{
	static UFunction* uFnHandleJoinGameComplete = nullptr;

	if (!uFnHandleJoinGameComplete)
	{
		uFnHandleJoinGameComplete = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.HandleJoinGameComplete");
	}

	UOnlineGameInvite_X_execHandleJoinGameComplete_Params HandleJoinGameComplete_Params;
	HandleJoinGameComplete_Params.bSuccess = bSuccess;
	memcpy_s(&HandleJoinGameComplete_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnHandleJoinGameComplete, &HandleJoinGameComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.HandlePasswordRequired
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameInvite_X::HandlePasswordRequired()
{
	static UFunction* uFnHandlePasswordRequired = nullptr;

	if (!uFnHandlePasswordRequired)
	{
		uFnHandlePasswordRequired = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.HandlePasswordRequired");
	}

	UOnlineGameInvite_X_execHandlePasswordRequired_Params HandlePasswordRequired_Params;

	this->ProcessEvent(uFnHandlePasswordRequired, &HandlePasswordRequired_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.HandleTaskSuccess
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameInvite_X::HandleTaskSuccess(struct FServerReservationData Reservation)
{
	static UFunction* uFnHandleTaskSuccess = nullptr;

	if (!uFnHandleTaskSuccess)
	{
		uFnHandleTaskSuccess = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.HandleTaskSuccess");
	}

	UOnlineGameInvite_X_execHandleTaskSuccess_Params HandleTaskSuccess_Params;
	memcpy_s(&HandleTaskSuccess_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnHandleTaskSuccess, &HandleTaskSuccess_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.__OnlineGameInvite_X__BeginState_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameInvite_X::__OnlineGameInvite_X__BeginState_0x1(class UError* Error)
{
	static UFunction* uFn__OnlineGameInvite_X__BeginState_0x1 = nullptr;

	if (!uFn__OnlineGameInvite_X__BeginState_0x1)
	{
		uFn__OnlineGameInvite_X__BeginState_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.__OnlineGameInvite_X__BeginState_0x1");
	}

	UOnlineGameInvite_X_exec__OnlineGameInvite_X__BeginState_0x1_Params __OnlineGameInvite_X__BeginState_0x1_Params;
	memcpy_s(&__OnlineGameInvite_X__BeginState_0x1_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFn__OnlineGameInvite_X__BeginState_0x1, &__OnlineGameInvite_X__BeginState_0x1_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.OnGameInviteComplete
// [0x00084003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  FailReason                     (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameInvite_X::OnGameInviteComplete(unsigned long bSuccess, class FString FailReason)
{
	static UFunction* uFnOnGameInviteComplete = nullptr;

	if (!uFnOnGameInviteComplete)
	{
		uFnOnGameInviteComplete = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.OnGameInviteComplete");
	}

	UOnlineGameInvite_X_execOnGameInviteComplete_Params OnGameInviteComplete_Params;
	OnGameInviteComplete_Params.bSuccess = bSuccess;
	memcpy_s(&OnGameInviteComplete_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnOnGameInviteComplete, &OnGameInviteComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.JoinGameInviteGame
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FJoinMatchSettings      Settings                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameInvite_X::JoinGameInviteGame(struct FJoinMatchSettings Settings)
{
	static UFunction* uFnJoinGameInviteGame = nullptr;

	if (!uFnJoinGameInviteGame)
	{
		uFnJoinGameInviteGame = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.JoinGameInviteGame");
	}

	UOnlineGameInvite_X_execJoinGameInviteGame_Params JoinGameInviteGame_Params;
	memcpy_s(&JoinGameInviteGame_Params.Settings, 0x20, &Settings, 0x20);

	this->ProcessEvent(uFnJoinGameInviteGame, &JoinGameInviteGame_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.OnGameInviteAccepted
// [0x00480002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  ErrorString                    (CPF_Parm | CPF_NeedCtorLink)
// struct FOnlineGameSearchResult InviteResult                   (CPF_Const | CPF_Parm | CPF_OutParm)

void UOnlineGameInvite_X::OnGameInviteAccepted(class FString ErrorString, struct FOnlineGameSearchResult& InviteResult)
{
	static UFunction* uFnOnGameInviteAccepted = nullptr;

	if (!uFnOnGameInviteAccepted)
	{
		uFnOnGameInviteAccepted = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.OnGameInviteAccepted");
	}

	UOnlineGameInvite_X_execOnGameInviteAccepted_Params OnGameInviteAccepted_Params;
	memcpy_s(&OnGameInviteAccepted_Params.ErrorString, 0x10, &ErrorString, 0x10);
	memcpy_s(&OnGameInviteAccepted_Params.InviteResult, 0x10, &InviteResult, 0x10);

	this->ProcessEvent(uFnOnGameInviteAccepted, &OnGameInviteAccepted_Params, nullptr);

	memcpy_s(&InviteResult, 0x10, &OnGameInviteAccepted_Params.InviteResult, 0x10);
};

// Function ProjectX.OnlineGameInvite_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameInvite_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.OnInit");
	}

	UOnlineGameInvite_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.EventPsyNetPartyInviteAccepted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  PartyID                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameInvite_X::EventPsyNetPartyInviteAccepted(class FString PartyID)
{
	static UFunction* uFnEventPsyNetPartyInviteAccepted = nullptr;

	if (!uFnEventPsyNetPartyInviteAccepted)
	{
		uFnEventPsyNetPartyInviteAccepted = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.EventPsyNetPartyInviteAccepted");
	}

	UOnlineGameInvite_X_execEventPsyNetPartyInviteAccepted_Params EventPsyNetPartyInviteAccepted_Params;
	memcpy_s(&EventPsyNetPartyInviteAccepted_Params.PartyID, 0x10, &PartyID, 0x10);

	this->ProcessEvent(uFnEventPsyNetPartyInviteAccepted, &EventPsyNetPartyInviteAccepted_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.EventPasswordRequired
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameInvite_X::EventPasswordRequired()
{
	static UFunction* uFnEventPasswordRequired = nullptr;

	if (!uFnEventPasswordRequired)
	{
		uFnEventPasswordRequired = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.EventPasswordRequired");
	}

	UOnlineGameInvite_X_execEventPasswordRequired_Params EventPasswordRequired_Params;

	this->ProcessEvent(uFnEventPasswordRequired, &EventPasswordRequired_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.EventConfirmationRequired
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FName                   ConfirmationReason             (CPF_Parm)

void UOnlineGameInvite_X::EventConfirmationRequired(struct FName ConfirmationReason)
{
	static UFunction* uFnEventConfirmationRequired = nullptr;

	if (!uFnEventConfirmationRequired)
	{
		uFnEventConfirmationRequired = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.EventConfirmationRequired");
	}

	UOnlineGameInvite_X_execEventConfirmationRequired_Params EventConfirmationRequired_Params;
	memcpy_s(&EventConfirmationRequired_Params.ConfirmationReason, 0x8, &ConfirmationReason, 0x8);

	this->ProcessEvent(uFnEventConfirmationRequired, &EventConfirmationRequired_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.EventGameInviteComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bSuccess                       (CPF_Parm)
// class FString                  FailReason                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameInvite_X::EventGameInviteComplete(unsigned long bSuccess, class FString FailReason)
{
	static UFunction* uFnEventGameInviteComplete = nullptr;

	if (!uFnEventGameInviteComplete)
	{
		uFnEventGameInviteComplete = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.EventGameInviteComplete");
	}

	UOnlineGameInvite_X_execEventGameInviteComplete_Params EventGameInviteComplete_Params;
	EventGameInviteComplete_Params.bSuccess = bSuccess;
	memcpy_s(&EventGameInviteComplete_Params.FailReason, 0x10, &FailReason, 0x10);

	this->ProcessEvent(uFnEventGameInviteComplete, &EventGameInviteComplete_Params, nullptr);
};

// Function ProjectX.OnlineGameInvite_X.EventGameInviteAccepted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameInvite_X::EventGameInviteAccepted()
{
	static UFunction* uFnEventGameInviteAccepted = nullptr;

	if (!uFnEventGameInviteAccepted)
	{
		uFnEventGameInviteAccepted = UFunction::FindFunction("Function ProjectX.OnlineGameInvite_X.EventGameInviteAccepted");
	}

	UOnlineGameInvite_X_execEventGameInviteAccepted_Params EventGameInviteAccepted_Params;

	this->ProcessEvent(uFnEventGameInviteAccepted, &EventGameInviteAccepted_Params, nullptr);
};

// Function ProjectX.OnlineGameVoice_X.GetControllerID
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

uint8_t UOnlineGameVoice_X::GetControllerID(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnGetControllerID = nullptr;

	if (!uFnGetControllerID)
	{
		uFnGetControllerID = UFunction::FindFunction("Function ProjectX.OnlineGameVoice_X.GetControllerID");
	}

	UOnlineGameVoice_X_execGetControllerID_Params GetControllerID_Params;
	memcpy_s(&GetControllerID_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnGetControllerID, &GetControllerID_Params, nullptr);

	return GetControllerID_Params.ReturnValue;
};

// Function ProjectX.OnlineGameVoice_X.GetNumTalkers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UOnlineGameVoice_X::GetNumTalkers()
{
	static UFunction* uFnGetNumTalkers = nullptr;

	if (!uFnGetNumTalkers)
	{
		uFnGetNumTalkers = UFunction::FindFunction("Function ProjectX.OnlineGameVoice_X.GetNumTalkers");
	}

	UOnlineGameVoice_X_execGetNumTalkers_Params GetNumTalkers_Params;

	this->ProcessEvent(uFnGetNumTalkers, &GetNumTalkers_Params, nullptr);

	return GetNumTalkers_Params.ReturnValue;
};

// Function ProjectX.OnlineGameVoice_X.IsRemotePlayerTalking
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class APlayerReplicationInfo*  PRI                            (CPF_Parm)

bool UOnlineGameVoice_X::IsRemotePlayerTalking(class APlayerReplicationInfo* PRI)
{
	static UFunction* uFnIsRemotePlayerTalking = nullptr;

	if (!uFnIsRemotePlayerTalking)
	{
		uFnIsRemotePlayerTalking = UFunction::FindFunction("Function ProjectX.OnlineGameVoice_X.IsRemotePlayerTalking");
	}

	UOnlineGameVoice_X_execIsRemotePlayerTalking_Params IsRemotePlayerTalking_Params;
	memcpy_s(&IsRemotePlayerTalking_Params.PRI, 0x8, &PRI, 0x8);

	this->ProcessEvent(uFnIsRemotePlayerTalking, &IsRemotePlayerTalking_Params, nullptr);

	return IsRemotePlayerTalking_Params.ReturnValue;
};

// Function ProjectX.OnlineGameVoice_X.HandlePlayerTalkingStateChange
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bTalking                       (CPF_Parm)

void UOnlineGameVoice_X::HandlePlayerTalkingStateChange(struct FUniqueNetId PlayerID, unsigned long bTalking)
{
	static UFunction* uFnHandlePlayerTalkingStateChange = nullptr;

	if (!uFnHandlePlayerTalkingStateChange)
	{
		uFnHandlePlayerTalkingStateChange = UFunction::FindFunction("Function ProjectX.OnlineGameVoice_X.HandlePlayerTalkingStateChange");
	}

	UOnlineGameVoice_X_execHandlePlayerTalkingStateChange_Params HandlePlayerTalkingStateChange_Params;
	memcpy_s(&HandlePlayerTalkingStateChange_Params.PlayerID, 0x48, &PlayerID, 0x48);
	HandlePlayerTalkingStateChange_Params.bTalking = bTalking;

	this->ProcessEvent(uFnHandlePlayerTalkingStateChange, &HandlePlayerTalkingStateChange_Params, nullptr);
};

// Function ProjectX.OnlineGameVoice_X.UnregisterTalker
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlineGameVoice_X::UnregisterTalker(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnUnregisterTalker = nullptr;

	if (!uFnUnregisterTalker)
	{
		uFnUnregisterTalker = UFunction::FindFunction("Function ProjectX.OnlineGameVoice_X.UnregisterTalker");
	}

	UOnlineGameVoice_X_execUnregisterTalker_Params UnregisterTalker_Params;
	memcpy_s(&UnregisterTalker_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnUnregisterTalker, &UnregisterTalker_Params, nullptr);
};

// Function ProjectX.OnlineGameVoice_X.RegisterTalker
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayer_X*         Player                         (CPF_Parm)

void UOnlineGameVoice_X::RegisterTalker(class UOnlinePlayer_X* Player)
{
	static UFunction* uFnRegisterTalker = nullptr;

	if (!uFnRegisterTalker)
	{
		uFnRegisterTalker = UFunction::FindFunction("Function ProjectX.OnlineGameVoice_X.RegisterTalker");
	}

	UOnlineGameVoice_X_execRegisterTalker_Params RegisterTalker_Params;
	memcpy_s(&RegisterTalker_Params.Player, 0x8, &Player, 0x8);

	this->ProcessEvent(uFnRegisterTalker, &RegisterTalker_Params, nullptr);
};

// Function ProjectX.OnlineGameVoice_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlineGameVoice_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlineGameVoice_X.OnInit");
	}

	UOnlineGameVoice_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlineGameVoice_X.EventPlayerTalking
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameVoice_X*      SelfRef                        (CPF_Parm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// unsigned long                  bTalking                       (CPF_Parm)

void UOnlineGameVoice_X::EventPlayerTalking(class UOnlineGameVoice_X* SelfRef, struct FUniqueNetId PlayerID, unsigned long bTalking)
{
	static UFunction* uFnEventPlayerTalking = nullptr;

	if (!uFnEventPlayerTalking)
	{
		uFnEventPlayerTalking = UFunction::FindFunction("Function ProjectX.OnlineGameVoice_X.EventPlayerTalking");
	}

	UOnlineGameVoice_X_execEventPlayerTalking_Params EventPlayerTalking_Params;
	memcpy_s(&EventPlayerTalking_Params.SelfRef, 0x8, &SelfRef, 0x8);
	memcpy_s(&EventPlayerTalking_Params.PlayerID, 0x48, &PlayerID, 0x48);
	EventPlayerTalking_Params.bTalking = bTalking;

	this->ProcessEvent(uFnEventPlayerTalking, &EventPlayerTalking_Params, nullptr);
};

// Function ProjectX.OnlineGamePopulation_X.__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_Transient)
// struct FGetPopulationData      P                              (CPF_Parm)

int32_t UOnlineGamePopulation_X::__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2(struct FGetPopulationData P)
{
	static UFunction* uFn__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2 = nullptr;

	if (!uFn__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2)
	{
		uFn__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2 = UFunction::FindFunction("Function ProjectX.OnlineGamePopulation_X.__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2");
	}

	UOnlineGamePopulation_X_exec__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2_Params __OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2_Params;
	memcpy_s(&__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2, &__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2_Params, nullptr);

	return __OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x2_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePopulation_X.__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FGetPopulationData      P                              (CPF_Parm)

bool UOnlineGamePopulation_X::__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1(struct FGetPopulationData P)
{
	static UFunction* uFn__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1 = nullptr;

	if (!uFn__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1)
	{
		uFn__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1 = UFunction::FindFunction("Function ProjectX.OnlineGamePopulation_X.__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1");
	}

	UOnlineGamePopulation_X_exec__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1_Params __OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1_Params;
	memcpy_s(&__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1_Params.P, 0x8, &P, 0x8);

	this->ProcessEvent(uFn__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1, &__OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1_Params, nullptr);

	return __OnlineGamePopulation_X__HandleGotAllPopulationPlaylistsRPC_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePopulation_X.HandleGotAllPopulationPlaylistsRPC
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPopulation_X*    RPC                            (CPF_Parm)

void UOnlineGamePopulation_X::HandleGotAllPopulationPlaylistsRPC(class URPC_GetPopulation_X* RPC)
{
	static UFunction* uFnHandleGotAllPopulationPlaylistsRPC = nullptr;

	if (!uFnHandleGotAllPopulationPlaylistsRPC)
	{
		uFnHandleGotAllPopulationPlaylistsRPC = UFunction::FindFunction("Function ProjectX.OnlineGamePopulation_X.HandleGotAllPopulationPlaylistsRPC");
	}

	UOnlineGamePopulation_X_execHandleGotAllPopulationPlaylistsRPC_Params HandleGotAllPopulationPlaylistsRPC_Params;
	memcpy_s(&HandleGotAllPopulationPlaylistsRPC_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandleGotAllPopulationPlaylistsRPC, &HandleGotAllPopulationPlaylistsRPC_Params, nullptr);
};

// Function ProjectX.OnlineGamePopulation_X.GetPlaylistPopulations
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePopulation_X::GetPlaylistPopulations(struct FScriptDelegate Callback)
{
	static UFunction* uFnGetPlaylistPopulations = nullptr;

	if (!uFnGetPlaylistPopulations)
	{
		uFnGetPlaylistPopulations = UFunction::FindFunction("Function ProjectX.OnlineGamePopulation_X.GetPlaylistPopulations");
	}

	UOnlineGamePopulation_X_execGetPlaylistPopulations_Params GetPlaylistPopulations_Params;
	memcpy_s(&GetPlaylistPopulations_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnGetPlaylistPopulations, &GetPlaylistPopulations_Params, nullptr);
};

// Function ProjectX.OnlineGamePopulation_X.EventGetPlaylistPopulations
// [0x00140001] (FUNC_Final | FUNC_Private | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGamePopulation_X* PopulationsObject              (CPF_Parm)

void UOnlineGamePopulation_X::EventGetPlaylistPopulations(class UOnlineGamePopulation_X* PopulationsObject)
{
	static UFunction* uFnEventGetPlaylistPopulations = nullptr;

	if (!uFnEventGetPlaylistPopulations)
	{
		uFnEventGetPlaylistPopulations = UFunction::FindFunction("Function ProjectX.OnlineGamePopulation_X.EventGetPlaylistPopulations");
	}

	UOnlineGamePopulation_X_execEventGetPlaylistPopulations_Params EventGetPlaylistPopulations_Params;
	memcpy_s(&EventGetPlaylistPopulations_Params.PopulationsObject, 0x8, &PopulationsObject, 0x8);

	this->ProcessEvent(uFnEventGetPlaylistPopulations, &EventGetPlaylistPopulations_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.HandleGameStarted
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class AGRI_X*                  GRI                            (CPF_Parm)

void UOnlineGameServerBrowser_X::HandleGameStarted(class AGRI_X* GRI)
{
	static UFunction* uFnHandleGameStarted = nullptr;

	if (!uFnHandleGameStarted)
	{
		uFnHandleGameStarted = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.HandleGameStarted");
	}

	UOnlineGameServerBrowser_X_execHandleGameStarted_Params HandleGameStarted_Params;
	memcpy_s(&HandleGameStarted_Params.GRI, 0x8, &GRI, 0x8);

	this->ProcessEvent(uFnHandleGameStarted, &HandleGameStarted_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.PerformSearch
// [0x00080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGameServerBrowser_X::PerformSearch()
{
	static UFunction* uFnPerformSearch = nullptr;

	if (!uFnPerformSearch)
	{
		uFnPerformSearch = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.PerformSearch");
	}

	UOnlineGameServerBrowser_X_execPerformSearch_Params PerformSearch_Params;

	this->ProcessEvent(uFnPerformSearch, &PerformSearch_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.HandleTaskFail
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameServerBrowser_X::HandleTaskFail(class UError* Error)
{
	static UFunction* uFnHandleTaskFail = nullptr;

	if (!uFnHandleTaskFail)
	{
		uFnHandleTaskFail = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.HandleTaskFail");
	}

	UOnlineGameServerBrowser_X_execHandleTaskFail_Params HandleTaskFail_Params;
	memcpy_s(&HandleTaskFail_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleTaskFail, &HandleTaskFail_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.HandleTaskSuccess
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameServerBrowser_X::HandleTaskSuccess(struct FServerReservationData Reservation)
{
	static UFunction* uFnHandleTaskSuccess = nullptr;

	if (!uFnHandleTaskSuccess)
	{
		uFnHandleTaskSuccess = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.HandleTaskSuccess");
	}

	UOnlineGameServerBrowser_X_execHandleTaskSuccess_Params HandleTaskSuccess_Params;
	memcpy_s(&HandleTaskSuccess_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnHandleTaskSuccess, &HandleTaskSuccess_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.GetRegionsString
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UOnlineGameServerBrowser_X::GetRegionsString()
{
	static UFunction* uFnGetRegionsString = nullptr;

	if (!uFnGetRegionsString)
	{
		uFnGetRegionsString = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.GetRegionsString");
	}

	UOnlineGameServerBrowser_X_execGetRegionsString_Params GetRegionsString_Params;

	this->ProcessEvent(uFnGetRegionsString, &GetRegionsString_Params, nullptr);

	return GetRegionsString_Params.ReturnValue;
};

// Function ProjectX.OnlineGameServerBrowser_X.OnSearchComplete
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FServerResult>   Results                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameServerBrowser_X::OnSearchComplete(TArray<struct FServerResult>& Results)
{
	static UFunction* uFnOnSearchComplete = nullptr;

	if (!uFnOnSearchComplete)
	{
		uFnOnSearchComplete = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.OnSearchComplete");
	}

	UOnlineGameServerBrowser_X_execOnSearchComplete_Params OnSearchComplete_Params;
	memcpy_s(&OnSearchComplete_Params.Results, 0x10, &Results, 0x10);

	this->ProcessEvent(uFnOnSearchComplete, &OnSearchComplete_Params, nullptr);

	memcpy_s(&Results, 0x10, &OnSearchComplete_Params.Results, 0x10);
};

// Function ProjectX.OnlineGameServerBrowser_X.OnSearchError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameServerBrowser_X::OnSearchError(class FString Message)
{
	static UFunction* uFnOnSearchError = nullptr;

	if (!uFnOnSearchError)
	{
		uFnOnSearchError = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.OnSearchError");
	}

	UOnlineGameServerBrowser_X_execOnSearchError_Params OnSearchError_Params;
	memcpy_s(&OnSearchError_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnOnSearchError, &OnSearchError_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.IsSearching
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineGameServerBrowser_X::IsSearching()
{
	static UFunction* uFnIsSearching = nullptr;

	if (!uFnIsSearching)
	{
		uFnIsSearching = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.IsSearching");
	}

	UOnlineGameServerBrowser_X_execIsSearching_Params IsSearching_Params;

	this->ProcessEvent(uFnIsSearching, &IsSearching_Params, nullptr);

	return IsSearching_Params.ReturnValue;
};

// Function ProjectX.OnlineGameServerBrowser_X.Cancel
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGameServerBrowser_X::Cancel()
{
	static UFunction* uFnCancel = nullptr;

	if (!uFnCancel)
	{
		uFnCancel = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.Cancel");
	}

	UOnlineGameServerBrowser_X_execCancel_Params Cancel_Params;

	this->ProcessEvent(uFnCancel, &Cancel_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.StartSearch
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FCustomMatchSettings    InFilter                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  InPreferredRegion              (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGameServerBrowser_X::StartSearch(struct FCustomMatchSettings InFilter, class FString InPreferredRegion)
{
	static UFunction* uFnStartSearch = nullptr;

	if (!uFnStartSearch)
	{
		uFnStartSearch = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.StartSearch");
	}

	UOnlineGameServerBrowser_X_execStartSearch_Params StartSearch_Params;
	memcpy_s(&StartSearch_Params.InFilter, 0x90, &InFilter, 0x90);
	memcpy_s(&StartSearch_Params.InPreferredRegion, 0x10, &InPreferredRegion, 0x10);

	this->ProcessEvent(uFnStartSearch, &StartSearch_Params, nullptr);

	return StartSearch_Params.ReturnValue;
};

// Function ProjectX.OnlineGameServerBrowser_X.SetCompleteReservationDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameServerBrowser_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UOnlineGameServerBrowser_X* UOnlineGameServerBrowser_X::SetCompleteReservationDelegate(struct FScriptDelegate Callback)
{
	static UFunction* uFnSetCompleteReservationDelegate = nullptr;

	if (!uFnSetCompleteReservationDelegate)
	{
		uFnSetCompleteReservationDelegate = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.SetCompleteReservationDelegate");
	}

	UOnlineGameServerBrowser_X_execSetCompleteReservationDelegate_Params SetCompleteReservationDelegate_Params;
	memcpy_s(&SetCompleteReservationDelegate_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSetCompleteReservationDelegate, &SetCompleteReservationDelegate_Params, nullptr);

	return SetCompleteReservationDelegate_Params.ReturnValue;
};

// Function ProjectX.OnlineGameServerBrowser_X.SetCompleteDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameServerBrowser_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UOnlineGameServerBrowser_X* UOnlineGameServerBrowser_X::SetCompleteDelegate(struct FScriptDelegate Callback)
{
	static UFunction* uFnSetCompleteDelegate = nullptr;

	if (!uFnSetCompleteDelegate)
	{
		uFnSetCompleteDelegate = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.SetCompleteDelegate");
	}

	UOnlineGameServerBrowser_X_execSetCompleteDelegate_Params SetCompleteDelegate_Params;
	memcpy_s(&SetCompleteDelegate_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSetCompleteDelegate, &SetCompleteDelegate_Params, nullptr);

	return SetCompleteDelegate_Params.ReturnValue;
};

// Function ProjectX.OnlineGameServerBrowser_X.SetErrorDelegate
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameServerBrowser_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)

class UOnlineGameServerBrowser_X* UOnlineGameServerBrowser_X::SetErrorDelegate(struct FScriptDelegate Callback)
{
	static UFunction* uFnSetErrorDelegate = nullptr;

	if (!uFnSetErrorDelegate)
	{
		uFnSetErrorDelegate = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.SetErrorDelegate");
	}

	UOnlineGameServerBrowser_X_execSetErrorDelegate_Params SetErrorDelegate_Params;
	memcpy_s(&SetErrorDelegate_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSetErrorDelegate, &SetErrorDelegate_Params, nullptr);

	return SetErrorDelegate_Params.ReturnValue;
};

// Function ProjectX.OnlineGameServerBrowser_X.EventSearchCompleteReservation
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameServerBrowser_X::EventSearchCompleteReservation(struct FServerReservationData& Reservation)
{
	static UFunction* uFnEventSearchCompleteReservation = nullptr;

	if (!uFnEventSearchCompleteReservation)
	{
		uFnEventSearchCompleteReservation = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.EventSearchCompleteReservation");
	}

	UOnlineGameServerBrowser_X_execEventSearchCompleteReservation_Params EventSearchCompleteReservation_Params;
	memcpy_s(&EventSearchCompleteReservation_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnEventSearchCompleteReservation, &EventSearchCompleteReservation_Params, nullptr);

	memcpy_s(&Reservation, 0x70, &EventSearchCompleteReservation_Params.Reservation, 0x70);
};

// Function ProjectX.OnlineGameServerBrowser_X.EventBrowserError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameServerBrowser_X* Browser                        (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGameServerBrowser_X::EventBrowserError(class UOnlineGameServerBrowser_X* Browser, class UError* Error)
{
	static UFunction* uFnEventBrowserError = nullptr;

	if (!uFnEventBrowserError)
	{
		uFnEventBrowserError = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.EventBrowserError");
	}

	UOnlineGameServerBrowser_X_execEventBrowserError_Params EventBrowserError_Params;
	memcpy_s(&EventBrowserError_Params.Browser, 0x8, &Browser, 0x8);
	memcpy_s(&EventBrowserError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventBrowserError, &EventBrowserError_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.EventSearchError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class FString                  NewStatus                      (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGameServerBrowser_X::EventSearchError(class FString NewStatus)
{
	static UFunction* uFnEventSearchError = nullptr;

	if (!uFnEventSearchError)
	{
		uFnEventSearchError = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.EventSearchError");
	}

	UOnlineGameServerBrowser_X_execEventSearchError_Params EventSearchError_Params;
	memcpy_s(&EventSearchError_Params.NewStatus, 0x10, &NewStatus, 0x10);

	this->ProcessEvent(uFnEventSearchError, &EventSearchError_Params, nullptr);
};

// Function ProjectX.OnlineGameServerBrowser_X.EventSearchComplete
// [0x00520001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<struct FServerResult>   Results                        (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameServerBrowser_X::EventSearchComplete(TArray<struct FServerResult>& Results)
{
	static UFunction* uFnEventSearchComplete = nullptr;

	if (!uFnEventSearchComplete)
	{
		uFnEventSearchComplete = UFunction::FindFunction("Function ProjectX.OnlineGameServerBrowser_X.EventSearchComplete");
	}

	UOnlineGameServerBrowser_X_execEventSearchComplete_Params EventSearchComplete_Params;
	memcpy_s(&EventSearchComplete_Params.Results, 0x10, &Results, 0x10);

	this->ProcessEvent(uFnEventSearchComplete, &EventSearchComplete_Params, nullptr);

	memcpy_s(&Results, 0x10, &EventSearchComplete_Params.Results, 0x10);
};

// Function ProjectX.OnlineGamePrivateMatch_X.UpdateStatusMessage
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGamePrivateMatch_X::UpdateStatusMessage()
{
	static UFunction* uFnUpdateStatusMessage = nullptr;

	if (!uFnUpdateStatusMessage)
	{
		uFnUpdateStatusMessage = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.UpdateStatusMessage");
	}

	UOnlineGamePrivateMatch_X_execUpdateStatusMessage_Params UpdateStatusMessage_Params;

	this->ProcessEvent(uFnUpdateStatusMessage, &UpdateStatusMessage_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.HandleError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UError*                  Error                          (CPF_Parm)

void UOnlineGamePrivateMatch_X::HandleError(class UError* Error)
{
	static UFunction* uFnHandleError = nullptr;

	if (!uFnHandleError)
	{
		uFnHandleError = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.HandleError");
	}

	UOnlineGamePrivateMatch_X_execHandleError_Params HandleError_Params;
	memcpy_s(&HandleError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleError, &HandleError_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.StartCheckingReservations
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGamePrivateMatch_X::StartCheckingReservations()
{
	static UFunction* uFnStartCheckingReservations = nullptr;

	if (!uFnStartCheckingReservations)
	{
		uFnStartCheckingReservations = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.StartCheckingReservations");
	}

	UOnlineGamePrivateMatch_X_execStartCheckingReservations_Params StartCheckingReservations_Params;

	this->ProcessEvent(uFnStartCheckingReservations, &StartCheckingReservations_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.HandleStartSearch
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              Task                           (CPF_Parm)

void UOnlineGamePrivateMatch_X::HandleStartSearch(class UAsyncTask* Task)
{
	static UFunction* uFnHandleStartSearch = nullptr;

	if (!uFnHandleStartSearch)
	{
		uFnHandleStartSearch = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.HandleStartSearch");
	}

	UOnlineGamePrivateMatch_X_execHandleStartSearch_Params HandleStartSearch_Params;
	memcpy_s(&HandleStartSearch_Params.Task, 0x8, &Task, 0x8);

	this->ProcessEvent(uFnHandleStartSearch, &HandleStartSearch_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.OnReceiveGameServer
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// struct FServerReservationData  Reservation                    (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivateMatch_X::OnReceiveGameServer(struct FServerReservationData Reservation)
{
	static UFunction* uFnOnReceiveGameServer = nullptr;

	if (!uFnOnReceiveGameServer)
	{
		uFnOnReceiveGameServer = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.OnReceiveGameServer");
	}

	UOnlineGamePrivateMatch_X_execOnReceiveGameServer_Params OnReceiveGameServer_Params;
	memcpy_s(&OnReceiveGameServer_Params.Reservation, 0x70, &Reservation, 0x70);

	this->ProcessEvent(uFnOnReceiveGameServer, &OnReceiveGameServer_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.HandleSearchTimeout
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:

void UOnlineGamePrivateMatch_X::HandleSearchTimeout()
{
	static UFunction* uFnHandleSearchTimeout = nullptr;

	if (!uFnHandleSearchTimeout)
	{
		uFnHandleSearchTimeout = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.HandleSearchTimeout");
	}

	UOnlineGamePrivateMatch_X_execHandleSearchTimeout_Params HandleSearchTimeout_Params;

	this->ProcessEvent(uFnHandleSearchTimeout, &HandleSearchTimeout_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.ResetPrivateMatchSettings
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UOnlineGamePrivateMatch_X::ResetPrivateMatchSettings()
{
	static UFunction* uFnResetPrivateMatchSettings = nullptr;

	if (!uFnResetPrivateMatchSettings)
	{
		uFnResetPrivateMatchSettings = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.ResetPrivateMatchSettings");
	}

	UOnlineGamePrivateMatch_X_execResetPrivateMatchSettings_Params ResetPrivateMatchSettings_Params;

	this->ProcessEvent(uFnResetPrivateMatchSettings, &ResetPrivateMatchSettings_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.UpdatePrivateMatchSettings
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FCustomMatchSettings    InSettings                     (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivateMatch_X::UpdatePrivateMatchSettings(struct FCustomMatchSettings InSettings)
{
	static UFunction* uFnUpdatePrivateMatchSettings = nullptr;

	if (!uFnUpdatePrivateMatchSettings)
	{
		uFnUpdatePrivateMatchSettings = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.UpdatePrivateMatchSettings");
	}

	UOnlineGamePrivateMatch_X_execUpdatePrivateMatchSettings_Params UpdatePrivateMatchSettings_Params;
	memcpy_s(&UpdatePrivateMatchSettings_Params.InSettings, 0x90, &InSettings, 0x90);

	this->ProcessEvent(uFnUpdatePrivateMatchSettings, &UpdatePrivateMatchSettings_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.OnPrivateMatchError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

void UOnlineGamePrivateMatch_X::OnPrivateMatchError(class FString Message)
{
	static UFunction* uFnOnPrivateMatchError = nullptr;

	if (!uFnOnPrivateMatchError)
	{
		uFnOnPrivateMatchError = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.OnPrivateMatchError");
	}

	UOnlineGamePrivateMatch_X_execOnPrivateMatchError_Params OnPrivateMatchError_Params;
	memcpy_s(&OnPrivateMatchError_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnOnPrivateMatchError, &OnPrivateMatchError_Params, nullptr);
};

// Function ProjectX.OnlineGamePrivateMatch_X.StartSearch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InPreferredRegion              (CPF_Parm | CPF_NeedCtorLink)
// struct FCustomMatchSettings    InSettings                     (CPF_Parm | CPF_NeedCtorLink)

bool UOnlineGamePrivateMatch_X::StartSearch(class FString InPreferredRegion, struct FCustomMatchSettings InSettings)
{
	static UFunction* uFnStartSearch = nullptr;

	if (!uFnStartSearch)
	{
		uFnStartSearch = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.StartSearch");
	}

	UOnlineGamePrivateMatch_X_execStartSearch_Params StartSearch_Params;
	memcpy_s(&StartSearch_Params.InPreferredRegion, 0x10, &InPreferredRegion, 0x10);
	memcpy_s(&StartSearch_Params.InSettings, 0x90, &InSettings, 0x90);

	this->ProcessEvent(uFnStartSearch, &StartSearch_Params, nullptr);

	return StartSearch_Params.ReturnValue;
};

// Function ProjectX.OnlineGamePrivateMatch_X.EventPrivateMatchError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineGamePrivateMatch_X* InPrivateMatch                 (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UOnlineGamePrivateMatch_X::EventPrivateMatchError(class UOnlineGamePrivateMatch_X* InPrivateMatch, class UError* Error)
{
	static UFunction* uFnEventPrivateMatchError = nullptr;

	if (!uFnEventPrivateMatchError)
	{
		uFnEventPrivateMatchError = UFunction::FindFunction("Function ProjectX.OnlineGamePrivateMatch_X.EventPrivateMatchError");
	}

	UOnlineGamePrivateMatch_X_execEventPrivateMatchError_Params EventPrivateMatchError_Params;
	memcpy_s(&EventPrivateMatchError_Params.InPrivateMatch, 0x8, &InPrivateMatch, 0x8);
	memcpy_s(&EventPrivateMatchError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventPrivateMatchError, &EventPrivateMatchError_Params, nullptr);
};

// Function ProjectX.UdpLanBrowser_X.JoinServer
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  ServerId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Options                        (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UUdpLanBrowser_X::JoinServer(class FString ServerId, class FString Options)
{
	static UFunction* uFnJoinServer = nullptr;

	if (!uFnJoinServer)
	{
		uFnJoinServer = UFunction::FindFunction("Function ProjectX.UdpLanBrowser_X.JoinServer");
	}

	UUdpLanBrowser_X_execJoinServer_Params JoinServer_Params;
	memcpy_s(&JoinServer_Params.ServerId, 0x10, &ServerId, 0x10);
	memcpy_s(&JoinServer_Params.Options, 0x10, &Options, 0x10);

	this->ProcessEvent(uFnJoinServer, &JoinServer_Params, nullptr);

	return JoinServer_Params.ReturnValue;
};

// Function ProjectX.UdpLanBrowser_X.HandleSearchTimeout
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UUdpLanBrowser_X::HandleSearchTimeout()
{
	static UFunction* uFnHandleSearchTimeout = nullptr;

	if (!uFnHandleSearchTimeout)
	{
		uFnHandleSearchTimeout = UFunction::FindFunction("Function ProjectX.UdpLanBrowser_X.HandleSearchTimeout");
	}

	UUdpLanBrowser_X_execHandleSearchTimeout_Params HandleSearchTimeout_Params;

	this->ProcessEvent(uFnHandleSearchTimeout, &HandleSearchTimeout_Params, nullptr);
};

// Function ProjectX.UdpLanBrowser_X.HandleHostResponse
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class ULanMessage_HostResponse_X* Response                       (CPF_Parm)

void UUdpLanBrowser_X::HandleHostResponse(class UOnlineMessageComponent_X* Component, class ULanMessage_HostResponse_X* Response)
{
	static UFunction* uFnHandleHostResponse = nullptr;

	if (!uFnHandleHostResponse)
	{
		uFnHandleHostResponse = UFunction::FindFunction("Function ProjectX.UdpLanBrowser_X.HandleHostResponse");
	}

	UUdpLanBrowser_X_execHandleHostResponse_Params HandleHostResponse_Params;
	memcpy_s(&HandleHostResponse_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleHostResponse_Params.Response, 0x8, &Response, 0x8);

	this->ProcessEvent(uFnHandleHostResponse, &HandleHostResponse_Params, nullptr);
};

// Function ProjectX.UdpLanBrowser_X.SearchTaskDisposed
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UUdpLanBrowser_X::SearchTaskDisposed()
{
	static UFunction* uFnSearchTaskDisposed = nullptr;

	if (!uFnSearchTaskDisposed)
	{
		uFnSearchTaskDisposed = UFunction::FindFunction("Function ProjectX.UdpLanBrowser_X.SearchTaskDisposed");
	}

	UUdpLanBrowser_X_execSearchTaskDisposed_Params SearchTaskDisposed_Params;

	this->ProcessEvent(uFnSearchTaskDisposed, &SearchTaskDisposed_Params, nullptr);
};

// Function ProjectX.UdpLanBrowser_X.GetServerList
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UTAsyncResult__array_LanServerRecord_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UTAsyncResult__array_LanServerRecord_X* UUdpLanBrowser_X::GetServerList()
{
	static UFunction* uFnGetServerList = nullptr;

	if (!uFnGetServerList)
	{
		uFnGetServerList = UFunction::FindFunction("Function ProjectX.UdpLanBrowser_X.GetServerList");
	}

	UUdpLanBrowser_X_execGetServerList_Params GetServerList_Params;

	this->ProcessEvent(uFnGetServerList, &GetServerList_Params, nullptr);

	return GetServerList_Params.ReturnValue;
};

// Function ProjectX.UdpLanBrowser_X.DestroyServer
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UUdpLanBrowser_X::DestroyServer()
{
	static UFunction* uFnDestroyServer = nullptr;

	if (!uFnDestroyServer)
	{
		uFnDestroyServer = UFunction::FindFunction("Function ProjectX.UdpLanBrowser_X.DestroyServer");
	}

	UUdpLanBrowser_X_execDestroyServer_Params DestroyServer_Params;

	this->ProcessEvent(uFnDestroyServer, &DestroyServer_Params, nullptr);
};

// Function ProjectX.UdpLanBrowser_X.SetServerMetaData
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  MetaData                       (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UUdpLanBrowser_X::SetServerMetaData(class FString MetaData)
{
	static UFunction* uFnSetServerMetaData = nullptr;

	if (!uFnSetServerMetaData)
	{
		uFnSetServerMetaData = UFunction::FindFunction("Function ProjectX.UdpLanBrowser_X.SetServerMetaData");
	}

	UUdpLanBrowser_X_execSetServerMetaData_Params SetServerMetaData_Params;
	memcpy_s(&SetServerMetaData_Params.MetaData, 0x10, &MetaData, 0x10);

	this->ProcessEvent(uFnSetServerMetaData, &SetServerMetaData_Params, nullptr);

	return SetServerMetaData_Params.ReturnValue;
};

// Function ProjectX.UdpLanBrowser_X.CreateServer
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  MetaData                       (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UUdpLanBrowser_X::CreateServer(class FString MetaData)
{
	static UFunction* uFnCreateServer = nullptr;

	if (!uFnCreateServer)
	{
		uFnCreateServer = UFunction::FindFunction("Function ProjectX.UdpLanBrowser_X.CreateServer");
	}

	UUdpLanBrowser_X_execCreateServer_Params CreateServer_Params;
	memcpy_s(&CreateServer_Params.MetaData, 0x10, &MetaData, 0x10);

	this->ProcessEvent(uFnCreateServer, &CreateServer_Params, nullptr);

	return CreateServer_Params.ReturnValue;
};

// Function ProjectX.SystemMetrics_X.Specs
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FOSMetrics              OS                             (CPF_Parm | CPF_NeedCtorLink)
// struct FCpuMetrics             CPU                            (CPF_Parm | CPF_NeedCtorLink)
// struct FMemoryMetrics          Memory                         (CPF_Parm)
// struct FVideoCardMetrics       Video                          (CPF_Parm | CPF_NeedCtorLink)
// struct FNetworkAdapterMetrics  Network                        (CPF_Parm | CPF_NeedCtorLink)

void USystemMetrics_X::Specs(struct FOSMetrics OS, struct FCpuMetrics CPU, struct FMemoryMetrics Memory, struct FVideoCardMetrics Video, struct FNetworkAdapterMetrics Network)
{
	static UFunction* uFnSpecs = nullptr;

	if (!uFnSpecs)
	{
		uFnSpecs = UFunction::FindFunction("Function ProjectX.SystemMetrics_X.Specs");
	}

	USystemMetrics_X_execSpecs_Params Specs_Params;
	memcpy_s(&Specs_Params.OS, 0x20, &OS, 0x20);
	memcpy_s(&Specs_Params.CPU, 0x40, &CPU, 0x40);
	memcpy_s(&Specs_Params.Memory, 0x4, &Memory, 0x4);
	memcpy_s(&Specs_Params.Video, 0x18, &Video, 0x18);
	memcpy_s(&Specs_Params.Network, 0x10, &Network, 0x10);

	this->ProcessEvent(uFnSpecs, &Specs_Params, nullptr);
};

// Function ProjectX.SystemMetrics_X.RecordSpecs
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void USystemMetrics_X::RecordSpecs()
{
	static UFunction* uFnRecordSpecs = nullptr;

	if (!uFnRecordSpecs)
	{
		uFnRecordSpecs = UFunction::FindFunction("Function ProjectX.SystemMetrics_X.RecordSpecs");
	}

	USystemMetrics_X_execRecordSpecs_Params RecordSpecs_Params;

	this->ProcessEvent(uFnRecordSpecs, &RecordSpecs_Params, nullptr);
};

// Function ProjectX.RPC_UpdatePlayerPlaylist_X.SetNumLocalPlayers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdatePlayerPlaylist_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InNumLocalPlayers              (CPF_Parm)

class URPC_UpdatePlayerPlaylist_X* URPC_UpdatePlayerPlaylist_X::SetNumLocalPlayers(int32_t InNumLocalPlayers)
{
	static UFunction* uFnSetNumLocalPlayers = nullptr;

	if (!uFnSetNumLocalPlayers)
	{
		uFnSetNumLocalPlayers = UFunction::FindFunction("Function ProjectX.RPC_UpdatePlayerPlaylist_X.SetNumLocalPlayers");
	}

	URPC_UpdatePlayerPlaylist_X_execSetNumLocalPlayers_Params SetNumLocalPlayers_Params;
	memcpy_s(&SetNumLocalPlayers_Params.InNumLocalPlayers, 0x4, &InNumLocalPlayers, 0x4);

	this->ProcessEvent(uFnSetNumLocalPlayers, &SetNumLocalPlayers_Params, nullptr);

	return SetNumLocalPlayers_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdatePlayerPlaylist_X.SetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdatePlayerPlaylist_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylist                     (CPF_Parm)

class URPC_UpdatePlayerPlaylist_X* URPC_UpdatePlayerPlaylist_X::SetPlaylist(int32_t InPlaylist)
{
	static UFunction* uFnSetPlaylist = nullptr;

	if (!uFnSetPlaylist)
	{
		uFnSetPlaylist = UFunction::FindFunction("Function ProjectX.RPC_UpdatePlayerPlaylist_X.SetPlaylist");
	}

	URPC_UpdatePlayerPlaylist_X_execSetPlaylist_Params SetPlaylist_Params;
	memcpy_s(&SetPlaylist_Params.InPlaylist, 0x4, &InPlaylist, 0x4);

	this->ProcessEvent(uFnSetPlaylist, &SetPlaylist_Params, nullptr);

	return SetPlaylist_Params.ReturnValue;
};

// Function ProjectX.ServerExploitManager_X.AddReport
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Reason                         (CPF_Parm)

void UServerExploitManager_X::AddReport(struct FUniqueNetId PlayerID, uint8_t Reason)
{
	static UFunction* uFnAddReport = nullptr;

	if (!uFnAddReport)
	{
		uFnAddReport = UFunction::FindFunction("Function ProjectX.ServerExploitManager_X.AddReport");
	}

	UServerExploitManager_X_execAddReport_Params AddReport_Params;
	memcpy_s(&AddReport_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AddReport_Params.Reason, 0x1, &Reason, 0x1);

	this->ProcessEvent(uFnAddReport, &AddReport_Params, nullptr);
};

// Function ProjectX.ServerExploitManager_X.FindPlayerReportIndex
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        OutIndex                       (CPF_Parm | CPF_OutParm)

bool UServerExploitManager_X::FindPlayerReportIndex(struct FUniqueNetId PlayerID, int32_t& OutIndex)
{
	static UFunction* uFnFindPlayerReportIndex = nullptr;

	if (!uFnFindPlayerReportIndex)
	{
		uFnFindPlayerReportIndex = UFunction::FindFunction("Function ProjectX.ServerExploitManager_X.FindPlayerReportIndex");
	}

	UServerExploitManager_X_execFindPlayerReportIndex_Params FindPlayerReportIndex_Params;
	memcpy_s(&FindPlayerReportIndex_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&FindPlayerReportIndex_Params.OutIndex, 0x4, &OutIndex, 0x4);

	this->ProcessEvent(uFnFindPlayerReportIndex, &FindPlayerReportIndex_Params, nullptr);

	memcpy_s(&OutIndex, 0x4, &FindPlayerReportIndex_Params.OutIndex, 0x4);

	return FindPlayerReportIndex_Params.ReturnValue;
};

// Function ProjectX.ServerExploitManager_X.DoesReportExist
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Reason                         (CPF_Parm)

bool UServerExploitManager_X::DoesReportExist(struct FUniqueNetId PlayerID, uint8_t Reason)
{
	static UFunction* uFnDoesReportExist = nullptr;

	if (!uFnDoesReportExist)
	{
		uFnDoesReportExist = UFunction::FindFunction("Function ProjectX.ServerExploitManager_X.DoesReportExist");
	}

	UServerExploitManager_X_execDoesReportExist_Params DoesReportExist_Params;
	memcpy_s(&DoesReportExist_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&DoesReportExist_Params.Reason, 0x1, &Reason, 0x1);

	this->ProcessEvent(uFnDoesReportExist, &DoesReportExist_Params, nullptr);

	return DoesReportExist_Params.ReturnValue;
};

// Function ProjectX.ServerExploitManager_X.Reset
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UServerExploitManager_X::Reset()
{
	static UFunction* uFnReset = nullptr;

	if (!uFnReset)
	{
		uFnReset = UFunction::FindFunction("Function ProjectX.ServerExploitManager_X.Reset");
	}

	UServerExploitManager_X_execReset_Params Reset_Params;

	this->ProcessEvent(uFnReset, &Reset_Params, nullptr);
};

// Function ProjectX.ServerExploitManager_X.Report
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Reason                         (CPF_Parm)
// class FString                  Data                           (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UServerExploitManager_X::Report(struct FUniqueNetId PlayerID, uint8_t Reason, class FString Data)
{
	static UFunction* uFnReport = nullptr;

	if (!uFnReport)
	{
		uFnReport = UFunction::FindFunction("Function ProjectX.ServerExploitManager_X.Report");
	}

	UServerExploitManager_X_execReport_Params Report_Params;
	memcpy_s(&Report_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&Report_Params.Reason, 0x1, &Reason, 0x1);
	memcpy_s(&Report_Params.Data, 0x10, &Data, 0x10);

	this->ProcessEvent(uFnReport, &Report_Params, nullptr);
};

// Function ProjectX.ServerExploitManager_X.SetDedicatedServer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UOnlineGameDedicatedServer_X* InServer                       (CPF_Parm)

void UServerExploitManager_X::SetDedicatedServer(class UOnlineGameDedicatedServer_X* InServer)
{
	static UFunction* uFnSetDedicatedServer = nullptr;

	if (!uFnSetDedicatedServer)
	{
		uFnSetDedicatedServer = UFunction::FindFunction("Function ProjectX.ServerExploitManager_X.SetDedicatedServer");
	}

	UServerExploitManager_X_execSetDedicatedServer_Params SetDedicatedServer_Params;
	memcpy_s(&SetDedicatedServer_Params.InServer, 0x8, &InServer, 0x8);

	this->ProcessEvent(uFnSetDedicatedServer, &SetDedicatedServer_Params, nullptr);
};

// Function ProjectX.ServerExploitManager_X.SubmitReport
// [0x00120003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Reason                         (CPF_Parm)
// class FString                  Data                           (CPF_Parm | CPF_NeedCtorLink)

void UServerExploitManager_X::SubmitReport(struct FUniqueNetId PlayerID, uint8_t Reason, class FString Data)
{
	static UFunction* uFnSubmitReport = nullptr;

	if (!uFnSubmitReport)
	{
		uFnSubmitReport = UFunction::FindFunction("Function ProjectX.ServerExploitManager_X.SubmitReport");
	}

	UServerExploitManager_X_execSubmitReport_Params SubmitReport_Params;
	memcpy_s(&SubmitReport_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&SubmitReport_Params.Reason, 0x1, &Reason, 0x1);
	memcpy_s(&SubmitReport_Params.Data, 0x10, &Data, 0x10);

	this->ProcessEvent(uFnSubmitReport, &SubmitReport_Params, nullptr);
};

// Function ProjectX.OnlinePlayerPermissions_X.HasPermission
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        Permission                     (CPF_Parm)

bool UOnlinePlayerPermissions_X::HasPermission(struct FUniqueNetId PlayerID, uint8_t Permission)
{
	static UFunction* uFnHasPermission = nullptr;

	if (!uFnHasPermission)
	{
		uFnHasPermission = UFunction::FindFunction("Function ProjectX.OnlinePlayerPermissions_X.HasPermission");
	}

	UOnlinePlayerPermissions_X_execHasPermission_Params HasPermission_Params;
	memcpy_s(&HasPermission_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&HasPermission_Params.Permission, 0x1, &Permission, 0x1);

	this->ProcessEvent(uFnHasPermission, &HasPermission_Params, nullptr);

	return HasPermission_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerPermissions_X.HandlePlayerPermissions
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPlayerPermissions_X* RPC                            (CPF_Parm)

void UOnlinePlayerPermissions_X::HandlePlayerPermissions(class URPC_GetPlayerPermissions_X* RPC)
{
	static UFunction* uFnHandlePlayerPermissions = nullptr;

	if (!uFnHandlePlayerPermissions)
	{
		uFnHandlePlayerPermissions = UFunction::FindFunction("Function ProjectX.OnlinePlayerPermissions_X.HandlePlayerPermissions");
	}

	UOnlinePlayerPermissions_X_execHandlePlayerPermissions_Params HandlePlayerPermissions_Params;
	memcpy_s(&HandlePlayerPermissions_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandlePlayerPermissions, &HandlePlayerPermissions_Params, nullptr);
};

// Function ProjectX.OnlinePlayerPermissions_X.SendRequest
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerPermissions_X::SendRequest()
{
	static UFunction* uFnSendRequest = nullptr;

	if (!uFnSendRequest)
	{
		uFnSendRequest = UFunction::FindFunction("Function ProjectX.OnlinePlayerPermissions_X.SendRequest");
	}

	UOnlinePlayerPermissions_X_execSendRequest_Params SendRequest_Params;

	this->ProcessEvent(uFnSendRequest, &SendRequest_Params, nullptr);
};

// Function ProjectX.OnlinePlayerPermissions_X.SyncPermissions
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UOnlinePlayerPermissions_X::SyncPermissions(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnSyncPermissions = nullptr;

	if (!uFnSyncPermissions)
	{
		uFnSyncPermissions = UFunction::FindFunction("Function ProjectX.OnlinePlayerPermissions_X.SyncPermissions");
	}

	UOnlinePlayerPermissions_X_execSyncPermissions_Params SyncPermissions_Params;
	memcpy_s(&SyncPermissions_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnSyncPermissions, &SyncPermissions_Params, nullptr);
};

// Function ProjectX.OnlinePlayerPermissions_X.EventUpdated
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerPermissions_X* Permissions                    (CPF_Parm)

void UOnlinePlayerPermissions_X::EventUpdated(class UOnlinePlayerPermissions_X* Permissions)
{
	static UFunction* uFnEventUpdated = nullptr;

	if (!uFnEventUpdated)
	{
		uFnEventUpdated = UFunction::FindFunction("Function ProjectX.OnlinePlayerPermissions_X.EventUpdated");
	}

	UOnlinePlayerPermissions_X_execEventUpdated_Params EventUpdated_Params;
	memcpy_s(&EventUpdated_Params.Permissions, 0x8, &Permissions, 0x8);

	this->ProcessEvent(uFnEventUpdated, &EventUpdated_Params, nullptr);
};

// Function ProjectX.RPC_CheckReplacementDedicatedServer_X.GetServerAddress
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString URPC_CheckReplacementDedicatedServer_X::GetServerAddress()
{
	static UFunction* uFnGetServerAddress = nullptr;

	if (!uFnGetServerAddress)
	{
		uFnGetServerAddress = UFunction::FindFunction("Function ProjectX.RPC_CheckReplacementDedicatedServer_X.GetServerAddress");
	}

	URPC_CheckReplacementDedicatedServer_X_execGetServerAddress_Params GetServerAddress_Params;

	this->ProcessEvent(uFnGetServerAddress, &GetServerAddress_Params, nullptr);

	return GetServerAddress_Params.ReturnValue;
};

// Function ProjectX.RPC_CheckReplacementDedicatedServer_X.SetServerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CheckReplacementDedicatedServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerID                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_CheckReplacementDedicatedServer_X* URPC_CheckReplacementDedicatedServer_X::SetServerID(class FString InServerID)
{
	static UFunction* uFnSetServerID = nullptr;

	if (!uFnSetServerID)
	{
		uFnSetServerID = UFunction::FindFunction("Function ProjectX.RPC_CheckReplacementDedicatedServer_X.SetServerID");
	}

	URPC_CheckReplacementDedicatedServer_X_execSetServerID_Params SetServerID_Params;
	memcpy_s(&SetServerID_Params.InServerID, 0x10, &InServerID, 0x10);

	this->ProcessEvent(uFnSetServerID, &SetServerID_Params, nullptr);

	return SetServerID_Params.ReturnValue;
};

// Function ProjectX.RPC_AddQuitter_X.SetMatchGUID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_AddQuitter_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMatchGUID                    (CPF_Parm | CPF_NeedCtorLink)

class URPC_AddQuitter_X* URPC_AddQuitter_X::SetMatchGUID(class FString InMatchGUID)
{
	static UFunction* uFnSetMatchGUID = nullptr;

	if (!uFnSetMatchGUID)
	{
		uFnSetMatchGUID = UFunction::FindFunction("Function ProjectX.RPC_AddQuitter_X.SetMatchGUID");
	}

	URPC_AddQuitter_X_execSetMatchGUID_Params SetMatchGUID_Params;
	memcpy_s(&SetMatchGUID_Params.InMatchGUID, 0x10, &InMatchGUID, 0x10);

	this->ProcessEvent(uFnSetMatchGUID, &SetMatchGUID_Params, nullptr);

	return SetMatchGUID_Params.ReturnValue;
};

// Function ProjectX.RPC_AddQuitter_X.SetPlaylistID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_AddQuitter_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylistID                   (CPF_Parm)

class URPC_AddQuitter_X* URPC_AddQuitter_X::SetPlaylistID(int32_t InPlaylistID)
{
	static UFunction* uFnSetPlaylistID = nullptr;

	if (!uFnSetPlaylistID)
	{
		uFnSetPlaylistID = UFunction::FindFunction("Function ProjectX.RPC_AddQuitter_X.SetPlaylistID");
	}

	URPC_AddQuitter_X_execSetPlaylistID_Params SetPlaylistID_Params;
	memcpy_s(&SetPlaylistID_Params.InPlaylistID, 0x4, &InPlaylistID, 0x4);

	this->ProcessEvent(uFnSetPlaylistID, &SetPlaylistID_Params, nullptr);

	return SetPlaylistID_Params.ReturnValue;
};

// Function ProjectX.RPC_AddQuitter_X.SetReason
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_AddQuitter_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InReason                       (CPF_Parm | CPF_NeedCtorLink)

class URPC_AddQuitter_X* URPC_AddQuitter_X::SetReason(class FString InReason)
{
	static UFunction* uFnSetReason = nullptr;

	if (!uFnSetReason)
	{
		uFnSetReason = UFunction::FindFunction("Function ProjectX.RPC_AddQuitter_X.SetReason");
	}

	URPC_AddQuitter_X_execSetReason_Params SetReason_Params;
	memcpy_s(&SetReason_Params.InReason, 0x10, &InReason, 0x10);

	this->ProcessEvent(uFnSetReason, &SetReason_Params, nullptr);

	return SetReason_Params.ReturnValue;
};

// Function ProjectX.RPC_AddQuitter_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_AddQuitter_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_AddQuitter_X* URPC_AddQuitter_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_AddQuitter_X.SetPlayerID");
	}

	URPC_AddQuitter_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_RemoveQuitter_X.SetMatchGUID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RemoveQuitter_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMatchGUID                    (CPF_Parm | CPF_NeedCtorLink)

class URPC_RemoveQuitter_X* URPC_RemoveQuitter_X::SetMatchGUID(class FString InMatchGUID)
{
	static UFunction* uFnSetMatchGUID = nullptr;

	if (!uFnSetMatchGUID)
	{
		uFnSetMatchGUID = UFunction::FindFunction("Function ProjectX.RPC_RemoveQuitter_X.SetMatchGUID");
	}

	URPC_RemoveQuitter_X_execSetMatchGUID_Params SetMatchGUID_Params;
	memcpy_s(&SetMatchGUID_Params.InMatchGUID, 0x10, &InMatchGUID, 0x10);

	this->ProcessEvent(uFnSetMatchGUID, &SetMatchGUID_Params, nullptr);

	return SetMatchGUID_Params.ReturnValue;
};

// Function ProjectX.RPC_RemoveQuitter_X.SetPlaylistID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RemoveQuitter_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylistID                   (CPF_Parm)

class URPC_RemoveQuitter_X* URPC_RemoveQuitter_X::SetPlaylistID(int32_t InPlaylistID)
{
	static UFunction* uFnSetPlaylistID = nullptr;

	if (!uFnSetPlaylistID)
	{
		uFnSetPlaylistID = UFunction::FindFunction("Function ProjectX.RPC_RemoveQuitter_X.SetPlaylistID");
	}

	URPC_RemoveQuitter_X_execSetPlaylistID_Params SetPlaylistID_Params;
	memcpy_s(&SetPlaylistID_Params.InPlaylistID, 0x4, &InPlaylistID, 0x4);

	this->ProcessEvent(uFnSetPlaylistID, &SetPlaylistID_Params, nullptr);

	return SetPlaylistID_Params.ReturnValue;
};

// Function ProjectX.RPC_RemoveQuitter_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RemoveQuitter_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_RemoveQuitter_X* URPC_RemoveQuitter_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_RemoveQuitter_X.SetPlayerID");
	}

	URPC_RemoveQuitter_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_RecordMatch_X.SetMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RecordMatch_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UObject*                 InMatch                        (CPF_Parm)

class URPC_RecordMatch_X* URPC_RecordMatch_X::SetMatch(class UObject* InMatch)
{
	static UFunction* uFnSetMatch = nullptr;

	if (!uFnSetMatch)
	{
		uFnSetMatch = UFunction::FindFunction("Function ProjectX.RPC_RecordMatch_X.SetMatch");
	}

	URPC_RecordMatch_X_execSetMatch_Params SetMatch_Params;
	memcpy_s(&SetMatch_Params.InMatch, 0x8, &InMatch, 0x8);

	this->ProcessEvent(uFnSetMatch, &SetMatch_Params, nullptr);

	return SetMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetBackfillTeam2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InBackfillAmount               (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetBackfillTeam2(int32_t InBackfillAmount)
{
	static UFunction* uFnSetBackfillTeam2 = nullptr;

	if (!uFnSetBackfillTeam2)
	{
		uFnSetBackfillTeam2 = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetBackfillTeam2");
	}

	URPC_UpdateGameServer_X_execSetBackfillTeam2_Params SetBackfillTeam2_Params;
	memcpy_s(&SetBackfillTeam2_Params.InBackfillAmount, 0x4, &InBackfillAmount, 0x4);

	this->ProcessEvent(uFnSetBackfillTeam2, &SetBackfillTeam2_Params, nullptr);

	return SetBackfillTeam2_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetBackfillTeam1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InBackfillAmount               (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetBackfillTeam1(int32_t InBackfillAmount)
{
	static UFunction* uFnSetBackfillTeam1 = nullptr;

	if (!uFnSetBackfillTeam1)
	{
		uFnSetBackfillTeam1 = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetBackfillTeam1");
	}

	URPC_UpdateGameServer_X_execSetBackfillTeam1_Params SetBackfillTeam1_Params;
	memcpy_s(&SetBackfillTeam1_Params.InBackfillAmount, 0x4, &InBackfillAmount, 0x4);

	this->ProcessEvent(uFnSetBackfillTeam1, &SetBackfillTeam1_Params, nullptr);

	return SetBackfillTeam1_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetTeam2Score
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TeamScore                      (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetTeam2Score(int32_t TeamScore)
{
	static UFunction* uFnSetTeam2Score = nullptr;

	if (!uFnSetTeam2Score)
	{
		uFnSetTeam2Score = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetTeam2Score");
	}

	URPC_UpdateGameServer_X_execSetTeam2Score_Params SetTeam2Score_Params;
	memcpy_s(&SetTeam2Score_Params.TeamScore, 0x4, &TeamScore, 0x4);

	this->ProcessEvent(uFnSetTeam2Score, &SetTeam2Score_Params, nullptr);

	return SetTeam2Score_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetTeam1Score
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        TeamScore                      (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetTeam1Score(int32_t TeamScore)
{
	static UFunction* uFnSetTeam1Score = nullptr;

	if (!uFnSetTeam1Score)
	{
		uFnSetTeam1Score = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetTeam1Score");
	}

	URPC_UpdateGameServer_X_execSetTeam1Score_Params SetTeam1Score_Params;
	memcpy_s(&SetTeam1Score_Params.TeamScore, 0x4, &TeamScore, 0x4);

	this->ProcessEvent(uFnSetTeam1Score, &SetTeam1Score_Params, nullptr);

	return SetTeam1Score_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetIsBotMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bBotMatch                      (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetIsBotMatch(unsigned long bBotMatch)
{
	static UFunction* uFnSetIsBotMatch = nullptr;

	if (!uFnSetIsBotMatch)
	{
		uFnSetIsBotMatch = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetIsBotMatch");
	}

	URPC_UpdateGameServer_X_execSetIsBotMatch_Params SetIsBotMatch_Params;
	SetIsBotMatch_Params.bBotMatch = bBotMatch;

	this->ProcessEvent(uFnSetIsBotMatch, &SetIsBotMatch_Params, nullptr);

	return SetIsBotMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetClubID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       InClubID                       (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetClubID(uint64_t InClubID)
{
	static UFunction* uFnSetClubID = nullptr;

	if (!uFnSetClubID)
	{
		uFnSetClubID = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetClubID");
	}

	URPC_UpdateGameServer_X_execSetClubID_Params SetClubID_Params;
	SetClubID_Params.InClubID = InClubID;

	this->ProcessEvent(uFnSetClubID, &SetClubID_Params, nullptr);

	return SetClubID_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetCustomServerPassword
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InCustomServerPassword         (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetCustomServerPassword(class FString InCustomServerPassword)
{
	static UFunction* uFnSetCustomServerPassword = nullptr;

	if (!uFnSetCustomServerPassword)
	{
		uFnSetCustomServerPassword = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetCustomServerPassword");
	}

	URPC_UpdateGameServer_X_execSetCustomServerPassword_Params SetCustomServerPassword_Params;
	memcpy_s(&SetCustomServerPassword_Params.InCustomServerPassword, 0x10, &InCustomServerPassword, 0x10);

	this->ProcessEvent(uFnSetCustomServerPassword, &SetCustomServerPassword_Params, nullptr);

	return SetCustomServerPassword_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetCustomServerName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InCustomServerName             (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetCustomServerName(class FString InCustomServerName)
{
	static UFunction* uFnSetCustomServerName = nullptr;

	if (!uFnSetCustomServerName)
	{
		uFnSetCustomServerName = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetCustomServerName");
	}

	URPC_UpdateGameServer_X_execSetCustomServerName_Params SetCustomServerName_Params;
	memcpy_s(&SetCustomServerName_Params.InCustomServerName, 0x10, &InCustomServerName, 0x10);

	this->ProcessEvent(uFnSetCustomServerName, &SetCustomServerName_Params, nullptr);

	return SetCustomServerName_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetPlayersPlatforms
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<class FString>          InPlayersPlatforms             (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetPlayersPlatforms(TArray<class FString> InPlayersPlatforms)
{
	static UFunction* uFnSetPlayersPlatforms = nullptr;

	if (!uFnSetPlayersPlatforms)
	{
		uFnSetPlayersPlatforms = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetPlayersPlatforms");
	}

	URPC_UpdateGameServer_X_execSetPlayersPlatforms_Params SetPlayersPlatforms_Params;
	memcpy_s(&SetPlayersPlatforms_Params.InPlayersPlatforms, 0x10, &InPlayersPlatforms, 0x10);

	this->ProcessEvent(uFnSetPlayersPlatforms, &SetPlayersPlatforms_Params, nullptr);

	return SetPlayersPlatforms_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetExclusivePlatform
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InExclusivePlatform            (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetExclusivePlatform(class FString InExclusivePlatform)
{
	static UFunction* uFnSetExclusivePlatform = nullptr;

	if (!uFnSetExclusivePlatform)
	{
		uFnSetExclusivePlatform = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetExclusivePlatform");
	}

	URPC_UpdateGameServer_X_execSetExclusivePlatform_Params SetExclusivePlatform_Params;
	memcpy_s(&SetExclusivePlatform_Params.InExclusivePlatform, 0x10, &InExclusivePlatform, 0x10);

	this->ProcessEvent(uFnSetExclusivePlatform, &SetExclusivePlatform_Params, nullptr);

	return SetExclusivePlatform_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetTimeRemaining
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InTimeRemaining                (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetTimeRemaining(int32_t InTimeRemaining)
{
	static UFunction* uFnSetTimeRemaining = nullptr;

	if (!uFnSetTimeRemaining)
	{
		uFnSetTimeRemaining = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetTimeRemaining");
	}

	URPC_UpdateGameServer_X_execSetTimeRemaining_Params SetTimeRemaining_Params;
	memcpy_s(&SetTimeRemaining_Params.InTimeRemaining, 0x4, &InTimeRemaining, 0x4);

	this->ProcessEvent(uFnSetTimeRemaining, &SetTimeRemaining_Params, nullptr);

	return SetTimeRemaining_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetIsPostGame
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bInIsPostGame                  (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetIsPostGame(unsigned long bInIsPostGame)
{
	static UFunction* uFnSetIsPostGame = nullptr;

	if (!uFnSetIsPostGame)
	{
		uFnSetIsPostGame = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetIsPostGame");
	}

	URPC_UpdateGameServer_X_execSetIsPostGame_Params SetIsPostGame_Params;
	SetIsPostGame_Params.bInIsPostGame = bInIsPostGame;

	this->ProcessEvent(uFnSetIsPostGame, &SetIsPostGame_Params, nullptr);

	return SetIsPostGame_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetAbandonedPlayerIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    InPlayerIDs                    (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetAbandonedPlayerIDs(TArray<struct FUniqueNetId> InPlayerIDs)
{
	static UFunction* uFnSetAbandonedPlayerIDs = nullptr;

	if (!uFnSetAbandonedPlayerIDs)
	{
		uFnSetAbandonedPlayerIDs = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetAbandonedPlayerIDs");
	}

	URPC_UpdateGameServer_X_execSetAbandonedPlayerIDs_Params SetAbandonedPlayerIDs_Params;
	memcpy_s(&SetAbandonedPlayerIDs_Params.InPlayerIDs, 0x10, &InPlayerIDs, 0x10);

	this->ProcessEvent(uFnSetAbandonedPlayerIDs, &SetAbandonedPlayerIDs_Params, nullptr);

	return SetAbandonedPlayerIDs_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetPlayerIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    InPlayerIDs                    (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetPlayerIDs(TArray<struct FUniqueNetId> InPlayerIDs)
{
	static UFunction* uFnSetPlayerIDs = nullptr;

	if (!uFnSetPlayerIDs)
	{
		uFnSetPlayerIDs = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetPlayerIDs");
	}

	URPC_UpdateGameServer_X_execSetPlayerIDs_Params SetPlayerIDs_Params;
	memcpy_s(&SetPlayerIDs_Params.InPlayerIDs, 0x10, &InPlayerIDs, 0x10);

	this->ProcessEvent(uFnSetPlayerIDs, &SetPlayerIDs_Params, nullptr);

	return SetPlayerIDs_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetReservationsTeam2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InReservationsTeam2            (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetReservationsTeam2(int32_t InReservationsTeam2)
{
	static UFunction* uFnSetReservationsTeam2 = nullptr;

	if (!uFnSetReservationsTeam2)
	{
		uFnSetReservationsTeam2 = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetReservationsTeam2");
	}

	URPC_UpdateGameServer_X_execSetReservationsTeam2_Params SetReservationsTeam2_Params;
	memcpy_s(&SetReservationsTeam2_Params.InReservationsTeam2, 0x4, &InReservationsTeam2, 0x4);

	this->ProcessEvent(uFnSetReservationsTeam2, &SetReservationsTeam2_Params, nullptr);

	return SetReservationsTeam2_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetReservationsTeam1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InReservationsTeam1            (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetReservationsTeam1(int32_t InReservationsTeam1)
{
	static UFunction* uFnSetReservationsTeam1 = nullptr;

	if (!uFnSetReservationsTeam1)
	{
		uFnSetReservationsTeam1 = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetReservationsTeam1");
	}

	URPC_UpdateGameServer_X_execSetReservationsTeam1_Params SetReservationsTeam1_Params;
	memcpy_s(&SetReservationsTeam1_Params.InReservationsTeam1, 0x4, &InReservationsTeam1, 0x4);

	this->ProcessEvent(uFnSetReservationsTeam1, &SetReservationsTeam1_Params, nullptr);

	return SetReservationsTeam1_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetNumPlayersTeam2
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InNumPlayersTeam2              (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetNumPlayersTeam2(int32_t InNumPlayersTeam2)
{
	static UFunction* uFnSetNumPlayersTeam2 = nullptr;

	if (!uFnSetNumPlayersTeam2)
	{
		uFnSetNumPlayersTeam2 = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetNumPlayersTeam2");
	}

	URPC_UpdateGameServer_X_execSetNumPlayersTeam2_Params SetNumPlayersTeam2_Params;
	memcpy_s(&SetNumPlayersTeam2_Params.InNumPlayersTeam2, 0x4, &InNumPlayersTeam2, 0x4);

	this->ProcessEvent(uFnSetNumPlayersTeam2, &SetNumPlayersTeam2_Params, nullptr);

	return SetNumPlayersTeam2_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetNumPlayersTeam1
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InNumPlayersTeam1              (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetNumPlayersTeam1(int32_t InNumPlayersTeam1)
{
	static UFunction* uFnSetNumPlayersTeam1 = nullptr;

	if (!uFnSetNumPlayersTeam1)
	{
		uFnSetNumPlayersTeam1 = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetNumPlayersTeam1");
	}

	URPC_UpdateGameServer_X_execSetNumPlayersTeam1_Params SetNumPlayersTeam1_Params;
	memcpy_s(&SetNumPlayersTeam1_Params.InNumPlayersTeam1, 0x4, &InNumPlayersTeam1, 0x4);

	this->ProcessEvent(uFnSetNumPlayersTeam1, &SetNumPlayersTeam1_Params, nullptr);

	return SetNumPlayersTeam1_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetMaxPlayers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InMaxPlayers                   (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetMaxPlayers(int32_t InMaxPlayers)
{
	static UFunction* uFnSetMaxPlayers = nullptr;

	if (!uFnSetMaxPlayers)
	{
		uFnSetMaxPlayers = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetMaxPlayers");
	}

	URPC_UpdateGameServer_X_execSetMaxPlayers_Params SetMaxPlayers_Params;
	memcpy_s(&SetMaxPlayers_Params.InMaxPlayers, 0x4, &InMaxPlayers, 0x4);

	this->ProcessEvent(uFnSetMaxPlayers, &SetMaxPlayers_Params, nullptr);

	return SetMaxPlayers_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylist                     (CPF_Parm)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetPlaylist(int32_t InPlaylist)
{
	static UFunction* uFnSetPlaylist = nullptr;

	if (!uFnSetPlaylist)
	{
		uFnSetPlaylist = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetPlaylist");
	}

	URPC_UpdateGameServer_X_execSetPlaylist_Params SetPlaylist_Params;
	memcpy_s(&SetPlaylist_Params.InPlaylist, 0x4, &InPlaylist, 0x4);

	this->ProcessEvent(uFnSetPlaylist, &SetPlaylist_Params, nullptr);

	return SetPlaylist_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateGameServer_X.SetServerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerID                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateGameServer_X* URPC_UpdateGameServer_X::SetServerID(class FString InServerID)
{
	static UFunction* uFnSetServerID = nullptr;

	if (!uFnSetServerID)
	{
		uFnSetServerID = UFunction::FindFunction("Function ProjectX.RPC_UpdateGameServer_X.SetServerID");
	}

	URPC_UpdateGameServer_X_execSetServerID_Params SetServerID_Params;
	memcpy_s(&SetServerID_Params.InServerID, 0x10, &InServerID, 0x10);

	this->ProcessEvent(uFnSetServerID, &SetServerID_Params, nullptr);

	return SetServerID_Params.ReturnValue;
};

// Function ProjectX.RPC_CreateGameServer_X.SetBuildID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InBuildID                      (CPF_Parm)

class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetBuildID(int32_t InBuildID)
{
	static UFunction* uFnSetBuildID = nullptr;

	if (!uFnSetBuildID)
	{
		uFnSetBuildID = UFunction::FindFunction("Function ProjectX.RPC_CreateGameServer_X.SetBuildID");
	}

	URPC_CreateGameServer_X_execSetBuildID_Params SetBuildID_Params;
	memcpy_s(&SetBuildID_Params.InBuildID, 0x4, &InBuildID, 0x4);

	this->ProcessEvent(uFnSetBuildID, &SetBuildID_Params, nullptr);

	return SetBuildID_Params.ReturnValue;
};

// Function ProjectX.RPC_CreateGameServer_X.SetDataCenter
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InDataCenter                   (CPF_Parm | CPF_NeedCtorLink)

class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetDataCenter(class FString InDataCenter)
{
	static UFunction* uFnSetDataCenter = nullptr;

	if (!uFnSetDataCenter)
	{
		uFnSetDataCenter = UFunction::FindFunction("Function ProjectX.RPC_CreateGameServer_X.SetDataCenter");
	}

	URPC_CreateGameServer_X_execSetDataCenter_Params SetDataCenter_Params;
	memcpy_s(&SetDataCenter_Params.InDataCenter, 0x10, &InDataCenter, 0x10);

	this->ProcessEvent(uFnSetDataCenter, &SetDataCenter_Params, nullptr);

	return SetDataCenter_Params.ReturnValue;
};

// Function ProjectX.RPC_CreateGameServer_X.SetRegion
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InRegion                       (CPF_Parm | CPF_NeedCtorLink)

class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetRegion(class FString InRegion)
{
	static UFunction* uFnSetRegion = nullptr;

	if (!uFnSetRegion)
	{
		uFnSetRegion = UFunction::FindFunction("Function ProjectX.RPC_CreateGameServer_X.SetRegion");
	}

	URPC_CreateGameServer_X_execSetRegion_Params SetRegion_Params;
	memcpy_s(&SetRegion_Params.InRegion, 0x10, &InRegion, 0x10);

	this->ProcessEvent(uFnSetRegion, &SetRegion_Params, nullptr);

	return SetRegion_Params.ReturnValue;
};

// Function ProjectX.RPC_CreateGameServer_X.SetIP
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InIP                           (CPF_Parm | CPF_NeedCtorLink)

class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetIP(class FString InIP)
{
	static UFunction* uFnSetIP = nullptr;

	if (!uFnSetIP)
	{
		uFnSetIP = UFunction::FindFunction("Function ProjectX.RPC_CreateGameServer_X.SetIP");
	}

	URPC_CreateGameServer_X_execSetIP_Params SetIP_Params;
	memcpy_s(&SetIP_Params.InIP, 0x10, &InIP, 0x10);

	this->ProcessEvent(uFnSetIP, &SetIP_Params, nullptr);

	return SetIP_Params.ReturnValue;
};

// Function ProjectX.RPC_CreateGameServer_X.SetMachineID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InMachineID                    (CPF_Parm)

class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetMachineID(int32_t InMachineID)
{
	static UFunction* uFnSetMachineID = nullptr;

	if (!uFnSetMachineID)
	{
		uFnSetMachineID = UFunction::FindFunction("Function ProjectX.RPC_CreateGameServer_X.SetMachineID");
	}

	URPC_CreateGameServer_X_execSetMachineID_Params SetMachineID_Params;
	memcpy_s(&SetMachineID_Params.InMachineID, 0x4, &InMachineID, 0x4);

	this->ProcessEvent(uFnSetMachineID, &SetMachineID_Params, nullptr);

	return SetMachineID_Params.ReturnValue;
};

// Function ProjectX.RPC_CreateGameServer_X.SetServerType
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerType                   (CPF_Parm | CPF_NeedCtorLink)

class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetServerType(class FString InServerType)
{
	static UFunction* uFnSetServerType = nullptr;

	if (!uFnSetServerType)
	{
		uFnSetServerType = UFunction::FindFunction("Function ProjectX.RPC_CreateGameServer_X.SetServerType");
	}

	URPC_CreateGameServer_X_execSetServerType_Params SetServerType_Params;
	memcpy_s(&SetServerType_Params.InServerType, 0x10, &InServerType, 0x10);

	this->ProcessEvent(uFnSetServerType, &SetServerType_Params, nullptr);

	return SetServerType_Params.ReturnValue;
};

// Function ProjectX.RPC_CreateGameServer_X.SetServerName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_CreateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerName                   (CPF_Parm | CPF_NeedCtorLink)

class URPC_CreateGameServer_X* URPC_CreateGameServer_X::SetServerName(class FString InServerName)
{
	static UFunction* uFnSetServerName = nullptr;

	if (!uFnSetServerName)
	{
		uFnSetServerName = UFunction::FindFunction("Function ProjectX.RPC_CreateGameServer_X.SetServerName");
	}

	URPC_CreateGameServer_X_execSetServerName_Params SetServerName_Params;
	memcpy_s(&SetServerName_Params.InServerName, 0x10, &InServerName, 0x10);

	this->ProcessEvent(uFnSetServerName, &SetServerName_Params, nullptr);

	return SetServerName_Params.ReturnValue;
};

// Function ProjectX.ServerMetrics_X.CrashedError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UServerMetrics_X::CrashedError()
{
	static UFunction* uFnCrashedError = nullptr;

	if (!uFnCrashedError)
	{
		uFnCrashedError = UFunction::FindFunction("Function ProjectX.ServerMetrics_X.CrashedError");
	}

	UServerMetrics_X_execCrashedError_Params CrashedError_Params;

	this->ProcessEvent(uFnCrashedError, &CrashedError_Params, nullptr);
};

// Function ProjectX.ServerMetrics_X.ShutDown
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UServerMetrics_X::ShutDown()
{
	static UFunction* uFnShutDown = nullptr;

	if (!uFnShutDown)
	{
		uFnShutDown = UFunction::FindFunction("Function ProjectX.ServerMetrics_X.ShutDown");
	}

	UServerMetrics_X_execShutDown_Params ShutDown_Params;

	this->ProcessEvent(uFnShutDown, &ShutDown_Params, nullptr);
};

// Function ProjectX.ServerMetrics_X.Created
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerId                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Host                           (CPF_Parm | CPF_NeedCtorLink)

void UServerMetrics_X::Created(class FString ServerId, class FString Host)
{
	static UFunction* uFnCreated = nullptr;

	if (!uFnCreated)
	{
		uFnCreated = UFunction::FindFunction("Function ProjectX.ServerMetrics_X.Created");
	}

	UServerMetrics_X_execCreated_Params Created_Params;
	memcpy_s(&Created_Params.ServerId, 0x10, &ServerId, 0x10);
	memcpy_s(&Created_Params.Host, 0x10, &Host, 0x10);

	this->ProcessEvent(uFnCreated, &Created_Params, nullptr);
};

// Function ProjectX.RPC_DeactivateGameServer_X.SetServerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_DeactivateGameServer_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerID                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_DeactivateGameServer_X* URPC_DeactivateGameServer_X::SetServerID(class FString InServerID)
{
	static UFunction* uFnSetServerID = nullptr;

	if (!uFnSetServerID)
	{
		uFnSetServerID = UFunction::FindFunction("Function ProjectX.RPC_DeactivateGameServer_X.SetServerID");
	}

	URPC_DeactivateGameServer_X_execSetServerID_Params SetServerID_Params;
	memcpy_s(&SetServerID_Params.InServerID, 0x10, &InServerID, 0x10);

	this->ProcessEvent(uFnSetServerID, &SetServerID_Params, nullptr);

	return SetServerID_Params.ReturnValue;
};

// Function ProjectX.RPC_SetServerNotJoinable_X.SetServerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetServerNotJoinable_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerID                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_SetServerNotJoinable_X* URPC_SetServerNotJoinable_X::SetServerID(class FString InServerID)
{
	static UFunction* uFnSetServerID = nullptr;

	if (!uFnSetServerID)
	{
		uFnSetServerID = UFunction::FindFunction("Function ProjectX.RPC_SetServerNotJoinable_X.SetServerID");
	}

	URPC_SetServerNotJoinable_X_execSetServerID_Params SetServerID_Params;
	memcpy_s(&SetServerID_Params.InServerID, 0x10, &InServerID, 0x10);

	this->ProcessEvent(uFnSetServerID, &SetServerID_Params, nullptr);

	return SetServerID_Params.ReturnValue;
};

// Function ProjectX.ReservationsMetrics_X.PlayerReservationWithNoPsyNetBeaconError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::PlayerReservationWithNoPsyNetBeaconError(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnPlayerReservationWithNoPsyNetBeaconError = nullptr;

	if (!uFnPlayerReservationWithNoPsyNetBeaconError)
	{
		uFnPlayerReservationWithNoPsyNetBeaconError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.PlayerReservationWithNoPsyNetBeaconError");
	}

	UReservationsMetrics_X_execPlayerReservationWithNoPsyNetBeaconError_Params PlayerReservationWithNoPsyNetBeaconError_Params;
	memcpy_s(&PlayerReservationWithNoPsyNetBeaconError_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnPlayerReservationWithNoPsyNetBeaconError, &PlayerReservationWithNoPsyNetBeaconError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.ServerMigrationPlayersAlreadySetError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerId                       (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::ServerMigrationPlayersAlreadySetError(class FString ServerId)
{
	static UFunction* uFnServerMigrationPlayersAlreadySetError = nullptr;

	if (!uFnServerMigrationPlayersAlreadySetError)
	{
		uFnServerMigrationPlayersAlreadySetError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.ServerMigrationPlayersAlreadySetError");
	}

	UReservationsMetrics_X_execServerMigrationPlayersAlreadySetError_Params ServerMigrationPlayersAlreadySetError_Params;
	memcpy_s(&ServerMigrationPlayersAlreadySetError_Params.ServerId, 0x10, &ServerId, 0x10);

	this->ProcessEvent(uFnServerMigrationPlayersAlreadySetError, &ServerMigrationPlayersAlreadySetError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.ServerMigrationPlaylistNotSetError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ServerId                       (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::ServerMigrationPlaylistNotSetError(class FString ServerId)
{
	static UFunction* uFnServerMigrationPlaylistNotSetError = nullptr;

	if (!uFnServerMigrationPlaylistNotSetError)
	{
		uFnServerMigrationPlaylistNotSetError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.ServerMigrationPlaylistNotSetError");
	}

	UReservationsMetrics_X_execServerMigrationPlaylistNotSetError_Params ServerMigrationPlaylistNotSetError_Params;
	memcpy_s(&ServerMigrationPlaylistNotSetError_Params.ServerId, 0x10, &ServerId, 0x10);

	this->ProcessEvent(uFnServerMigrationPlaylistNotSetError, &ServerMigrationPlaylistNotSetError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.TournamentMigrationMessageInvalidTournamentPlaylistError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::TournamentMigrationMessageInvalidTournamentPlaylistError()
{
	static UFunction* uFnTournamentMigrationMessageInvalidTournamentPlaylistError = nullptr;

	if (!uFnTournamentMigrationMessageInvalidTournamentPlaylistError)
	{
		uFnTournamentMigrationMessageInvalidTournamentPlaylistError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.TournamentMigrationMessageInvalidTournamentPlaylistError");
	}

	UReservationsMetrics_X_execTournamentMigrationMessageInvalidTournamentPlaylistError_Params TournamentMigrationMessageInvalidTournamentPlaylistError_Params;

	this->ProcessEvent(uFnTournamentMigrationMessageInvalidTournamentPlaylistError, &TournamentMigrationMessageInvalidTournamentPlaylistError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.TournamentMigrationMessageWhileActiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::TournamentMigrationMessageWhileActiveError()
{
	static UFunction* uFnTournamentMigrationMessageWhileActiveError = nullptr;

	if (!uFnTournamentMigrationMessageWhileActiveError)
	{
		uFnTournamentMigrationMessageWhileActiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.TournamentMigrationMessageWhileActiveError");
	}

	UReservationsMetrics_X_execTournamentMigrationMessageWhileActiveError_Params TournamentMigrationMessageWhileActiveError_Params;

	this->ProcessEvent(uFnTournamentMigrationMessageWhileActiveError, &TournamentMigrationMessageWhileActiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.JoinExternalMatchReservationWhileInactiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::JoinExternalMatchReservationWhileInactiveError()
{
	static UFunction* uFnJoinExternalMatchReservationWhileInactiveError = nullptr;

	if (!uFnJoinExternalMatchReservationWhileInactiveError)
	{
		uFnJoinExternalMatchReservationWhileInactiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.JoinExternalMatchReservationWhileInactiveError");
	}

	UReservationsMetrics_X_execJoinExternalMatchReservationWhileInactiveError_Params JoinExternalMatchReservationWhileInactiveError_Params;

	this->ProcessEvent(uFnJoinExternalMatchReservationWhileInactiveError, &JoinExternalMatchReservationWhileInactiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.CreateExternalMatchReservationWhileActiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::CreateExternalMatchReservationWhileActiveError()
{
	static UFunction* uFnCreateExternalMatchReservationWhileActiveError = nullptr;

	if (!uFnCreateExternalMatchReservationWhileActiveError)
	{
		uFnCreateExternalMatchReservationWhileActiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.CreateExternalMatchReservationWhileActiveError");
	}

	UReservationsMetrics_X_execCreateExternalMatchReservationWhileActiveError_Params CreateExternalMatchReservationWhileActiveError_Params;

	this->ProcessEvent(uFnCreateExternalMatchReservationWhileActiveError, &CreateExternalMatchReservationWhileActiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.DsrServerToServerFailedDeserializeError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  MessageType                    (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::DsrServerToServerFailedDeserializeError(class FString MessageType)
{
	static UFunction* uFnDsrServerToServerFailedDeserializeError = nullptr;

	if (!uFnDsrServerToServerFailedDeserializeError)
	{
		uFnDsrServerToServerFailedDeserializeError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.DsrServerToServerFailedDeserializeError");
	}

	UReservationsMetrics_X_execDsrServerToServerFailedDeserializeError_Params DsrServerToServerFailedDeserializeError_Params;
	memcpy_s(&DsrServerToServerFailedDeserializeError_Params.MessageType, 0x10, &MessageType, 0x10);

	this->ProcessEvent(uFnDsrServerToServerFailedDeserializeError, &DsrServerToServerFailedDeserializeError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.JoinTournamentReservationWhileInactiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::JoinTournamentReservationWhileInactiveError()
{
	static UFunction* uFnJoinTournamentReservationWhileInactiveError = nullptr;

	if (!uFnJoinTournamentReservationWhileInactiveError)
	{
		uFnJoinTournamentReservationWhileInactiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.JoinTournamentReservationWhileInactiveError");
	}

	UReservationsMetrics_X_execJoinTournamentReservationWhileInactiveError_Params JoinTournamentReservationWhileInactiveError_Params;

	this->ProcessEvent(uFnJoinTournamentReservationWhileInactiveError, &JoinTournamentReservationWhileInactiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.CreateTournamentReservationInvalidPlaylistError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::CreateTournamentReservationInvalidPlaylistError()
{
	static UFunction* uFnCreateTournamentReservationInvalidPlaylistError = nullptr;

	if (!uFnCreateTournamentReservationInvalidPlaylistError)
	{
		uFnCreateTournamentReservationInvalidPlaylistError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.CreateTournamentReservationInvalidPlaylistError");
	}

	UReservationsMetrics_X_execCreateTournamentReservationInvalidPlaylistError_Params CreateTournamentReservationInvalidPlaylistError_Params;

	this->ProcessEvent(uFnCreateTournamentReservationInvalidPlaylistError, &CreateTournamentReservationInvalidPlaylistError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.CreateTournamentReservationWhileActiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::CreateTournamentReservationWhileActiveError()
{
	static UFunction* uFnCreateTournamentReservationWhileActiveError = nullptr;

	if (!uFnCreateTournamentReservationWhileActiveError)
	{
		uFnCreateTournamentReservationWhileActiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.CreateTournamentReservationWhileActiveError");
	}

	UReservationsMetrics_X_execCreateTournamentReservationWhileActiveError_Params CreateTournamentReservationWhileActiveError_Params;

	this->ProcessEvent(uFnCreateTournamentReservationWhileActiveError, &CreateTournamentReservationWhileActiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.JoinPrivateReservationWhileInactiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::JoinPrivateReservationWhileInactiveError()
{
	static UFunction* uFnJoinPrivateReservationWhileInactiveError = nullptr;

	if (!uFnJoinPrivateReservationWhileInactiveError)
	{
		uFnJoinPrivateReservationWhileInactiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.JoinPrivateReservationWhileInactiveError");
	}

	UReservationsMetrics_X_execJoinPrivateReservationWhileInactiveError_Params JoinPrivateReservationWhileInactiveError_Params;

	this->ProcessEvent(uFnJoinPrivateReservationWhileInactiveError, &JoinPrivateReservationWhileInactiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.CreatePrivateReservationWhileActiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::CreatePrivateReservationWhileActiveError()
{
	static UFunction* uFnCreatePrivateReservationWhileActiveError = nullptr;

	if (!uFnCreatePrivateReservationWhileActiveError)
	{
		uFnCreatePrivateReservationWhileActiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.CreatePrivateReservationWhileActiveError");
	}

	UReservationsMetrics_X_execCreatePrivateReservationWhileActiveError_Params CreatePrivateReservationWhileActiveError_Params;

	this->ProcessEvent(uFnCreatePrivateReservationWhileActiveError, &CreatePrivateReservationWhileActiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.BackfillReservationIncorrectPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::BackfillReservationIncorrectPlaylist()
{
	static UFunction* uFnBackfillReservationIncorrectPlaylist = nullptr;

	if (!uFnBackfillReservationIncorrectPlaylist)
	{
		uFnBackfillReservationIncorrectPlaylist = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.BackfillReservationIncorrectPlaylist");
	}

	UReservationsMetrics_X_execBackfillReservationIncorrectPlaylist_Params BackfillReservationIncorrectPlaylist_Params;

	this->ProcessEvent(uFnBackfillReservationIncorrectPlaylist, &BackfillReservationIncorrectPlaylist_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.BackfillReservationWhileInactiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::BackfillReservationWhileInactiveError()
{
	static UFunction* uFnBackfillReservationWhileInactiveError = nullptr;

	if (!uFnBackfillReservationWhileInactiveError)
	{
		uFnBackfillReservationWhileInactiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.BackfillReservationWhileInactiveError");
	}

	UReservationsMetrics_X_execBackfillReservationWhileInactiveError_Params BackfillReservationWhileInactiveError_Params;

	this->ProcessEvent(uFnBackfillReservationWhileInactiveError, &BackfillReservationWhileInactiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.NewGameReservationWhileActiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::NewGameReservationWhileActiveError()
{
	static UFunction* uFnNewGameReservationWhileActiveError = nullptr;

	if (!uFnNewGameReservationWhileActiveError)
	{
		uFnNewGameReservationWhileActiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.NewGameReservationWhileActiveError");
	}

	UReservationsMetrics_X_execNewGameReservationWhileActiveError_Params NewGameReservationWhileActiveError_Params;

	this->ProcessEvent(uFnNewGameReservationWhileActiveError, &NewGameReservationWhileActiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.SplitscreenIdMismatchError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PrimaryPlayerId                (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            SplitscreenPlayerId            (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::SplitscreenIdMismatchError(struct FUniqueNetId PrimaryPlayerId, struct FUniqueNetId SplitscreenPlayerId)
{
	static UFunction* uFnSplitscreenIdMismatchError = nullptr;

	if (!uFnSplitscreenIdMismatchError)
	{
		uFnSplitscreenIdMismatchError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.SplitscreenIdMismatchError");
	}

	UReservationsMetrics_X_execSplitscreenIdMismatchError_Params SplitscreenIdMismatchError_Params;
	memcpy_s(&SplitscreenIdMismatchError_Params.PrimaryPlayerId, 0x48, &PrimaryPlayerId, 0x48);
	memcpy_s(&SplitscreenIdMismatchError_Params.SplitscreenPlayerId, 0x48, &SplitscreenPlayerId, 0x48);

	this->ProcessEvent(uFnSplitscreenIdMismatchError, &SplitscreenIdMismatchError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.PartyLeaderInDuelError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::PartyLeaderInDuelError(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnPartyLeaderInDuelError = nullptr;

	if (!uFnPartyLeaderInDuelError)
	{
		uFnPartyLeaderInDuelError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.PartyLeaderInDuelError");
	}

	UReservationsMetrics_X_execPartyLeaderInDuelError_Params PartyLeaderInDuelError_Params;
	memcpy_s(&PartyLeaderInDuelError_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnPartyLeaderInDuelError, &PartyLeaderInDuelError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.PlayerReservationWrongIdError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  AttemptedId                    (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::PlayerReservationWrongIdError(struct FUniqueNetId PlayerID, class FString AttemptedId)
{
	static UFunction* uFnPlayerReservationWrongIdError = nullptr;

	if (!uFnPlayerReservationWrongIdError)
	{
		uFnPlayerReservationWrongIdError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.PlayerReservationWrongIdError");
	}

	UReservationsMetrics_X_execPlayerReservationWrongIdError_Params PlayerReservationWrongIdError_Params;
	memcpy_s(&PlayerReservationWrongIdError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&PlayerReservationWrongIdError_Params.AttemptedId, 0x10, &AttemptedId, 0x10);

	this->ProcessEvent(uFnPlayerReservationWrongIdError, &PlayerReservationWrongIdError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.JoinWhileInactiveError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::JoinWhileInactiveError()
{
	static UFunction* uFnJoinWhileInactiveError = nullptr;

	if (!uFnJoinWhileInactiveError)
	{
		uFnJoinWhileInactiveError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.JoinWhileInactiveError");
	}

	UReservationsMetrics_X_execJoinWhileInactiveError_Params JoinWhileInactiveError_Params;

	this->ProcessEvent(uFnJoinWhileInactiveError, &JoinWhileInactiveError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.DsrConnectionTimeoutError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::DsrConnectionTimeoutError()
{
	static UFunction* uFnDsrConnectionTimeoutError = nullptr;

	if (!uFnDsrConnectionTimeoutError)
	{
		uFnDsrConnectionTimeoutError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.DsrConnectionTimeoutError");
	}

	UReservationsMetrics_X_execDsrConnectionTimeoutError_Params DsrConnectionTimeoutError_Params;

	this->ProcessEvent(uFnDsrConnectionTimeoutError, &DsrConnectionTimeoutError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.DsrClientFailedDeserializeError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  MessageType                    (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::DsrClientFailedDeserializeError(class FString MessageType)
{
	static UFunction* uFnDsrClientFailedDeserializeError = nullptr;

	if (!uFnDsrClientFailedDeserializeError)
	{
		uFnDsrClientFailedDeserializeError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.DsrClientFailedDeserializeError");
	}

	UReservationsMetrics_X_execDsrClientFailedDeserializeError_Params DsrClientFailedDeserializeError_Params;
	memcpy_s(&DsrClientFailedDeserializeError_Params.MessageType, 0x10, &MessageType, 0x10);

	this->ProcessEvent(uFnDsrClientFailedDeserializeError, &DsrClientFailedDeserializeError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.DsrUnreservedServerError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  MessageType                    (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::DsrUnreservedServerError(class FString MessageType)
{
	static UFunction* uFnDsrUnreservedServerError = nullptr;

	if (!uFnDsrUnreservedServerError)
	{
		uFnDsrUnreservedServerError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.DsrUnreservedServerError");
	}

	UReservationsMetrics_X_execDsrUnreservedServerError_Params DsrUnreservedServerError_Params;
	memcpy_s(&DsrUnreservedServerError_Params.MessageType, 0x10, &MessageType, 0x10);

	this->ProcessEvent(uFnDsrUnreservedServerError, &DsrUnreservedServerError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.DsrServerFailedDeserializeError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// class FString                  MessageType                    (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::DsrServerFailedDeserializeError(struct FUniqueNetId PlayerID, class FString MessageType)
{
	static UFunction* uFnDsrServerFailedDeserializeError = nullptr;

	if (!uFnDsrServerFailedDeserializeError)
	{
		uFnDsrServerFailedDeserializeError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.DsrServerFailedDeserializeError");
	}

	UReservationsMetrics_X_execDsrServerFailedDeserializeError_Params DsrServerFailedDeserializeError_Params;
	memcpy_s(&DsrServerFailedDeserializeError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&DsrServerFailedDeserializeError_Params.MessageType, 0x10, &MessageType, 0x10);

	this->ProcessEvent(uFnDsrServerFailedDeserializeError, &DsrServerFailedDeserializeError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.DsrMissingReservationError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::DsrMissingReservationError(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnDsrMissingReservationError = nullptr;

	if (!uFnDsrMissingReservationError)
	{
		uFnDsrMissingReservationError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.DsrMissingReservationError");
	}

	UReservationsMetrics_X_execDsrMissingReservationError_Params DsrMissingReservationError_Params;
	memcpy_s(&DsrMissingReservationError_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnDsrMissingReservationError, &DsrMissingReservationError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.DsrMissingConnectionError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::DsrMissingConnectionError()
{
	static UFunction* uFnDsrMissingConnectionError = nullptr;

	if (!uFnDsrMissingConnectionError)
	{
		uFnDsrMissingConnectionError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.DsrMissingConnectionError");
	}

	UReservationsMetrics_X_execDsrMissingConnectionError_Params DsrMissingConnectionError_Params;

	this->ProcessEvent(uFnDsrMissingConnectionError, &DsrMissingConnectionError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.PlayerCanceled
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::PlayerCanceled()
{
	static UFunction* uFnPlayerCanceled = nullptr;

	if (!uFnPlayerCanceled)
	{
		uFnPlayerCanceled = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.PlayerCanceled");
	}

	UReservationsMetrics_X_execPlayerCanceled_Params PlayerCanceled_Params;

	this->ProcessEvent(uFnPlayerCanceled, &PlayerCanceled_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.NotAllPlayersJoinedError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::NotAllPlayersJoinedError()
{
	static UFunction* uFnNotAllPlayersJoinedError = nullptr;

	if (!uFnNotAllPlayersJoinedError)
	{
		uFnNotAllPlayersJoinedError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.NotAllPlayersJoinedError");
	}

	UReservationsMetrics_X_execNotAllPlayersJoinedError_Params NotAllPlayersJoinedError_Params;

	this->ProcessEvent(uFnNotAllPlayersJoinedError, &NotAllPlayersJoinedError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.GetKeysInvalidOriginError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::GetKeysInvalidOriginError()
{
	static UFunction* uFnGetKeysInvalidOriginError = nullptr;

	if (!uFnGetKeysInvalidOriginError)
	{
		uFnGetKeysInvalidOriginError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.GetKeysInvalidOriginError");
	}

	UReservationsMetrics_X_execGetKeysInvalidOriginError_Params GetKeysInvalidOriginError_Params;

	this->ProcessEvent(uFnGetKeysInvalidOriginError, &GetKeysInvalidOriginError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.GetKeysFailedError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::GetKeysFailedError()
{
	static UFunction* uFnGetKeysFailedError = nullptr;

	if (!uFnGetKeysFailedError)
	{
		uFnGetKeysFailedError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.GetKeysFailedError");
	}

	UReservationsMetrics_X_execGetKeysFailedError_Params GetKeysFailedError_Params;

	this->ProcessEvent(uFnGetKeysFailedError, &GetKeysFailedError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.ReservationsFullError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::ReservationsFullError()
{
	static UFunction* uFnReservationsFullError = nullptr;

	if (!uFnReservationsFullError)
	{
		uFnReservationsFullError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.ReservationsFullError");
	}

	UReservationsMetrics_X_execReservationsFullError_Params ReservationsFullError_Params;

	this->ProcessEvent(uFnReservationsFullError, &ReservationsFullError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.PlatformExclusiveReservationError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::PlatformExclusiveReservationError()
{
	static UFunction* uFnPlatformExclusiveReservationError = nullptr;

	if (!uFnPlatformExclusiveReservationError)
	{
		uFnPlatformExclusiveReservationError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.PlatformExclusiveReservationError");
	}

	UReservationsMetrics_X_execPlatformExclusiveReservationError_Params PlatformExclusiveReservationError_Params;

	this->ProcessEvent(uFnPlatformExclusiveReservationError, &PlatformExclusiveReservationError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.WrongReservationRankedMatchError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::WrongReservationRankedMatchError()
{
	static UFunction* uFnWrongReservationRankedMatchError = nullptr;

	if (!uFnWrongReservationRankedMatchError)
	{
		uFnWrongReservationRankedMatchError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.WrongReservationRankedMatchError");
	}

	UReservationsMetrics_X_execWrongReservationRankedMatchError_Params WrongReservationRankedMatchError_Params;

	this->ProcessEvent(uFnWrongReservationRankedMatchError, &WrongReservationRankedMatchError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.WrongReservationPlaylistError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::WrongReservationPlaylistError()
{
	static UFunction* uFnWrongReservationPlaylistError = nullptr;

	if (!uFnWrongReservationPlaylistError)
	{
		uFnWrongReservationPlaylistError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.WrongReservationPlaylistError");
	}

	UReservationsMetrics_X_execWrongReservationPlaylistError_Params WrongReservationPlaylistError_Params;

	this->ProcessEvent(uFnWrongReservationPlaylistError, &WrongReservationPlaylistError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.InvalidReservationPlaylistError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::InvalidReservationPlaylistError()
{
	static UFunction* uFnInvalidReservationPlaylistError = nullptr;

	if (!uFnInvalidReservationPlaylistError)
	{
		uFnInvalidReservationPlaylistError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.InvalidReservationPlaylistError");
	}

	UReservationsMetrics_X_execInvalidReservationPlaylistError_Params InvalidReservationPlaylistError_Params;

	this->ProcessEvent(uFnInvalidReservationPlaylistError, &InvalidReservationPlaylistError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.RankedReconnect
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::RankedReconnect()
{
	static UFunction* uFnRankedReconnect = nullptr;

	if (!uFnRankedReconnect)
	{
		uFnRankedReconnect = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.RankedReconnect");
	}

	UReservationsMetrics_X_execRankedReconnect_Params RankedReconnect_Params;

	this->ProcessEvent(uFnRankedReconnect, &RankedReconnect_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.RankedReconnectFinished
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::RankedReconnectFinished()
{
	static UFunction* uFnRankedReconnectFinished = nullptr;

	if (!uFnRankedReconnectFinished)
	{
		uFnRankedReconnectFinished = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.RankedReconnectFinished");
	}

	UReservationsMetrics_X_execRankedReconnectFinished_Params RankedReconnectFinished_Params;

	this->ProcessEvent(uFnRankedReconnectFinished, &RankedReconnectFinished_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.PrivateMatchFinished
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::PrivateMatchFinished()
{
	static UFunction* uFnPrivateMatchFinished = nullptr;

	if (!uFnPrivateMatchFinished)
	{
		uFnPrivateMatchFinished = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.PrivateMatchFinished");
	}

	UReservationsMetrics_X_execPrivateMatchFinished_Params PrivateMatchFinished_Params;

	this->ProcessEvent(uFnPrivateMatchFinished, &PrivateMatchFinished_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.FriendJoin
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::FriendJoin()
{
	static UFunction* uFnFriendJoin = nullptr;

	if (!uFnFriendJoin)
	{
		uFnFriendJoin = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.FriendJoin");
	}

	UReservationsMetrics_X_execFriendJoin_Params FriendJoin_Params;

	this->ProcessEvent(uFnFriendJoin, &FriendJoin_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.FriendJoinEmptyError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::FriendJoinEmptyError()
{
	static UFunction* uFnFriendJoinEmptyError = nullptr;

	if (!uFnFriendJoinEmptyError)
	{
		uFnFriendJoinEmptyError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.FriendJoinEmptyError");
	}

	UReservationsMetrics_X_execFriendJoinEmptyError_Params FriendJoinEmptyError_Params;

	this->ProcessEvent(uFnFriendJoinEmptyError, &FriendJoinEmptyError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.FriendJoinRankedError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UReservationsMetrics_X::FriendJoinRankedError()
{
	static UFunction* uFnFriendJoinRankedError = nullptr;

	if (!uFnFriendJoinRankedError)
	{
		uFnFriendJoinRankedError = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.FriendJoinRankedError");
	}

	UReservationsMetrics_X_execFriendJoinRankedError_Params FriendJoinRankedError_Params;

	this->ProcessEvent(uFnFriendJoinRankedError, &FriendJoinRankedError_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.AddReservation
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Playlist                       (CPF_Parm)
// class FString                  ReservationID                  (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::AddReservation(struct FUniqueNetId PlayerID, int32_t Playlist, class FString ReservationID)
{
	static UFunction* uFnAddReservation = nullptr;

	if (!uFnAddReservation)
	{
		uFnAddReservation = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.AddReservation");
	}

	UReservationsMetrics_X_execAddReservation_Params AddReservation_Params;
	memcpy_s(&AddReservation_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&AddReservation_Params.Playlist, 0x4, &Playlist, 0x4);
	memcpy_s(&AddReservation_Params.ReservationID, 0x10, &ReservationID, 0x10);

	this->ProcessEvent(uFnAddReservation, &AddReservation_Params, nullptr);
};

// Function ProjectX.ReservationsMetrics_X.FirstReservation
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        Playlist                       (CPF_Parm)
// class FString                  ReservationID                  (CPF_Parm | CPF_NeedCtorLink)

void UReservationsMetrics_X::FirstReservation(int32_t Playlist, class FString ReservationID)
{
	static UFunction* uFnFirstReservation = nullptr;

	if (!uFnFirstReservation)
	{
		uFnFirstReservation = UFunction::FindFunction("Function ProjectX.ReservationsMetrics_X.FirstReservation");
	}

	UReservationsMetrics_X_execFirstReservation_Params FirstReservation_Params;
	memcpy_s(&FirstReservation_Params.Playlist, 0x4, &Playlist, 0x4);
	memcpy_s(&FirstReservation_Params.ReservationID, 0x10, &ReservationID, 0x10);

	this->ProcessEvent(uFnFirstReservation, &FirstReservation_Params, nullptr);
};

// Function ProjectX.QueuedOfflineMessage_X.GetOfflineTimeToLiveSeconds
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UQueuedOfflineMessage_X::GetOfflineTimeToLiveSeconds()
{
	static UFunction* uFnGetOfflineTimeToLiveSeconds = nullptr;

	if (!uFnGetOfflineTimeToLiveSeconds)
	{
		uFnGetOfflineTimeToLiveSeconds = UFunction::FindFunction("Function ProjectX.QueuedOfflineMessage_X.GetOfflineTimeToLiveSeconds");
	}

	UQueuedOfflineMessage_X_execGetOfflineTimeToLiveSeconds_Params GetOfflineTimeToLiveSeconds_Params;

	this->ProcessEvent(uFnGetOfflineTimeToLiveSeconds, &GetOfflineTimeToLiveSeconds_Params, nullptr);

	return GetOfflineTimeToLiveSeconds_Params.ReturnValue;
};

// Function ProjectX.ReservationsReadyMessage_X.SetKeys
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UReservationsReadyMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UNetworkEncryptionKey*   InKeys                         (CPF_Parm)

class UReservationsReadyMessage_X* UReservationsReadyMessage_X::SetKeys(class UNetworkEncryptionKey* InKeys)
{
	static UFunction* uFnSetKeys = nullptr;

	if (!uFnSetKeys)
	{
		uFnSetKeys = UFunction::FindFunction("Function ProjectX.ReservationsReadyMessage_X.SetKeys");
	}

	UReservationsReadyMessage_X_execSetKeys_Params SetKeys_Params;
	memcpy_s(&SetKeys_Params.InKeys, 0x8, &InKeys, 0x8);

	this->ProcessEvent(uFnSetKeys, &SetKeys_Params, nullptr);

	return SetKeys_Params.ReturnValue;
};

// Function ProjectX.ReservationsReadyMessage_X.SetProductIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UReservationsReadyMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<int32_t>                InProductIDs                   (CPF_Parm | CPF_NeedCtorLink)

class UReservationsReadyMessage_X* UReservationsReadyMessage_X::SetProductIDs(TArray<int32_t> InProductIDs)
{
	static UFunction* uFnSetProductIDs = nullptr;

	if (!uFnSetProductIDs)
	{
		uFnSetProductIDs = UFunction::FindFunction("Function ProjectX.ReservationsReadyMessage_X.SetProductIDs");
	}

	UReservationsReadyMessage_X_execSetProductIDs_Params SetProductIDs_Params;
	memcpy_s(&SetProductIDs_Params.InProductIDs, 0x10, &InProductIDs, 0x10);

	this->ProcessEvent(uFnSetProductIDs, &SetProductIDs_Params, nullptr);

	return SetProductIDs_Params.ReturnValue;
};

// Function ProjectX.ReservationsReadyMessage_X.SetPingAddress
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UReservationsReadyMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InAddress                      (CPF_Parm | CPF_NeedCtorLink)

class UReservationsReadyMessage_X* UReservationsReadyMessage_X::SetPingAddress(class FString InAddress)
{
	static UFunction* uFnSetPingAddress = nullptr;

	if (!uFnSetPingAddress)
	{
		uFnSetPingAddress = UFunction::FindFunction("Function ProjectX.ReservationsReadyMessage_X.SetPingAddress");
	}

	UReservationsReadyMessage_X_execSetPingAddress_Params SetPingAddress_Params;
	memcpy_s(&SetPingAddress_Params.InAddress, 0x10, &InAddress, 0x10);

	this->ProcessEvent(uFnSetPingAddress, &SetPingAddress_Params, nullptr);

	return SetPingAddress_Params.ReturnValue;
};

// Function ProjectX.ReservationsReadyMessage_X.SetServerAddress
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UReservationsReadyMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InAddress                      (CPF_Parm | CPF_NeedCtorLink)

class UReservationsReadyMessage_X* UReservationsReadyMessage_X::SetServerAddress(class FString InAddress)
{
	static UFunction* uFnSetServerAddress = nullptr;

	if (!uFnSetServerAddress)
	{
		uFnSetServerAddress = UFunction::FindFunction("Function ProjectX.ReservationsReadyMessage_X.SetServerAddress");
	}

	UReservationsReadyMessage_X_execSetServerAddress_Params SetServerAddress_Params;
	memcpy_s(&SetServerAddress_Params.InAddress, 0x10, &InAddress, 0x10);

	this->ProcessEvent(uFnSetServerAddress, &SetServerAddress_Params, nullptr);

	return SetServerAddress_Params.ReturnValue;
};

// Function ProjectX.ReservationsPasswordMessage_X.SetReason
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UReservationsPasswordMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        InReason                       (CPF_Parm)

class UReservationsPasswordMessage_X* UReservationsPasswordMessage_X::SetReason(uint8_t InReason)
{
	static UFunction* uFnSetReason = nullptr;

	if (!uFnSetReason)
	{
		uFnSetReason = UFunction::FindFunction("Function ProjectX.ReservationsPasswordMessage_X.SetReason");
	}

	UReservationsPasswordMessage_X_execSetReason_Params SetReason_Params;
	memcpy_s(&SetReason_Params.InReason, 0x1, &InReason, 0x1);

	this->ProcessEvent(uFnSetReason, &SetReason_Params, nullptr);

	return SetReason_Params.ReturnValue;
};

// Function ProjectX.ReservationsMaxPlayersMessage_X.SetMaxPlayerCount
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UReservationsMaxPlayersMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        inMaxPlayerCount               (CPF_Parm)

class UReservationsMaxPlayersMessage_X* UReservationsMaxPlayersMessage_X::SetMaxPlayerCount(int32_t inMaxPlayerCount)
{
	static UFunction* uFnSetMaxPlayerCount = nullptr;

	if (!uFnSetMaxPlayerCount)
	{
		uFnSetMaxPlayerCount = UFunction::FindFunction("Function ProjectX.ReservationsMaxPlayersMessage_X.SetMaxPlayerCount");
	}

	UReservationsMaxPlayersMessage_X_execSetMaxPlayerCount_Params SetMaxPlayerCount_Params;
	memcpy_s(&SetMaxPlayerCount_Params.inMaxPlayerCount, 0x4, &inMaxPlayerCount, 0x4);

	this->ProcessEvent(uFnSetMaxPlayerCount, &SetMaxPlayerCount_Params, nullptr);

	return SetMaxPlayerCount_Params.ReturnValue;
};

// Function ProjectX.PingMessage_X.SetIsResponse
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPingMessage_X*          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPingMessage_X* UPingMessage_X::SetIsResponse()
{
	static UFunction* uFnSetIsResponse = nullptr;

	if (!uFnSetIsResponse)
	{
		uFnSetIsResponse = UFunction::FindFunction("Function ProjectX.PingMessage_X.SetIsResponse");
	}

	UPingMessage_X_execSetIsResponse_Params SetIsResponse_Params;

	this->ProcessEvent(uFnSetIsResponse, &SetIsResponse_Params, nullptr);

	return SetIsResponse_Params.ReturnValue;
};

// Function ProjectX.RPC_GetSkillLeaderboardValueForUser_X.SetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetSkillLeaderboardValueForUser_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylist                     (CPF_Parm)

class URPC_GetSkillLeaderboardValueForUser_X* URPC_GetSkillLeaderboardValueForUser_X::SetPlaylist(int32_t InPlaylist)
{
	static UFunction* uFnSetPlaylist = nullptr;

	if (!uFnSetPlaylist)
	{
		uFnSetPlaylist = UFunction::FindFunction("Function ProjectX.RPC_GetSkillLeaderboardValueForUser_X.SetPlaylist");
	}

	URPC_GetSkillLeaderboardValueForUser_X_execSetPlaylist_Params SetPlaylist_Params;
	memcpy_s(&SetPlaylist_Params.InPlaylist, 0x4, &InPlaylist, 0x4);

	this->ProcessEvent(uFnSetPlaylist, &SetPlaylist_Params, nullptr);

	return SetPlaylist_Params.ReturnValue;
};

// Function ProjectX.RPC_GetLeaderboardValueForUserBase_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboardValueForUserBase_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetLeaderboardValueForUserBase_X* URPC_GetLeaderboardValueForUserBase_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_GetLeaderboardValueForUserBase_X.SetPlayerID");
	}

	URPC_GetLeaderboardValueForUserBase_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_GetLeaderboardValueForUser_X.SetStat
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboardValueForUser_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InStat                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetLeaderboardValueForUser_X* URPC_GetLeaderboardValueForUser_X::SetStat(class FString InStat)
{
	static UFunction* uFnSetStat = nullptr;

	if (!uFnSetStat)
	{
		uFnSetStat = UFunction::FindFunction("Function ProjectX.RPC_GetLeaderboardValueForUser_X.SetStat");
	}

	URPC_GetLeaderboardValueForUser_X_execSetStat_Params SetStat_Params;
	memcpy_s(&SetStat_Params.InStat, 0x10, &InStat, 0x10);

	this->ProcessEvent(uFnSetStat, &SetStat_Params, nullptr);

	return SetStat_Params.ReturnValue;
};

// Function ProjectX.RPC_GetSkillLeaderboard_X.SetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetSkillLeaderboard_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylist                     (CPF_Parm)

class URPC_GetSkillLeaderboard_X* URPC_GetSkillLeaderboard_X::SetPlaylist(int32_t InPlaylist)
{
	static UFunction* uFnSetPlaylist = nullptr;

	if (!uFnSetPlaylist)
	{
		uFnSetPlaylist = UFunction::FindFunction("Function ProjectX.RPC_GetSkillLeaderboard_X.SetPlaylist");
	}

	URPC_GetSkillLeaderboard_X_execSetPlaylist_Params SetPlaylist_Params;
	memcpy_s(&SetPlaylist_Params.InPlaylist, 0x4, &InPlaylist, 0x4);

	this->ProcessEvent(uFnSetPlaylist, &SetPlaylist_Params, nullptr);

	return SetPlaylist_Params.ReturnValue;
};

// Function ProjectX.RPC_GetLeaderboardBase_X.SetDisableCrossPlay
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboardBase_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  InDisableCrossplay             (CPF_Parm)

class URPC_GetLeaderboardBase_X* URPC_GetLeaderboardBase_X::SetDisableCrossPlay(unsigned long InDisableCrossplay)
{
	static UFunction* uFnSetDisableCrossPlay = nullptr;

	if (!uFnSetDisableCrossPlay)
	{
		uFnSetDisableCrossPlay = UFunction::FindFunction("Function ProjectX.RPC_GetLeaderboardBase_X.SetDisableCrossPlay");
	}

	URPC_GetLeaderboardBase_X_execSetDisableCrossPlay_Params SetDisableCrossPlay_Params;
	SetDisableCrossPlay_Params.InDisableCrossplay = InDisableCrossplay;

	this->ProcessEvent(uFnSetDisableCrossPlay, &SetDisableCrossPlay_Params, nullptr);

	return SetDisableCrossPlay_Params.ReturnValue;
};

// Function ProjectX.RPC_GetLeaderboard_X.SetStat
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboard_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InStat                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetLeaderboard_X* URPC_GetLeaderboard_X::SetStat(class FString InStat)
{
	static UFunction* uFnSetStat = nullptr;

	if (!uFnSetStat)
	{
		uFnSetStat = UFunction::FindFunction("Function ProjectX.RPC_GetLeaderboard_X.SetStat");
	}

	URPC_GetLeaderboard_X_execSetStat_Params SetStat_Params;
	memcpy_s(&SetStat_Params.InStat, 0x10, &InStat, 0x10);

	this->ProcessEvent(uFnSetStat, &SetStat_Params, nullptr);

	return SetStat_Params.ReturnValue;
};

// Function ProjectX.RPC_GetSkillLeaderboardRankForUsers_X.SetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetSkillLeaderboardRankForUsers_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylist                     (CPF_Parm)

class URPC_GetSkillLeaderboardRankForUsers_X* URPC_GetSkillLeaderboardRankForUsers_X::SetPlaylist(int32_t InPlaylist)
{
	static UFunction* uFnSetPlaylist = nullptr;

	if (!uFnSetPlaylist)
	{
		uFnSetPlaylist = UFunction::FindFunction("Function ProjectX.RPC_GetSkillLeaderboardRankForUsers_X.SetPlaylist");
	}

	URPC_GetSkillLeaderboardRankForUsers_X_execSetPlaylist_Params SetPlaylist_Params;
	memcpy_s(&SetPlaylist_Params.InPlaylist, 0x4, &InPlaylist, 0x4);

	this->ProcessEvent(uFnSetPlaylist, &SetPlaylist_Params, nullptr);

	return SetPlaylist_Params.ReturnValue;
};

// Function ProjectX.RPC_GetLeaderboardRankForUsersBase_X.SetPlayerIDs
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboardRankForUsersBase_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    InPlayerIDs                    (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetLeaderboardRankForUsersBase_X* URPC_GetLeaderboardRankForUsersBase_X::SetPlayerIDs(TArray<struct FUniqueNetId> InPlayerIDs)
{
	static UFunction* uFnSetPlayerIDs = nullptr;

	if (!uFnSetPlayerIDs)
	{
		uFnSetPlayerIDs = UFunction::FindFunction("Function ProjectX.RPC_GetLeaderboardRankForUsersBase_X.SetPlayerIDs");
	}

	URPC_GetLeaderboardRankForUsersBase_X_execSetPlayerIDs_Params SetPlayerIDs_Params;
	memcpy_s(&SetPlayerIDs_Params.InPlayerIDs, 0x10, &InPlayerIDs, 0x10);

	this->ProcessEvent(uFnSetPlayerIDs, &SetPlayerIDs_Params, nullptr);

	return SetPlayerIDs_Params.ReturnValue;
};

// Function ProjectX.RPC_GetLeaderboardRankForUsers_X.SetStat
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetLeaderboardRankForUsers_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InStat                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetLeaderboardRankForUsers_X* URPC_GetLeaderboardRankForUsers_X::SetStat(class FString InStat)
{
	static UFunction* uFnSetStat = nullptr;

	if (!uFnSetStat)
	{
		uFnSetStat = UFunction::FindFunction("Function ProjectX.RPC_GetLeaderboardRankForUsers_X.SetStat");
	}

	URPC_GetLeaderboardRankForUsers_X_execSetStat_Params SetStat_Params;
	memcpy_s(&SetStat_Params.InStat, 0x10, &InStat, 0x10);

	this->ProcessEvent(uFnSetStat, &SetStat_Params, nullptr);

	return SetStat_Params.ReturnValue;
};

// Function ProjectX.RPC_StartMatchmaking_X.SetIgnoreSkill
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bInIgnoreSkill                 (CPF_Parm)

class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetIgnoreSkill(unsigned long bInIgnoreSkill)
{
	static UFunction* uFnSetIgnoreSkill = nullptr;

	if (!uFnSetIgnoreSkill)
	{
		uFnSetIgnoreSkill = UFunction::FindFunction("Function ProjectX.RPC_StartMatchmaking_X.SetIgnoreSkill");
	}

	URPC_StartMatchmaking_X_execSetIgnoreSkill_Params SetIgnoreSkill_Params;
	SetIgnoreSkill_Params.bInIgnoreSkill = bInIgnoreSkill;

	this->ProcessEvent(uFnSetIgnoreSkill, &SetIgnoreSkill_Params, nullptr);

	return SetIgnoreSkill_Params.ReturnValue;
};

// Function ProjectX.RPC_StartMatchmaking_X.SetPartyId
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InPartyId                      (CPF_Parm | CPF_NeedCtorLink)

class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetPartyId(class FString InPartyId)
{
	static UFunction* uFnSetPartyId = nullptr;

	if (!uFnSetPartyId)
	{
		uFnSetPartyId = UFunction::FindFunction("Function ProjectX.RPC_StartMatchmaking_X.SetPartyId");
	}

	URPC_StartMatchmaking_X_execSetPartyId_Params SetPartyId_Params;
	memcpy_s(&SetPartyId_Params.InPartyId, 0x10, &InPartyId, 0x10);

	this->ProcessEvent(uFnSetPartyId, &SetPartyId_Params, nullptr);

	return SetPartyId_Params.ReturnValue;
};

// Function ProjectX.RPC_StartMatchmaking_X.SetPartyMembers
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    InPartyMembers                 (CPF_Parm | CPF_NeedCtorLink)

class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetPartyMembers(TArray<struct FUniqueNetId> InPartyMembers)
{
	static UFunction* uFnSetPartyMembers = nullptr;

	if (!uFnSetPartyMembers)
	{
		uFnSetPartyMembers = UFunction::FindFunction("Function ProjectX.RPC_StartMatchmaking_X.SetPartyMembers");
	}

	URPC_StartMatchmaking_X_execSetPartyMembers_Params SetPartyMembers_Params;
	memcpy_s(&SetPartyMembers_Params.InPartyMembers, 0x10, &InPartyMembers, 0x10);

	this->ProcessEvent(uFnSetPartyMembers, &SetPartyMembers_Params, nullptr);

	return SetPartyMembers_Params.ReturnValue;
};

// Function ProjectX.RPC_StartMatchmaking_X.SetDisableCrossPlay
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bInDisableCrossplay            (CPF_Parm)

class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetDisableCrossPlay(unsigned long bInDisableCrossplay)
{
	static UFunction* uFnSetDisableCrossPlay = nullptr;

	if (!uFnSetDisableCrossPlay)
	{
		uFnSetDisableCrossPlay = UFunction::FindFunction("Function ProjectX.RPC_StartMatchmaking_X.SetDisableCrossPlay");
	}

	URPC_StartMatchmaking_X_execSetDisableCrossPlay_Params SetDisableCrossPlay_Params;
	SetDisableCrossPlay_Params.bInDisableCrossplay = bInDisableCrossplay;

	this->ProcessEvent(uFnSetDisableCrossPlay, &SetDisableCrossPlay_Params, nullptr);

	return SetDisableCrossPlay_Params.ReturnValue;
};

// Function ProjectX.RPC_StartMatchmaking_X.SetCurrentServerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InCurrentServerID              (CPF_Parm | CPF_NeedCtorLink)

class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetCurrentServerID(class FString InCurrentServerID)
{
	static UFunction* uFnSetCurrentServerID = nullptr;

	if (!uFnSetCurrentServerID)
	{
		uFnSetCurrentServerID = UFunction::FindFunction("Function ProjectX.RPC_StartMatchmaking_X.SetCurrentServerID");
	}

	URPC_StartMatchmaking_X_execSetCurrentServerID_Params SetCurrentServerID_Params;
	memcpy_s(&SetCurrentServerID_Params.InCurrentServerID, 0x10, &InCurrentServerID, 0x10);

	this->ProcessEvent(uFnSetCurrentServerID, &SetCurrentServerID_Params, nullptr);

	return SetCurrentServerID_Params.ReturnValue;
};

// Function ProjectX.RPC_StartMatchmaking_X.SetSecondsSearching
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InSecondsSearching             (CPF_Parm)

class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetSecondsSearching(int32_t InSecondsSearching)
{
	static UFunction* uFnSetSecondsSearching = nullptr;

	if (!uFnSetSecondsSearching)
	{
		uFnSetSecondsSearching = UFunction::FindFunction("Function ProjectX.RPC_StartMatchmaking_X.SetSecondsSearching");
	}

	URPC_StartMatchmaking_X_execSetSecondsSearching_Params SetSecondsSearching_Params;
	memcpy_s(&SetSecondsSearching_Params.InSecondsSearching, 0x4, &InSecondsSearching, 0x4);

	this->ProcessEvent(uFnSetSecondsSearching, &SetSecondsSearching_Params, nullptr);

	return SetSecondsSearching_Params.ReturnValue;
};

// Function ProjectX.RPC_StartMatchmaking_X.SetPlaylists
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<int32_t>                InPlaylists                    (CPF_Parm | CPF_NeedCtorLink)

class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetPlaylists(TArray<int32_t> InPlaylists)
{
	static UFunction* uFnSetPlaylists = nullptr;

	if (!uFnSetPlaylists)
	{
		uFnSetPlaylists = UFunction::FindFunction("Function ProjectX.RPC_StartMatchmaking_X.SetPlaylists");
	}

	URPC_StartMatchmaking_X_execSetPlaylists_Params SetPlaylists_Params;
	memcpy_s(&SetPlaylists_Params.InPlaylists, 0x10, &InPlaylists, 0x10);

	this->ProcessEvent(uFnSetPlaylists, &SetPlaylists_Params, nullptr);

	return SetPlaylists_Params.ReturnValue;
};

// Function ProjectX.RPC_StartMatchmaking_X.SetRegions
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_StartMatchmaking_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FDSRegionInfo>   InRegions                      (CPF_Parm | CPF_NeedCtorLink)

class URPC_StartMatchmaking_X* URPC_StartMatchmaking_X::SetRegions(TArray<struct FDSRegionInfo> InRegions)
{
	static UFunction* uFnSetRegions = nullptr;

	if (!uFnSetRegions)
	{
		uFnSetRegions = UFunction::FindFunction("Function ProjectX.RPC_StartMatchmaking_X.SetRegions");
	}

	URPC_StartMatchmaking_X_execSetRegions_Params SetRegions_Params;
	memcpy_s(&SetRegions_Params.InRegions, 0x10, &InRegions, 0x10);

	this->ProcessEvent(uFnSetRegions, &SetRegions_Params, nullptr);

	return SetRegions_Params.ReturnValue;
};

// Function ProjectX.RankedConfig_X.HasSeasonEnded
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool URankedConfig_X::HasSeasonEnded()
{
	static UFunction* uFnHasSeasonEnded = nullptr;

	if (!uFnHasSeasonEnded)
	{
		uFnHasSeasonEnded = UFunction::FindFunction("Function ProjectX.RankedConfig_X.HasSeasonEnded");
	}

	URankedConfig_X_execHasSeasonEnded_Params HasSeasonEnded_Params;

	this->ProcessEvent(uFnHasSeasonEnded, &HasSeasonEnded_Params, nullptr);

	return HasSeasonEnded_Params.ReturnValue;
};

// Function ProjectX.RankedConfig_X.GetSeasonTimeRemaining
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t URankedConfig_X::GetSeasonTimeRemaining()
{
	static UFunction* uFnGetSeasonTimeRemaining = nullptr;

	if (!uFnGetSeasonTimeRemaining)
	{
		uFnGetSeasonTimeRemaining = UFunction::FindFunction("Function ProjectX.RankedConfig_X.GetSeasonTimeRemaining");
	}

	URankedConfig_X_execGetSeasonTimeRemaining_Params GetSeasonTimeRemaining_Params;

	this->ProcessEvent(uFnGetSeasonTimeRemaining, &GetSeasonTimeRemaining_Params, nullptr);

	return GetSeasonTimeRemaining_Params.ReturnValue;
};

// Function ProjectX.RPC_PlayerSearchPrivateMatch_X.SetRegion
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PlayerSearchPrivateMatch_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InRegion                       (CPF_Parm | CPF_NeedCtorLink)

class URPC_PlayerSearchPrivateMatch_X* URPC_PlayerSearchPrivateMatch_X::SetRegion(class FString InRegion)
{
	static UFunction* uFnSetRegion = nullptr;

	if (!uFnSetRegion)
	{
		uFnSetRegion = UFunction::FindFunction("Function ProjectX.RPC_PlayerSearchPrivateMatch_X.SetRegion");
	}

	URPC_PlayerSearchPrivateMatch_X_execSetRegion_Params SetRegion_Params;
	memcpy_s(&SetRegion_Params.InRegion, 0x10, &InRegion, 0x10);

	this->ProcessEvent(uFnSetRegion, &SetRegion_Params, nullptr);

	return SetRegion_Params.ReturnValue;
};

// Function ProjectX.RPC_GetGameServerPingList_X.SetRegionSecrets
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class URPC_GetGameServerPingList_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FRegionSecret>   InRegions                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class URPC_GetGameServerPingList_X* URPC_GetGameServerPingList_X::SetRegionSecrets(TArray<struct FRegionSecret>& InRegions)
{
	static UFunction* uFnSetRegionSecrets = nullptr;

	if (!uFnSetRegionSecrets)
	{
		uFnSetRegionSecrets = UFunction::FindFunction("Function ProjectX.RPC_GetGameServerPingList_X.SetRegionSecrets");
	}

	URPC_GetGameServerPingList_X_execSetRegionSecrets_Params SetRegionSecrets_Params;
	memcpy_s(&SetRegionSecrets_Params.InRegions, 0x10, &InRegions, 0x10);

	this->ProcessEvent(uFnSetRegionSecrets, &SetRegionSecrets_Params, nullptr);

	memcpy_s(&InRegions, 0x10, &SetRegionSecrets_Params.InRegions, 0x10);

	return SetRegionSecrets_Params.ReturnValue;
};

// Function ProjectX.RPC_GetGameServerPingList_X.OnSuccess
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void URPC_GetGameServerPingList_X::eventOnSuccess()
{
	static UFunction* uFnOnSuccess = nullptr;

	if (!uFnOnSuccess)
	{
		uFnOnSuccess = UFunction::FindFunction("Function ProjectX.RPC_GetGameServerPingList_X.OnSuccess");
	}

	URPC_GetGameServerPingList_X_eventOnSuccess_Params OnSuccess_Params;

	this->ProcessEvent(uFnOnSuccess, &OnSuccess_Params, nullptr);
};

// Function ProjectX.RegionPinger_X.__RegionPinger_X__PingRegions_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URegionPingData_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Address                        (CPF_Parm | CPF_NeedCtorLink)

class URegionPingData_X* URegionPinger_X::__RegionPinger_X__PingRegions_0x1(class FString Address)
{
	static UFunction* uFn__RegionPinger_X__PingRegions_0x1 = nullptr;

	if (!uFn__RegionPinger_X__PingRegions_0x1)
	{
		uFn__RegionPinger_X__PingRegions_0x1 = UFunction::FindFunction("Function ProjectX.RegionPinger_X.__RegionPinger_X__PingRegions_0x1");
	}

	URegionPinger_X_exec__RegionPinger_X__PingRegions_0x1_Params __RegionPinger_X__PingRegions_0x1_Params;
	memcpy_s(&__RegionPinger_X__PingRegions_0x1_Params.Address, 0x10, &Address, 0x10);

	this->ProcessEvent(uFn__RegionPinger_X__PingRegions_0x1, &__RegionPinger_X__PingRegions_0x1_Params, nullptr);

	return __RegionPinger_X__PingRegions_0x1_Params.ReturnValue;
};

// Function ProjectX.RegionPinger_X.HandlePong
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UUdpPingBeaconClient_X*  _                              (CPF_Parm | CPF_EditInline)
// struct FName                   Address                        (CPF_Parm)
// float                          DeltaSeconds                   (CPF_Parm)

void URegionPinger_X::HandlePong(class UUdpPingBeaconClient_X* _, struct FName Address, float DeltaSeconds)
{
	static UFunction* uFnHandlePong = nullptr;

	if (!uFnHandlePong)
	{
		uFnHandlePong = UFunction::FindFunction("Function ProjectX.RegionPinger_X.HandlePong");
	}

	URegionPinger_X_execHandlePong_Params HandlePong_Params;
	memcpy_s(&HandlePong_Params._, 0x8, &_, 0x8);
	memcpy_s(&HandlePong_Params.Address, 0x8, &Address, 0x8);
	memcpy_s(&HandlePong_Params.DeltaSeconds, 0x4, &DeltaSeconds, 0x4);

	this->ProcessEvent(uFnHandlePong, &HandlePong_Params, nullptr);
};

// Function ProjectX.RegionPinger_X.SendPing
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        Idx                            (CPF_Parm)

void URegionPinger_X::SendPing(int32_t Idx)
{
	static UFunction* uFnSendPing = nullptr;

	if (!uFnSendPing)
	{
		uFnSendPing = UFunction::FindFunction("Function ProjectX.RegionPinger_X.SendPing");
	}

	URegionPinger_X_execSendPing_Params SendPing_Params;
	memcpy_s(&SendPing_Params.Idx, 0x4, &Idx, 0x4);

	this->ProcessEvent(uFnSendPing, &SendPing_Params, nullptr);
};

// Function ProjectX.RegionPinger_X.Tick
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// float                          _                              (CPF_Parm)

void URegionPinger_X::Tick(float _)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.RegionPinger_X.Tick");
	}

	URegionPinger_X_execTick_Params Tick_Params;
	memcpy_s(&Tick_Params._, 0x4, &_, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.RegionPinger_X.StopPingBeacon
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void URegionPinger_X::StopPingBeacon()
{
	static UFunction* uFnStopPingBeacon = nullptr;

	if (!uFnStopPingBeacon)
	{
		uFnStopPingBeacon = UFunction::FindFunction("Function ProjectX.RegionPinger_X.StopPingBeacon");
	}

	URegionPinger_X_execStopPingBeacon_Params StopPingBeacon_Params;

	this->ProcessEvent(uFnStopPingBeacon, &StopPingBeacon_Params, nullptr);
};

// Function ProjectX.RegionPinger_X.StartPingBeacon
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void URegionPinger_X::StartPingBeacon()
{
	static UFunction* uFnStartPingBeacon = nullptr;

	if (!uFnStartPingBeacon)
	{
		uFnStartPingBeacon = UFunction::FindFunction("Function ProjectX.RegionPinger_X.StartPingBeacon");
	}

	URegionPinger_X_execStartPingBeacon_Params StartPingBeacon_Params;

	this->ProcessEvent(uFnStartPingBeacon, &StartPingBeacon_Params, nullptr);
};

// Function ProjectX.RegionPinger_X.PingRegions
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class FString>          Addresses                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void URegionPinger_X::PingRegions(TArray<class FString>& Addresses)
{
	static UFunction* uFnPingRegions = nullptr;

	if (!uFnPingRegions)
	{
		uFnPingRegions = UFunction::FindFunction("Function ProjectX.RegionPinger_X.PingRegions");
	}

	URegionPinger_X_execPingRegions_Params PingRegions_Params;
	memcpy_s(&PingRegions_Params.Addresses, 0x10, &Addresses, 0x10);

	this->ProcessEvent(uFnPingRegions, &PingRegions_Params, nullptr);

	memcpy_s(&Addresses, 0x10, &PingRegions_Params.Addresses, 0x10);
};

// Function ProjectX.RegionPinger_X.EventRegionsPinged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class URegionPinger_X*         Pinger                         (CPF_Parm | CPF_EditInline)

void URegionPinger_X::EventRegionsPinged(class URegionPinger_X* Pinger)
{
	static UFunction* uFnEventRegionsPinged = nullptr;

	if (!uFnEventRegionsPinged)
	{
		uFnEventRegionsPinged = UFunction::FindFunction("Function ProjectX.RegionPinger_X.EventRegionsPinged");
	}

	URegionPinger_X_execEventRegionsPinged_Params EventRegionsPinged_Params;
	memcpy_s(&EventRegionsPinged_Params.Pinger, 0x8, &Pinger, 0x8);

	this->ProcessEvent(uFnEventRegionsPinged, &EventRegionsPinged_Params, nullptr);
};

// Function ProjectX.OnlineGameReservations_AssignTeamsByParty_X.PartySort
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FPartyByTeam            Left                           (CPF_Parm | CPF_NeedCtorLink)
// struct FPartyByTeam            Right                          (CPF_Parm | CPF_NeedCtorLink)

int32_t UOnlineGameReservations_AssignTeamsByParty_X::PartySort(struct FPartyByTeam Left, struct FPartyByTeam Right)
{
	static UFunction* uFnPartySort = nullptr;

	if (!uFnPartySort)
	{
		uFnPartySort = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_AssignTeamsByParty_X.PartySort");
	}

	UOnlineGameReservations_AssignTeamsByParty_X_execPartySort_Params PartySort_Params;
	memcpy_s(&PartySort_Params.Left, 0x50, &Left, 0x50);
	memcpy_s(&PartySort_Params.Right, 0x50, &Right, 0x50);

	UOnlineGameReservations_AssignTeamsByParty_X::StaticClass()->ProcessEvent(uFnPartySort, &PartySort_Params, nullptr);

	return PartySort_Params.ReturnValue;
};

// Function ProjectX.OnlineGameReservations_AssignTeamsByParty_X.AssignTeams
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        TeamSize                       (CPF_Parm)
// TArray<struct FReservationData> TestPlayers                    (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UOnlineGameReservations_AssignTeamsByParty_X::AssignTeams(int32_t TeamSize, TArray<struct FReservationData>& TestPlayers)
{
	static UFunction* uFnAssignTeams = nullptr;

	if (!uFnAssignTeams)
	{
		uFnAssignTeams = UFunction::FindFunction("Function ProjectX.OnlineGameReservations_AssignTeamsByParty_X.AssignTeams");
	}

	UOnlineGameReservations_AssignTeamsByParty_X_execAssignTeams_Params AssignTeams_Params;
	memcpy_s(&AssignTeams_Params.TeamSize, 0x4, &TeamSize, 0x4);
	memcpy_s(&AssignTeams_Params.TestPlayers, 0x10, &TestPlayers, 0x10);

	UOnlineGameReservations_AssignTeamsByParty_X::StaticClass()->ProcessEvent(uFnAssignTeams, &AssignTeams_Params, nullptr);

	memcpy_s(&TestPlayers, 0x10, &AssignTeams_Params.TestPlayers, 0x10);
};

// Function ProjectX.RegionPingMessage_X.SetIsResponse
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URegionPingMessage_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class URegionPingMessage_X* URegionPingMessage_X::SetIsResponse()
{
	static UFunction* uFnSetIsResponse = nullptr;

	if (!uFnSetIsResponse)
	{
		uFnSetIsResponse = UFunction::FindFunction("Function ProjectX.RegionPingMessage_X.SetIsResponse");
	}

	URegionPingMessage_X_execSetIsResponse_Params SetIsResponse_Params;

	this->ProcessEvent(uFnSetIsResponse, &SetIsResponse_Params, nullptr);

	return SetIsResponse_Params.ReturnValue;
};

// Function ProjectX.PsyNetService_NewGame_X.GetReservation
// [0x400820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FPsyNetBeaconReservation ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FPsyNetBeaconReservation UPsyNetService_NewGame_X::GetReservation()
{
	static UFunction* uFnGetReservation = nullptr;

	if (!uFnGetReservation)
	{
		uFnGetReservation = UFunction::FindFunction("Function ProjectX.PsyNetService_NewGame_X.GetReservation");
	}

	UPsyNetService_NewGame_X_execGetReservation_Params GetReservation_Params;

	this->ProcessEvent(uFnGetReservation, &GetReservation_Params, nullptr);

	return GetReservation_Params.ReturnValue;
};

// Function ProjectX.PsyNetService_ReservationBase_X.GetReservation
// [0x00820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPsyNetBeaconReservation ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FPsyNetBeaconReservation UPsyNetService_ReservationBase_X::GetReservation()
{
	static UFunction* uFnGetReservation = nullptr;

	if (!uFnGetReservation)
	{
		uFnGetReservation = UFunction::FindFunction("Function ProjectX.PsyNetService_ReservationBase_X.GetReservation");
	}

	UPsyNetService_ReservationBase_X_execGetReservation_Params GetReservation_Params;

	this->ProcessEvent(uFnGetReservation, &GetReservation_Params, nullptr);

	return GetReservation_Params.ReturnValue;
};

// Function ProjectX.PsyNetService_Backfill_X.GetReservation
// [0x400820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FPsyNetBeaconReservation ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FPsyNetBeaconReservation UPsyNetService_Backfill_X::GetReservation()
{
	static UFunction* uFnGetReservation = nullptr;

	if (!uFnGetReservation)
	{
		uFnGetReservation = UFunction::FindFunction("Function ProjectX.PsyNetService_Backfill_X.GetReservation");
	}

	UPsyNetService_Backfill_X_execGetReservation_Params GetReservation_Params;

	this->ProcessEvent(uFnGetReservation, &GetReservation_Params, nullptr);

	return GetReservation_Params.ReturnValue;
};

// Function ProjectX.PsyNetService_CreatePrivate_X.GetReservation
// [0x400820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FPsyNetBeaconReservation ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FPsyNetBeaconReservation UPsyNetService_CreatePrivate_X::GetReservation()
{
	static UFunction* uFnGetReservation = nullptr;

	if (!uFnGetReservation)
	{
		uFnGetReservation = UFunction::FindFunction("Function ProjectX.PsyNetService_CreatePrivate_X.GetReservation");
	}

	UPsyNetService_CreatePrivate_X_execGetReservation_Params GetReservation_Params;

	this->ProcessEvent(uFnGetReservation, &GetReservation_Params, nullptr);

	return GetReservation_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerSkill_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPlayerSkill_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetPlayerSkill_X* URPC_GetPlayerSkill_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerSkill_X.SetPlayerID");
	}

	URPC_GetPlayerSkill_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerSkill_X.OnSuccess
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void URPC_GetPlayerSkill_X::eventOnSuccess()
{
	static UFunction* uFnOnSuccess = nullptr;

	if (!uFnOnSuccess)
	{
		uFnOnSuccess = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerSkill_X.OnSuccess");
	}

	URPC_GetPlayerSkill_X_eventOnSuccess_Params OnSuccess_Params;

	this->ProcessEvent(uFnOnSuccess, &OnSuccess_Params, nullptr);
};

// Function ProjectX.RPC_GetPlayerSkill_X.AddPlayerIDToResponse
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void URPC_GetPlayerSkill_X::AddPlayerIDToResponse()
{
	static UFunction* uFnAddPlayerIDToResponse = nullptr;

	if (!uFnAddPlayerIDToResponse)
	{
		uFnAddPlayerIDToResponse = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerSkill_X.AddPlayerIDToResponse");
	}

	URPC_GetPlayerSkill_X_execAddPlayerIDToResponse_Params AddPlayerIDToResponse_Params;

	this->ProcessEvent(uFnAddPlayerIDToResponse, &AddPlayerIDToResponse_Params, nullptr);
};

// Function ProjectX.RPC_GetPartyMemberSkill_X.OnSuccess
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void URPC_GetPartyMemberSkill_X::eventOnSuccess()
{
	static UFunction* uFnOnSuccess = nullptr;

	if (!uFnOnSuccess)
	{
		uFnOnSuccess = UFunction::FindFunction("Function ProjectX.RPC_GetPartyMemberSkill_X.OnSuccess");
	}

	URPC_GetPartyMemberSkill_X_eventOnSuccess_Params OnSuccess_Params;

	this->ProcessEvent(uFnOnSuccess, &OnSuccess_Params, nullptr);
};

// Function ProjectX.RPC_GetPartyMemberSkill_X.AddPlayerIDsToResponse
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:

void URPC_GetPartyMemberSkill_X::AddPlayerIDsToResponse()
{
	static UFunction* uFnAddPlayerIDsToResponse = nullptr;

	if (!uFnAddPlayerIDsToResponse)
	{
		uFnAddPlayerIDsToResponse = UFunction::FindFunction("Function ProjectX.RPC_GetPartyMemberSkill_X.AddPlayerIDsToResponse");
	}

	URPC_GetPartyMemberSkill_X_execAddPlayerIDsToResponse_Params AddPlayerIDsToResponse_Params;

	this->ProcessEvent(uFnAddPlayerIDsToResponse, &AddPlayerIDsToResponse_Params, nullptr);
};

// Function ProjectX.RPC_GetPartyMemberSkill_X.AddPlayer
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPartyMemberSkill_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetPartyMemberSkill_X* URPC_GetPartyMemberSkill_X::AddPlayer(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnAddPlayer = nullptr;

	if (!uFnAddPlayer)
	{
		uFnAddPlayer = UFunction::FindFunction("Function ProjectX.RPC_GetPartyMemberSkill_X.AddPlayer");
	}

	URPC_GetPartyMemberSkill_X_execAddPlayer_Params AddPlayer_Params;
	memcpy_s(&AddPlayer_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnAddPlayer, &AddPlayer_Params, nullptr);

	return AddPlayer_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateSkills_X.SetMatch
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class URPC_RecordMatchResults_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UMatchData_X*            InMatch                        (CPF_Parm)

class URPC_RecordMatchResults_X* URPC_UpdateSkills_X::SetMatch(class UMatchData_X* InMatch)
{
	static UFunction* uFnSetMatch = nullptr;

	if (!uFnSetMatch)
	{
		uFnSetMatch = UFunction::FindFunction("Function ProjectX.RPC_UpdateSkills_X.SetMatch");
	}

	URPC_UpdateSkills_X_execSetMatch_Params SetMatch_Params;
	memcpy_s(&SetMatch_Params.InMatch, 0x8, &InMatch, 0x8);

	this->ProcessEvent(uFnSetMatch, &SetMatch_Params, nullptr);

	return SetMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_RecordMatchResults_X.GetPartyIndex
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            LeaderID                       (CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FUniqueNetId>    PartyIDs                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

int32_t URPC_RecordMatchResults_X::GetPartyIndex(struct FUniqueNetId LeaderID, TArray<struct FUniqueNetId>& PartyIDs)
{
	static UFunction* uFnGetPartyIndex = nullptr;

	if (!uFnGetPartyIndex)
	{
		uFnGetPartyIndex = UFunction::FindFunction("Function ProjectX.RPC_RecordMatchResults_X.GetPartyIndex");
	}

	URPC_RecordMatchResults_X_execGetPartyIndex_Params GetPartyIndex_Params;
	memcpy_s(&GetPartyIndex_Params.LeaderID, 0x48, &LeaderID, 0x48);
	memcpy_s(&GetPartyIndex_Params.PartyIDs, 0x10, &PartyIDs, 0x10);

	this->ProcessEvent(uFnGetPartyIndex, &GetPartyIndex_Params, nullptr);

	memcpy_s(&PartyIDs, 0x10, &GetPartyIndex_Params.PartyIDs, 0x10);

	return GetPartyIndex_Params.ReturnValue;
};

// Function ProjectX.RPC_RecordMatchResults_X.InitSkillMatchPlayers
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class UMatchData_X*            MatchData                      (CPF_Parm)

void URPC_RecordMatchResults_X::InitSkillMatchPlayers(class UMatchData_X* MatchData)
{
	static UFunction* uFnInitSkillMatchPlayers = nullptr;

	if (!uFnInitSkillMatchPlayers)
	{
		uFnInitSkillMatchPlayers = UFunction::FindFunction("Function ProjectX.RPC_RecordMatchResults_X.InitSkillMatchPlayers");
	}

	URPC_RecordMatchResults_X_execInitSkillMatchPlayers_Params InitSkillMatchPlayers_Params;
	memcpy_s(&InitSkillMatchPlayers_Params.MatchData, 0x8, &MatchData, 0x8);

	this->ProcessEvent(uFnInitSkillMatchPlayers, &InitSkillMatchPlayers_Params, nullptr);
};

// Function ProjectX.RPC_RecordMatchResults_X.InitSkillMatchPlayer
// [0x00C40003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FSkillMatchPlayer       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// class UMatchData_X*            MatchData                      (CPF_Parm)
// class UMatchPlayerData_X*      Player                         (CPF_Parm)
// TArray<struct FUniqueNetId>    PartyIDs                       (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

struct FSkillMatchPlayer URPC_RecordMatchResults_X::InitSkillMatchPlayer(class UMatchData_X* MatchData, class UMatchPlayerData_X* Player, TArray<struct FUniqueNetId>& PartyIDs)
{
	static UFunction* uFnInitSkillMatchPlayer = nullptr;

	if (!uFnInitSkillMatchPlayer)
	{
		uFnInitSkillMatchPlayer = UFunction::FindFunction("Function ProjectX.RPC_RecordMatchResults_X.InitSkillMatchPlayer");
	}

	URPC_RecordMatchResults_X_execInitSkillMatchPlayer_Params InitSkillMatchPlayer_Params;
	memcpy_s(&InitSkillMatchPlayer_Params.MatchData, 0x8, &MatchData, 0x8);
	memcpy_s(&InitSkillMatchPlayer_Params.Player, 0x8, &Player, 0x8);
	memcpy_s(&InitSkillMatchPlayer_Params.PartyIDs, 0x10, &PartyIDs, 0x10);

	this->ProcessEvent(uFnInitSkillMatchPlayer, &InitSkillMatchPlayer_Params, nullptr);

	memcpy_s(&PartyIDs, 0x10, &InitSkillMatchPlayer_Params.PartyIDs, 0x10);

	return InitSkillMatchPlayer_Params.ReturnValue;
};

// Function ProjectX.RPC_RecordMatchResults_X.SetMetrics
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RecordMatchResults_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UMetricsSystem_X*        MetricsSystem                  (CPF_Parm | CPF_EditInline)

class URPC_RecordMatchResults_X* URPC_RecordMatchResults_X::SetMetrics(class UMetricsSystem_X* MetricsSystem)
{
	static UFunction* uFnSetMetrics = nullptr;

	if (!uFnSetMetrics)
	{
		uFnSetMetrics = UFunction::FindFunction("Function ProjectX.RPC_RecordMatchResults_X.SetMetrics");
	}

	URPC_RecordMatchResults_X_execSetMetrics_Params SetMetrics_Params;
	memcpy_s(&SetMetrics_Params.MetricsSystem, 0x8, &MetricsSystem, 0x8);

	this->ProcessEvent(uFnSetMetrics, &SetMetrics_Params, nullptr);

	return SetMetrics_Params.ReturnValue;
};

// Function ProjectX.RPC_RecordMatchResults_X.SetMatchName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RecordMatchResults_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InName                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_RecordMatchResults_X* URPC_RecordMatchResults_X::SetMatchName(class FString InName)
{
	static UFunction* uFnSetMatchName = nullptr;

	if (!uFnSetMatchName)
	{
		uFnSetMatchName = UFunction::FindFunction("Function ProjectX.RPC_RecordMatchResults_X.SetMatchName");
	}

	URPC_RecordMatchResults_X_execSetMatchName_Params SetMatchName_Params;
	memcpy_s(&SetMatchName_Params.InName, 0x10, &InName, 0x10);

	this->ProcessEvent(uFnSetMatchName, &SetMatchName_Params, nullptr);

	return SetMatchName_Params.ReturnValue;
};

// Function ProjectX.RPC_RecordMatchResults_X.SetMatch
// [0x00020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RecordMatchResults_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UMatchData_X*            InMatch                        (CPF_Parm)

class URPC_RecordMatchResults_X* URPC_RecordMatchResults_X::SetMatch(class UMatchData_X* InMatch)
{
	static UFunction* uFnSetMatch = nullptr;

	if (!uFnSetMatch)
	{
		uFnSetMatch = UFunction::FindFunction("Function ProjectX.RPC_RecordMatchResults_X.SetMatch");
	}

	URPC_RecordMatchResults_X_execSetMatch_Params SetMatch_Params;
	memcpy_s(&SetMatch_Params.InMatch, 0x8, &InMatch, 0x8);

	this->ProcessEvent(uFnSetMatch, &SetMatch_Params, nullptr);

	return SetMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_RecordMatchResults_X.SetIsBotMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RecordMatchResults_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bBotMatch                      (CPF_Parm)

class URPC_RecordMatchResults_X* URPC_RecordMatchResults_X::SetIsBotMatch(unsigned long bBotMatch)
{
	static UFunction* uFnSetIsBotMatch = nullptr;

	if (!uFnSetIsBotMatch)
	{
		uFnSetIsBotMatch = UFunction::FindFunction("Function ProjectX.RPC_RecordMatchResults_X.SetIsBotMatch");
	}

	URPC_RecordMatchResults_X_execSetIsBotMatch_Params SetIsBotMatch_Params;
	SetIsBotMatch_Params.bBotMatch = bBotMatch;

	this->ProcessEvent(uFnSetIsBotMatch, &SetIsBotMatch_Params, nullptr);

	return SetIsBotMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_RecordMatchResults_X.SetMatchGUID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RecordMatchResults_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InGuid                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_RecordMatchResults_X* URPC_RecordMatchResults_X::SetMatchGUID(class FString InGuid)
{
	static UFunction* uFnSetMatchGUID = nullptr;

	if (!uFnSetMatchGUID)
	{
		uFnSetMatchGUID = UFunction::FindFunction("Function ProjectX.RPC_RecordMatchResults_X.SetMatchGUID");
	}

	URPC_RecordMatchResults_X_execSetMatchGUID_Params SetMatchGUID_Params;
	memcpy_s(&SetMatchGUID_Params.InGuid, 0x10, &InGuid, 0x10);

	this->ProcessEvent(uFnSetMatchGUID, &SetMatchGUID_Params, nullptr);

	return SetMatchGUID_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateLeaderboard_X.SetPlaylistID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateLeaderboard_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InID                           (CPF_Parm)

class URPC_UpdateLeaderboard_X* URPC_UpdateLeaderboard_X::SetPlaylistID(int32_t InID)
{
	static UFunction* uFnSetPlaylistID = nullptr;

	if (!uFnSetPlaylistID)
	{
		uFnSetPlaylistID = UFunction::FindFunction("Function ProjectX.RPC_UpdateLeaderboard_X.SetPlaylistID");
	}

	URPC_UpdateLeaderboard_X_execSetPlaylistID_Params SetPlaylistID_Params;
	memcpy_s(&SetPlaylistID_Params.InID, 0x4, &InID, 0x4);

	this->ProcessEvent(uFnSetPlaylistID, &SetPlaylistID_Params, nullptr);

	return SetPlaylistID_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateLeaderboard_X.SetMatchGUID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateLeaderboard_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InGuid                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_UpdateLeaderboard_X* URPC_UpdateLeaderboard_X::SetMatchGUID(class FString InGuid)
{
	static UFunction* uFnSetMatchGUID = nullptr;

	if (!uFnSetMatchGUID)
	{
		uFnSetMatchGUID = UFunction::FindFunction("Function ProjectX.RPC_UpdateLeaderboard_X.SetMatchGUID");
	}

	URPC_UpdateLeaderboard_X_execSetMatchGUID_Params SetMatchGUID_Params;
	memcpy_s(&SetMatchGUID_Params.InGuid, 0x10, &InGuid, 0x10);

	this->ProcessEvent(uFnSetMatchGUID, &SetMatchGUID_Params, nullptr);

	return SetMatchGUID_Params.ReturnValue;
};

// Function ProjectX.RPC_UpdateLeaderboard_X.SetUpdates
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class URPC_UpdateLeaderboard_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUploadStatDataSet> InUpdates                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class URPC_UpdateLeaderboard_X* URPC_UpdateLeaderboard_X::SetUpdates(TArray<struct FUploadStatDataSet>& InUpdates)
{
	static UFunction* uFnSetUpdates = nullptr;

	if (!uFnSetUpdates)
	{
		uFnSetUpdates = UFunction::FindFunction("Function ProjectX.RPC_UpdateLeaderboard_X.SetUpdates");
	}

	URPC_UpdateLeaderboard_X_execSetUpdates_Params SetUpdates_Params;
	memcpy_s(&SetUpdates_Params.InUpdates, 0x10, &InUpdates, 0x10);

	this->ProcessEvent(uFnSetUpdates, &SetUpdates_Params, nullptr);

	memcpy_s(&InUpdates, 0x10, &SetUpdates_Params.InUpdates, 0x10);

	return SetUpdates_Params.ReturnValue;
};

// Function ProjectX.PsyNetWordFilter_X.__PsyNetWordFilter_X__WordFilterSanitizeString_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_FilterContent_X*    RPC                            (CPF_Parm)

void UPsyNetWordFilter_X::__PsyNetWordFilter_X__WordFilterSanitizeString_0x1(class URPC_FilterContent_X* RPC)
{
	static UFunction* uFn__PsyNetWordFilter_X__WordFilterSanitizeString_0x1 = nullptr;

	if (!uFn__PsyNetWordFilter_X__WordFilterSanitizeString_0x1)
	{
		uFn__PsyNetWordFilter_X__WordFilterSanitizeString_0x1 = UFunction::FindFunction("Function ProjectX.PsyNetWordFilter_X.__PsyNetWordFilter_X__WordFilterSanitizeString_0x1");
	}

	UPsyNetWordFilter_X_exec__PsyNetWordFilter_X__WordFilterSanitizeString_0x1_Params __PsyNetWordFilter_X__WordFilterSanitizeString_0x1_Params;
	memcpy_s(&__PsyNetWordFilter_X__WordFilterSanitizeString_0x1_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__PsyNetWordFilter_X__WordFilterSanitizeString_0x1, &__PsyNetWordFilter_X__WordFilterSanitizeString_0x1_Params, nullptr);
};

// Function ProjectX.PsyNetWordFilter_X.HandlePsyNetWordFilterFail
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class URPC_FilterContent_X*    RPC                            (CPF_Parm)

void UPsyNetWordFilter_X::HandlePsyNetWordFilterFail(class URPC_FilterContent_X* RPC)
{
	static UFunction* uFnHandlePsyNetWordFilterFail = nullptr;

	if (!uFnHandlePsyNetWordFilterFail)
	{
		uFnHandlePsyNetWordFilterFail = UFunction::FindFunction("Function ProjectX.PsyNetWordFilter_X.HandlePsyNetWordFilterFail");
	}

	UPsyNetWordFilter_X_execHandlePsyNetWordFilterFail_Params HandlePsyNetWordFilterFail_Params;
	memcpy_s(&HandlePsyNetWordFilterFail_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandlePsyNetWordFilterFail, &HandlePsyNetWordFilterFail_Params, nullptr);
};

// Function ProjectX.PsyNetWordFilter_X.HandlePsyNetWordFilterSuccess
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class URPC_FilterContent_X*    RPC                            (CPF_Parm)

void UPsyNetWordFilter_X::HandlePsyNetWordFilterSuccess(class URPC_FilterContent_X* RPC)
{
	static UFunction* uFnHandlePsyNetWordFilterSuccess = nullptr;

	if (!uFnHandlePsyNetWordFilterSuccess)
	{
		uFnHandlePsyNetWordFilterSuccess = UFunction::FindFunction("Function ProjectX.PsyNetWordFilter_X.HandlePsyNetWordFilterSuccess");
	}

	UPsyNetWordFilter_X_execHandlePsyNetWordFilterSuccess_Params HandlePsyNetWordFilterSuccess_Params;
	memcpy_s(&HandlePsyNetWordFilterSuccess_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandlePsyNetWordFilterSuccess, &HandlePsyNetWordFilterSuccess_Params, nullptr);
};

// Function ProjectX.PsyNetWordFilter_X.HandlePsyNetWordFilter
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_FilterContent_X*    RPC                            (CPF_Parm)

void UPsyNetWordFilter_X::HandlePsyNetWordFilter(class URPC_FilterContent_X* RPC)
{
	static UFunction* uFnHandlePsyNetWordFilter = nullptr;

	if (!uFnHandlePsyNetWordFilter)
	{
		uFnHandlePsyNetWordFilter = UFunction::FindFunction("Function ProjectX.PsyNetWordFilter_X.HandlePsyNetWordFilter");
	}

	UPsyNetWordFilter_X_execHandlePsyNetWordFilter_Params HandlePsyNetWordFilter_Params;
	memcpy_s(&HandlePsyNetWordFilter_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFnHandlePsyNetWordFilter, &HandlePsyNetWordFilter_Params, nullptr);
};

// Function ProjectX.PsyNetWordFilter_X.SendPendingFilterRPC
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UPsyNetWordFilter_X::SendPendingFilterRPC()
{
	static UFunction* uFnSendPendingFilterRPC = nullptr;

	if (!uFnSendPendingFilterRPC)
	{
		uFnSendPendingFilterRPC = UFunction::FindFunction("Function ProjectX.PsyNetWordFilter_X.SendPendingFilterRPC");
	}

	UPsyNetWordFilter_X_execSendPendingFilterRPC_Params SendPendingFilterRPC_Params;

	this->ProcessEvent(uFnSendPendingFilterRPC, &SendPendingFilterRPC_Params, nullptr);
};

// Function ProjectX.PsyNetWordFilter_X.WordFilterSanitizeString
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Comment                        (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         SanitizeDelegate               (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

bool UPsyNetWordFilter_X::WordFilterSanitizeString(class FString Comment, struct FScriptDelegate SanitizeDelegate, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnWordFilterSanitizeString = nullptr;

	if (!uFnWordFilterSanitizeString)
	{
		uFnWordFilterSanitizeString = UFunction::FindFunction("Function ProjectX.PsyNetWordFilter_X.WordFilterSanitizeString");
	}

	UPsyNetWordFilter_X_execWordFilterSanitizeString_Params WordFilterSanitizeString_Params;
	memcpy_s(&WordFilterSanitizeString_Params.Comment, 0x10, &Comment, 0x10);
	memcpy_s(&WordFilterSanitizeString_Params.SanitizeDelegate, 0x18, &SanitizeDelegate, 0x18);
	memcpy_s(&WordFilterSanitizeString_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnWordFilterSanitizeString, &WordFilterSanitizeString_Params, nullptr);

	return WordFilterSanitizeString_Params.ReturnValue;
};

// Function ProjectX.UserBugReportComponent_X.Start
// [0x00020000] (FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

void UUserBugReportComponent_X::Start(class FString Message)
{
	static UFunction* uFnStart = nullptr;

	if (!uFnStart)
	{
		uFnStart = UFunction::FindFunction("Function ProjectX.UserBugReportComponent_X.Start");
	}

	UUserBugReportComponent_X_execStart_Params Start_Params;
	memcpy_s(&Start_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnStart, &Start_Params, nullptr);
};

// Function ProjectX.OnlinePlayerRegionRestrictions_X.__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// uint8_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   S                              (CPF_Parm)

uint8_t UOnlinePlayerRegionRestrictions_X::__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1(struct FName S)
{
	static UFunction* uFn__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1 = nullptr;

	if (!uFn__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1)
	{
		uFn__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1 = UFunction::FindFunction("Function ProjectX.OnlinePlayerRegionRestrictions_X.__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1");
	}

	UOnlinePlayerRegionRestrictions_X_exec__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1_Params __OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1_Params;
	memcpy_s(&__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1_Params.S, 0x8, &S, 0x8);

	this->ProcessEvent(uFn__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1, &__OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1_Params, nullptr);

	return __OnlinePlayerRegionRestrictions_X__HandleLoginChanged_0x1_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerRegionRestrictions_X.IsRestricted
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Restriction                    (CPF_Parm)

bool UOnlinePlayerRegionRestrictions_X::IsRestricted(uint8_t Restriction)
{
	static UFunction* uFnIsRestricted = nullptr;

	if (!uFnIsRestricted)
	{
		uFnIsRestricted = UFunction::FindFunction("Function ProjectX.OnlinePlayerRegionRestrictions_X.IsRestricted");
	}

	UOnlinePlayerRegionRestrictions_X_execIsRestricted_Params IsRestricted_Params;
	memcpy_s(&IsRestricted_Params.Restriction, 0x1, &Restriction, 0x1);

	this->ProcessEvent(uFnIsRestricted, &IsRestricted_Params, nullptr);

	return IsRestricted_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerRegionRestrictions_X.HandleLoginChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UOnlinePlayerAuthentication_X* Auth                           (CPF_Parm)

void UOnlinePlayerRegionRestrictions_X::HandleLoginChanged(class UOnlinePlayerAuthentication_X* Auth)
{
	static UFunction* uFnHandleLoginChanged = nullptr;

	if (!uFnHandleLoginChanged)
	{
		uFnHandleLoginChanged = UFunction::FindFunction("Function ProjectX.OnlinePlayerRegionRestrictions_X.HandleLoginChanged");
	}

	UOnlinePlayerRegionRestrictions_X_execHandleLoginChanged_Params HandleLoginChanged_Params;
	memcpy_s(&HandleLoginChanged_Params.Auth, 0x8, &Auth, 0x8);

	this->ProcessEvent(uFnHandleLoginChanged, &HandleLoginChanged_Params, nullptr);
};

// Function ProjectX.OnlinePlayerRegionRestrictions_X.OnExit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerRegionRestrictions_X::OnExit()
{
	static UFunction* uFnOnExit = nullptr;

	if (!uFnOnExit)
	{
		uFnOnExit = UFunction::FindFunction("Function ProjectX.OnlinePlayerRegionRestrictions_X.OnExit");
	}

	UOnlinePlayerRegionRestrictions_X_execOnExit_Params OnExit_Params;

	this->ProcessEvent(uFnOnExit, &OnExit_Params, nullptr);
};

// Function ProjectX.OnlinePlayerRegionRestrictions_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerRegionRestrictions_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlinePlayerRegionRestrictions_X.OnInit");
	}

	UOnlinePlayerRegionRestrictions_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorage_X.OnInit
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UOnlinePlayerStorage_X::OnInit()
{
	static UFunction* uFnOnInit = nullptr;

	if (!uFnOnInit)
	{
		uFnOnInit = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorage_X.OnInit");
	}

	UOnlinePlayerStorage_X_execOnInit_Params OnInit_Params;

	this->ProcessEvent(uFnOnInit, &OnInit_Params, nullptr);
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetAsPrimaryAccount
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  bInPrimary                     (CPF_Parm)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetAsPrimaryAccount(unsigned long bInPrimary)
{
	static UFunction* uFnSetAsPrimaryAccount = nullptr;

	if (!uFnSetAsPrimaryAccount)
	{
		uFnSetAsPrimaryAccount = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetAsPrimaryAccount");
	}

	URPC_LoginAuthPlayer_X_execSetAsPrimaryAccount_Params SetAsPrimaryAccount_Params;
	SetAsPrimaryAccount_Params.bInPrimary = bInPrimary;

	this->ProcessEvent(uFnSetAsPrimaryAccount, &SetAsPrimaryAccount_Params, nullptr);

	return SetAsPrimaryAccount_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetEpicAccountId
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InEpicAccountId                (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetEpicAccountId(class FString InEpicAccountId)
{
	static UFunction* uFnSetEpicAccountId = nullptr;

	if (!uFnSetEpicAccountId)
	{
		uFnSetEpicAccountId = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetEpicAccountId");
	}

	URPC_LoginAuthPlayer_X_execSetEpicAccountId_Params SetEpicAccountId_Params;
	memcpy_s(&SetEpicAccountId_Params.InEpicAccountId, 0x10, &InEpicAccountId, 0x10);

	this->ProcessEvent(uFnSetEpicAccountId, &SetEpicAccountId_Params, nullptr);

	return SetEpicAccountId_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetEpicAuthTicket
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InEpicAuthTicket               (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetEpicAuthTicket(class FString InEpicAuthTicket)
{
	static UFunction* uFnSetEpicAuthTicket = nullptr;

	if (!uFnSetEpicAuthTicket)
	{
		uFnSetEpicAuthTicket = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetEpicAuthTicket");
	}

	URPC_LoginAuthPlayer_X_execSetEpicAuthTicket_Params SetEpicAuthTicket_Params;
	memcpy_s(&SetEpicAuthTicket_Params.InEpicAuthTicket, 0x10, &InEpicAuthTicket, 0x10);

	this->ProcessEvent(uFnSetEpicAuthTicket, &SetEpicAuthTicket_Params, nullptr);

	return SetEpicAuthTicket_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetLocalFirstPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InLocalFirstPlayerID           (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetLocalFirstPlayerID(class FString InLocalFirstPlayerID)
{
	static UFunction* uFnSetLocalFirstPlayerID = nullptr;

	if (!uFnSetLocalFirstPlayerID)
	{
		uFnSetLocalFirstPlayerID = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetLocalFirstPlayerID");
	}

	URPC_LoginAuthPlayer_X_execSetLocalFirstPlayerID_Params SetLocalFirstPlayerID_Params;
	memcpy_s(&SetLocalFirstPlayerID_Params.InLocalFirstPlayerID, 0x10, &InLocalFirstPlayerID, 0x10);

	this->ProcessEvent(uFnSetLocalFirstPlayerID, &SetLocalFirstPlayerID_Params, nullptr);

	return SetLocalFirstPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetConsoleType
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InType                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetConsoleType(class FString InType)
{
	static UFunction* uFnSetConsoleType = nullptr;

	if (!uFnSetConsoleType)
	{
		uFnSetConsoleType = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetConsoleType");
	}

	URPC_LoginAuthPlayer_X_execSetConsoleType_Params SetConsoleType_Params;
	memcpy_s(&SetConsoleType_Params.InType, 0x10, &InType, 0x10);

	this->ProcessEvent(uFnSetConsoleType, &SetConsoleType_Params, nullptr);

	return SetConsoleType_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetFeatureSet
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   InFeatureSet                   (CPF_Parm)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetFeatureSet(struct FName InFeatureSet)
{
	static UFunction* uFnSetFeatureSet = nullptr;

	if (!uFnSetFeatureSet)
	{
		uFnSetFeatureSet = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetFeatureSet");
	}

	URPC_LoginAuthPlayer_X_execSetFeatureSet_Params SetFeatureSet_Params;
	memcpy_s(&SetFeatureSet_Params.InFeatureSet, 0x8, &InFeatureSet, 0x8);

	this->ProcessEvent(uFnSetFeatureSet, &SetFeatureSet_Params, nullptr);

	return SetFeatureSet_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetBuildRegion
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InBuildRegion                  (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetBuildRegion(class FString InBuildRegion)
{
	static UFunction* uFnSetBuildRegion = nullptr;

	if (!uFnSetBuildRegion)
	{
		uFnSetBuildRegion = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetBuildRegion");
	}

	URPC_LoginAuthPlayer_X_execSetBuildRegion_Params SetBuildRegion_Params;
	memcpy_s(&SetBuildRegion_Params.InBuildRegion, 0x10, &InBuildRegion, 0x10);

	this->ProcessEvent(uFnSetBuildRegion, &SetBuildRegion_Params, nullptr);

	return SetBuildRegion_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetAuthTicket
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InAuthTicket                   (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetAuthTicket(class FString InAuthTicket)
{
	static UFunction* uFnSetAuthTicket = nullptr;

	if (!uFnSetAuthTicket)
	{
		uFnSetAuthTicket = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetAuthTicket");
	}

	URPC_LoginAuthPlayer_X_execSetAuthTicket_Params SetAuthTicket_Params;
	memcpy_s(&SetAuthTicket_Params.InAuthTicket, 0x10, &InAuthTicket, 0x10);

	this->ProcessEvent(uFnSetAuthTicket, &SetAuthTicket_Params, nullptr);

	return SetAuthTicket_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetLanguage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InLanguage                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetLanguage(class FString InLanguage)
{
	static UFunction* uFnSetLanguage = nullptr;

	if (!uFnSetLanguage)
	{
		uFnSetLanguage = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetLanguage");
	}

	URPC_LoginAuthPlayer_X_execSetLanguage_Params SetLanguage_Params;
	memcpy_s(&SetLanguage_Params.InLanguage, 0x10, &InLanguage, 0x10);

	this->ProcessEvent(uFnSetLanguage, &SetLanguage_Params, nullptr);

	return SetLanguage_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetPlayerID(class FString InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetPlayerID");
	}

	URPC_LoginAuthPlayer_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x10, &InPlayerId, 0x10);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetPlayerName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InPlayerName                   (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetPlayerName(class FString InPlayerName)
{
	static UFunction* uFnSetPlayerName = nullptr;

	if (!uFnSetPlayerName)
	{
		uFnSetPlayerName = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetPlayerName");
	}

	URPC_LoginAuthPlayer_X_execSetPlayerName_Params SetPlayerName_Params;
	memcpy_s(&SetPlayerName_Params.InPlayerName, 0x10, &InPlayerName, 0x10);

	this->ProcessEvent(uFnSetPlayerName, &SetPlayerName_Params, nullptr);

	return SetPlayerName_Params.ReturnValue;
};

// Function ProjectX.RPC_LoginAuthPlayer_X.SetPlatform
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_LoginAuthPlayer_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InPlatform                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_LoginAuthPlayer_X* URPC_LoginAuthPlayer_X::SetPlatform(class FString InPlatform)
{
	static UFunction* uFnSetPlatform = nullptr;

	if (!uFnSetPlatform)
	{
		uFnSetPlatform = UFunction::FindFunction("Function ProjectX.RPC_LoginAuthPlayer_X.SetPlatform");
	}

	URPC_LoginAuthPlayer_X_execSetPlatform_Params SetPlatform_Params;
	memcpy_s(&SetPlatform_Params.InPlatform, 0x10, &InPlatform, 0x10);

	this->ProcessEvent(uFnSetPlatform, &SetPlatform_Params, nullptr);

	return SetPlatform_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerPermissions_X.GetPermissionFromString
// [0x00440003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   PermissionName                 (CPF_Parm)
// uint8_t                        Permission                     (CPF_Parm | CPF_OutParm)

bool URPC_GetPlayerPermissions_X::GetPermissionFromString(struct FName PermissionName, uint8_t& Permission)
{
	static UFunction* uFnGetPermissionFromString = nullptr;

	if (!uFnGetPermissionFromString)
	{
		uFnGetPermissionFromString = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerPermissions_X.GetPermissionFromString");
	}

	URPC_GetPlayerPermissions_X_execGetPermissionFromString_Params GetPermissionFromString_Params;
	memcpy_s(&GetPermissionFromString_Params.PermissionName, 0x8, &PermissionName, 0x8);
	memcpy_s(&GetPermissionFromString_Params.Permission, 0x1, &Permission, 0x1);

	this->ProcessEvent(uFnGetPermissionFromString, &GetPermissionFromString_Params, nullptr);

	memcpy_s(&Permission, 0x1, &GetPermissionFromString_Params.Permission, 0x1);

	return GetPermissionFromString_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerPermissions_X.ConvertPermissions
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// TArray<uint8_t>                ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// TArray<struct FName>           PermissionNames                (CPF_Parm | CPF_NeedCtorLink)

TArray<uint8_t> URPC_GetPlayerPermissions_X::ConvertPermissions(TArray<struct FName> PermissionNames)
{
	static UFunction* uFnConvertPermissions = nullptr;

	if (!uFnConvertPermissions)
	{
		uFnConvertPermissions = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerPermissions_X.ConvertPermissions");
	}

	URPC_GetPlayerPermissions_X_execConvertPermissions_Params ConvertPermissions_Params;
	memcpy_s(&ConvertPermissions_Params.PermissionNames, 0x10, &PermissionNames, 0x10);

	this->ProcessEvent(uFnConvertPermissions, &ConvertPermissions_Params, nullptr);

	return ConvertPermissions_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerPermissions_X.ConvertPlayerPermissions
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPlayerPermissionsList  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

struct FPlayerPermissionsList URPC_GetPlayerPermissions_X::ConvertPlayerPermissions(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnConvertPlayerPermissions = nullptr;

	if (!uFnConvertPlayerPermissions)
	{
		uFnConvertPlayerPermissions = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerPermissions_X.ConvertPlayerPermissions");
	}

	URPC_GetPlayerPermissions_X_execConvertPlayerPermissions_Params ConvertPlayerPermissions_Params;
	memcpy_s(&ConvertPlayerPermissions_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnConvertPlayerPermissions, &ConvertPlayerPermissions_Params, nullptr);

	return ConvertPlayerPermissions_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerPermissions_X.GetPlayerPermissions
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FPlayerPermissionsList> ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FPlayerPermissionsList> URPC_GetPlayerPermissions_X::GetPlayerPermissions()
{
	static UFunction* uFnGetPlayerPermissions = nullptr;

	if (!uFnGetPlayerPermissions)
	{
		uFnGetPlayerPermissions = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerPermissions_X.GetPlayerPermissions");
	}

	URPC_GetPlayerPermissions_X_execGetPlayerPermissions_Params GetPlayerPermissions_Params;

	this->ProcessEvent(uFnGetPlayerPermissions, &GetPlayerPermissions_Params, nullptr);

	return GetPlayerPermissions_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerPermissions_X.SetPlayers
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPlayerPermissions_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    InPlayerIDs                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class URPC_GetPlayerPermissions_X* URPC_GetPlayerPermissions_X::SetPlayers(TArray<struct FUniqueNetId>& InPlayerIDs)
{
	static UFunction* uFnSetPlayers = nullptr;

	if (!uFnSetPlayers)
	{
		uFnSetPlayers = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerPermissions_X.SetPlayers");
	}

	URPC_GetPlayerPermissions_X_execSetPlayers_Params SetPlayers_Params;
	memcpy_s(&SetPlayers_Params.InPlayerIDs, 0x10, &InPlayerIDs, 0x10);

	this->ProcessEvent(uFnSetPlayers, &SetPlayers_Params, nullptr);

	memcpy_s(&InPlayerIDs, 0x10, &SetPlayers_Params.InPlayerIDs, 0x10);

	return SetPlayers_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageManifest_X.ChecksumMatches
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   Category                       (CPF_Parm)
// int32_t                        Checksum                       (CPF_Parm)
// uint8_t                        Encoding                       (CPF_Parm)

bool UOnlinePlayerStorageManifest_X::ChecksumMatches(struct FName Category, int32_t Checksum, uint8_t Encoding)
{
	static UFunction* uFnChecksumMatches = nullptr;

	if (!uFnChecksumMatches)
	{
		uFnChecksumMatches = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageManifest_X.ChecksumMatches");
	}

	UOnlinePlayerStorageManifest_X_execChecksumMatches_Params ChecksumMatches_Params;
	memcpy_s(&ChecksumMatches_Params.Category, 0x8, &Category, 0x8);
	memcpy_s(&ChecksumMatches_Params.Checksum, 0x4, &Checksum, 0x4);
	memcpy_s(&ChecksumMatches_Params.Encoding, 0x1, &Encoding, 0x1);

	this->ProcessEvent(uFnChecksumMatches, &ChecksumMatches_Params, nullptr);

	return ChecksumMatches_Params.ReturnValue;
};

// Function ProjectX.OnlinePlayerStorageManifest_X.SetChecksum
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Category                       (CPF_Parm)
// int32_t                        Checksum                       (CPF_Parm)
// uint8_t                        Encoding                       (CPF_Parm)

void UOnlinePlayerStorageManifest_X::SetChecksum(struct FName Category, int32_t Checksum, uint8_t Encoding)
{
	static UFunction* uFnSetChecksum = nullptr;

	if (!uFnSetChecksum)
	{
		uFnSetChecksum = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageManifest_X.SetChecksum");
	}

	UOnlinePlayerStorageManifest_X_execSetChecksum_Params SetChecksum_Params;
	memcpy_s(&SetChecksum_Params.Category, 0x8, &Category, 0x8);
	memcpy_s(&SetChecksum_Params.Checksum, 0x4, &Checksum, 0x4);
	memcpy_s(&SetChecksum_Params.Encoding, 0x1, &Encoding, 0x1);

	this->ProcessEvent(uFnSetChecksum, &SetChecksum_Params, nullptr);
};

// Function ProjectX.OnlinePlayerStorageManifest_X.GetIndex
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   Category                       (CPF_Parm)

int32_t UOnlinePlayerStorageManifest_X::GetIndex(struct FName Category)
{
	static UFunction* uFnGetIndex = nullptr;

	if (!uFnGetIndex)
	{
		uFnGetIndex = UFunction::FindFunction("Function ProjectX.OnlinePlayerStorageManifest_X.GetIndex");
	}

	UOnlinePlayerStorageManifest_X_execGetIndex_Params GetIndex_Params;
	memcpy_s(&GetIndex_Params.Category, 0x8, &Category, 0x8);

	this->ProcessEvent(uFnGetIndex, &GetIndex_Params, nullptr);

	return GetIndex_Params.ReturnValue;
};

// Function ProjectX.SaveLock_X.StaticAllowSave
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USaveLock_X::StaticAllowSave()
{
	static UFunction* uFnStaticAllowSave = nullptr;

	if (!uFnStaticAllowSave)
	{
		uFnStaticAllowSave = UFunction::FindFunction("Function ProjectX.SaveLock_X.StaticAllowSave");
	}

	USaveLock_X_execStaticAllowSave_Params StaticAllowSave_Params;

	USaveLock_X::StaticClass()->ProcessEvent(uFnStaticAllowSave, &StaticAllowSave_Params, nullptr);

	return StaticAllowSave_Params.ReturnValue;
};

// Function ProjectX.SaveLock_X.AllowSave
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool USaveLock_X::AllowSave()
{
	static UFunction* uFnAllowSave = nullptr;

	if (!uFnAllowSave)
	{
		uFnAllowSave = UFunction::FindFunction("Function ProjectX.SaveLock_X.AllowSave");
	}

	USaveLock_X_execAllowSave_Params AllowSave_Params;

	this->ProcessEvent(uFnAllowSave, &AllowSave_Params, nullptr);

	return AllowSave_Params.ReturnValue;
};

// Function ProjectX.RPC_PlayerStorageGet_X.__RPC_PlayerStorageGet_X__OnSuccess_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class UGetPlayerStorageResultItem_X* Item                           (CPF_Parm)

void URPC_PlayerStorageGet_X::__RPC_PlayerStorageGet_X__OnSuccess_0x2(class UGetPlayerStorageResultItem_X* Item)
{
	static UFunction* uFn__RPC_PlayerStorageGet_X__OnSuccess_0x2 = nullptr;

	if (!uFn__RPC_PlayerStorageGet_X__OnSuccess_0x2)
	{
		uFn__RPC_PlayerStorageGet_X__OnSuccess_0x2 = UFunction::FindFunction("Function ProjectX.RPC_PlayerStorageGet_X.__RPC_PlayerStorageGet_X__OnSuccess_0x2");
	}

	URPC_PlayerStorageGet_X_exec__RPC_PlayerStorageGet_X__OnSuccess_0x2_Params __RPC_PlayerStorageGet_X__OnSuccess_0x2_Params;
	memcpy_s(&__RPC_PlayerStorageGet_X__OnSuccess_0x2_Params.Item, 0x8, &Item, 0x8);

	this->ProcessEvent(uFn__RPC_PlayerStorageGet_X__OnSuccess_0x2, &__RPC_PlayerStorageGet_X__OnSuccess_0x2_Params, nullptr);
};

// Function ProjectX.RPC_PlayerStorageGet_X.__RPC_PlayerStorageGet_X__OnSuccess_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UGetPlayerStorageResultItem_X* Item                           (CPF_Parm)

bool URPC_PlayerStorageGet_X::__RPC_PlayerStorageGet_X__OnSuccess_0x1(class UGetPlayerStorageResultItem_X* Item)
{
	static UFunction* uFn__RPC_PlayerStorageGet_X__OnSuccess_0x1 = nullptr;

	if (!uFn__RPC_PlayerStorageGet_X__OnSuccess_0x1)
	{
		uFn__RPC_PlayerStorageGet_X__OnSuccess_0x1 = UFunction::FindFunction("Function ProjectX.RPC_PlayerStorageGet_X.__RPC_PlayerStorageGet_X__OnSuccess_0x1");
	}

	URPC_PlayerStorageGet_X_exec__RPC_PlayerStorageGet_X__OnSuccess_0x1_Params __RPC_PlayerStorageGet_X__OnSuccess_0x1_Params;
	memcpy_s(&__RPC_PlayerStorageGet_X__OnSuccess_0x1_Params.Item, 0x8, &Item, 0x8);

	this->ProcessEvent(uFn__RPC_PlayerStorageGet_X__OnSuccess_0x1, &__RPC_PlayerStorageGet_X__OnSuccess_0x1_Params, nullptr);

	return __RPC_PlayerStorageGet_X__OnSuccess_0x1_Params.ReturnValue;
};

// Function ProjectX.RPC_PlayerStorageGet_X.OnSuccess
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void URPC_PlayerStorageGet_X::eventOnSuccess()
{
	static UFunction* uFnOnSuccess = nullptr;

	if (!uFnOnSuccess)
	{
		uFnOnSuccess = UFunction::FindFunction("Function ProjectX.RPC_PlayerStorageGet_X.OnSuccess");
	}

	URPC_PlayerStorageGet_X_eventOnSuccess_Params OnSuccess_Params;

	this->ProcessEvent(uFnOnSuccess, &OnSuccess_Params, nullptr);
};

// Function ProjectX.RPC_PlayerStorageGet_X.GetResponseObject
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UObject*                 ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UObject* URPC_PlayerStorageGet_X::eventGetResponseObject()
{
	static UFunction* uFnGetResponseObject = nullptr;

	if (!uFnGetResponseObject)
	{
		uFnGetResponseObject = UFunction::FindFunction("Function ProjectX.RPC_PlayerStorageGet_X.GetResponseObject");
	}

	URPC_PlayerStorageGet_X_eventGetResponseObject_Params GetResponseObject_Params;

	this->ProcessEvent(uFnGetResponseObject, &GetResponseObject_Params, nullptr);

	return GetResponseObject_Params.ReturnValue;
};

// Function ProjectX.OnlineResource_X.SetCachedData
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UCachedWebData_X*        NewData                        (CPF_Parm)

void UOnlineResource_X::SetCachedData(class UCachedWebData_X* NewData)
{
	static UFunction* uFnSetCachedData = nullptr;

	if (!uFnSetCachedData)
	{
		uFnSetCachedData = UFunction::FindFunction("Function ProjectX.OnlineResource_X.SetCachedData");
	}

	UOnlineResource_X_execSetCachedData_Params SetCachedData_Params;
	memcpy_s(&SetCachedData_Params.NewData, 0x8, &NewData, 0x8);

	this->ProcessEvent(uFnSetCachedData, &SetCachedData_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.IsValidNewData
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UCachedWebData_X*        Data                           (CPF_Parm)

bool UOnlineResource_X::IsValidNewData(class UCachedWebData_X* Data)
{
	static UFunction* uFnIsValidNewData = nullptr;

	if (!uFnIsValidNewData)
	{
		uFnIsValidNewData = UFunction::FindFunction("Function ProjectX.OnlineResource_X.IsValidNewData");
	}

	UOnlineResource_X_execIsValidNewData_Params IsValidNewData_Params;
	memcpy_s(&IsValidNewData_Params.Data, 0x8, &Data, 0x8);

	this->ProcessEvent(uFnIsValidNewData, &IsValidNewData_Params, nullptr);

	return IsValidNewData_Params.ReturnValue;
};

// Function ProjectX.OnlineResource_X.ClearRetryTimer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineResource_X::ClearRetryTimer()
{
	static UFunction* uFnClearRetryTimer = nullptr;

	if (!uFnClearRetryTimer)
	{
		uFnClearRetryTimer = UFunction::FindFunction("Function ProjectX.OnlineResource_X.ClearRetryTimer");
	}

	UOnlineResource_X_execClearRetryTimer_Params ClearRetryTimer_Params;

	this->ProcessEvent(uFnClearRetryTimer, &ClearRetryTimer_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.SetRetryTimer
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// float                          Delay                          (CPF_Parm)

void UOnlineResource_X::SetRetryTimer(float Delay)
{
	static UFunction* uFnSetRetryTimer = nullptr;

	if (!uFnSetRetryTimer)
	{
		uFnSetRetryTimer = UFunction::FindFunction("Function ProjectX.OnlineResource_X.SetRetryTimer");
	}

	UOnlineResource_X_execSetRetryTimer_Params SetRetryTimer_Params;
	memcpy_s(&SetRetryTimer_Params.Delay, 0x4, &Delay, 0x4);

	this->ProcessEvent(uFnSetRetryTimer, &SetRetryTimer_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.UpdateRetryDelays
// [0x00044003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UError*                  SyncError                      (CPF_OptionalParm | CPF_Parm)

void UOnlineResource_X::UpdateRetryDelays(class UError* SyncError)
{
	static UFunction* uFnUpdateRetryDelays = nullptr;

	if (!uFnUpdateRetryDelays)
	{
		uFnUpdateRetryDelays = UFunction::FindFunction("Function ProjectX.OnlineResource_X.UpdateRetryDelays");
	}

	UOnlineResource_X_execUpdateRetryDelays_Params UpdateRetryDelays_Params;
	memcpy_s(&UpdateRetryDelays_Params.SyncError, 0x8, &SyncError, 0x8);

	this->ProcessEvent(uFnUpdateRetryDelays, &UpdateRetryDelays_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.HandleRetryConfigChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineResource_X::HandleRetryConfigChanged()
{
	static UFunction* uFnHandleRetryConfigChanged = nullptr;

	if (!uFnHandleRetryConfigChanged)
	{
		uFnHandleRetryConfigChanged = UFunction::FindFunction("Function ProjectX.OnlineResource_X.HandleRetryConfigChanged");
	}

	UOnlineResource_X_execHandleRetryConfigChanged_Params HandleRetryConfigChanged_Params;

	this->ProcessEvent(uFnHandleRetryConfigChanged, &HandleRetryConfigChanged_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.HandleSync
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UCachedWebData_X*        Data                           (CPF_Parm)

void UOnlineResource_X::HandleSync(class UCachedWebData_X* Data)
{
	static UFunction* uFnHandleSync = nullptr;

	if (!uFnHandleSync)
	{
		uFnHandleSync = UFunction::FindFunction("Function ProjectX.OnlineResource_X.HandleSync");
	}

	UOnlineResource_X_execHandleSync_Params HandleSync_Params;
	memcpy_s(&HandleSync_Params.Data, 0x8, &Data, 0x8);

	this->ProcessEvent(uFnHandleSync, &HandleSync_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.RetrySync
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:

void UOnlineResource_X::RetrySync()
{
	static UFunction* uFnRetrySync = nullptr;

	if (!uFnRetrySync)
	{
		uFnRetrySync = UFunction::FindFunction("Function ProjectX.OnlineResource_X.RetrySync");
	}

	UOnlineResource_X_execRetrySync_Params RetrySync_Params;

	this->ProcessEvent(uFnRetrySync, &RetrySync_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.SyncData
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FScriptDelegate         Callback                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void UOnlineResource_X::SyncData(struct FScriptDelegate Callback)
{
	static UFunction* uFnSyncData = nullptr;

	if (!uFnSyncData)
	{
		uFnSyncData = UFunction::FindFunction("Function ProjectX.OnlineResource_X.SyncData");
	}

	UOnlineResource_X_execSyncData_Params SyncData_Params;
	memcpy_s(&SyncData_Params.Callback, 0x18, &Callback, 0x18);

	this->ProcessEvent(uFnSyncData, &SyncData_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.EventDataChanged
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineResource_X*       DataSync                       (CPF_Parm | CPF_EditInline)

void UOnlineResource_X::EventDataChanged(class UOnlineResource_X* DataSync)
{
	static UFunction* uFnEventDataChanged = nullptr;

	if (!uFnEventDataChanged)
	{
		uFnEventDataChanged = UFunction::FindFunction("Function ProjectX.OnlineResource_X.EventDataChanged");
	}

	UOnlineResource_X_execEventDataChanged_Params EventDataChanged_Params;
	memcpy_s(&EventDataChanged_Params.DataSync, 0x8, &DataSync, 0x8);

	this->ProcessEvent(uFnEventDataChanged, &EventDataChanged_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.EventSyncError
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineResource_X*       DataSync                       (CPF_Parm | CPF_EditInline)
// class UError*                  Error                          (CPF_Parm)

void UOnlineResource_X::EventSyncError(class UOnlineResource_X* DataSync, class UError* Error)
{
	static UFunction* uFnEventSyncError = nullptr;

	if (!uFnEventSyncError)
	{
		uFnEventSyncError = UFunction::FindFunction("Function ProjectX.OnlineResource_X.EventSyncError");
	}

	UOnlineResource_X_execEventSyncError_Params EventSyncError_Params;
	memcpy_s(&EventSyncError_Params.DataSync, 0x8, &DataSync, 0x8);
	memcpy_s(&EventSyncError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnEventSyncError, &EventSyncError_Params, nullptr);
};

// Function ProjectX.OnlineResource_X.EventSyncComplete
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:
// class UOnlineResource_X*       DataSync                       (CPF_Parm | CPF_EditInline)

void UOnlineResource_X::EventSyncComplete(class UOnlineResource_X* DataSync)
{
	static UFunction* uFnEventSyncComplete = nullptr;

	if (!uFnEventSyncComplete)
	{
		uFnEventSyncComplete = UFunction::FindFunction("Function ProjectX.OnlineResource_X.EventSyncComplete");
	}

	UOnlineResource_X_execEventSyncComplete_Params EventSyncComplete_Params;
	memcpy_s(&EventSyncComplete_Params.DataSync, 0x8, &DataSync, 0x8);

	this->ProcessEvent(uFnEventSyncComplete, &EventSyncComplete_Params, nullptr);
};

// Function ProjectX.OnlineSaveLock_X.HandleEnableOnlineSaveRemoved
// [0x200042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UEnableOnlineSave_X*     Enable                         (CPF_Parm)

void UOnlineSaveLock_X::HandleEnableOnlineSaveRemoved(class UEnableOnlineSave_X* Enable)
{
	static UFunction* uFnHandleEnableOnlineSaveRemoved = nullptr;

	if (!uFnHandleEnableOnlineSaveRemoved)
	{
		uFnHandleEnableOnlineSaveRemoved = UFunction::FindFunction("Function ProjectX.OnlineSaveLock_X.HandleEnableOnlineSaveRemoved");
	}

	UOnlineSaveLock_X_execHandleEnableOnlineSaveRemoved_Params HandleEnableOnlineSaveRemoved_Params;
	memcpy_s(&HandleEnableOnlineSaveRemoved_Params.Enable, 0x8, &Enable, 0x8);

	UOnlineSaveLock_X::StaticClass()->ProcessEvent(uFnHandleEnableOnlineSaveRemoved, &HandleEnableOnlineSaveRemoved_Params, nullptr);
};

// Function ProjectX.OnlineSaveLock_X.HandleEnableOnlineSaveAdded
// [0x100042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UEnableOnlineSave_X*     Enable                         (CPF_Parm)

void UOnlineSaveLock_X::HandleEnableOnlineSaveAdded(class UEnableOnlineSave_X* Enable)
{
	static UFunction* uFnHandleEnableOnlineSaveAdded = nullptr;

	if (!uFnHandleEnableOnlineSaveAdded)
	{
		uFnHandleEnableOnlineSaveAdded = UFunction::FindFunction("Function ProjectX.OnlineSaveLock_X.HandleEnableOnlineSaveAdded");
	}

	UOnlineSaveLock_X_execHandleEnableOnlineSaveAdded_Params HandleEnableOnlineSaveAdded_Params;
	memcpy_s(&HandleEnableOnlineSaveAdded_Params.Enable, 0x8, &Enable, 0x8);

	UOnlineSaveLock_X::StaticClass()->ProcessEvent(uFnHandleEnableOnlineSaveAdded, &HandleEnableOnlineSaveAdded_Params, nullptr);
};

// Function ProjectX.OnlineSaveLock_X.StaticAllowSave
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineSaveLock_X::StaticAllowSave()
{
	static UFunction* uFnStaticAllowSave = nullptr;

	if (!uFnStaticAllowSave)
	{
		uFnStaticAllowSave = UFunction::FindFunction("Function ProjectX.OnlineSaveLock_X.StaticAllowSave");
	}

	UOnlineSaveLock_X_execStaticAllowSave_Params StaticAllowSave_Params;

	UOnlineSaveLock_X::StaticClass()->ProcessEvent(uFnStaticAllowSave, &StaticAllowSave_Params, nullptr);

	return StaticAllowSave_Params.ReturnValue;
};

// Function ProjectX.OnlineSaveLock_X.AllowSave
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UOnlineSaveLock_X::AllowSave()
{
	static UFunction* uFnAllowSave = nullptr;

	if (!uFnAllowSave)
	{
		uFnAllowSave = UFunction::FindFunction("Function ProjectX.OnlineSaveLock_X.AllowSave");
	}

	UOnlineSaveLock_X_execAllowSave_Params AllowSave_Params;

	this->ProcessEvent(uFnAllowSave, &AllowSave_Params, nullptr);

	return AllowSave_Params.ReturnValue;
};

// Function ProjectX.RPC_PartyMessage_X.SetMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyMessage_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMessage                      (CPF_Parm | CPF_NeedCtorLink)

class URPC_PartyMessage_X* URPC_PartyMessage_X::SetMessage(class FString InMessage)
{
	static UFunction* uFnSetMessage = nullptr;

	if (!uFnSetMessage)
	{
		uFnSetMessage = UFunction::FindFunction("Function ProjectX.RPC_PartyMessage_X.SetMessage");
	}

	URPC_PartyMessage_X_execSetMessage_Params SetMessage_Params;
	memcpy_s(&SetMessage_Params.InMessage, 0x10, &InMessage, 0x10);

	this->ProcessEvent(uFnSetMessage, &SetMessage_Params, nullptr);

	return SetMessage_Params.ReturnValue;
};

// Function ProjectX.RPC_PartyBase_X.SetPartyIdStr
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyBase_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InPartyId                      (CPF_Parm | CPF_NeedCtorLink)

class URPC_PartyBase_X* URPC_PartyBase_X::SetPartyIdStr(class FString InPartyId)
{
	static UFunction* uFnSetPartyIdStr = nullptr;

	if (!uFnSetPartyIdStr)
	{
		uFnSetPartyIdStr = UFunction::FindFunction("Function ProjectX.RPC_PartyBase_X.SetPartyIdStr");
	}

	URPC_PartyBase_X_execSetPartyIdStr_Params SetPartyIdStr_Params;
	memcpy_s(&SetPartyIdStr_Params.InPartyId, 0x10, &InPartyId, 0x10);

	this->ProcessEvent(uFnSetPartyIdStr, &SetPartyIdStr_Params, nullptr);

	return SetPartyIdStr_Params.ReturnValue;
};

// Function ProjectX.RPC_PartyBase_X.SetPartyId
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyBase_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          InLobbyId                      (CPF_Parm)

class URPC_PartyBase_X* URPC_PartyBase_X::SetPartyId(struct FUniqueLobbyId InLobbyId)
{
	static UFunction* uFnSetPartyId = nullptr;

	if (!uFnSetPartyId)
	{
		uFnSetPartyId = UFunction::FindFunction("Function ProjectX.RPC_PartyBase_X.SetPartyId");
	}

	URPC_PartyBase_X_execSetPartyId_Params SetPartyId_Params;
	memcpy_s(&SetPartyId_Params.InLobbyId, 0x10, &InLobbyId, 0x10);

	this->ProcessEvent(uFnSetPartyId, &SetPartyId_Params, nullptr);

	return SetPartyId_Params.ReturnValue;
};

// Function ProjectX.PartySequence_InviteToParty_X.__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_PartySendInvite_X*  RPC                            (CPF_Parm)

void UPartySequence_InviteToParty_X::__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2(class URPC_PartySendInvite_X* RPC)
{
	static UFunction* uFn__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2 = nullptr;

	if (!uFn__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2)
	{
		uFn__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2 = UFunction::FindFunction("Function ProjectX.PartySequence_InviteToParty_X.__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2");
	}

	UPartySequence_InviteToParty_X_exec__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2_Params __PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2_Params;
	memcpy_s(&__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2, &__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x2_Params, nullptr);
};

// Function ProjectX.PartySequence_InviteToParty_X.__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1
// [0x40040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_Const | FUNC_AllFlags)
// Parameter info:
// class URPC_PartySendInvite_X*  RPC                            (CPF_Parm)

void UPartySequence_InviteToParty_X::__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1(class URPC_PartySendInvite_X* RPC)
{
	static UFunction* uFn__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1 = nullptr;

	if (!uFn__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1)
	{
		uFn__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1 = UFunction::FindFunction("Function ProjectX.PartySequence_InviteToParty_X.__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1");
	}

	UPartySequence_InviteToParty_X_exec__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1_Params __PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1_Params;
	memcpy_s(&__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1_Params.RPC, 0x8, &RPC, 0x8);

	this->ProcessEvent(uFn__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1, &__PartySequence_InviteToParty_X__InviteToPsyNetParty_0x1_Params, nullptr);
};

// Function ProjectX.PartySequence_InviteToParty_X.InviteToPsyNetParty
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UPartySequence_InviteToParty_X::InviteToPsyNetParty(struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnInviteToPsyNetParty = nullptr;

	if (!uFnInviteToPsyNetParty)
	{
		uFnInviteToPsyNetParty = UFunction::FindFunction("Function ProjectX.PartySequence_InviteToParty_X.InviteToPsyNetParty");
	}

	UPartySequence_InviteToParty_X_execInviteToPsyNetParty_Params InviteToPsyNetParty_Params;
	memcpy_s(&InviteToPsyNetParty_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&InviteToPsyNetParty_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnInviteToPsyNetParty, &InviteToPsyNetParty_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &InviteToPsyNetParty_Params.LobbyId, 0x10);
	memcpy_s(&PlayerID, 0x48, &InviteToPsyNetParty_Params.PlayerID, 0x48);

	return InviteToPsyNetParty_Params.ReturnValue;
};

// Function ProjectX.PartySequence_InviteToParty_X.InviteToParty
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)
// struct FUniqueNetId            PlayerID                       (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

bool UPartySequence_InviteToParty_X::InviteToParty(struct FUniqueLobbyId& LobbyId, struct FUniqueNetId& PlayerID)
{
	static UFunction* uFnInviteToParty = nullptr;

	if (!uFnInviteToParty)
	{
		uFnInviteToParty = UFunction::FindFunction("Function ProjectX.PartySequence_InviteToParty_X.InviteToParty");
	}

	UPartySequence_InviteToParty_X_execInviteToParty_Params InviteToParty_Params;
	memcpy_s(&InviteToParty_Params.LobbyId, 0x10, &LobbyId, 0x10);
	memcpy_s(&InviteToParty_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnInviteToParty, &InviteToParty_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &InviteToParty_Params.LobbyId, 0x10);
	memcpy_s(&PlayerID, 0x48, &InviteToParty_Params.PlayerID, 0x48);

	return InviteToParty_Params.ReturnValue;
};

// Function ProjectX.PartySequence_LeaveParty_X.LeaveParty
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// struct FUniqueLobbyId          LobbyId                        (CPF_Const | CPF_Parm | CPF_OutParm)

void UPartySequence_LeaveParty_X::LeaveParty(struct FUniqueLobbyId& LobbyId)
{
	static UFunction* uFnLeaveParty = nullptr;

	if (!uFnLeaveParty)
	{
		uFnLeaveParty = UFunction::FindFunction("Function ProjectX.PartySequence_LeaveParty_X.LeaveParty");
	}

	UPartySequence_LeaveParty_X_execLeaveParty_Params LeaveParty_Params;
	memcpy_s(&LeaveParty_Params.LobbyId, 0x10, &LobbyId, 0x10);

	this->ProcessEvent(uFnLeaveParty, &LeaveParty_Params, nullptr);

	memcpy_s(&LobbyId, 0x10, &LeaveParty_Params.LobbyId, 0x10);
};

// Function ProjectX.RPC_PartyChat_X.SetText
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyChat_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InText                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_PartyChat_X* URPC_PartyChat_X::SetText(class FString InText)
{
	static UFunction* uFnSetText = nullptr;

	if (!uFnSetText)
	{
		uFnSetText = UFunction::FindFunction("Function ProjectX.RPC_PartyChat_X.SetText");
	}

	URPC_PartyChat_X_execSetText_Params SetText_Params;
	memcpy_s(&SetText_Params.InText, 0x10, &InText, 0x10);

	this->ProcessEvent(uFnSetText, &SetText_Params, nullptr);

	return SetText_Params.ReturnValue;
};

// Function ProjectX.RPC_PartyChangeOwner_X.SetNewOwnerId
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyChangeOwner_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InNewOwnerId                   (CPF_Parm | CPF_NeedCtorLink)

class URPC_PartyChangeOwner_X* URPC_PartyChangeOwner_X::SetNewOwnerId(struct FUniqueNetId InNewOwnerId)
{
	static UFunction* uFnSetNewOwnerId = nullptr;

	if (!uFnSetNewOwnerId)
	{
		uFnSetNewOwnerId = UFunction::FindFunction("Function ProjectX.RPC_PartyChangeOwner_X.SetNewOwnerId");
	}

	URPC_PartyChangeOwner_X_execSetNewOwnerId_Params SetNewOwnerId_Params;
	memcpy_s(&SetNewOwnerId_Params.InNewOwnerId, 0x48, &InNewOwnerId, 0x48);

	this->ProcessEvent(uFnSetNewOwnerId, &SetNewOwnerId_Params, nullptr);

	return SetNewOwnerId_Params.ReturnValue;
};

// Function ProjectX.RPC_PartyKickMember_X.SetReason
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyKickMember_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        InReason                       (CPF_Parm)

class URPC_PartyKickMember_X* URPC_PartyKickMember_X::SetReason(uint8_t InReason)
{
	static UFunction* uFnSetReason = nullptr;

	if (!uFnSetReason)
	{
		uFnSetReason = UFunction::FindFunction("Function ProjectX.RPC_PartyKickMember_X.SetReason");
	}

	URPC_PartyKickMember_X_execSetReason_Params SetReason_Params;
	memcpy_s(&SetReason_Params.InReason, 0x1, &InReason, 0x1);

	this->ProcessEvent(uFnSetReason, &SetReason_Params, nullptr);

	return SetReason_Params.ReturnValue;
};

// Function ProjectX.RPC_PartyKickMember_X.AddMember
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyKickMember_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMemberId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_PartyKickMember_X* URPC_PartyKickMember_X::AddMember(class FString InMemberId)
{
	static UFunction* uFnAddMember = nullptr;

	if (!uFnAddMember)
	{
		uFnAddMember = UFunction::FindFunction("Function ProjectX.RPC_PartyKickMember_X.AddMember");
	}

	URPC_PartyKickMember_X_execAddMember_Params AddMember_Params;
	memcpy_s(&AddMember_Params.InMemberId, 0x10, &InMemberId, 0x10);

	this->ProcessEvent(uFnAddMember, &AddMember_Params, nullptr);

	return AddMember_Params.ReturnValue;
};

// Function ProjectX.RPC_PartySendInvite_X.Invite
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartySendInvite_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InInviteeUserId                (CPF_Parm | CPF_NeedCtorLink)

class URPC_PartySendInvite_X* URPC_PartySendInvite_X::Invite(struct FUniqueNetId InInviteeUserId)
{
	static UFunction* uFnInvite = nullptr;

	if (!uFnInvite)
	{
		uFnInvite = UFunction::FindFunction("Function ProjectX.RPC_PartySendInvite_X.Invite");
	}

	URPC_PartySendInvite_X_execInvite_Params Invite_Params;
	memcpy_s(&Invite_Params.InInviteeUserId, 0x48, &InInviteeUserId, 0x48);

	this->ProcessEvent(uFnInvite, &Invite_Params, nullptr);

	return Invite_Params.ReturnValue;
};

// Function ProjectX.RPC_PartyJoin_X.SetJoinKey
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyBase_X*        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InJoinKey                      (CPF_Parm | CPF_NeedCtorLink)

class URPC_PartyBase_X* URPC_PartyJoin_X::SetJoinKey(class FString InJoinKey)
{
	static UFunction* uFnSetJoinKey = nullptr;

	if (!uFnSetJoinKey)
	{
		uFnSetJoinKey = UFunction::FindFunction("Function ProjectX.RPC_PartyJoin_X.SetJoinKey");
	}

	URPC_PartyJoin_X_execSetJoinKey_Params SetJoinKey_Params;
	memcpy_s(&SetJoinKey_Params.InJoinKey, 0x10, &InJoinKey, 0x10);

	this->ProcessEvent(uFnSetJoinKey, &SetJoinKey_Params, nullptr);

	return SetJoinKey_Params.ReturnValue;
};

// Function ProjectX.PerConMetrics_X.ServiceError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Count                          (CPF_Parm)
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// struct FName                   Error                          (CPF_Parm)

void UPerConMetrics_X::ServiceError(struct FUniqueNetId PlayerID, int32_t Count, class FString Service, struct FName Error)
{
	static UFunction* uFnServiceError = nullptr;

	if (!uFnServiceError)
	{
		uFnServiceError = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.ServiceError");
	}

	UPerConMetrics_X_execServiceError_Params ServiceError_Params;
	memcpy_s(&ServiceError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&ServiceError_Params.Count, 0x4, &Count, 0x4);
	memcpy_s(&ServiceError_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&ServiceError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnServiceError, &ServiceError_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.InvalidMessageError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Count                          (CPF_Parm)
// class FString                  Substring                      (CPF_Parm | CPF_NeedCtorLink)

void UPerConMetrics_X::InvalidMessageError(struct FUniqueNetId PlayerID, int32_t Count, class FString Substring)
{
	static UFunction* uFnInvalidMessageError = nullptr;

	if (!uFnInvalidMessageError)
	{
		uFnInvalidMessageError = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.InvalidMessageError");
	}

	UPerConMetrics_X_execInvalidMessageError_Params InvalidMessageError_Params;
	memcpy_s(&InvalidMessageError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&InvalidMessageError_Params.Count, 0x4, &Count, 0x4);
	memcpy_s(&InvalidMessageError_Params.Substring, 0x10, &Substring, 0x10);

	this->ProcessEvent(uFnInvalidMessageError, &InvalidMessageError_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.DisconnectedError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Count                          (CPF_Parm)
// int32_t                        Code                           (CPF_Parm)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)
// float                          ElapsedSeconds                 (CPF_Parm)

void UPerConMetrics_X::DisconnectedError(struct FUniqueNetId PlayerID, int32_t Count, int32_t Code, class FString Reason, float ElapsedSeconds)
{
	static UFunction* uFnDisconnectedError = nullptr;

	if (!uFnDisconnectedError)
	{
		uFnDisconnectedError = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.DisconnectedError");
	}

	UPerConMetrics_X_execDisconnectedError_Params DisconnectedError_Params;
	memcpy_s(&DisconnectedError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&DisconnectedError_Params.Count, 0x4, &Count, 0x4);
	memcpy_s(&DisconnectedError_Params.Code, 0x4, &Code, 0x4);
	memcpy_s(&DisconnectedError_Params.Reason, 0x10, &Reason, 0x10);
	memcpy_s(&DisconnectedError_Params.ElapsedSeconds, 0x4, &ElapsedSeconds, 0x4);

	this->ProcessEvent(uFnDisconnectedError, &DisconnectedError_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.Connected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// float                          ElapsedSeconds                 (CPF_Parm)

void UPerConMetrics_X::Connected(struct FUniqueNetId PlayerID, float ElapsedSeconds)
{
	static UFunction* uFnConnected = nullptr;

	if (!uFnConnected)
	{
		uFnConnected = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.Connected");
	}

	UPerConMetrics_X_execConnected_Params Connected_Params;
	memcpy_s(&Connected_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&Connected_Params.ElapsedSeconds, 0x4, &ElapsedSeconds, 0x4);

	this->ProcessEvent(uFnConnected, &Connected_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.ConnectError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Count                          (CPF_Parm)
// int32_t                        Code                           (CPF_Parm)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)
// float                          ElapsedSeconds                 (CPF_Parm)

void UPerConMetrics_X::ConnectError(struct FUniqueNetId PlayerID, int32_t Count, int32_t Code, class FString Reason, float ElapsedSeconds)
{
	static UFunction* uFnConnectError = nullptr;

	if (!uFnConnectError)
	{
		uFnConnectError = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.ConnectError");
	}

	UPerConMetrics_X_execConnectError_Params ConnectError_Params;
	memcpy_s(&ConnectError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&ConnectError_Params.Count, 0x4, &Count, 0x4);
	memcpy_s(&ConnectError_Params.Code, 0x4, &Code, 0x4);
	memcpy_s(&ConnectError_Params.Reason, 0x10, &Reason, 0x10);
	memcpy_s(&ConnectError_Params.ElapsedSeconds, 0x4, &ElapsedSeconds, 0x4);

	this->ProcessEvent(uFnConnectError, &ConnectError_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.StartConnectError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)
// int32_t                        Count                          (CPF_Parm)

void UPerConMetrics_X::StartConnectError(struct FUniqueNetId PlayerID, int32_t Count)
{
	static UFunction* uFnStartConnectError = nullptr;

	if (!uFnStartConnectError)
	{
		uFnStartConnectError = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.StartConnectError");
	}

	UPerConMetrics_X_execStartConnectError_Params StartConnectError_Params;
	memcpy_s(&StartConnectError_Params.PlayerID, 0x48, &PlayerID, 0x48);
	memcpy_s(&StartConnectError_Params.Count, 0x4, &Count, 0x4);

	this->ProcessEvent(uFnStartConnectError, &StartConnectError_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.StartConnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UPerConMetrics_X::StartConnect(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnStartConnect = nullptr;

	if (!uFnStartConnect)
	{
		uFnStartConnect = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.StartConnect");
	}

	UPerConMetrics_X_execStartConnect_Params StartConnect_Params;
	memcpy_s(&StartConnect_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnStartConnect, &StartConnect_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.Disabled
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UPerConMetrics_X::Disabled(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnDisabled = nullptr;

	if (!uFnDisabled)
	{
		uFnDisabled = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.Disabled");
	}

	UPerConMetrics_X_execDisabled_Params Disabled_Params;
	memcpy_s(&Disabled_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnDisabled, &Disabled_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.Enabled
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            PlayerID                       (CPF_Parm | CPF_NeedCtorLink)

void UPerConMetrics_X::Enabled(struct FUniqueNetId PlayerID)
{
	static UFunction* uFnEnabled = nullptr;

	if (!uFnEnabled)
	{
		uFnEnabled = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.Enabled");
	}

	UPerConMetrics_X_execEnabled_Params Enabled_Params;
	memcpy_s(&Enabled_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnEnabled, &Enabled_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.HandleRPCError
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPCQueue_X*             InQueue                        (CPF_Parm | CPF_EditInline)
// class URPC_X*                  RPC                            (CPF_Parm)
// class UError*                  Error                          (CPF_Parm)

void UPerConMetrics_X::HandleRPCError(class URPCQueue_X* InQueue, class URPC_X* RPC, class UError* Error)
{
	static UFunction* uFnHandleRPCError = nullptr;

	if (!uFnHandleRPCError)
	{
		uFnHandleRPCError = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.HandleRPCError");
	}

	UPerConMetrics_X_execHandleRPCError_Params HandleRPCError_Params;
	memcpy_s(&HandleRPCError_Params.InQueue, 0x8, &InQueue, 0x8);
	memcpy_s(&HandleRPCError_Params.RPC, 0x8, &RPC, 0x8);
	memcpy_s(&HandleRPCError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnHandleRPCError, &HandleRPCError_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.HandleInvalidMessage
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* InMessenger                    (CPF_Parm)
// class FString                  Substring                      (CPF_Parm | CPF_NeedCtorLink)

void UPerConMetrics_X::HandleInvalidMessage(class UPsyNetMessengerWebSocket_X* InMessenger, class FString Substring)
{
	static UFunction* uFnHandleInvalidMessage = nullptr;

	if (!uFnHandleInvalidMessage)
	{
		uFnHandleInvalidMessage = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.HandleInvalidMessage");
	}

	UPerConMetrics_X_execHandleInvalidMessage_Params HandleInvalidMessage_Params;
	memcpy_s(&HandleInvalidMessage_Params.InMessenger, 0x8, &InMessenger, 0x8);
	memcpy_s(&HandleInvalidMessage_Params.Substring, 0x10, &Substring, 0x10);

	this->ProcessEvent(uFnHandleInvalidMessage, &HandleInvalidMessage_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.HandleDisconnected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Socket                         (CPF_Parm)
// int32_t                        Code                           (CPF_Parm)
// class FString                  Reason                         (CPF_Parm | CPF_NeedCtorLink)

void UPerConMetrics_X::HandleDisconnected(class UPsyNetMessengerWebSocket_X* Socket, int32_t Code, class FString Reason)
{
	static UFunction* uFnHandleDisconnected = nullptr;

	if (!uFnHandleDisconnected)
	{
		uFnHandleDisconnected = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.HandleDisconnected");
	}

	UPerConMetrics_X_execHandleDisconnected_Params HandleDisconnected_Params;
	memcpy_s(&HandleDisconnected_Params.Socket, 0x8, &Socket, 0x8);
	memcpy_s(&HandleDisconnected_Params.Code, 0x4, &Code, 0x4);
	memcpy_s(&HandleDisconnected_Params.Reason, 0x10, &Reason, 0x10);

	this->ProcessEvent(uFnHandleDisconnected, &HandleDisconnected_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.HandleConnected
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Socket                         (CPF_Parm)

void UPerConMetrics_X::HandleConnected(class UPsyNetMessengerWebSocket_X* Socket)
{
	static UFunction* uFnHandleConnected = nullptr;

	if (!uFnHandleConnected)
	{
		uFnHandleConnected = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.HandleConnected");
	}

	UPerConMetrics_X_execHandleConnected_Params HandleConnected_Params;
	memcpy_s(&HandleConnected_Params.Socket, 0x8, &Socket, 0x8);

	this->ProcessEvent(uFnHandleConnected, &HandleConnected_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.HandleStartConnectFail
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Socket                         (CPF_Parm)

void UPerConMetrics_X::HandleStartConnectFail(class UPsyNetMessengerWebSocket_X* Socket)
{
	static UFunction* uFnHandleStartConnectFail = nullptr;

	if (!uFnHandleStartConnectFail)
	{
		uFnHandleStartConnectFail = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.HandleStartConnectFail");
	}

	UPerConMetrics_X_execHandleStartConnectFail_Params HandleStartConnectFail_Params;
	memcpy_s(&HandleStartConnectFail_Params.Socket, 0x8, &Socket, 0x8);

	this->ProcessEvent(uFnHandleStartConnectFail, &HandleStartConnectFail_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.HandleStartConnect
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* Socket                         (CPF_Parm)

void UPerConMetrics_X::HandleStartConnect(class UPsyNetMessengerWebSocket_X* Socket)
{
	static UFunction* uFnHandleStartConnect = nullptr;

	if (!uFnHandleStartConnect)
	{
		uFnHandleStartConnect = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.HandleStartConnect");
	}

	UPerConMetrics_X_execHandleStartConnect_Params HandleStartConnect_Params;
	memcpy_s(&HandleStartConnect_Params.Socket, 0x8, &Socket, 0x8);

	this->ProcessEvent(uFnHandleStartConnect, &HandleStartConnect_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.HandleStatusChanged
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UPerCon_X*               PerCon                         (CPF_Parm)

void UPerConMetrics_X::HandleStatusChanged(class UPerCon_X* PerCon)
{
	static UFunction* uFnHandleStatusChanged = nullptr;

	if (!uFnHandleStatusChanged)
	{
		uFnHandleStatusChanged = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.HandleStatusChanged");
	}

	UPerConMetrics_X_execHandleStatusChanged_Params HandleStatusChanged_Params;
	memcpy_s(&HandleStatusChanged_Params.PerCon, 0x8, &PerCon, 0x8);

	this->ProcessEvent(uFnHandleStatusChanged, &HandleStatusChanged_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.GetPlayerID
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FUniqueNetId UPerConMetrics_X::GetPlayerID()
{
	static UFunction* uFnGetPlayerID = nullptr;

	if (!uFnGetPlayerID)
	{
		uFnGetPlayerID = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.GetPlayerID");
	}

	UPerConMetrics_X_execGetPlayerID_Params GetPlayerID_Params;

	this->ProcessEvent(uFnGetPlayerID, &GetPlayerID_Params, nullptr);

	return GetPlayerID_Params.ReturnValue;
};

// Function ProjectX.PerConMetrics_X.SetMessenger
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPsyNetMessengerWebSocket_X* PerConMessenger                (CPF_Parm)

void UPerConMetrics_X::SetMessenger(class UPsyNetMessengerWebSocket_X* PerConMessenger)
{
	static UFunction* uFnSetMessenger = nullptr;

	if (!uFnSetMessenger)
	{
		uFnSetMessenger = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.SetMessenger");
	}

	UPerConMetrics_X_execSetMessenger_Params SetMessenger_Params;
	memcpy_s(&SetMessenger_Params.PerConMessenger, 0x8, &PerConMessenger, 0x8);

	this->ProcessEvent(uFnSetMessenger, &SetMessenger_Params, nullptr);
};

// Function ProjectX.PerConMetrics_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPerConMetrics_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.PerConMetrics_X.Construct");
	}

	UPerConMetrics_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.PlatformSystem_X.AddPlatforms
// [0x00442003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// TArray<class UClass*>          Platforms                      (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UPlatformSystem_X::AddPlatforms(TArray<class UClass*>& Platforms)
{
	static UFunction* uFnAddPlatforms = nullptr;

	if (!uFnAddPlatforms)
	{
		uFnAddPlatforms = UFunction::FindFunction("Function ProjectX.PlatformSystem_X.AddPlatforms");
	}

	UPlatformSystem_X_execAddPlatforms_Params AddPlatforms_Params;
	memcpy_s(&AddPlatforms_Params.Platforms, 0x10, &Platforms, 0x10);

	UPlatformSystem_X::StaticClass()->ProcessEvent(uFnAddPlatforms, &AddPlatforms_Params, nullptr);

	memcpy_s(&Platforms, 0x10, &AddPlatforms_Params.Platforms, 0x10);
};

// Function ProjectX.PlatformSystem_X.AddServer
// [0x00042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UClass*                  PlatformClass                  (CPF_Parm)

void UPlatformSystem_X::AddServer(class UClass* PlatformClass)
{
	static UFunction* uFnAddServer = nullptr;

	if (!uFnAddServer)
	{
		uFnAddServer = UFunction::FindFunction("Function ProjectX.PlatformSystem_X.AddServer");
	}

	UPlatformSystem_X_execAddServer_Params AddServer_Params;
	memcpy_s(&AddServer_Params.PlatformClass, 0x8, &PlatformClass, 0x8);

	UPlatformSystem_X::StaticClass()->ProcessEvent(uFnAddServer, &AddServer_Params, nullptr);
};

// Function ProjectX.PlatformSystem_X.AddConsole
// [0x00042003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UClass*                  PlatformClass                  (CPF_Parm)

void UPlatformSystem_X::AddConsole(class UClass* PlatformClass)
{
	static UFunction* uFnAddConsole = nullptr;

	if (!uFnAddConsole)
	{
		uFnAddConsole = UFunction::FindFunction("Function ProjectX.PlatformSystem_X.AddConsole");
	}

	UPlatformSystem_X_execAddConsole_Params AddConsole_Params;
	memcpy_s(&AddConsole_Params.PlatformClass, 0x8, &PlatformClass, 0x8);

	UPlatformSystem_X::StaticClass()->ProcessEvent(uFnAddConsole, &AddConsole_Params, nullptr);
};

// Function ProjectX.PlatformSystem_X.Init
// [0x100022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UGameEngine*             Engine                         (CPF_Parm)

void UPlatformSystem_X::Init(class UGameEngine* Engine)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PlatformSystem_X.Init");
	}

	UPlatformSystem_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.Engine, 0x8, &Engine, 0x8);

	UPlatformSystem_X::StaticClass()->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.PlayerTitleConfig_X.InitTitleColors
// [0x00840003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPlayerTitleData        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FPlayerTitleData        Data                           (CPF_Parm | CPF_NeedCtorLink)

struct FPlayerTitleData UPlayerTitleConfig_X::InitTitleColors(struct FPlayerTitleData Data)
{
	static UFunction* uFnInitTitleColors = nullptr;

	if (!uFnInitTitleColors)
	{
		uFnInitTitleColors = UFunction::FindFunction("Function ProjectX.PlayerTitleConfig_X.InitTitleColors");
	}

	UPlayerTitleConfig_X_execInitTitleColors_Params InitTitleColors_Params;
	memcpy_s(&InitTitleColors_Params.Data, 0x28, &Data, 0x28);

	this->ProcessEvent(uFnInitTitleColors, &InitTitleColors_Params, nullptr);

	return InitTitleColors_Params.ReturnValue;
};

// Function ProjectX.PlayerTitleConfig_X.GetTitleData
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPlayerTitleData        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FName                   TitleId                        (CPF_Parm)

struct FPlayerTitleData UPlayerTitleConfig_X::GetTitleData(struct FName TitleId)
{
	static UFunction* uFnGetTitleData = nullptr;

	if (!uFnGetTitleData)
	{
		uFnGetTitleData = UFunction::FindFunction("Function ProjectX.PlayerTitleConfig_X.GetTitleData");
	}

	UPlayerTitleConfig_X_execGetTitleData_Params GetTitleData_Params;
	memcpy_s(&GetTitleData_Params.TitleId, 0x8, &TitleId, 0x8);

	this->ProcessEvent(uFnGetTitleData, &GetTitleData_Params, nullptr);

	return GetTitleData_Params.ReturnValue;
};

// Function ProjectX.PlayerTitleConfig_X.GetCategory
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FPlayerTitleCategory    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)
// struct FName                   CategoryID                     (CPF_Parm)

struct FPlayerTitleCategory UPlayerTitleConfig_X::GetCategory(struct FName CategoryID)
{
	static UFunction* uFnGetCategory = nullptr;

	if (!uFnGetCategory)
	{
		uFnGetCategory = UFunction::FindFunction("Function ProjectX.PlayerTitleConfig_X.GetCategory");
	}

	UPlayerTitleConfig_X_execGetCategory_Params GetCategory_Params;
	memcpy_s(&GetCategory_Params.CategoryID, 0x8, &CategoryID, 0x8);

	this->ProcessEvent(uFnGetCategory, &GetCategory_Params, nullptr);

	return GetCategory_Params.ReturnValue;
};

// Function ProjectX.PlayerTitleConfig_X.Apply
// [0x400820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPlayerTitleConfig_X::Apply()
{
	static UFunction* uFnApply = nullptr;

	if (!uFnApply)
	{
		uFnApply = UFunction::FindFunction("Function ProjectX.PlayerTitleConfig_X.Apply");
	}

	UPlayerTitleConfig_X_execApply_Params Apply_Params;

	this->ProcessEvent(uFnApply, &Apply_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.GetNextPostProcessOverride
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

int32_t UPostProcessManager_X::GetNextPostProcessOverride()
{
	static UFunction* uFnGetNextPostProcessOverride = nullptr;

	if (!uFnGetNextPostProcessOverride)
	{
		uFnGetNextPostProcessOverride = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.GetNextPostProcessOverride");
	}

	UPostProcessManager_X_execGetNextPostProcessOverride_Params GetNextPostProcessOverride_Params;

	this->ProcessEvent(uFnGetNextPostProcessOverride, &GetNextPostProcessOverride_Params, nullptr);

	return GetNextPostProcessOverride_Params.ReturnValue;
};

// Function ProjectX.PostProcessManager_X.TogglePostProcessSettings
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   Id                             (CPF_Parm)
// unsigned long                  bEnabled                       (CPF_Parm)

void UPostProcessManager_X::TogglePostProcessSettings(struct FName Id, unsigned long bEnabled)
{
	static UFunction* uFnTogglePostProcessSettings = nullptr;

	if (!uFnTogglePostProcessSettings)
	{
		uFnTogglePostProcessSettings = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.TogglePostProcessSettings");
	}

	UPostProcessManager_X_execTogglePostProcessSettings_Params TogglePostProcessSettings_Params;
	memcpy_s(&TogglePostProcessSettings_Params.Id, 0x8, &Id, 0x8);
	TogglePostProcessSettings_Params.bEnabled = bEnabled;

	this->ProcessEvent(uFnTogglePostProcessSettings, &TogglePostProcessSettings_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.SetMaterialEffectValue
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   EffectName                     (CPF_Parm)
// float                          NewValue                       (CPF_Parm)

void UPostProcessManager_X::SetMaterialEffectValue(struct FName EffectName, float NewValue)
{
	static UFunction* uFnSetMaterialEffectValue = nullptr;

	if (!uFnSetMaterialEffectValue)
	{
		uFnSetMaterialEffectValue = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.SetMaterialEffectValue");
	}

	UPostProcessManager_X_execSetMaterialEffectValue_Params SetMaterialEffectValue_Params;
	memcpy_s(&SetMaterialEffectValue_Params.EffectName, 0x8, &EffectName, 0x8);
	memcpy_s(&SetMaterialEffectValue_Params.NewValue, 0x4, &NewValue, 0x4);

	this->ProcessEvent(uFnSetMaterialEffectValue, &SetMaterialEffectValue_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.ResetEffectsToDefaults
// [0x00024103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bRebuildPostProcessChains      (CPF_OptionalParm | CPF_Parm)

void UPostProcessManager_X::ResetEffectsToDefaults(unsigned long bRebuildPostProcessChains)
{
	static UFunction* uFnResetEffectsToDefaults = nullptr;

	if (!uFnResetEffectsToDefaults)
	{
		uFnResetEffectsToDefaults = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.ResetEffectsToDefaults");
	}

	UPostProcessManager_X_execResetEffectsToDefaults_Params ResetEffectsToDefaults_Params;
	ResetEffectsToDefaults_Params.bRebuildPostProcessChains = bRebuildPostProcessChains;

	this->ProcessEvent(uFnResetEffectsToDefaults, &ResetEffectsToDefaults_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.ToggleChainNamed
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UPostProcessChain*       Chain                          (CPF_Parm)
// struct FName                   ChainName                      (CPF_Parm)
// unsigned long                  bEnabled                       (CPF_Parm)

void UPostProcessManager_X::ToggleChainNamed(class UPostProcessChain* Chain, struct FName ChainName, unsigned long bEnabled)
{
	static UFunction* uFnToggleChainNamed = nullptr;

	if (!uFnToggleChainNamed)
	{
		uFnToggleChainNamed = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.ToggleChainNamed");
	}

	UPostProcessManager_X_execToggleChainNamed_Params ToggleChainNamed_Params;
	memcpy_s(&ToggleChainNamed_Params.Chain, 0x8, &Chain, 0x8);
	memcpy_s(&ToggleChainNamed_Params.ChainName, 0x8, &ChainName, 0x8);
	ToggleChainNamed_Params.bEnabled = bEnabled;

	this->ProcessEvent(uFnToggleChainNamed, &ToggleChainNamed_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.StopChainNamed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   ChainName                      (CPF_Parm)

void UPostProcessManager_X::StopChainNamed(struct FName ChainName)
{
	static UFunction* uFnStopChainNamed = nullptr;

	if (!uFnStopChainNamed)
	{
		uFnStopChainNamed = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.StopChainNamed");
	}

	UPostProcessManager_X_execStopChainNamed_Params StopChainNamed_Params;
	memcpy_s(&StopChainNamed_Params.ChainName, 0x8, &ChainName, 0x8);

	this->ProcessEvent(uFnStopChainNamed, &StopChainNamed_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.StartChainNamed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPostProcessChain*       Chain                          (CPF_Parm)
// struct FName                   ChainName                      (CPF_Parm)

void UPostProcessManager_X::StartChainNamed(class UPostProcessChain* Chain, struct FName ChainName)
{
	static UFunction* uFnStartChainNamed = nullptr;

	if (!uFnStartChainNamed)
	{
		uFnStartChainNamed = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.StartChainNamed");
	}

	UPostProcessManager_X_execStartChainNamed_Params StartChainNamed_Params;
	memcpy_s(&StartChainNamed_Params.Chain, 0x8, &Chain, 0x8);
	memcpy_s(&StartChainNamed_Params.ChainName, 0x8, &ChainName, 0x8);

	this->ProcessEvent(uFnStartChainNamed, &StartChainNamed_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.RemovePostProcessChain
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        OldChain                       (CPF_Parm)

bool UPostProcessManager_X::RemovePostProcessChain(int32_t OldChain)
{
	static UFunction* uFnRemovePostProcessChain = nullptr;

	if (!uFnRemovePostProcessChain)
	{
		uFnRemovePostProcessChain = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.RemovePostProcessChain");
	}

	UPostProcessManager_X_execRemovePostProcessChain_Params RemovePostProcessChain_Params;
	memcpy_s(&RemovePostProcessChain_Params.OldChain, 0x4, &OldChain, 0x4);

	this->ProcessEvent(uFnRemovePostProcessChain, &RemovePostProcessChain_Params, nullptr);

	return RemovePostProcessChain_Params.ReturnValue;
};

// Function ProjectX.PostProcessManager_X.AddPostProcessChain
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// int32_t                        ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class UPostProcessChain*       NewChain                       (CPF_Parm)
// struct FName                   ChainName                      (CPF_Parm)

int32_t UPostProcessManager_X::AddPostProcessChain(class UPostProcessChain* NewChain, struct FName ChainName)
{
	static UFunction* uFnAddPostProcessChain = nullptr;

	if (!uFnAddPostProcessChain)
	{
		uFnAddPostProcessChain = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.AddPostProcessChain");
	}

	UPostProcessManager_X_execAddPostProcessChain_Params AddPostProcessChain_Params;
	memcpy_s(&AddPostProcessChain_Params.NewChain, 0x8, &NewChain, 0x8);
	memcpy_s(&AddPostProcessChain_Params.ChainName, 0x8, &ChainName, 0x8);

	this->ProcessEvent(uFnAddPostProcessChain, &AddPostProcessChain_Params, nullptr);

	return AddPostProcessChain_Params.ReturnValue;
};

// Function ProjectX.PostProcessManager_X.GetEffect
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UMaterialEffect_X*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FName                   EffectName                     (CPF_Parm)

class UMaterialEffect_X* UPostProcessManager_X::GetEffect(struct FName EffectName)
{
	static UFunction* uFnGetEffect = nullptr;

	if (!uFnGetEffect)
	{
		uFnGetEffect = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.GetEffect");
	}

	UPostProcessManager_X_execGetEffect_Params GetEffect_Params;
	memcpy_s(&GetEffect_Params.EffectName, 0x8, &EffectName, 0x8);

	this->ProcessEvent(uFnGetEffect, &GetEffect_Params, nullptr);

	return GetEffect_Params.ReturnValue;
};

// Function ProjectX.PostProcessManager_X.TickPostProcess
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// float                          dt                             (CPF_Parm)

void UPostProcessManager_X::TickPostProcess(float dt)
{
	static UFunction* uFnTickPostProcess = nullptr;

	if (!uFnTickPostProcess)
	{
		uFnTickPostProcess = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.TickPostProcess");
	}

	UPostProcessManager_X_execTickPostProcess_Params TickPostProcess_Params;
	memcpy_s(&TickPostProcess_Params.dt, 0x4, &dt, 0x4);

	this->ProcessEvent(uFnTickPostProcess, &TickPostProcess_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.ToggleEffect
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class UMaterialEffect_X*       Effect                         (CPF_Parm)
// unsigned long                  bEnabled                       (CPF_Parm)

void UPostProcessManager_X::ToggleEffect(class UMaterialEffect_X* Effect, unsigned long bEnabled)
{
	static UFunction* uFnToggleEffect = nullptr;

	if (!uFnToggleEffect)
	{
		uFnToggleEffect = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.ToggleEffect");
	}

	UPostProcessManager_X_execToggleEffect_Params ToggleEffect_Params;
	memcpy_s(&ToggleEffect_Params.Effect, 0x8, &Effect, 0x8);
	ToggleEffect_Params.bEnabled = bEnabled;

	this->ProcessEvent(uFnToggleEffect, &ToggleEffect_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.StopEffectNamed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   EffectName                     (CPF_Parm)

void UPostProcessManager_X::StopEffectNamed(struct FName EffectName)
{
	static UFunction* uFnStopEffectNamed = nullptr;

	if (!uFnStopEffectNamed)
	{
		uFnStopEffectNamed = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.StopEffectNamed");
	}

	UPostProcessManager_X_execStopEffectNamed_Params StopEffectNamed_Params;
	memcpy_s(&StopEffectNamed_Params.EffectName, 0x8, &EffectName, 0x8);

	this->ProcessEvent(uFnStopEffectNamed, &StopEffectNamed_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.StartEffectNamed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   EffectName                     (CPF_Parm)

void UPostProcessManager_X::StartEffectNamed(struct FName EffectName)
{
	static UFunction* uFnStartEffectNamed = nullptr;

	if (!uFnStartEffectNamed)
	{
		uFnStartEffectNamed = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.StartEffectNamed");
	}

	UPostProcessManager_X_execStartEffectNamed_Params StartEffectNamed_Params;
	memcpy_s(&StartEffectNamed_Params.EffectName, 0x8, &EffectName, 0x8);

	this->ProcessEvent(uFnStartEffectNamed, &StartEffectNamed_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.ToggleEffectNamed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FName                   EffectName                     (CPF_Parm)
// unsigned long                  bEnabled                       (CPF_Parm)

void UPostProcessManager_X::ToggleEffectNamed(struct FName EffectName, unsigned long bEnabled)
{
	static UFunction* uFnToggleEffectNamed = nullptr;

	if (!uFnToggleEffectNamed)
	{
		uFnToggleEffectNamed = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.ToggleEffectNamed");
	}

	UPostProcessManager_X_execToggleEffectNamed_Params ToggleEffectNamed_Params;
	memcpy_s(&ToggleEffectNamed_Params.EffectName, 0x8, &EffectName, 0x8);
	ToggleEffectNamed_Params.bEnabled = bEnabled;

	this->ProcessEvent(uFnToggleEffectNamed, &ToggleEffectNamed_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.PrintDebugInfo
// [0x400020102] (FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UDebugDrawer*            Drawer                         (CPF_Parm)

void UPostProcessManager_X::PrintDebugInfo(class UDebugDrawer* Drawer)
{
	static UFunction* uFnPrintDebugInfo = nullptr;

	if (!uFnPrintDebugInfo)
	{
		uFnPrintDebugInfo = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.PrintDebugInfo");
	}

	UPostProcessManager_X_execPrintDebugInfo_Params PrintDebugInfo_Params;
	memcpy_s(&PrintDebugInfo_Params.Drawer, 0x8, &Drawer, 0x8);

	this->ProcessEvent(uFnPrintDebugInfo, &PrintDebugInfo_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.GetUberPostProcessEffect
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UUberPostProcessEffect*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UUberPostProcessEffect* UPostProcessManager_X::GetUberPostProcessEffect()
{
	static UFunction* uFnGetUberPostProcessEffect = nullptr;

	if (!uFnGetUberPostProcessEffect)
	{
		uFnGetUberPostProcessEffect = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.GetUberPostProcessEffect");
	}

	UPostProcessManager_X_execGetUberPostProcessEffect_Params GetUberPostProcessEffect_Params;

	this->ProcessEvent(uFnGetUberPostProcessEffect, &GetUberPostProcessEffect_Params, nullptr);

	return GetUberPostProcessEffect_Params.ReturnValue;
};

// Function ProjectX.PostProcessManager_X.GetPlayerChain
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UPostProcessChain*       ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

class UPostProcessChain* UPostProcessManager_X::GetPlayerChain()
{
	static UFunction* uFnGetPlayerChain = nullptr;

	if (!uFnGetPlayerChain)
	{
		uFnGetPlayerChain = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.GetPlayerChain");
	}

	UPostProcessManager_X_execGetPlayerChain_Params GetPlayerChain_Params;

	this->ProcessEvent(uFnGetPlayerChain, &GetPlayerChain_Params, nullptr);

	return GetPlayerChain_Params.ReturnValue;
};

// Function ProjectX.PostProcessManager_X.Exit
// [0x00020103] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetRequest | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPostProcessManager_X::Exit()
{
	static UFunction* uFnExit = nullptr;

	if (!uFnExit)
	{
		uFnExit = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.Exit");
	}

	UPostProcessManager_X_execExit_Params Exit_Params;

	this->ProcessEvent(uFnExit, &Exit_Params, nullptr);
};

// Function ProjectX.PostProcessManager_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class APlayerController_X*     NewOwner                       (CPF_Parm)

void UPostProcessManager_X::Init(class APlayerController_X* NewOwner)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.PostProcessManager_X.Init");
	}

	UPostProcessManager_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.NewOwner, 0x8, &NewOwner, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.RPC_ReportCheater_X.SetReason
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportCheater_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InReason                       (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

class URPC_ReportCheater_X* URPC_ReportCheater_X::SetReason(class FString InReason)
{
	static UFunction* uFnSetReason = nullptr;

	if (!uFnSetReason)
	{
		uFnSetReason = UFunction::FindFunction("Function ProjectX.RPC_ReportCheater_X.SetReason");
	}

	URPC_ReportCheater_X_execSetReason_Params SetReason_Params;
	memcpy_s(&SetReason_Params.InReason, 0x10, &InReason, 0x10);

	this->ProcessEvent(uFnSetReason, &SetReason_Params, nullptr);

	return SetReason_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportCheater_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportCheater_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_ReportCheater_X* URPC_ReportCheater_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_ReportCheater_X.SetPlayerID");
	}

	URPC_ReportCheater_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.PsyNetBreadcrumbObserver_X.Breadcrumb
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  CrumbName                      (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Value                          (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetBreadcrumbObserver_X::Breadcrumb(class FString CrumbName, class FString Value)
{
	static UFunction* uFnBreadcrumb = nullptr;

	if (!uFnBreadcrumb)
	{
		uFnBreadcrumb = UFunction::FindFunction("Function ProjectX.PsyNetBreadcrumbObserver_X.Breadcrumb");
	}

	UPsyNetBreadcrumbObserver_X_execBreadcrumb_Params Breadcrumb_Params;
	memcpy_s(&Breadcrumb_Params.CrumbName, 0x10, &CrumbName, 0x10);
	memcpy_s(&Breadcrumb_Params.Value, 0x10, &Value, 0x10);

	this->ProcessEvent(uFnBreadcrumb, &Breadcrumb_Params, nullptr);
};

// Function ProjectX.PsyNetBreadcrumbObserver_X.OnBroadcasterAdded
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class UBreadcrumbBroadcaster_X* Broadcaster                    (CPF_Parm)

void UPsyNetBreadcrumbObserver_X::OnBroadcasterAdded(class UBreadcrumbBroadcaster_X* Broadcaster)
{
	static UFunction* uFnOnBroadcasterAdded = nullptr;

	if (!uFnOnBroadcasterAdded)
	{
		uFnOnBroadcasterAdded = UFunction::FindFunction("Function ProjectX.PsyNetBreadcrumbObserver_X.OnBroadcasterAdded");
	}

	UPsyNetBreadcrumbObserver_X_execOnBroadcasterAdded_Params OnBroadcasterAdded_Params;
	memcpy_s(&OnBroadcasterAdded_Params.Broadcaster, 0x8, &Broadcaster, 0x8);

	this->ProcessEvent(uFnOnBroadcasterAdded, &OnBroadcasterAdded_Params, nullptr);
};

// Function ProjectX.PsyNetBreadcrumbObserver_X.InitGlobalInstance
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UPsyNetBreadcrumbObserver_X::InitGlobalInstance()
{
	static UFunction* uFnInitGlobalInstance = nullptr;

	if (!uFnInitGlobalInstance)
	{
		uFnInitGlobalInstance = UFunction::FindFunction("Function ProjectX.PsyNetBreadcrumbObserver_X.InitGlobalInstance");
	}

	UPsyNetBreadcrumbObserver_X_execInitGlobalInstance_Params InitGlobalInstance_Params;

	UPsyNetBreadcrumbObserver_X::StaticClass()->ProcessEvent(uFnInitGlobalInstance, &InitGlobalInstance_Params, nullptr);
};

// Function ProjectX.PsyNetBreadcrumbObserver_X.SubscribeToPrimaryConnection
// [0x100022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class UPsyNet_X*               PsyNet                         (CPF_Parm)

void UPsyNetBreadcrumbObserver_X::SubscribeToPrimaryConnection(class UPsyNet_X* PsyNet)
{
	static UFunction* uFnSubscribeToPrimaryConnection = nullptr;

	if (!uFnSubscribeToPrimaryConnection)
	{
		uFnSubscribeToPrimaryConnection = UFunction::FindFunction("Function ProjectX.PsyNetBreadcrumbObserver_X.SubscribeToPrimaryConnection");
	}

	UPsyNetBreadcrumbObserver_X_execSubscribeToPrimaryConnection_Params SubscribeToPrimaryConnection_Params;
	memcpy_s(&SubscribeToPrimaryConnection_Params.PsyNet, 0x8, &PsyNet, 0x8);

	UPsyNetBreadcrumbObserver_X::StaticClass()->ProcessEvent(uFnSubscribeToPrimaryConnection, &SubscribeToPrimaryConnection_Params, nullptr);
};

// Function ProjectX.PsyNetMetrics_X.ServiceErrors
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// TArray<struct FServiceErrorData> Errors                         (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetMetrics_X::ServiceErrors(TArray<struct FServiceErrorData> Errors)
{
	static UFunction* uFnServiceErrors = nullptr;

	if (!uFnServiceErrors)
	{
		uFnServiceErrors = UFunction::FindFunction("Function ProjectX.PsyNetMetrics_X.ServiceErrors");
	}

	UPsyNetMetrics_X_execServiceErrors_Params ServiceErrors_Params;
	memcpy_s(&ServiceErrors_Params.Errors, 0x10, &Errors, 0x10);

	this->ProcessEvent(uFnServiceErrors, &ServiceErrors_Params, nullptr);
};

// Function ProjectX.PsyNetMetrics_X.ServiceCalls
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// TArray<struct FServiceMetricsData> Services                       (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetMetrics_X::ServiceCalls(TArray<struct FServiceMetricsData> Services)
{
	static UFunction* uFnServiceCalls = nullptr;

	if (!uFnServiceCalls)
	{
		uFnServiceCalls = UFunction::FindFunction("Function ProjectX.PsyNetMetrics_X.ServiceCalls");
	}

	UPsyNetMetrics_X_execServiceCalls_Params ServiceCalls_Params;
	memcpy_s(&ServiceCalls_Params.Services, 0x10, &Services, 0x10);

	this->ProcessEvent(uFnServiceCalls, &ServiceCalls_Params, nullptr);
};

// Function ProjectX.PsyNetMetrics_X.HandleMapChange
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class FString                  M                              (CPF_Parm | CPF_NeedCtorLink)

void UPsyNetMetrics_X::HandleMapChange(class FString M)
{
	static UFunction* uFnHandleMapChange = nullptr;

	if (!uFnHandleMapChange)
	{
		uFnHandleMapChange = UFunction::FindFunction("Function ProjectX.PsyNetMetrics_X.HandleMapChange");
	}

	UPsyNetMetrics_X_execHandleMapChange_Params HandleMapChange_Params;
	memcpy_s(&HandleMapChange_Params.M, 0x10, &M, 0x10);

	this->ProcessEvent(uFnHandleMapChange, &HandleMapChange_Params, nullptr);
};

// Function ProjectX.PsyNetMetrics_X.RecordServiceError
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// class UError*                  Error                          (CPF_Parm)

void UPsyNetMetrics_X::RecordServiceError(class FString Service, class UError* Error)
{
	static UFunction* uFnRecordServiceError = nullptr;

	if (!uFnRecordServiceError)
	{
		uFnRecordServiceError = UFunction::FindFunction("Function ProjectX.PsyNetMetrics_X.RecordServiceError");
	}

	UPsyNetMetrics_X_execRecordServiceError_Params RecordServiceError_Params;
	memcpy_s(&RecordServiceError_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&RecordServiceError_Params.Error, 0x8, &Error, 0x8);

	this->ProcessEvent(uFnRecordServiceError, &RecordServiceError_Params, nullptr);
};

// Function ProjectX.PsyNetMetrics_X.RecordServiceCall
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  Service                        (CPF_Parm | CPF_NeedCtorLink)
// float                          Latency                        (CPF_Parm)

void UPsyNetMetrics_X::RecordServiceCall(class FString Service, float Latency)
{
	static UFunction* uFnRecordServiceCall = nullptr;

	if (!uFnRecordServiceCall)
	{
		uFnRecordServiceCall = UFunction::FindFunction("Function ProjectX.PsyNetMetrics_X.RecordServiceCall");
	}

	UPsyNetMetrics_X_execRecordServiceCall_Params RecordServiceCall_Params;
	memcpy_s(&RecordServiceCall_Params.Service, 0x10, &Service, 0x10);
	memcpy_s(&RecordServiceCall_Params.Latency, 0x4, &Latency, 0x4);

	this->ProcessEvent(uFnRecordServiceCall, &RecordServiceCall_Params, nullptr);
};

// Function ProjectX.PsyNetService_CreateHonorDuel_X.GetReservation
// [0x400820002] (FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// struct FPsyNetBeaconReservation ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FPsyNetBeaconReservation UPsyNetService_CreateHonorDuel_X::GetReservation()
{
	static UFunction* uFnGetReservation = nullptr;

	if (!uFnGetReservation)
	{
		uFnGetReservation = UFunction::FindFunction("Function ProjectX.PsyNetService_CreateHonorDuel_X.GetReservation");
	}

	UPsyNetService_CreateHonorDuel_X_execGetReservation_Params GetReservation_Params;

	this->ProcessEvent(uFnGetReservation, &GetReservation_Params, nullptr);

	return GetReservation_Params.ReturnValue;
};

// Function ProjectX.PsyNetService_Echo_X.Execute
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UPsyNetService_Echo_X::Execute()
{
	static UFunction* uFnExecute = nullptr;

	if (!uFnExecute)
	{
		uFnExecute = UFunction::FindFunction("Function ProjectX.PsyNetService_Echo_X.Execute");
	}

	UPsyNetService_Echo_X_execExecute_Params Execute_Params;

	this->ProcessEvent(uFnExecute, &Execute_Params, nullptr);
};

// Function ProjectX.PsyNetService_PersonaInfo_X.GetData
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FOnlineFriend           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FOnlineFriend UPsyNetService_PersonaInfo_X::GetData()
{
	static UFunction* uFnGetData = nullptr;

	if (!uFnGetData)
	{
		uFnGetData = UFunction::FindFunction("Function ProjectX.PsyNetService_PersonaInfo_X.GetData");
	}

	UPsyNetService_PersonaInfo_X_execGetData_Params GetData_Params;

	this->ProcessEvent(uFnGetData, &GetData_Params, nullptr);

	return GetData_Params.ReturnValue;
};

// Function ProjectX.PsyNetService_FriendStatusUpdate_X.GetData
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FOnlineStatus           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FOnlineStatus UPsyNetService_FriendStatusUpdate_X::GetData()
{
	static UFunction* uFnGetData = nullptr;

	if (!uFnGetData)
	{
		uFnGetData = UFunction::FindFunction("Function ProjectX.PsyNetService_FriendStatusUpdate_X.GetData");
	}

	UPsyNetService_FriendStatusUpdate_X_execGetData_Params GetData_Params;

	this->ProcessEvent(uFnGetData, &GetData_Params, nullptr);

	return GetData_Params.ReturnValue;
};

// Function ProjectX.PsyNetStaticDataMetrics_X.SyncDataTime
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// float                          Seconds                        (CPF_Parm)

void UPsyNetStaticDataMetrics_X::SyncDataTime(float Seconds)
{
	static UFunction* uFnSyncDataTime = nullptr;

	if (!uFnSyncDataTime)
	{
		uFnSyncDataTime = UFunction::FindFunction("Function ProjectX.PsyNetStaticDataMetrics_X.SyncDataTime");
	}

	UPsyNetStaticDataMetrics_X_execSyncDataTime_Params SyncDataTime_Params;
	memcpy_s(&SyncDataTime_Params.Seconds, 0x4, &Seconds, 0x4);

	this->ProcessEvent(uFnSyncDataTime, &SyncDataTime_Params, nullptr);
};

// Function ProjectX.RPC_FilterContent_X.AddComment
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_FilterContent_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  Comment                        (CPF_Parm | CPF_NeedCtorLink)
// struct FScriptDelegate         Callback                       (CPF_Parm | CPF_NeedCtorLink)
// struct FUniqueNetId            PlayerID                       (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class URPC_FilterContent_X* URPC_FilterContent_X::AddComment(class FString Comment, struct FScriptDelegate Callback, struct FUniqueNetId PlayerID)
{
	static UFunction* uFnAddComment = nullptr;

	if (!uFnAddComment)
	{
		uFnAddComment = UFunction::FindFunction("Function ProjectX.RPC_FilterContent_X.AddComment");
	}

	URPC_FilterContent_X_execAddComment_Params AddComment_Params;
	memcpy_s(&AddComment_Params.Comment, 0x10, &Comment, 0x10);
	memcpy_s(&AddComment_Params.Callback, 0x18, &Callback, 0x18);
	memcpy_s(&AddComment_Params.PlayerID, 0x48, &PlayerID, 0x48);

	this->ProcessEvent(uFnAddComment, &AddComment_Params, nullptr);

	return AddComment_Params.ReturnValue;
};

// Function ProjectX.RPC_CanShowAvatar_X.SetPlayerIDs
// [0x00420003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class URPC_CanShowAvatar_X*    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FUniqueNetId>    InPlayerIDs                    (CPF_Const | CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

class URPC_CanShowAvatar_X* URPC_CanShowAvatar_X::SetPlayerIDs(TArray<struct FUniqueNetId>& InPlayerIDs)
{
	static UFunction* uFnSetPlayerIDs = nullptr;

	if (!uFnSetPlayerIDs)
	{
		uFnSetPlayerIDs = UFunction::FindFunction("Function ProjectX.RPC_CanShowAvatar_X.SetPlayerIDs");
	}

	URPC_CanShowAvatar_X_execSetPlayerIDs_Params SetPlayerIDs_Params;
	memcpy_s(&SetPlayerIDs_Params.InPlayerIDs, 0x10, &InPlayerIDs, 0x10);

	this->ProcessEvent(uFnSetPlayerIDs, &SetPlayerIDs_Params, nullptr);

	memcpy_s(&InPlayerIDs, 0x10, &SetPlayerIDs_Params.InPlayerIDs, 0x10);

	return SetPlayerIDs_Params.ReturnValue;
};

// Function ProjectX.RPC_AddPlayerToRole_X.SetRole
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_AddPlayerToRole_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Role                           (CPF_Parm)

class URPC_AddPlayerToRole_X* URPC_AddPlayerToRole_X::SetRole(uint8_t Role)
{
	static UFunction* uFnSetRole = nullptr;

	if (!uFnSetRole)
	{
		uFnSetRole = UFunction::FindFunction("Function ProjectX.RPC_AddPlayerToRole_X.SetRole");
	}

	URPC_AddPlayerToRole_X_execSetRole_Params SetRole_Params;
	memcpy_s(&SetRole_Params.Role, 0x1, &Role, 0x1);

	this->ProcessEvent(uFnSetRole, &SetRole_Params, nullptr);

	return SetRole_Params.ReturnValue;
};

// Function ProjectX.RPC_GetAntiAddictionData_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetAntiAddictionData_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetAntiAddictionData_X* URPC_GetAntiAddictionData_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_GetAntiAddictionData_X.SetPlayerID");
	}

	URPC_GetAntiAddictionData_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_GetPlayerTitles_X.SetPlayerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_GetPlayerTitles_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_GetPlayerTitles_X* URPC_GetPlayerTitles_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_GetPlayerTitles_X.SetPlayerID");
	}

	URPC_GetPlayerTitles_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_PartyChatMessage_X.SetMessage
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_PartyChatMessage_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMessage                      (CPF_Parm | CPF_NeedCtorLink)

class URPC_PartyChatMessage_X* URPC_PartyChatMessage_X::SetMessage(class FString InMessage)
{
	static UFunction* uFnSetMessage = nullptr;

	if (!uFnSetMessage)
	{
		uFnSetMessage = UFunction::FindFunction("Function ProjectX.RPC_PartyChatMessage_X.SetMessage");
	}

	URPC_PartyChatMessage_X_execSetMessage_Params SetMessage_Params;
	memcpy_s(&SetMessage_Params.InMessage, 0x10, &InMessage, 0x10);

	this->ProcessEvent(uFnSetMessage, &SetMessage_Params, nullptr);

	return SetMessage_Params.ReturnValue;
};

// Function ProjectX.RPC_RemovePlayerFromRole_X.SetRole
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_RemovePlayerFromRole_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        Role                           (CPF_Parm)

class URPC_RemovePlayerFromRole_X* URPC_RemovePlayerFromRole_X::SetRole(uint8_t Role)
{
	static UFunction* uFnSetRole = nullptr;

	if (!uFnSetRole)
	{
		uFnSetRole = UFunction::FindFunction("Function ProjectX.RPC_RemovePlayerFromRole_X.SetRole");
	}

	URPC_RemovePlayerFromRole_X_execSetRole_Params SetRole_Params;
	memcpy_s(&SetRole_Params.Role, 0x1, &Role, 0x1);

	this->ProcessEvent(uFnSetRole, &SetRole_Params, nullptr);

	return SetRole_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportExploiter_X.SetData
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportExploiter_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InData                         (CPF_Parm | CPF_CoerceParm | CPF_NeedCtorLink)

class URPC_ReportExploiter_X* URPC_ReportExploiter_X::SetData(class FString InData)
{
	static UFunction* uFnSetData = nullptr;

	if (!uFnSetData)
	{
		uFnSetData = UFunction::FindFunction("Function ProjectX.RPC_ReportExploiter_X.SetData");
	}

	URPC_ReportExploiter_X_execSetData_Params SetData_Params;
	memcpy_s(&SetData_Params.InData, 0x10, &InData, 0x10);

	this->ProcessEvent(uFnSetData, &SetData_Params, nullptr);

	return SetData_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportExploiter_X.SetMatchGUID
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportExploiter_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMatchGUID                    (CPF_Parm | CPF_NeedCtorLink)

class URPC_ReportExploiter_X* URPC_ReportExploiter_X::SetMatchGUID(class FString InMatchGUID)
{
	static UFunction* uFnSetMatchGUID = nullptr;

	if (!uFnSetMatchGUID)
	{
		uFnSetMatchGUID = UFunction::FindFunction("Function ProjectX.RPC_ReportExploiter_X.SetMatchGUID");
	}

	URPC_ReportExploiter_X_execSetMatchGUID_Params SetMatchGUID_Params;
	memcpy_s(&SetMatchGUID_Params.InMatchGUID, 0x10, &InMatchGUID, 0x10);

	this->ProcessEvent(uFnSetMatchGUID, &SetMatchGUID_Params, nullptr);

	return SetMatchGUID_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportExploiter_X.SetReason
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportExploiter_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint8_t                        InReason                       (CPF_Parm)

class URPC_ReportExploiter_X* URPC_ReportExploiter_X::SetReason(uint8_t InReason)
{
	static UFunction* uFnSetReason = nullptr;

	if (!uFnSetReason)
	{
		uFnSetReason = UFunction::FindFunction("Function ProjectX.RPC_ReportExploiter_X.SetReason");
	}

	URPC_ReportExploiter_X_execSetReason_Params SetReason_Params;
	memcpy_s(&SetReason_Params.InReason, 0x1, &InReason, 0x1);

	this->ProcessEvent(uFnSetReason, &SetReason_Params, nullptr);

	return SetReason_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportExploiter_X.SetPlayerID
// [0x00040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportExploiter_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_ReportExploiter_X* URPC_ReportExploiter_X::SetPlayerID(struct FUniqueNetId InPlayerId)
{
	static UFunction* uFnSetPlayerID = nullptr;

	if (!uFnSetPlayerID)
	{
		uFnSetPlayerID = UFunction::FindFunction("Function ProjectX.RPC_ReportExploiter_X.SetPlayerID");
	}

	URPC_ReportExploiter_X_execSetPlayerID_Params SetPlayerID_Params;
	memcpy_s(&SetPlayerID_Params.InPlayerId, 0x48, &InPlayerId, 0x48);

	this->ProcessEvent(uFnSetPlayerID, &SetPlayerID_Params, nullptr);

	return SetPlayerID_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportExploiter_X.Send
// [0x00026003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// struct FUniqueNetId            InPlayerId                     (CPF_Parm | CPF_NeedCtorLink)
// uint8_t                        InReason                       (CPF_Parm)
// class FString                  InMatchGUID                    (CPF_Parm | CPF_NeedCtorLink)
// class FString                  InData                         (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

void URPC_ReportExploiter_X::Send(struct FUniqueNetId InPlayerId, uint8_t InReason, class FString InMatchGUID, class FString InData)
{
	static UFunction* uFnSend = nullptr;

	if (!uFnSend)
	{
		uFnSend = UFunction::FindFunction("Function ProjectX.RPC_ReportExploiter_X.Send");
	}

	URPC_ReportExploiter_X_execSend_Params Send_Params;
	memcpy_s(&Send_Params.InPlayerId, 0x48, &InPlayerId, 0x48);
	memcpy_s(&Send_Params.InReason, 0x1, &InReason, 0x1);
	memcpy_s(&Send_Params.InMatchGUID, 0x10, &InMatchGUID, 0x10);
	memcpy_s(&Send_Params.InData, 0x10, &InData, 0x10);

	URPC_ReportExploiter_X::StaticClass()->ProcessEvent(uFnSend, &Send_Params, nullptr);
};

// Function ProjectX.RPC_ReportLowFPS_X.SetNumBots
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportLowFPS_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InNumBots                      (CPF_Parm)

class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetNumBots(int32_t InNumBots)
{
	static UFunction* uFnSetNumBots = nullptr;

	if (!uFnSetNumBots)
	{
		uFnSetNumBots = UFunction::FindFunction("Function ProjectX.RPC_ReportLowFPS_X.SetNumBots");
	}

	URPC_ReportLowFPS_X_execSetNumBots_Params SetNumBots_Params;
	memcpy_s(&SetNumBots_Params.InNumBots, 0x4, &InNumBots, 0x4);

	this->ProcessEvent(uFnSetNumBots, &SetNumBots_Params, nullptr);

	return SetNumBots_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportLowFPS_X.SetNumHumans
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportLowFPS_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InNumHumans                    (CPF_Parm)

class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetNumHumans(int32_t InNumHumans)
{
	static UFunction* uFnSetNumHumans = nullptr;

	if (!uFnSetNumHumans)
	{
		uFnSetNumHumans = UFunction::FindFunction("Function ProjectX.RPC_ReportLowFPS_X.SetNumHumans");
	}

	URPC_ReportLowFPS_X_execSetNumHumans_Params SetNumHumans_Params;
	memcpy_s(&SetNumHumans_Params.InNumHumans, 0x4, &InNumHumans, 0x4);

	this->ProcessEvent(uFnSetNumHumans, &SetNumHumans_Params, nullptr);

	return SetNumHumans_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportLowFPS_X.SetServerName
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportLowFPS_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerName                   (CPF_Parm | CPF_NeedCtorLink)

class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetServerName(class FString InServerName)
{
	static UFunction* uFnSetServerName = nullptr;

	if (!uFnSetServerName)
	{
		uFnSetServerName = UFunction::FindFunction("Function ProjectX.RPC_ReportLowFPS_X.SetServerName");
	}

	URPC_ReportLowFPS_X_execSetServerName_Params SetServerName_Params;
	memcpy_s(&SetServerName_Params.InServerName, 0x10, &InServerName, 0x10);

	this->ProcessEvent(uFnSetServerName, &SetServerName_Params, nullptr);

	return SetServerName_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportLowFPS_X.SetServerID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportLowFPS_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InServerID                     (CPF_Parm | CPF_NeedCtorLink)

class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetServerID(class FString InServerID)
{
	static UFunction* uFnSetServerID = nullptr;

	if (!uFnSetServerID)
	{
		uFnSetServerID = UFunction::FindFunction("Function ProjectX.RPC_ReportLowFPS_X.SetServerID");
	}

	URPC_ReportLowFPS_X_execSetServerID_Params SetServerID_Params;
	memcpy_s(&SetServerID_Params.InServerID, 0x10, &InServerID, 0x10);

	this->ProcessEvent(uFnSetServerID, &SetServerID_Params, nullptr);

	return SetServerID_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportLowFPS_X.SetMachineID
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportLowFPS_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InMachineID                    (CPF_Parm)

class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetMachineID(int32_t InMachineID)
{
	static UFunction* uFnSetMachineID = nullptr;

	if (!uFnSetMachineID)
	{
		uFnSetMachineID = UFunction::FindFunction("Function ProjectX.RPC_ReportLowFPS_X.SetMachineID");
	}

	URPC_ReportLowFPS_X_execSetMachineID_Params SetMachineID_Params;
	memcpy_s(&SetMachineID_Params.InMachineID, 0x4, &InMachineID, 0x4);

	this->ProcessEvent(uFnSetMachineID, &SetMachineID_Params, nullptr);

	return SetMachineID_Params.ReturnValue;
};

// Function ProjectX.RPC_ReportLowFPS_X.SetIP
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_ReportLowFPS_X*     ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InIP                           (CPF_Parm | CPF_NeedCtorLink)

class URPC_ReportLowFPS_X* URPC_ReportLowFPS_X::SetIP(class FString InIP)
{
	static UFunction* uFnSetIP = nullptr;

	if (!uFnSetIP)
	{
		uFnSetIP = UFunction::FindFunction("Function ProjectX.RPC_ReportLowFPS_X.SetIP");
	}

	URPC_ReportLowFPS_X_execSetIP_Params SetIP_Params;
	memcpy_s(&SetIP_Params.InIP, 0x10, &InIP, 0x10);

	this->ProcessEvent(uFnSetIP, &SetIP_Params, nullptr);

	return SetIP_Params.ReturnValue;
};

// Function ProjectX.RPC_SetClubMotD_X.SetText
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetClubMotD_X*      ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InText                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_SetClubMotD_X* URPC_SetClubMotD_X::SetText(class FString InText)
{
	static UFunction* uFnSetText = nullptr;

	if (!uFnSetText)
	{
		uFnSetText = UFunction::FindFunction("Function ProjectX.RPC_SetClubMotD_X.SetText");
	}

	URPC_SetClubMotD_X_execSetText_Params SetText_Params;
	memcpy_s(&SetText_Params.InText, 0x10, &InText, 0x10);

	this->ProcessEvent(uFnSetText, &SetText_Params, nullptr);

	return SetText_Params.ReturnValue;
};

// Function ProjectX.RPC_SetPlayerSkill_X.SetSigma
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetPlayerSkill_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          InSigma                        (CPF_Parm)

class URPC_SetPlayerSkill_X* URPC_SetPlayerSkill_X::SetSigma(float InSigma)
{
	static UFunction* uFnSetSigma = nullptr;

	if (!uFnSetSigma)
	{
		uFnSetSigma = UFunction::FindFunction("Function ProjectX.RPC_SetPlayerSkill_X.SetSigma");
	}

	URPC_SetPlayerSkill_X_execSetSigma_Params SetSigma_Params;
	memcpy_s(&SetSigma_Params.InSigma, 0x4, &InSigma, 0x4);

	this->ProcessEvent(uFnSetSigma, &SetSigma_Params, nullptr);

	return SetSigma_Params.ReturnValue;
};

// Function ProjectX.RPC_SetPlayerSkill_X.SetMu
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetPlayerSkill_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// float                          InMu                           (CPF_Parm)

class URPC_SetPlayerSkill_X* URPC_SetPlayerSkill_X::SetMu(float InMu)
{
	static UFunction* uFnSetMu = nullptr;

	if (!uFnSetMu)
	{
		uFnSetMu = UFunction::FindFunction("Function ProjectX.RPC_SetPlayerSkill_X.SetMu");
	}

	URPC_SetPlayerSkill_X_execSetMu_Params SetMu_Params;
	memcpy_s(&SetMu_Params.InMu, 0x4, &InMu, 0x4);

	this->ProcessEvent(uFnSetMu, &SetMu_Params, nullptr);

	return SetMu_Params.ReturnValue;
};

// Function ProjectX.RPC_SetPlayerSkill_X.SetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetPlayerSkill_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylist                     (CPF_Parm)

class URPC_SetPlayerSkill_X* URPC_SetPlayerSkill_X::SetPlaylist(int32_t InPlaylist)
{
	static UFunction* uFnSetPlaylist = nullptr;

	if (!uFnSetPlaylist)
	{
		uFnSetPlaylist = UFunction::FindFunction("Function ProjectX.RPC_SetPlayerSkill_X.SetPlaylist");
	}

	URPC_SetPlayerSkill_X_execSetPlaylist_Params SetPlaylist_Params;
	memcpy_s(&SetPlaylist_Params.InPlaylist, 0x4, &InPlaylist, 0x4);

	this->ProcessEvent(uFnSetPlaylist, &SetPlaylist_Params, nullptr);

	return SetPlaylist_Params.ReturnValue;
};

// Function ProjectX.RPC_SetPlayerSkillTier_X.SetMatchesPlayed
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetPlayerSkillTier_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InMatchesPlayed                (CPF_Parm)

class URPC_SetPlayerSkillTier_X* URPC_SetPlayerSkillTier_X::SetMatchesPlayed(int32_t InMatchesPlayed)
{
	static UFunction* uFnSetMatchesPlayed = nullptr;

	if (!uFnSetMatchesPlayed)
	{
		uFnSetMatchesPlayed = UFunction::FindFunction("Function ProjectX.RPC_SetPlayerSkillTier_X.SetMatchesPlayed");
	}

	URPC_SetPlayerSkillTier_X_execSetMatchesPlayed_Params SetMatchesPlayed_Params;
	memcpy_s(&SetMatchesPlayed_Params.InMatchesPlayed, 0x4, &InMatchesPlayed, 0x4);

	this->ProcessEvent(uFnSetMatchesPlayed, &SetMatchesPlayed_Params, nullptr);

	return SetMatchesPlayed_Params.ReturnValue;
};

// Function ProjectX.RPC_SetPlayerSkillTier_X.SetTier
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetPlayerSkillTier_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InTier                         (CPF_Parm)

class URPC_SetPlayerSkillTier_X* URPC_SetPlayerSkillTier_X::SetTier(int32_t InTier)
{
	static UFunction* uFnSetTier = nullptr;

	if (!uFnSetTier)
	{
		uFnSetTier = UFunction::FindFunction("Function ProjectX.RPC_SetPlayerSkillTier_X.SetTier");
	}

	URPC_SetPlayerSkillTier_X_execSetTier_Params SetTier_Params;
	memcpy_s(&SetTier_Params.InTier, 0x4, &InTier, 0x4);

	this->ProcessEvent(uFnSetTier, &SetTier_Params, nullptr);

	return SetTier_Params.ReturnValue;
};

// Function ProjectX.RPC_SetPlayerSkillTier_X.SetPlaylist
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetPlayerSkillTier_X* ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        InPlaylist                     (CPF_Parm)

class URPC_SetPlayerSkillTier_X* URPC_SetPlayerSkillTier_X::SetPlaylist(int32_t InPlaylist)
{
	static UFunction* uFnSetPlaylist = nullptr;

	if (!uFnSetPlaylist)
	{
		uFnSetPlaylist = UFunction::FindFunction("Function ProjectX.RPC_SetPlayerSkillTier_X.SetPlaylist");
	}

	URPC_SetPlayerSkillTier_X_execSetPlaylist_Params SetPlaylist_Params;
	memcpy_s(&SetPlaylist_Params.InPlaylist, 0x4, &InPlaylist, 0x4);

	this->ProcessEvent(uFnSetPlaylist, &SetPlaylist_Params, nullptr);

	return SetPlaylist_Params.ReturnValue;
};

// Function ProjectX.RPC_SetRichPresence_X.SetPresenceState
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetRichPresence_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InState                        (CPF_Parm | CPF_NeedCtorLink)

class URPC_SetRichPresence_X* URPC_SetRichPresence_X::SetPresenceState(class FString InState)
{
	static UFunction* uFnSetPresenceState = nullptr;

	if (!uFnSetPresenceState)
	{
		uFnSetPresenceState = UFunction::FindFunction("Function ProjectX.RPC_SetRichPresence_X.SetPresenceState");
	}

	URPC_SetRichPresence_X_execSetPresenceState_Params SetPresenceState_Params;
	memcpy_s(&SetPresenceState_Params.InState, 0x10, &InState, 0x10);

	this->ProcessEvent(uFnSetPresenceState, &SetPresenceState_Params, nullptr);

	return SetPresenceState_Params.ReturnValue;
};

// Function ProjectX.RPC_SetRichPresence_X.SetPresenceInfo
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetRichPresence_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InInfo                         (CPF_Parm | CPF_NeedCtorLink)

class URPC_SetRichPresence_X* URPC_SetRichPresence_X::SetPresenceInfo(class FString InInfo)
{
	static UFunction* uFnSetPresenceInfo = nullptr;

	if (!uFnSetPresenceInfo)
	{
		uFnSetPresenceInfo = UFunction::FindFunction("Function ProjectX.RPC_SetRichPresence_X.SetPresenceInfo");
	}

	URPC_SetRichPresence_X_execSetPresenceInfo_Params SetPresenceInfo_Params;
	memcpy_s(&SetPresenceInfo_Params.InInfo, 0x10, &InInfo, 0x10);

	this->ProcessEvent(uFnSetPresenceInfo, &SetPresenceInfo_Params, nullptr);

	return SetPresenceInfo_Params.ReturnValue;
};

// Function ProjectX.RPC_SetSeasonReward_X.SetReward
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class URPC_SetSeasonReward_X*  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// int32_t                        Level                          (CPF_Parm)
// int32_t                        Wins                           (CPF_Parm)

class URPC_SetSeasonReward_X* URPC_SetSeasonReward_X::SetReward(int32_t Level, int32_t Wins)
{
	static UFunction* uFnSetReward = nullptr;

	if (!uFnSetReward)
	{
		uFnSetReward = UFunction::FindFunction("Function ProjectX.RPC_SetSeasonReward_X.SetReward");
	}

	URPC_SetSeasonReward_X_execSetReward_Params SetReward_Params;
	memcpy_s(&SetReward_Params.Level, 0x4, &Level, 0x4);
	memcpy_s(&SetReward_Params.Wins, 0x4, &Wins, 0x4);

	this->ProcessEvent(uFnSetReward, &SetReward_Params, nullptr);

	return SetReward_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.Check
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// unsigned long                  Assertion                      (CPF_Parm)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

bool URPC_Test_X::Check(unsigned long Assertion, class FString Message)
{
	static UFunction* uFnCheck = nullptr;

	if (!uFnCheck)
	{
		uFnCheck = UFunction::FindFunction("Function ProjectX.RPC_Test_X.Check");
	}

	URPC_Test_X_execCheck_Params Check_Params;
	Check_Params.Assertion = Assertion;
	memcpy_s(&Check_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnCheck, &Check_Params, nullptr);

	return Check_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.CheckParamArraysMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FRPCTestParam>   A                              (CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FRPCTestParam>   B                              (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

bool URPC_Test_X::CheckParamArraysMatch(TArray<struct FRPCTestParam> A, TArray<struct FRPCTestParam> B, class FString Message)
{
	static UFunction* uFnCheckParamArraysMatch = nullptr;

	if (!uFnCheckParamArraysMatch)
	{
		uFnCheckParamArraysMatch = UFunction::FindFunction("Function ProjectX.RPC_Test_X.CheckParamArraysMatch");
	}

	URPC_Test_X_execCheckParamArraysMatch_Params CheckParamArraysMatch_Params;
	memcpy_s(&CheckParamArraysMatch_Params.A, 0x10, &A, 0x10);
	memcpy_s(&CheckParamArraysMatch_Params.B, 0x10, &B, 0x10);
	memcpy_s(&CheckParamArraysMatch_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnCheckParamArraysMatch, &CheckParamArraysMatch_Params, nullptr);

	return CheckParamArraysMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.CheckItemArraysMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<struct FRPCTestItem>    A                              (CPF_Parm | CPF_NeedCtorLink)
// TArray<struct FRPCTestItem>    B                              (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

bool URPC_Test_X::CheckItemArraysMatch(TArray<struct FRPCTestItem> A, TArray<struct FRPCTestItem> B, class FString Message)
{
	static UFunction* uFnCheckItemArraysMatch = nullptr;

	if (!uFnCheckItemArraysMatch)
	{
		uFnCheckItemArraysMatch = UFunction::FindFunction("Function ProjectX.RPC_Test_X.CheckItemArraysMatch");
	}

	URPC_Test_X_execCheckItemArraysMatch_Params CheckItemArraysMatch_Params;
	memcpy_s(&CheckItemArraysMatch_Params.A, 0x10, &A, 0x10);
	memcpy_s(&CheckItemArraysMatch_Params.B, 0x10, &B, 0x10);
	memcpy_s(&CheckItemArraysMatch_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnCheckItemArraysMatch, &CheckItemArraysMatch_Params, nullptr);

	return CheckItemArraysMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.CheckStringArraysMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// TArray<class FString>          A                              (CPF_Parm | CPF_NeedCtorLink)
// TArray<class FString>          B                              (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

bool URPC_Test_X::CheckStringArraysMatch(TArray<class FString> A, TArray<class FString> B, class FString Message)
{
	static UFunction* uFnCheckStringArraysMatch = nullptr;

	if (!uFnCheckStringArraysMatch)
	{
		uFnCheckStringArraysMatch = UFunction::FindFunction("Function ProjectX.RPC_Test_X.CheckStringArraysMatch");
	}

	URPC_Test_X_execCheckStringArraysMatch_Params CheckStringArraysMatch_Params;
	memcpy_s(&CheckStringArraysMatch_Params.A, 0x10, &A, 0x10);
	memcpy_s(&CheckStringArraysMatch_Params.B, 0x10, &B, 0x10);
	memcpy_s(&CheckStringArraysMatch_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnCheckStringArraysMatch, &CheckStringArraysMatch_Params, nullptr);

	return CheckStringArraysMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.CheckItemsMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FRPCTestItem            A                              (CPF_Parm | CPF_NeedCtorLink)
// struct FRPCTestItem            B                              (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

bool URPC_Test_X::CheckItemsMatch(struct FRPCTestItem A, struct FRPCTestItem B, class FString Message)
{
	static UFunction* uFnCheckItemsMatch = nullptr;

	if (!uFnCheckItemsMatch)
	{
		uFnCheckItemsMatch = UFunction::FindFunction("Function ProjectX.RPC_Test_X.CheckItemsMatch");
	}

	URPC_Test_X_execCheckItemsMatch_Params CheckItemsMatch_Params;
	memcpy_s(&CheckItemsMatch_Params.A, 0x78, &A, 0x78);
	memcpy_s(&CheckItemsMatch_Params.B, 0x78, &B, 0x78);
	memcpy_s(&CheckItemsMatch_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnCheckItemsMatch, &CheckItemsMatch_Params, nullptr);

	return CheckItemsMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.CheckParamsMatch
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FRPCTestParam           A                              (CPF_Parm | CPF_NeedCtorLink)
// struct FRPCTestParam           B                              (CPF_Parm | CPF_NeedCtorLink)
// class FString                  Message                        (CPF_Parm | CPF_NeedCtorLink)

bool URPC_Test_X::CheckParamsMatch(struct FRPCTestParam A, struct FRPCTestParam B, class FString Message)
{
	static UFunction* uFnCheckParamsMatch = nullptr;

	if (!uFnCheckParamsMatch)
	{
		uFnCheckParamsMatch = UFunction::FindFunction("Function ProjectX.RPC_Test_X.CheckParamsMatch");
	}

	URPC_Test_X_execCheckParamsMatch_Params CheckParamsMatch_Params;
	memcpy_s(&CheckParamsMatch_Params.A, 0x88, &A, 0x88);
	memcpy_s(&CheckParamsMatch_Params.B, 0x88, &B, 0x88);
	memcpy_s(&CheckParamsMatch_Params.Message, 0x10, &Message, 0x10);

	this->ProcessEvent(uFnCheckParamsMatch, &CheckParamsMatch_Params, nullptr);

	return CheckParamsMatch_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.ValidateResults
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool URPC_Test_X::ValidateResults()
{
	static UFunction* uFnValidateResults = nullptr;

	if (!uFnValidateResults)
	{
		uFnValidateResults = UFunction::FindFunction("Function ProjectX.RPC_Test_X.ValidateResults");
	}

	URPC_Test_X_execValidateResults_Params ValidateResults_Params;

	this->ProcessEvent(uFnValidateResults, &ValidateResults_Params, nullptr);

	return ValidateResults_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.OnComplete
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void URPC_Test_X::eventOnComplete()
{
	static UFunction* uFnOnComplete = nullptr;

	if (!uFnOnComplete)
	{
		uFnOnComplete = UFunction::FindFunction("Function ProjectX.RPC_Test_X.OnComplete");
	}

	URPC_Test_X_eventOnComplete_Params OnComplete_Params;

	this->ProcessEvent(uFnOnComplete, &OnComplete_Params, nullptr);
};

// Function ProjectX.RPC_Test_X.GetRandomTestParams
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FRPCTestParam>   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FRPCTestParam> URPC_Test_X::GetRandomTestParams()
{
	static UFunction* uFnGetRandomTestParams = nullptr;

	if (!uFnGetRandomTestParams)
	{
		uFnGetRandomTestParams = UFunction::FindFunction("Function ProjectX.RPC_Test_X.GetRandomTestParams");
	}

	URPC_Test_X_execGetRandomTestParams_Params GetRandomTestParams_Params;

	this->ProcessEvent(uFnGetRandomTestParams, &GetRandomTestParams_Params, nullptr);

	return GetRandomTestParams_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.GetRandomTestParam
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FRPCTestParam           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FRPCTestParam URPC_Test_X::GetRandomTestParam()
{
	static UFunction* uFnGetRandomTestParam = nullptr;

	if (!uFnGetRandomTestParam)
	{
		uFnGetRandomTestParam = UFunction::FindFunction("Function ProjectX.RPC_Test_X.GetRandomTestParam");
	}

	URPC_Test_X_execGetRandomTestParam_Params GetRandomTestParam_Params;

	this->ProcessEvent(uFnGetRandomTestParam, &GetRandomTestParam_Params, nullptr);

	return GetRandomTestParam_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.GetRandomTestItems
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<struct FRPCTestItem>    ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<struct FRPCTestItem> URPC_Test_X::GetRandomTestItems()
{
	static UFunction* uFnGetRandomTestItems = nullptr;

	if (!uFnGetRandomTestItems)
	{
		uFnGetRandomTestItems = UFunction::FindFunction("Function ProjectX.RPC_Test_X.GetRandomTestItems");
	}

	URPC_Test_X_execGetRandomTestItems_Params GetRandomTestItems_Params;

	this->ProcessEvent(uFnGetRandomTestItems, &GetRandomTestItems_Params, nullptr);

	return GetRandomTestItems_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.GetRandomTestItem
// [0x00820003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// struct FRPCTestItem            ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

struct FRPCTestItem URPC_Test_X::GetRandomTestItem()
{
	static UFunction* uFnGetRandomTestItem = nullptr;

	if (!uFnGetRandomTestItem)
	{
		uFnGetRandomTestItem = UFunction::FindFunction("Function ProjectX.RPC_Test_X.GetRandomTestItem");
	}

	URPC_Test_X_execGetRandomTestItem_Params GetRandomTestItem_Params;

	this->ProcessEvent(uFnGetRandomTestItem, &GetRandomTestItem_Params, nullptr);

	return GetRandomTestItem_Params.ReturnValue;
};

// Function ProjectX.RPC_Test_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URPC_Test_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.RPC_Test_X.Init");
	}

	URPC_Test_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.TestsHelper_X.GetRandomUppercaseString
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UTestsHelper_X::GetRandomUppercaseString()
{
	static UFunction* uFnGetRandomUppercaseString = nullptr;

	if (!uFnGetRandomUppercaseString)
	{
		uFnGetRandomUppercaseString = UFunction::FindFunction("Function ProjectX.TestsHelper_X.GetRandomUppercaseString");
	}

	UTestsHelper_X_execGetRandomUppercaseString_Params GetRandomUppercaseString_Params;

	UTestsHelper_X::StaticClass()->ProcessEvent(uFnGetRandomUppercaseString, &GetRandomUppercaseString_Params, nullptr);

	return GetRandomUppercaseString_Params.ReturnValue;
};

// Function ProjectX.TestsHelper_X.GetRandomStringArray
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// TArray<class FString>          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

TArray<class FString> UTestsHelper_X::GetRandomStringArray()
{
	static UFunction* uFnGetRandomStringArray = nullptr;

	if (!uFnGetRandomStringArray)
	{
		uFnGetRandomStringArray = UFunction::FindFunction("Function ProjectX.TestsHelper_X.GetRandomStringArray");
	}

	UTestsHelper_X_execGetRandomStringArray_Params GetRandomStringArray_Params;

	UTestsHelper_X::StaticClass()->ProcessEvent(uFnGetRandomStringArray, &GetRandomStringArray_Params, nullptr);

	return GetRandomStringArray_Params.ReturnValue;
};

// Function ProjectX.TestsHelper_X.GetRandomString
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString UTestsHelper_X::GetRandomString()
{
	static UFunction* uFnGetRandomString = nullptr;

	if (!uFnGetRandomString)
	{
		uFnGetRandomString = UFunction::FindFunction("Function ProjectX.TestsHelper_X.GetRandomString");
	}

	UTestsHelper_X_execGetRandomString_Params GetRandomString_Params;

	UTestsHelper_X::StaticClass()->ProcessEvent(uFnGetRandomString, &GetRandomString_Params, nullptr);

	return GetRandomString_Params.ReturnValue;
};

// Function ProjectX.RPC_TestPlayerID_X.OnSuccess
// [0x400080002] (FUNC_RequiredAPI | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void URPC_TestPlayerID_X::OnSuccess()
{
	static UFunction* uFnOnSuccess = nullptr;

	if (!uFnOnSuccess)
	{
		uFnOnSuccess = UFunction::FindFunction("Function ProjectX.RPC_TestPlayerID_X.OnSuccess");
	}

	URPC_TestPlayerID_X_execOnSuccess_Params OnSuccess_Params;

	this->ProcessEvent(uFnOnSuccess, &OnSuccess_Params, nullptr);
};

// Function ProjectX.RPC_TestPlayerID_X.Init
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void URPC_TestPlayerID_X::Init()
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.RPC_TestPlayerID_X.Init");
	}

	URPC_TestPlayerID_X_execInit_Params Init_Params;

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.SeqAct_SpawnArchetype_X.Init
// [0x00880003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_HasDefaults | FUNC_AllFlags)
// Parameter info:
// class AActor*                  SpawnedActor                   (CPF_Parm)

void USeqAct_SpawnArchetype_X::Init(class AActor* SpawnedActor)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.SeqAct_SpawnArchetype_X.Init");
	}

	USeqAct_SpawnArchetype_X_execInit_Params Init_Params;
	memcpy_s(&Init_Params.SpawnedActor, 0x8, &SpawnedActor, 0x8);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);
};

// Function ProjectX.SeqAct_SpawnArchetype_X.Activated
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void USeqAct_SpawnArchetype_X::eventActivated()
{
	static UFunction* uFnActivated = nullptr;

	if (!uFnActivated)
	{
		uFnActivated = UFunction::FindFunction("Function ProjectX.SeqAct_SpawnArchetype_X.Activated");
	}

	USeqAct_SpawnArchetype_X_eventActivated_Params Activated_Params;

	this->ProcessEvent(uFnActivated, &Activated_Params, nullptr);
};

// Function ProjectX.SkelControlBlendTargetComponent_X.SetControlActiveInComponent
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// class USkeletalMeshComponent*  SKC                            (CPF_Parm | CPF_EditInline)
// unsigned long                  bActive                        (CPF_Parm)

void USkelControlBlendTargetComponent_X::SetControlActiveInComponent(class USkeletalMeshComponent* SKC, unsigned long bActive)
{
	static UFunction* uFnSetControlActiveInComponent = nullptr;

	if (!uFnSetControlActiveInComponent)
	{
		uFnSetControlActiveInComponent = UFunction::FindFunction("Function ProjectX.SkelControlBlendTargetComponent_X.SetControlActiveInComponent");
	}

	USkelControlBlendTargetComponent_X_execSetControlActiveInComponent_Params SetControlActiveInComponent_Params;
	memcpy_s(&SetControlActiveInComponent_Params.SKC, 0x8, &SKC, 0x8);
	SetControlActiveInComponent_Params.bActive = bActive;

	this->ProcessEvent(uFnSetControlActiveInComponent, &SetControlActiveInComponent_Params, nullptr);
};

// Function ProjectX.SkelControlBlendTargetComponent_X.SetControlActive
// [0x00080003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Protected | FUNC_AllFlags)
// Parameter info:
// unsigned long                  bActive                        (CPF_Parm)

void USkelControlBlendTargetComponent_X::SetControlActive(unsigned long bActive)
{
	static UFunction* uFnSetControlActive = nullptr;

	if (!uFnSetControlActive)
	{
		uFnSetControlActive = UFunction::FindFunction("Function ProjectX.SkelControlBlendTargetComponent_X.SetControlActive");
	}

	USkelControlBlendTargetComponent_X_execSetControlActive_Params SetControlActive_Params;
	SetControlActive_Params.bActive = bActive;

	this->ProcessEvent(uFnSetControlActive, &SetControlActive_Params, nullptr);
};

// Function ProjectX.SkelControlBlendTargetComponent_X.Detached
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void USkelControlBlendTargetComponent_X::eventDetached()
{
	static UFunction* uFnDetached = nullptr;

	if (!uFnDetached)
	{
		uFnDetached = UFunction::FindFunction("Function ProjectX.SkelControlBlendTargetComponent_X.Detached");
	}

	USkelControlBlendTargetComponent_X_eventDetached_Params Detached_Params;

	this->ProcessEvent(uFnDetached, &Detached_Params, nullptr);
};

// Function ProjectX.SkelControlBlendTargetComponent_X.Attached
// [0x400080802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Protected | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void USkelControlBlendTargetComponent_X::eventAttached()
{
	static UFunction* uFnAttached = nullptr;

	if (!uFnAttached)
	{
		uFnAttached = UFunction::FindFunction("Function ProjectX.SkelControlBlendTargetComponent_X.Attached");
	}

	USkelControlBlendTargetComponent_X_eventAttached_Params Attached_Params;

	this->ProcessEvent(uFnAttached, &Attached_Params, nullptr);
};

// Function ProjectX.SmoothDynamicValue_X.GetDebugValue
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// class FString                  ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm | CPF_NeedCtorLink)

class FString USmoothDynamicValue_X::GetDebugValue()
{
	static UFunction* uFnGetDebugValue = nullptr;

	if (!uFnGetDebugValue)
	{
		uFnGetDebugValue = UFunction::FindFunction("Function ProjectX.SmoothDynamicValue_X.GetDebugValue");
	}

	USmoothDynamicValue_X_execGetDebugValue_Params GetDebugValue_Params;

	this->ProcessEvent(uFnGetDebugValue, &GetDebugValue_Params, nullptr);

	return GetDebugValue_Params.ReturnValue;
};

// Function ProjectX.SmoothDynamicValue_X.GetValue
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

float USmoothDynamicValue_X::GetValue()
{
	static UFunction* uFnGetValue = nullptr;

	if (!uFnGetValue)
	{
		uFnGetValue = UFunction::FindFunction("Function ProjectX.SmoothDynamicValue_X.GetValue");
	}

	USmoothDynamicValue_X_execGetValue_Params GetValue_Params;

	this->ProcessEvent(uFnGetValue, &GetValue_Params, nullptr);

	return GetValue_Params.ReturnValue;
};

// Function ProjectX.SmoothDynamicValue_X.Tick
// [0x400020002] (FUNC_RequiredAPI | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:
// float                          DeltaTime                      (CPF_Parm)

void USmoothDynamicValue_X::Tick(float DeltaTime)
{
	static UFunction* uFnTick = nullptr;

	if (!uFnTick)
	{
		uFnTick = UFunction::FindFunction("Function ProjectX.SmoothDynamicValue_X.Tick");
	}

	USmoothDynamicValue_X_execTick_Params Tick_Params;
	memcpy_s(&Tick_Params.DeltaTime, 0x4, &DeltaTime, 0x4);

	this->ProcessEvent(uFnTick, &Tick_Params, nullptr);
};

// Function ProjectX.SmoothDynamicValue_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void USmoothDynamicValue_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.SmoothDynamicValue_X.Construct");
	}

	USmoothDynamicValue_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

// Function ProjectX.StringUtil_X.IsStringEmptyOrWhiteSpace
// [0x00022003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  BaseString                     (CPF_Parm | CPF_NeedCtorLink)

bool UStringUtil_X::IsStringEmptyOrWhiteSpace(class FString BaseString)
{
	static UFunction* uFnIsStringEmptyOrWhiteSpace = nullptr;

	if (!uFnIsStringEmptyOrWhiteSpace)
	{
		uFnIsStringEmptyOrWhiteSpace = UFunction::FindFunction("Function ProjectX.StringUtil_X.IsStringEmptyOrWhiteSpace");
	}

	UStringUtil_X_execIsStringEmptyOrWhiteSpace_Params IsStringEmptyOrWhiteSpace_Params;
	memcpy_s(&IsStringEmptyOrWhiteSpace_Params.BaseString, 0x10, &BaseString, 0x10);

	UStringUtil_X::StaticClass()->ProcessEvent(uFnIsStringEmptyOrWhiteSpace, &IsStringEmptyOrWhiteSpace_Params, nullptr);

	return IsStringEmptyOrWhiteSpace_Params.ReturnValue;
};

// Function ProjectX.StringUtil_X.SplitStringInHalf
// [0x00422003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Static | FUNC_Public | FUNC_HasOutParms | FUNC_AllFlags)
// Parameter info:
// class FString                  OriginalString                 (CPF_Parm | CPF_NeedCtorLink)
// class FString                  FirstHalf                      (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)
// class FString                  SecondHalf                     (CPF_Parm | CPF_OutParm | CPF_NeedCtorLink)

void UStringUtil_X::SplitStringInHalf(class FString OriginalString, class FString& FirstHalf, class FString& SecondHalf)
{
	static UFunction* uFnSplitStringInHalf = nullptr;

	if (!uFnSplitStringInHalf)
	{
		uFnSplitStringInHalf = UFunction::FindFunction("Function ProjectX.StringUtil_X.SplitStringInHalf");
	}

	UStringUtil_X_execSplitStringInHalf_Params SplitStringInHalf_Params;
	memcpy_s(&SplitStringInHalf_Params.OriginalString, 0x10, &OriginalString, 0x10);
	memcpy_s(&SplitStringInHalf_Params.FirstHalf, 0x10, &FirstHalf, 0x10);
	memcpy_s(&SplitStringInHalf_Params.SecondHalf, 0x10, &SecondHalf, 0x10);

	UStringUtil_X::StaticClass()->ProcessEvent(uFnSplitStringInHalf, &SplitStringInHalf_Params, nullptr);

	memcpy_s(&FirstHalf, 0x10, &SplitStringInHalf_Params.FirstHalf, 0x10);
	memcpy_s(&SecondHalf, 0x10, &SplitStringInHalf_Params.SecondHalf, 0x10);
};

// Function ProjectX.TimeWindowOptional_X.HandleWindowEnded
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UTimeWindowOptional_X::HandleWindowEnded()
{
	static UFunction* uFnHandleWindowEnded = nullptr;

	if (!uFnHandleWindowEnded)
	{
		uFnHandleWindowEnded = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.HandleWindowEnded");
	}

	UTimeWindowOptional_X_execHandleWindowEnded_Params HandleWindowEnded_Params;

	this->ProcessEvent(uFnHandleWindowEnded, &HandleWindowEnded_Params, nullptr);
};

// Function ProjectX.TimeWindowOptional_X.HandleWindowStarted
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UTimeWindowOptional_X::HandleWindowStarted()
{
	static UFunction* uFnHandleWindowStarted = nullptr;

	if (!uFnHandleWindowStarted)
	{
		uFnHandleWindowStarted = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.HandleWindowStarted");
	}

	UTimeWindowOptional_X_execHandleWindowStarted_Params HandleWindowStarted_Params;

	this->ProcessEvent(uFnHandleWindowStarted, &HandleWindowStarted_Params, nullptr);
};

// Function ProjectX.TimeWindowOptional_X.WillEnd
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UTimeWindowOptional_X::WillEnd()
{
	static UFunction* uFnWillEnd = nullptr;

	if (!uFnWillEnd)
	{
		uFnWillEnd = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.WillEnd");
	}

	UTimeWindowOptional_X_execWillEnd_Params WillEnd_Params;

	this->ProcessEvent(uFnWillEnd, &WillEnd_Params, nullptr);

	return WillEnd_Params.ReturnValue;
};

// Function ProjectX.TimeWindowOptional_X.HasEnded
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UTimeWindowOptional_X::HasEnded()
{
	static UFunction* uFnHasEnded = nullptr;

	if (!uFnHasEnded)
	{
		uFnHasEnded = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.HasEnded");
	}

	UTimeWindowOptional_X_execHasEnded_Params HasEnded_Params;

	this->ProcessEvent(uFnHasEnded, &HasEnded_Params, nullptr);

	return HasEnded_Params.ReturnValue;
};

// Function ProjectX.TimeWindowOptional_X.HasStarted
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UTimeWindowOptional_X::HasStarted()
{
	static UFunction* uFnHasStarted = nullptr;

	if (!uFnHasStarted)
	{
		uFnHasStarted = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.HasStarted");
	}

	UTimeWindowOptional_X_execHasStarted_Params HasStarted_Params;

	this->ProcessEvent(uFnHasStarted, &HasStarted_Params, nullptr);

	return HasStarted_Params.ReturnValue;
};

// Function ProjectX.TimeWindowOptional_X.IsActive
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// bool                           ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)

bool UTimeWindowOptional_X::IsActive()
{
	static UFunction* uFnIsActive = nullptr;

	if (!uFnIsActive)
	{
		uFnIsActive = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.IsActive");
	}

	UTimeWindowOptional_X_execIsActive_Params IsActive_Params;

	this->ProcessEvent(uFnIsActive, &IsActive_Params, nullptr);

	return IsActive_Params.ReturnValue;
};

// Function ProjectX.TimeWindowOptional_X.NotifyOnWindowEnded
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTimeWindowOptional_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         OnEndedCallback                (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class UTimeWindowOptional_X* UTimeWindowOptional_X::NotifyOnWindowEnded(struct FScriptDelegate OnEndedCallback)
{
	static UFunction* uFnNotifyOnWindowEnded = nullptr;

	if (!uFnNotifyOnWindowEnded)
	{
		uFnNotifyOnWindowEnded = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.NotifyOnWindowEnded");
	}

	UTimeWindowOptional_X_execNotifyOnWindowEnded_Params NotifyOnWindowEnded_Params;
	memcpy_s(&NotifyOnWindowEnded_Params.OnEndedCallback, 0x18, &OnEndedCallback, 0x18);

	this->ProcessEvent(uFnNotifyOnWindowEnded, &NotifyOnWindowEnded_Params, nullptr);

	return NotifyOnWindowEnded_Params.ReturnValue;
};

// Function ProjectX.TimeWindowOptional_X.NotifyOnWindowStarted
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTimeWindowOptional_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// struct FScriptDelegate         OnStartedCallback              (CPF_OptionalParm | CPF_Parm | CPF_NeedCtorLink)

class UTimeWindowOptional_X* UTimeWindowOptional_X::NotifyOnWindowStarted(struct FScriptDelegate OnStartedCallback)
{
	static UFunction* uFnNotifyOnWindowStarted = nullptr;

	if (!uFnNotifyOnWindowStarted)
	{
		uFnNotifyOnWindowStarted = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.NotifyOnWindowStarted");
	}

	UTimeWindowOptional_X_execNotifyOnWindowStarted_Params NotifyOnWindowStarted_Params;
	memcpy_s(&NotifyOnWindowStarted_Params.OnStartedCallback, 0x18, &OnStartedCallback, 0x18);

	this->ProcessEvent(uFnNotifyOnWindowStarted, &NotifyOnWindowStarted_Params, nullptr);

	return NotifyOnWindowStarted_Params.ReturnValue;
};

// Function ProjectX.TimeWindowOptional_X.Init
// [0x00024003] (FUNC_Final | FUNC_RequiredAPI | FUNC_NetMulticast | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UTimeWindowOptional_X*   ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// uint64_t                       InStartTime                    (CPF_Parm)
// uint64_t                       InEndTime                      (CPF_Parm)
// class UIEpochNow*              InTimeProvider                 (CPF_OptionalParm | CPF_Parm)

class UTimeWindowOptional_X* UTimeWindowOptional_X::Init(uint64_t InStartTime, uint64_t InEndTime, class UIEpochNow* InTimeProvider)
{
	static UFunction* uFnInit = nullptr;

	if (!uFnInit)
	{
		uFnInit = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.Init");
	}

	UTimeWindowOptional_X_execInit_Params Init_Params;
	Init_Params.InStartTime = InStartTime;
	Init_Params.InEndTime = InEndTime;
	memcpy_s(&Init_Params.InTimeProvider, 0x10, &InTimeProvider, 0x10);

	this->ProcessEvent(uFnInit, &Init_Params, nullptr);

	return Init_Params.ReturnValue;
};

// Function ProjectX.TimeWindowOptional_X.EventWindowEnded
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UTimeWindowOptional_X::EventWindowEnded()
{
	static UFunction* uFnEventWindowEnded = nullptr;

	if (!uFnEventWindowEnded)
	{
		uFnEventWindowEnded = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.EventWindowEnded");
	}

	UTimeWindowOptional_X_execEventWindowEnded_Params EventWindowEnded_Params;

	this->ProcessEvent(uFnEventWindowEnded, &EventWindowEnded_Params, nullptr);
};

// Function ProjectX.TimeWindowOptional_X.EventWindowStarted
// [0x00120001] (FUNC_Final | FUNC_Public | FUNC_Delegate | FUNC_AllFlags)
// Parameter info:

void UTimeWindowOptional_X::EventWindowStarted()
{
	static UFunction* uFnEventWindowStarted = nullptr;

	if (!uFnEventWindowStarted)
	{
		uFnEventWindowStarted = UFunction::FindFunction("Function ProjectX.TimeWindowOptional_X.EventWindowStarted");
	}

	UTimeWindowOptional_X_execEventWindowStarted_Params EventWindowStarted_Params;

	this->ProcessEvent(uFnEventWindowStarted, &EventWindowStarted_Params, nullptr);
};

// Function ProjectX.UdpLanServer_X.HandleLanQueryMessage
// [0x20040003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Private | FUNC_EditorOnly | FUNC_AllFlags)
// Parameter info:
// class UOnlineMessageComponent_X* Component                      (CPF_Parm | CPF_EditInline)
// class ULanMessage_HostQuery_X* Query                          (CPF_Parm)

void UUdpLanServer_X::HandleLanQueryMessage(class UOnlineMessageComponent_X* Component, class ULanMessage_HostQuery_X* Query)
{
	static UFunction* uFnHandleLanQueryMessage = nullptr;

	if (!uFnHandleLanQueryMessage)
	{
		uFnHandleLanQueryMessage = UFunction::FindFunction("Function ProjectX.UdpLanServer_X.HandleLanQueryMessage");
	}

	UUdpLanServer_X_execHandleLanQueryMessage_Params HandleLanQueryMessage_Params;
	memcpy_s(&HandleLanQueryMessage_Params.Component, 0x8, &Component, 0x8);
	memcpy_s(&HandleLanQueryMessage_Params.Query, 0x8, &Query, 0x8);

	this->ProcessEvent(uFnHandleLanQueryMessage, &HandleLanQueryMessage_Params, nullptr);
};

// Function ProjectX.UdpLanServer_X.Destroy
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:

void UUdpLanServer_X::Destroy()
{
	static UFunction* uFnDestroy = nullptr;

	if (!uFnDestroy)
	{
		uFnDestroy = UFunction::FindFunction("Function ProjectX.UdpLanServer_X.Destroy");
	}

	UUdpLanServer_X_execDestroy_Params Destroy_Params;

	this->ProcessEvent(uFnDestroy, &Destroy_Params, nullptr);
};

// Function ProjectX.UdpLanServer_X.SetServerMetaData
// [0x00020003] (FUNC_Final | FUNC_RequiredAPI | FUNC_Public | FUNC_AllFlags)
// Parameter info:
// class UAsyncTask*              ReturnValue                    (CPF_Parm | CPF_OutParm | CPF_ReturnParm)
// class FString                  InMetaData                     (CPF_Parm | CPF_NeedCtorLink)

class UAsyncTask* UUdpLanServer_X::SetServerMetaData(class FString InMetaData)
{
	static UFunction* uFnSetServerMetaData = nullptr;

	if (!uFnSetServerMetaData)
	{
		uFnSetServerMetaData = UFunction::FindFunction("Function ProjectX.UdpLanServer_X.SetServerMetaData");
	}

	UUdpLanServer_X_execSetServerMetaData_Params SetServerMetaData_Params;
	memcpy_s(&SetServerMetaData_Params.InMetaData, 0x10, &InMetaData, 0x10);

	this->ProcessEvent(uFnSetServerMetaData, &SetServerMetaData_Params, nullptr);

	return SetServerMetaData_Params.ReturnValue;
};

// Function ProjectX.UdpLanServer_X.Construct
// [0x400020802] (FUNC_RequiredAPI | FUNC_Event | FUNC_Public | FUNC_NetValidate | FUNC_AllFlags)
// Parameter info:

void UUdpLanServer_X::eventConstruct()
{
	static UFunction* uFnConstruct = nullptr;

	if (!uFnConstruct)
	{
		uFnConstruct = UFunction::FindFunction("Function ProjectX.UdpLanServer_X.Construct");
	}

	UUdpLanServer_X_eventConstruct_Params Construct_Params;

	this->ProcessEvent(uFnConstruct, &Construct_Params, nullptr);
};

/*
# ========================================================================================= #
#
# ========================================================================================= #
*/

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
